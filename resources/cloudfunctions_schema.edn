{:OperationMetadataV1 {:type "object",
                       :properties {:request {:type "object",
                                              :description "The original request that started the operation.",
                                              :additionalProperties {:type "any",
                                                                     :description "Properties of the object. Contains field @type with type URL."}},
                                    :target {:type "string",
                                             :description "Target of the operation - for example projects/project-1/locations/region-1/functions/function-1"},
                                    :buildId {:description "The Cloud Build ID of the function created or updated by an API call. This field is only populated for Create and Update operations.",
                                              :type "string"},
                                    :updateTime {:format "google-datetime",
                                                 :description "The last update timestamp of the operation.",
                                                 :type "string"},
                                    :type {:description "Type of operation.",
                                           :enumDescriptions ["Unknown operation type."
                                                              "Triggered by CreateFunction call"
                                                              "Triggered by UpdateFunction call"
                                                              "Triggered by DeleteFunction call."],
                                           :enum ["OPERATION_UNSPECIFIED"
                                                  "CREATE_FUNCTION"
                                                  "UPDATE_FUNCTION"
                                                  "DELETE_FUNCTION"],
                                           :type "string"},
                                    :versionId {:type "string",
                                                :description "Version id of the function created or updated by an API call. This field is only populated for Create and Update operations.",
                                                :format "int64"}},
                       :id "OperationMetadataV1",
                       :description "Metadata describing an Operation"},
 :Retry {:id "Retry",
         :description "Describes the retry policy in case of function's execution failure. A function execution will be retried on any failure. A failed execution will be retried up to 7 days with an exponential backoff (capped at 10 seconds). Retried execution is charged as any other execution.",
         :properties {},
         :type "object"},
 :HttpsTrigger {:type "object",
                :properties {:url {:description "Output only. The deployed url for the function.",
                                   :type "string",
                                   :readOnly true}},
                :id "HttpsTrigger",
                :description "Describes HttpsTrigger, could be used to connect web hooks to function."},
 :Operation {:type "object",
             :properties {:metadata {:type "object",
                                     :additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                            :type "any"},
                                     :description "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."},
                          :name {:description "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                                 :type "string"},
                          :done {:type "boolean",
                                 :description "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."},
                          :response {:additionalProperties {:type "any",
                                                            :description "Properties of the object. Contains field @type with type URL."},
                                     :type "object",
                                     :description "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."},
                          :error {:$ref "Status",
                                  :description "The error result of the operation in case of failure or cancellation."}},
             :id "Operation",
             :description "This resource represents a long-running operation that is the result of a network API call."},
 :SetIamPolicyRequest {:id "SetIamPolicyRequest",
                       :type "object",
                       :description "Request message for `SetIamPolicy` method.",
                       :properties {:policy {:$ref "Policy",
                                             :description "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them."},
                                    :updateMask {:type "string",
                                                 :description "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
                                                 :format "google-fieldmask"}}},
 :AuditConfig {:properties {:auditLogConfigs {:description "The configuration for logging of each type of permission.",
                                              :type "array",
                                              :items {:$ref "AuditLogConfig"}},
                            :service {:description "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.",
                                      :type "string"}},
               :id "AuditConfig",
               :type "object",
               :description "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."},
 :AuditLogConfig {:id "AuditLogConfig",
                  :description "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
                  :type "object",
                  :properties {:logType {:enum ["LOG_TYPE_UNSPECIFIED"
                                                "ADMIN_READ"
                                                "DATA_WRITE"
                                                "DATA_READ"],
                                         :type "string",
                                         :description "The log type that this config enables.",
                                         :enumDescriptions ["Default case. Should never be this."
                                                            "Admin reads. Example: CloudIAM getIamPolicy"
                                                            "Data writes. Example: CloudSQL Users create"
                                                            "Data reads. Example: CloudSQL Users list"]},
                               :exemptedMembers {:description "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
                                                 :items {:type "string"},
                                                 :type "array"}}},
 :GenerateUploadUrlResponse {:description "Response of `GenerateSourceUploadUrl` method.",
                             :type "object",
                             :id "GenerateUploadUrlResponse",
                             :properties {:uploadUrl {:description "The generated Google Cloud Storage signed URL that should be used for a function source code upload. The uploaded file should be a zip archive which contains a function.",
                                                      :type "string"}}},
 :EventTrigger {:id "EventTrigger",
                :description "Describes EventTrigger, used to request events be sent from another service.",
                :type "object",
                :properties {:failurePolicy {:description "Specifies policy for failed executions.",
                                             :$ref "FailurePolicy"},
                             :service {:type "string",
                                       :description "The hostname of the service that should be observed. If no string is provided, the default service implementing the API will be used. For example, `storage.googleapis.com` is the default for all event types in the `google.storage` namespace."},
                             :resource {:description "Required. The resource(s) from which to observe events, for example, `projects/_/buckets/myBucket`. Not all syntactically correct values are accepted by all services. For example: 1. The authorization model must support it. Google Cloud Functions only allows EventTriggers to be deployed that observe resources in the same project as the `CloudFunction`. 2. The resource type must match the pattern expected for an `event_type`. For example, an `EventTrigger` that has an `event_type` of \"google.pubsub.topic.publish\" should have a resource that matches Google Cloud Pub/Sub topics. Additionally, some services may support short names when creating an `EventTrigger`. These will always be returned in the normalized \"long\" format. See each *service's* documentation for supported formats.",
                                        :type "string"},
                             :eventType {:type "string",
                                         :description "Required. The type of event to observe. For example: `providers/cloud.storage/eventTypes/object.change` and `providers/cloud.pubsub/eventTypes/topic.publish`. Event types match pattern `providers/*/eventTypes/*.*`. The pattern contains: 1. namespace: For example, `cloud.storage` and `google.firebase.analytics`. 2. resource type: The type of resource on which event occurs. For example, the Google Cloud Storage API includes the type `object`. 3. action: The action that generates the event. For example, action for a Google Cloud Storage Object is 'change'. These parts are lower case."}}},
 :GenerateDownloadUrlResponse {:properties {:downloadUrl {:type "string",
                                                          :description "The generated Google Cloud Storage signed URL that should be used for function source code download."}},
                               :description "Response of `GenerateDownloadUrl` method.",
                               :type "object",
                               :id "GenerateDownloadUrlResponse"},
 :Binding {:id "Binding",
           :properties {:role {:type "string",
                               :description "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."},
                        :condition {:description "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                                    :$ref "Expr"},
                        :members {:items {:type "string"},
                                  :type "array",
                                  :description "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "}},
           :type "object",
           :description "Associates `members` with a `role`."},
 :CloudFunction {:id "CloudFunction",
                 :type "object",
                 :description "Describes a Cloud Function that contains user computation executed in response to an event. It encapsulate function and triggers configurations.",
                 :properties {:description {:type "string",
                                            :description "User-provided description of a function."},
                              :labels {:additionalProperties {:type "string"},
                                       :type "object",
                                       :description "Labels associated with this Cloud Function."},
                              :versionId {:description "Output only. The version identifier of the Cloud Function. Each deployment attempt results in a new version of a function being created.",
                                          :format "int64",
                                          :readOnly true,
                                          :type "string"},
                              :name {:type "string",
                                     :description "A user-defined name of the function. Function names must be unique globally and match pattern `projects/*/locations/*/functions/*`"},
                              :entryPoint {:type "string",
                                           :description "The name of the function (as defined in source code) that will be executed. Defaults to the resource name suffix, if not specified. For backward compatibility, if function with given name is not found, then the system will try to use function named \"function\". For Node.js this is name of a function exported by the module specified in `source_location`."},
                              :environmentVariables {:additionalProperties {:type "string"},
                                                     :type "object",
                                                     :description "Environment variables that shall be available during function execution."},
                              :sourceUploadUrl {:description "The Google Cloud Storage signed URL used for source uploading, generated by google.cloud.functions.v1.GenerateUploadUrl",
                                                :type "string"},
                              :vpcConnector {:type "string",
                                             :description "The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is `projects/*/locations/*/connectors/*` This field is mutually exclusive with `network` field and will eventually replace it. See [the VPC documentation](https://cloud.google.com/compute/docs/vpc) for more information on connecting Cloud projects."},
                              :buildEnvironmentVariables {:description "Build environment variables that shall be available during build time.",
                                                          :additionalProperties {:type "string"},
                                                          :type "object"},
                              :updateTime {:format "google-datetime",
                                           :readOnly true,
                                           :description "Output only. The last update timestamp of a Cloud Function.",
                                           :type "string"},
                              :vpcConnectorEgressSettings {:description "The egress settings for the connector, controlling what traffic is diverted through it.",
                                                           :enum ["VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED"
                                                                  "PRIVATE_RANGES_ONLY"
                                                                  "ALL_TRAFFIC"],
                                                           :enumDescriptions ["Unspecified."
                                                                              "Use the VPC Access Connector only for private IP space from RFC1918."
                                                                              "Force the use of VPC Access Connector for all egress traffic from the function."],
                                                           :type "string"},
                              :eventTrigger {:description "A source that fires events in response to a condition in another service.",
                                             :$ref "EventTrigger"},
                              :availableMemoryMb {:description "The amount of memory in MB available for a function. Defaults to 256MB.",
                                                  :type "integer",
                                                  :format "int32"},
                              :serviceAccountEmail {:description "The email of the function's service account. If empty, defaults to `{project_id}@appspot.gserviceaccount.com`.",
                                                    :type "string"},
                              :status {:enumDescriptions ["Not specified. Invalid state."
                                                          "Function has been successfully deployed and is serving."
                                                          "Function deployment failed and the function isn’t serving."
                                                          "Function is being created or updated."
                                                          "Function is being deleted."
                                                          "Function deployment failed and the function serving state is undefined. The function should be updated or deleted to move it out of this state."],
                                       :type "string",
                                       :enum ["CLOUD_FUNCTION_STATUS_UNSPECIFIED"
                                              "ACTIVE"
                                              "OFFLINE"
                                              "DEPLOY_IN_PROGRESS"
                                              "DELETE_IN_PROGRESS"
                                              "UNKNOWN"],
                                       :readOnly true,
                                       :description "Output only. Status of the function deployment."},
                              :sourceArchiveUrl {:description "The Google Cloud Storage URL, starting with gs://, pointing to the zip archive which contains the function.",
                                                 :type "string"},
                              :runtime {:type "string",
                                        :description "The runtime in which to run the function. Required when deploying a new function, optional when updating an existing function. For a complete list of possible choices, see the [`gcloud` command reference](/sdk/gcloud/reference/functions/deploy#--runtime)."},
                              :network {:type "string",
                                        :description "The VPC Network that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network resource. If the short network name is used, the network must belong to the same project. Otherwise, it must belong to a project within the same organization. The format of this field is either `projects/{project}/global/networks/{network}` or `{network}`, where {project} is a project id where the network is defined, and {network} is the short name of the network. This field is mutually exclusive with `vpc_connector` and will be replaced by it. See [the VPC documentation](https://cloud.google.com/compute/docs/vpc) for more information on connecting Cloud projects."},
                              :timeout {:description "The function execution timeout. Execution is considered failed and can be terminated if the function is not completed at the end of the timeout period. Defaults to 60 seconds.",
                                        :type "string",
                                        :format "google-duration"},
                              :buildId {:description "Output only. The Cloud Build ID of the latest successful deployment of the function.",
                                        :type "string",
                                        :readOnly true},
                              :maxInstances {:type "integer",
                                             :format "int32",
                                             :description "The limit on the maximum number of function instances that may coexist at a given time. In some cases, such as rapid traffic surges, Cloud Functions may, for a short period of time, create more instances than the specified max instances limit. If your function cannot tolerate this temporary behavior, you may want to factor in a safety margin and set a lower max instances value than your function can tolerate. See the [Max Instances](https://cloud.google.com/functions/docs/max-instances) Guide for more details."},
                              :ingressSettings {:enum ["INGRESS_SETTINGS_UNSPECIFIED"
                                                       "ALLOW_ALL"
                                                       "ALLOW_INTERNAL_ONLY"
                                                       "ALLOW_INTERNAL_AND_GCLB"],
                                                :description "The ingress settings for the function, controlling what traffic can reach it.",
                                                :type "string",
                                                :enumDescriptions ["Unspecified."
                                                                   "Allow HTTP traffic from public and private sources."
                                                                   "Allow HTTP traffic from only private VPC sources."
                                                                   "Allow HTTP traffic from private VPC sources and through GCLB."]},
                              :httpsTrigger {:description "An HTTPS endpoint type of source that can be triggered via URL.",
                                             :$ref "HttpsTrigger"},
                              :sourceRepository {:description "**Beta Feature** The source repository where a function is hosted.",
                                                 :$ref "SourceRepository"}}},
 :ListLocationsResponse {:properties {:nextPageToken {:type "string",
                                                      :description "The standard List next-page token."},
                                      :locations {:type "array",
                                                  :items {:$ref "Location"},
                                                  :description "A list of locations that matches the specified filter in the request."}},
                         :type "object",
                         :description "The response message for Locations.ListLocations.",
                         :id "ListLocationsResponse"},
 :CallFunctionResponse {:id "CallFunctionResponse",
                        :description "Response of `CallFunction` method.",
                        :properties {:executionId {:description "Execution id of function invocation.",
                                                   :type "string"},
                                     :result {:description "Result populated for successful execution of synchronous function. Will not be populated if function does not return a result through context.",
                                              :type "string"},
                                     :error {:description "Either system or user-function generated error. Set if execution was not successful.",
                                             :type "string"}},
                        :type "object"},
 :TestIamPermissionsRequest {:description "Request message for `TestIamPermissions` method.",
                             :type "object",
                             :id "TestIamPermissionsRequest",
                             :properties {:permissions {:items {:type "string"},
                                                        :type "array",
                                                        :description "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."}}},
 :TestIamPermissionsResponse {:type "object",
                              :description "Response message for `TestIamPermissions` method.",
                              :id "TestIamPermissionsResponse",
                              :properties {:permissions {:items {:type "string"},
                                                         :description "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                                                         :type "array"}}},
 :GenerateUploadUrlRequest {:description "Request of `GenerateSourceUploadUrl` method.",
                            :type "object",
                            :properties {},
                            :id "GenerateUploadUrlRequest"},
 :Expr {:id "Expr",
        :properties {:location {:type "string",
                                :description "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."},
                     :title {:type "string",
                             :description "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."},
                     :description {:type "string",
                                   :description "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."},
                     :expression {:description "Textual representation of an expression in Common Expression Language syntax.",
                                  :type "string"}},
        :type "object",
        :description "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information."},
 :CallFunctionRequest {:id "CallFunctionRequest",
                       :description "Request for the `CallFunction` method.",
                       :type "object",
                       :properties {:data {:type "string",
                                           :description "Required. Input to be passed to the function."}}},
 :GenerateDownloadUrlRequest {:type "object",
                              :description "Request of `GenerateDownloadUrl` method.",
                              :properties {:versionId {:description "The optional version of function. If not set, default, current version is used.",
                                                       :type "string",
                                                       :format "uint64"}},
                              :id "GenerateDownloadUrlRequest"},
 :ListOperationsResponse {:id "ListOperationsResponse",
                          :description "The response message for Operations.ListOperations.",
                          :properties {:operations {:items {:$ref "Operation"},
                                                    :type "array",
                                                    :description "A list of operations that matches the specified filter in the request."},
                                       :nextPageToken {:description "The standard List next-page token.",
                                                       :type "string"}},
                          :type "object"},
 :Location {:properties {:displayName {:description "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
                                       :type "string"},
                         :locationId {:description "The canonical id for this location. For example: `\"us-east1\"`.",
                                      :type "string"},
                         :metadata {:description "Service-specific metadata. For example the available capacity at the given location.",
                                    :additionalProperties {:type "any",
                                                           :description "Properties of the object. Contains field @type with type URL."},
                                    :type "object"},
                         :labels {:type "object",
                                  :additionalProperties {:type "string"},
                                  :description "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}"},
                         :name {:type "string",
                                :description "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"}},
            :type "object",
            :id "Location",
            :description "A resource that represents Google Cloud Platform location."},
 :ListFunctionsResponse {:type "object",
                         :properties {:nextPageToken {:type "string",
                                                      :description "If not empty, indicates that there may be more functions that match the request; this value should be passed in a new google.cloud.functions.v1.ListFunctionsRequest to get more functions."},
                                      :unreachable {:items {:type "string"},
                                                    :type "array",
                                                    :description "Locations that could not be reached. The response does not include any functions from these locations."},
                                      :functions {:items {:$ref "CloudFunction"},
                                                  :type "array",
                                                  :description "The functions that match the request."}},
                         :description "Response for the `ListFunctions` method.",
                         :id "ListFunctionsResponse"},
 :SourceRepository {:id "SourceRepository",
                    :properties {:url {:description "The URL pointing to the hosted repository where the function is defined. There are supported Cloud Source Repository URLs in the following formats: To refer to a specific commit: `https://source.developers.google.com/projects/*/repos/*/revisions/*/paths/*` To refer to a moveable alias (branch): `https://source.developers.google.com/projects/*/repos/*/moveable-aliases/*/paths/*` In particular, to refer to HEAD use `master` moveable alias. To refer to a specific fixed alias (tag): `https://source.developers.google.com/projects/*/repos/*/fixed-aliases/*/paths/*` You may omit `paths/*` if you want to use the main directory.",
                                       :type "string"},
                                 :deployedUrl {:type "string",
                                               :description "Output only. The URL pointing to the hosted repository where the function were defined at the time of deployment. It always points to a specific commit in the format described above.",
                                               :readOnly true}},
                    :description "Describes SourceRepository, used to represent parameters related to source repository where a function is hosted.",
                    :type "object"},
 :FailurePolicy {:id "FailurePolicy",
                 :properties {:retry {:description "If specified, then the function will be retried in case of a failure.",
                                      :$ref "Retry"}},
                 :description "Describes the policy in case of function's execution failure. If empty, then defaults to ignoring failures (i.e. not retrying them).",
                 :type "object"},
 :Policy {:id "Policy",
          :description "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
          :properties {:bindings {:items {:$ref "Binding"},
                                  :description "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member.",
                                  :type "array"},
                       :etag {:type "string",
                              :format "byte",
                              :description "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."},
                       :version {:format "int32",
                                 :type "integer",
                                 :description "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."},
                       :auditConfigs {:type "array",
                                      :description "Specifies cloud audit logging configuration for this policy.",
                                      :items {:$ref "AuditConfig"}}},
          :type "object"},
 :Status {:type "object",
          :description "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
          :properties {:details {:items {:additionalProperties {:type "any",
                                                                :description "Properties of the object. Contains field @type with type URL."},
                                         :type "object"},
                                 :description "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                                 :type "array"},
                       :code {:type "integer",
                              :format "int32",
                              :description "The status code, which should be an enum value of google.rpc.Code."},
                       :message {:description "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
                                 :type "string"}},
          :id "Status"}}
