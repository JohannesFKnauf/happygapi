{:ListReservationsResponse {:description "The response for ReservationService.ListReservations.",
                            :type "object",
                            :properties {:reservations {:description "List of reservations visible to the user.",
                                                        :type "array",
                                                        :items {:$ref "Reservation"}},
                                         :nextPageToken {:description "Token to retrieve the next page of results, or empty if there are no\nmore results in the list.",
                                                         :type "string"}},
                            :id "ListReservationsResponse"},
 :Operation {:id "Operation",
             :description "This resource represents a long-running operation that is the result of a\nnetwork API call.",
             :type "object",
             :properties {:response {:additionalProperties {:type "any",
                                                            :description "Properties of the object. Contains field @type with type URL."},
                                     :description "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
                                     :type "object"},
                          :name {:description "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should be a resource name ending with `operations/{unique_id}`.",
                                 :type "string"},
                          :error {:$ref "Status",
                                  :description "The error result of the operation in case of failure or cancellation."},
                          :metadata {:type "object",
                                     :additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                            :type "any"},
                                     :description "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any."},
                          :done {:description "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
                                 :type "boolean"}}},
 :MergeCapacityCommitmentsRequest {:type "object",
                                   :properties {:capacityCommitmentIds {:description "Ids of capacity commitments to merge.\nThese capacity commitments must exist under admin project and location\nspecified in the parent.",
                                                                        :type "array",
                                                                        :items {:type "string"}}},
                                   :id "MergeCapacityCommitmentsRequest",
                                   :description "The request for ReservationService.MergeCapacityCommitments."},
 :Assignment {:description "A Assignment allows a project to submit jobs\nof a certain type using slots from the specified reservation.",
              :type "object",
              :properties {:jobType {:description "Which type of jobs will use the reservation.",
                                     :type "string",
                                     :enumDescriptions ["Invalid type. Requests with this value will be rejected with\nerror code `google.rpc.Code.INVALID_ARGUMENT`."
                                                        "Pipeline (load/export) jobs from the project will use the reservation."
                                                        "Query jobs from the project will use the reservation."],
                                     :enum ["JOB_TYPE_UNSPECIFIED"
                                            "PIPELINE"
                                            "QUERY"]},
                           :state {:enum ["STATE_UNSPECIFIED"
                                          "PENDING"
                                          "ACTIVE"],
                                   :description "Output only. State of the assignment.",
                                   :type "string",
                                   :enumDescriptions ["Invalid state value."
                                                      "Queries from assignee will be executed as on-demand, if related\nassignment is pending."
                                                      "Assignment is ready."]},
                           :name {:description "Output only. Name of the resource. E.g.:\nprojects/myproject/locations/US/reservations/team1-prod/assignments/123.",
                                  :type "string"},
                           :assignee {:type "string",
                                      :description "The resource which will use the reservation. E.g.\nprojects/myproject, folders/123, organizations/456."}},
              :id "Assignment"},
 :MoveAssignmentRequest {:description "The request for\nReservationService.MoveAssignment.\nNote: \"bigquery.reservationAssignments.create\" permission is required on the\ndestination_id. Note: \"bigquery.reservationAssignments.create\" and\n\"bigquery.reservationAssignments.delete\" permission is required on the\nrelated assignee.",
                         :type "object",
                         :properties {:destinationId {:description "The new reservation ID, e.g.:\n  projects/myotherproject/locations/US/reservations/team2-prod",
                                                      :type "string"}},
                         :id "MoveAssignmentRequest"},
 :CapacityCommitment {:description "Capacity commitment is a way to purchase compute capacity for BigQuery jobs\n(in the form of slots) with some committed period of usage. Monthly and\nannual commitments renew by default. Only flex commitments can be removed. In\norder to remove monthly or annual commitments, their plan needs to be changed\nto flex first.\n\nA capacity commitment resource exists as a child resource of the admin\nproject.",
                      :type "object",
                      :properties {:slotCount {:description "Number of slots in this commitment.",
                                               :format "int64",
                                               :type "string"},
                                   :renewalPlan {:enumDescriptions ["Invalid plan value. Requests with this value will be rejected with\nerror code `google.rpc.Code.INVALID_ARGUMENT`."
                                                                    "Flex commitments have committed period of 1 minute after becoming ACTIVE.\nAfter that, they are not in a committed period anymore and can be removed\nany time."
                                                                    "Monthly commitments have a committed period of 30 days after becoming\nACTIVE."
                                                                    "Annual commitments have a committed period of 365 days after becoming\nACTIVE."],
                                                 :enum ["COMMITMENT_PLAN_UNSPECIFIED"
                                                        "FLEX"
                                                        "MONTHLY"
                                                        "ANNUAL"],
                                                 :description "The plan this capacity commitment is converted to after commitment_end_time\npasses. Once the plan is changed, committed period is extended according to\ncommitment plan. Only applicable for MONTHLY and ANNUAL commitments.",
                                                 :type "string"},
                                   :failureStatus {:description "Output only. For FAILED commitment plan, provides the reason of failure.",
                                                   :$ref "Status"},
                                   :commitmentEndTime {:description "Output only. The end of the current commitment period. It is applicable only for ACTIVE\ncapacity commitments.",
                                                       :format "google-datetime",
                                                       :type "string"},
                                   :state {:type "string",
                                           :enumDescriptions ["Invalid state value."
                                                              "Capacity commitment is pending provisioning. Pending capacity commitment\ndoes not contribute to the parent's slot_capacity."
                                                              "Once slots are provisioned, capacity commitment becomes active.\nslot_count is added to the parent's slot_capacity."
                                                              "Capacity commitment is failed to be activated by the backend."],
                                           :enum ["STATE_UNSPECIFIED"
                                                  "PENDING"
                                                  "ACTIVE"
                                                  "FAILED"],
                                           :description "Output only. State of the commitment."},
                                   :name {:type "string",
                                          :description "Output only. The resource name of the capacity commitment, e.g.,\n   projects/myproject/locations/US/capacityCommitments/123"},
                                   :plan {:description "Capacity commitment commitment plan.",
                                          :type "string",
                                          :enumDescriptions ["Invalid plan value. Requests with this value will be rejected with\nerror code `google.rpc.Code.INVALID_ARGUMENT`."
                                                             "Flex commitments have committed period of 1 minute after becoming ACTIVE.\nAfter that, they are not in a committed period anymore and can be removed\nany time."
                                                             "Monthly commitments have a committed period of 30 days after becoming\nACTIVE."
                                                             "Annual commitments have a committed period of 365 days after becoming\nACTIVE."],
                                          :enum ["COMMITMENT_PLAN_UNSPECIFIED"
                                                 "FLEX"
                                                 "MONTHLY"
                                                 "ANNUAL"]}},
                      :id "CapacityCommitment"},
 :Empty {:description "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
         :type "object",
         :properties {},
         :id "Empty"},
 :ListCapacityCommitmentsResponse {:id "ListCapacityCommitmentsResponse",
                                   :description "The response for ReservationService.ListCapacityCommitments.",
                                   :type "object",
                                   :properties {:capacityCommitments {:description "List of capacity commitments visible to the user.",
                                                                      :type "array",
                                                                      :items {:$ref "CapacityCommitment"}},
                                                :nextPageToken {:description "Token to retrieve the next page of results, or empty if there are no\nmore results in the list.",
                                                                :type "string"}}},
 :Reservation {:description "A reservation is a mechanism used to guarantee slots to users.",
               :type "object",
               :properties {:slotCapacity {:description "Minimum slots available to this reservation. A slot is a unit of\ncomputational power in BigQuery, and serves as the unit of parallelism.\nQueries using this reservation might use more slots during runtime if\nignore_idle_slots is set to false.\nIf the new reservation's slot capacity exceed the parent's slot capacity or\nif total slot capacity of the new reservation and its siblings exceeds the\nparent's slot capacity, the request will fail with\n`google.rpc.Code.RESOURCE_EXHAUSTED`.",
                                           :format "int64",
                                           :type "string"},
                            :name {:type "string",
                                   :description "The resource name of the reservation, e.g.,\n\"projects/*/locations/*/reservations/team1-prod\"."},
                            :ignoreIdleSlots {:type "boolean",
                                              :description "If false, any query using this reservation will use idle slots from other\nreservations within the same admin project. If true, a query using this\nreservation will execute with the slot capacity specified above at most."}},
               :id "Reservation"},
 :SearchAssignmentsResponse {:description "The response for ReservationService.SearchAssignments.",
                             :type "object",
                             :properties {:assignments {:description "List of assignments visible to the user.",
                                                        :type "array",
                                                        :items {:$ref "Assignment"}},
                                          :nextPageToken {:type "string",
                                                          :description "Token to retrieve the next page of results, or empty if there are no\nmore results in the list."}},
                             :id "SearchAssignmentsResponse"},
 :CreateSlotPoolMetadata {:description "The metadata for operation returned from\nReservationService.CreateSlotPool.",
                          :type "object",
                          :properties {:slotPool {:description "Resource name of the slot pool that is being created. E.g.,\nprojects/myproject/locations/us-central1/reservations/foo/slotPools/123",
                                                  :type "string"}},
                          :id "CreateSlotPoolMetadata"},
 :SplitCapacityCommitmentResponse {:type "object",
                                   :properties {:second {:$ref "CapacityCommitment",
                                                         :description "Second capacity commitment, result of a split."},
                                                :first {:$ref "CapacityCommitment",
                                                        :description "First capacity commitment, result of a split."}},
                                   :id "SplitCapacityCommitmentResponse",
                                   :description "The response for ReservationService.SplitCapacityCommitment."},
 :SplitCapacityCommitmentRequest {:type "object",
                                  :properties {:slotCount {:description "Number of slots in the capacity commitment after the split.",
                                                           :format "int64",
                                                           :type "string"}},
                                  :id "SplitCapacityCommitmentRequest",
                                  :description "The request for ReservationService.SplitCapacityCommitment."},
 :ListOperationsResponse {:description "The response message for Operations.ListOperations.",
                          :type "object",
                          :properties {:operations {:type "array",
                                                    :items {:$ref "Operation"},
                                                    :description "A list of operations that matches the specified filter in the request."},
                                       :nextPageToken {:description "The standard List next-page token.",
                                                       :type "string"}},
                          :id "ListOperationsResponse"},
 :ListAssignmentsResponse {:description "The response for ReservationService.ListAssignments.",
                           :type "object",
                           :properties {:assignments {:description "List of assignments visible to the user.",
                                                      :type "array",
                                                      :items {:$ref "Assignment"}},
                                        :nextPageToken {:description "Token to retrieve the next page of results, or empty if there are no\nmore results in the list.",
                                                        :type "string"}},
                           :id "ListAssignmentsResponse"},
 :BiReservation {:description "Represents a BI Reservation.",
                 :type "object",
                 :properties {:size {:description "Size of a reservation, in bytes.",
                                     :format "int64",
                                     :type "string"},
                              :updateTime {:description "Output only. The last update timestamp of a reservation.",
                                           :format "google-datetime",
                                           :type "string"},
                              :name {:type "string",
                                     :description "The resource name of the singleton BI reservation.\nReservation names have the form\n`projects/{project_id}/locations/{location_id}/bireservation`."}},
                 :id "BiReservation"},
 :Status {:description "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors).",
          :type "object",
          :properties {:code {:type "integer",
                              :description "The status code, which should be an enum value of google.rpc.Code.",
                              :format "int32"},
                       :message {:description "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
                                 :type "string"},
                       :details {:type "array",
                                 :items {:additionalProperties {:type "any",
                                                                :description "Properties of the object. Contains field @type with type URL."},
                                         :type "object"},
                                 :description "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use."}},
          :id "Status"}}
