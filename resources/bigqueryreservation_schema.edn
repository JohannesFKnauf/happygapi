{:ListReservationsResponse {:id "ListReservationsResponse",
                            :description "The response for ReservationService.ListReservations.",
                            :type "object",
                            :properties {:reservations {:type "array",
                                                        :description "List of reservations visible to the user.",
                                                        :items {:$ref "Reservation"}},
                                         :nextPageToken {:type "string",
                                                         :description "Token to retrieve the next page of results, or empty if there are no more results in the list."}}},
 :MergeCapacityCommitmentsRequest {:id "MergeCapacityCommitmentsRequest",
                                   :type "object",
                                   :description "The request for ReservationService.MergeCapacityCommitments.",
                                   :properties {:capacityCommitmentIds {:items {:type "string"},
                                                                        :description "Ids of capacity commitments to merge. These capacity commitments must exist under admin project and location specified in the parent. ID is the last portion of capacity commitment name e.g., 'abc' for projects/myproject/locations/US/capacityCommitments/abc",
                                                                        :type "array"}}},
 :Assignment {:id "Assignment",
              :type "object",
              :properties {:name {:type "string",
                                  :description "Output only. Name of the resource. E.g.: `projects/myproject/locations/US/reservations/team1-prod/assignments/123`.",
                                  :readOnly true},
                           :state {:readOnly true,
                                   :enumDescriptions ["Invalid state value."
                                                      "Queries from assignee will be executed as on-demand, if related assignment is pending."
                                                      "Assignment is ready."],
                                   :description "Output only. State of the assignment.",
                                   :enum ["STATE_UNSPECIFIED"
                                          "PENDING"
                                          "ACTIVE"],
                                   :type "string"},
                           :jobType {:description "Which type of jobs will use the reservation.",
                                     :type "string",
                                     :enumDescriptions ["Invalid type. Requests with this value will be rejected with error code `google.rpc.Code.INVALID_ARGUMENT`."
                                                        "Pipeline (load/export) jobs from the project will use the reservation."
                                                        "Query jobs from the project will use the reservation."
                                                        "BigQuery ML jobs that use services external to BigQuery for model training. These jobs will not utilize idle slots from other reservations."],
                                     :enum ["JOB_TYPE_UNSPECIFIED"
                                            "PIPELINE"
                                            "QUERY"
                                            "ML_EXTERNAL"]},
                           :assignee {:description "The resource which will use the reservation. E.g. `projects/myproject`, `folders/123`, or `organizations/456`.",
                                      :type "string"}},
              :description "A Assignment allows a project to submit jobs of a certain type using slots from the specified reservation."},
 :MoveAssignmentRequest {:type "object",
                         :id "MoveAssignmentRequest",
                         :description "The request for ReservationService.MoveAssignment. **Note**: \"bigquery.reservationAssignments.create\" permission is required on the destination_id. **Note**: \"bigquery.reservationAssignments.create\" and \"bigquery.reservationAssignments.delete\" permission are required on the related assignee.",
                         :properties {:destinationId {:type "string",
                                                      :description "The new reservation ID, e.g.: `projects/myotherproject/locations/US/reservations/team2-prod`"}}},
 :CapacityCommitment {:properties {:failureStatus {:readOnly true,
                                                   :$ref "Status",
                                                   :description "Output only. For FAILED commitment plan, provides the reason of failure."},
                                   :renewalPlan {:type "string",
                                                 :enumDescriptions ["Invalid plan value. Requests with this value will be rejected with error code `google.rpc.Code.INVALID_ARGUMENT`."
                                                                    "Flex commitments have committed period of 1 minute after becoming ACTIVE. After that, they are not in a committed period anymore and can be removed any time."
                                                                    "Trial commitments have a committed period of 182 days after becoming ACTIVE. After that, they are converted to a new commitment based on the `renewal_plan`. Default `renewal_plan` for Trial commitment is Flex so that it can be deleted right after committed period ends."
                                                                    "Monthly commitments have a committed period of 30 days after becoming ACTIVE. After that, they are not in a committed period anymore and can be removed any time."
                                                                    "Annual commitments have a committed period of 365 days after becoming ACTIVE. After that they are converted to a new commitment based on the renewal_plan."],
                                                 :enum ["COMMITMENT_PLAN_UNSPECIFIED"
                                                        "FLEX"
                                                        "TRIAL"
                                                        "MONTHLY"
                                                        "ANNUAL"],
                                                 :description "The plan this capacity commitment is converted to after commitment_end_time passes. Once the plan is changed, committed period is extended according to commitment plan. Only applicable for ANNUAL and TRIAL commitments."},
                                   :commitmentEndTime {:readOnly true,
                                                       :description "Output only. The end of the current commitment period. It is applicable only for ACTIVE capacity commitments.",
                                                       :type "string",
                                                       :format "google-datetime"},
                                   :commitmentStartTime {:format "google-datetime",
                                                         :description "Output only. The start of the current commitment period. It is applicable only for ACTIVE capacity commitments.",
                                                         :readOnly true,
                                                         :type "string"},
                                   :plan {:type "string",
                                          :description "Capacity commitment commitment plan.",
                                          :enum ["COMMITMENT_PLAN_UNSPECIFIED"
                                                 "FLEX"
                                                 "TRIAL"
                                                 "MONTHLY"
                                                 "ANNUAL"],
                                          :enumDescriptions ["Invalid plan value. Requests with this value will be rejected with error code `google.rpc.Code.INVALID_ARGUMENT`."
                                                             "Flex commitments have committed period of 1 minute after becoming ACTIVE. After that, they are not in a committed period anymore and can be removed any time."
                                                             "Trial commitments have a committed period of 182 days after becoming ACTIVE. After that, they are converted to a new commitment based on the `renewal_plan`. Default `renewal_plan` for Trial commitment is Flex so that it can be deleted right after committed period ends."
                                                             "Monthly commitments have a committed period of 30 days after becoming ACTIVE. After that, they are not in a committed period anymore and can be removed any time."
                                                             "Annual commitments have a committed period of 365 days after becoming ACTIVE. After that they are converted to a new commitment based on the renewal_plan."]},
                                   :name {:description "Output only. The resource name of the capacity commitment, e.g., `projects/myproject/locations/US/capacityCommitments/123`",
                                          :readOnly true,
                                          :type "string"},
                                   :slotCount {:format "int64",
                                               :type "string",
                                               :description "Number of slots in this commitment."},
                                   :state {:description "Output only. State of the commitment.",
                                           :readOnly true,
                                           :enumDescriptions ["Invalid state value."
                                                              "Capacity commitment is pending provisioning. Pending capacity commitment does not contribute to the parent's slot_capacity."
                                                              "Once slots are provisioned, capacity commitment becomes active. slot_count is added to the parent's slot_capacity."
                                                              "Capacity commitment is failed to be activated by the backend."],
                                           :type "string",
                                           :enum ["STATE_UNSPECIFIED"
                                                  "PENDING"
                                                  "ACTIVE"
                                                  "FAILED"]}},
                      :description "Capacity commitment is a way to purchase compute capacity for BigQuery jobs (in the form of slots) with some committed period of usage. Annual commitments renew by default. Commitments can be removed after their commitment end time passes. In order to remove annual commitment, its plan needs to be changed to monthly or flex first. A capacity commitment resource exists as a child resource of the admin project.",
                      :type "object",
                      :id "CapacityCommitment"},
 :Empty {:id "Empty",
         :description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
         :properties {},
         :type "object"},
 :ListCapacityCommitmentsResponse {:properties {:nextPageToken {:description "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                                                                :type "string"},
                                                :capacityCommitments {:items {:$ref "CapacityCommitment"},
                                                                      :type "array",
                                                                      :description "List of capacity commitments visible to the user."}},
                                   :id "ListCapacityCommitmentsResponse",
                                   :type "object",
                                   :description "The response for ReservationService.ListCapacityCommitments."},
 :Reservation {:properties {:creationTime {:readOnly true,
                                           :type "string",
                                           :description "Output only. Creation time of the reservation.",
                                           :format "google-datetime"},
                            :updateTime {:type "string",
                                         :readOnly true,
                                         :description "Output only. Last update time of the reservation.",
                                         :format "google-datetime"},
                            :slotCapacity {:format "int64",
                                           :description "Minimum slots available to this reservation. A slot is a unit of computational power in BigQuery, and serves as the unit of parallelism. Queries using this reservation might use more slots during runtime if ignore_idle_slots is set to false. If the new reservation's slot capacity exceed the parent's slot capacity or if total slot capacity of the new reservation and its siblings exceeds the parent's slot capacity, the request will fail with `google.rpc.Code.RESOURCE_EXHAUSTED`.",
                                           :type "string"},
                            :ignoreIdleSlots {:type "boolean",
                                              :description "If false, any query or pipeline job using this reservation will use idle slots from other reservations within the same admin project. If true, a query or pipeline job using this reservation will execute with the slot capacity specified above at most."},
                            :name {:type "string",
                                   :description "The resource name of the reservation, e.g., `projects/*/locations/*/reservations/team1-prod`."}},
               :type "object",
               :id "Reservation",
               :description "A reservation is a mechanism used to guarantee slots to users."},
 :SearchAssignmentsResponse {:description "The response for ReservationService.SearchAssignments.",
                             :properties {:nextPageToken {:description "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                                                          :type "string"},
                                          :assignments {:type "array",
                                                        :items {:$ref "Assignment"},
                                                        :description "List of assignments visible to the user."}},
                             :id "SearchAssignmentsResponse",
                             :type "object"},
 :SearchAllAssignmentsResponse {:properties {:nextPageToken {:description "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                                                             :type "string"},
                                             :assignments {:type "array",
                                                           :items {:$ref "Assignment"},
                                                           :description "List of assignments visible to the user."}},
                                :id "SearchAllAssignmentsResponse",
                                :description "The response for ReservationService.SearchAllAssignments.",
                                :type "object"},
 :SplitCapacityCommitmentResponse {:id "SplitCapacityCommitmentResponse",
                                   :type "object",
                                   :description "The response for ReservationService.SplitCapacityCommitment.",
                                   :properties {:second {:description "Second capacity commitment, result of a split.",
                                                         :$ref "CapacityCommitment"},
                                                :first {:description "First capacity commitment, result of a split.",
                                                        :$ref "CapacityCommitment"}}},
 :SplitCapacityCommitmentRequest {:type "object",
                                  :id "SplitCapacityCommitmentRequest",
                                  :description "The request for ReservationService.SplitCapacityCommitment.",
                                  :properties {:slotCount {:format "int64",
                                                           :type "string",
                                                           :description "Number of slots in the capacity commitment after the split."}}},
 :ListAssignmentsResponse {:properties {:nextPageToken {:description "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                                                        :type "string"},
                                        :assignments {:items {:$ref "Assignment"},
                                                      :description "List of assignments visible to the user.",
                                                      :type "array"}},
                           :id "ListAssignmentsResponse",
                           :type "object",
                           :description "The response for ReservationService.ListAssignments."},
 :BiReservation {:description "Represents a BI Reservation.",
                 :type "object",
                 :properties {:name {:description "The resource name of the singleton BI reservation. Reservation names have the form `projects/{project_id}/locations/{location_id}/biReservation`.",
                                     :type "string"},
                              :size {:description "Size of a reservation, in bytes.",
                                     :format "int64",
                                     :type "string"},
                              :updateTime {:format "google-datetime",
                                           :type "string",
                                           :readOnly true,
                                           :description "Output only. The last update timestamp of a reservation."}},
                 :id "BiReservation"},
 :Status {:properties {:message {:description "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
                                 :type "string"},
                       :details {:items {:additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                                :type "any"},
                                         :type "object"},
                                 :type "array",
                                 :description "A list of messages that carry the error details. There is a common set of message types for APIs to use."},
                       :code {:description "The status code, which should be an enum value of google.rpc.Code.",
                              :format "int32",
                              :type "integer"}},
          :id "Status",
          :type "object",
          :description "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."}}
