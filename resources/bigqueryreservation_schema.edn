{:ListReservationsResponse {:id "ListReservationsResponse",
                            :description "The response for ReservationService.ListReservations.",
                            :properties {:nextPageToken {:type "string",
                                                         :description "Token to retrieve the next page of results, or empty if there are no more results in the list."},
                                         :reservations {:items {:$ref "Reservation"},
                                                        :description "List of reservations visible to the user.",
                                                        :type "array"}},
                            :type "object"},
 :Operation {:type "object",
             :id "Operation",
             :properties {:done {:description "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                                 :type "boolean"},
                          :metadata {:type "object",
                                     :additionalProperties {:type "any",
                                                            :description "Properties of the object. Contains field @type with type URL."},
                                     :description "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."},
                          :response {:type "object",
                                     :description "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                                     :additionalProperties {:type "any",
                                                            :description "Properties of the object. Contains field @type with type URL."}},
                          :error {:$ref "Status",
                                  :description "The error result of the operation in case of failure or cancellation."},
                          :name {:description "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                                 :type "string"}},
             :description "This resource represents a long-running operation that is the result of a network API call."},
 :MergeCapacityCommitmentsRequest {:id "MergeCapacityCommitmentsRequest",
                                   :type "object",
                                   :properties {:capacityCommitmentIds {:type "array",
                                                                        :items {:type "string"},
                                                                        :description "Ids of capacity commitments to merge. These capacity commitments must exist under admin project and location specified in the parent. ID is the last portion of capacity commitment name e.g., 'abc' for projects/myproject/locations/US/capacityCommitments/abc"}},
                                   :description "The request for ReservationService.MergeCapacityCommitments."},
 :Assignment {:description "A Assignment allows a project to submit jobs of a certain type using slots from the specified reservation.",
              :type "object",
              :properties {:name {:type "string",
                                  :readOnly true,
                                  :description "Output only. Name of the resource. E.g.: `projects/myproject/locations/US/reservations/team1-prod/assignments/123`."},
                           :jobType {:description "Which type of jobs will use the reservation.",
                                     :enumDescriptions ["Invalid type. Requests with this value will be rejected with error code `google.rpc.Code.INVALID_ARGUMENT`."
                                                        "Pipeline (load/export) jobs from the project will use the reservation."
                                                        "Query jobs from the project will use the reservation."
                                                        "BigQuery ML jobs that use services external to BigQuery for model training. These jobs will not utilize idle slots from other reservations."],
                                     :type "string",
                                     :enum ["JOB_TYPE_UNSPECIFIED"
                                            "PIPELINE"
                                            "QUERY"
                                            "ML_EXTERNAL"]},
                           :assignee {:type "string",
                                      :description "The resource which will use the reservation. E.g. `projects/myproject`, `folders/123`, or `organizations/456`."},
                           :state {:enum ["STATE_UNSPECIFIED"
                                          "PENDING"
                                          "ACTIVE"],
                                   :readOnly true,
                                   :enumDescriptions ["Invalid state value."
                                                      "Queries from assignee will be executed as on-demand, if related assignment is pending."
                                                      "Assignment is ready."],
                                   :type "string",
                                   :description "Output only. State of the assignment."}},
              :id "Assignment"},
 :MoveAssignmentRequest {:id "MoveAssignmentRequest",
                         :properties {:destinationId {:type "string",
                                                      :description "The new reservation ID, e.g.: `projects/myotherproject/locations/US/reservations/team2-prod`"}},
                         :type "object",
                         :description "The request for ReservationService.MoveAssignment. **Note**: \"bigquery.reservationAssignments.create\" permission is required on the destination_id. **Note**: \"bigquery.reservationAssignments.create\" and \"bigquery.reservationAssignments.delete\" permission are required on the related assignee."},
 :CapacityCommitment {:properties {:slotCount {:description "Number of slots in this commitment.",
                                               :type "string",
                                               :format "int64"},
                                   :failureStatus {:description "Output only. For FAILED commitment plan, provides the reason of failure.",
                                                   :$ref "Status",
                                                   :readOnly true},
                                   :plan {:type "string",
                                          :enum ["COMMITMENT_PLAN_UNSPECIFIED"
                                                 "FLEX"
                                                 "TRIAL"
                                                 "MONTHLY"
                                                 "ANNUAL"],
                                          :description "Capacity commitment commitment plan.",
                                          :enumDescriptions ["Invalid plan value. Requests with this value will be rejected with error code `google.rpc.Code.INVALID_ARGUMENT`."
                                                             "Flex commitments have committed period of 1 minute after becoming ACTIVE. After that, they are not in a committed period anymore and can be removed any time."
                                                             "Trial commitments have a committed period of 182 days after becoming ACTIVE. After that, they are converted to a new commitment based on the `renewal_plan`. Default `renewal_plan` for Trial commitment is Flex so that it can be deleted right after committed period ends."
                                                             "Monthly commitments have a committed period of 30 days after becoming ACTIVE. After that, they are not in a committed period anymore and can be removed any time."
                                                             "Annual commitments have a committed period of 365 days after becoming ACTIVE. After that they are converted to a new commitment based on the renewal_plan."]},
                                   :state {:description "Output only. State of the commitment.",
                                           :enumDescriptions ["Invalid state value."
                                                              "Capacity commitment is pending provisioning. Pending capacity commitment does not contribute to the parent's slot_capacity."
                                                              "Once slots are provisioned, capacity commitment becomes active. slot_count is added to the parent's slot_capacity."
                                                              "Capacity commitment is failed to be activated by the backend."],
                                           :readOnly true,
                                           :type "string",
                                           :enum ["STATE_UNSPECIFIED"
                                                  "PENDING"
                                                  "ACTIVE"
                                                  "FAILED"]},
                                   :commitmentEndTime {:type "string",
                                                       :description "Output only. The end of the current commitment period. It is applicable only for ACTIVE capacity commitments.",
                                                       :format "google-datetime",
                                                       :readOnly true},
                                   :commitmentStartTime {:description "Output only. The start of the current commitment period. It is applicable only for ACTIVE capacity commitments.",
                                                         :type "string",
                                                         :format "google-datetime",
                                                         :readOnly true},
                                   :name {:readOnly true,
                                          :description "Output only. The resource name of the capacity commitment, e.g., `projects/myproject/locations/US/capacityCommitments/123`",
                                          :type "string"},
                                   :renewalPlan {:enum ["COMMITMENT_PLAN_UNSPECIFIED"
                                                        "FLEX"
                                                        "TRIAL"
                                                        "MONTHLY"
                                                        "ANNUAL"],
                                                 :enumDescriptions ["Invalid plan value. Requests with this value will be rejected with error code `google.rpc.Code.INVALID_ARGUMENT`."
                                                                    "Flex commitments have committed period of 1 minute after becoming ACTIVE. After that, they are not in a committed period anymore and can be removed any time."
                                                                    "Trial commitments have a committed period of 182 days after becoming ACTIVE. After that, they are converted to a new commitment based on the `renewal_plan`. Default `renewal_plan` for Trial commitment is Flex so that it can be deleted right after committed period ends."
                                                                    "Monthly commitments have a committed period of 30 days after becoming ACTIVE. After that, they are not in a committed period anymore and can be removed any time."
                                                                    "Annual commitments have a committed period of 365 days after becoming ACTIVE. After that they are converted to a new commitment based on the renewal_plan."],
                                                 :description "The plan this capacity commitment is converted to after commitment_end_time passes. Once the plan is changed, committed period is extended according to commitment plan. Only applicable for ANNUAL and TRIAL commitments.",
                                                 :type "string"}},
                      :type "object",
                      :description "Capacity commitment is a way to purchase compute capacity for BigQuery jobs (in the form of slots) with some committed period of usage. Annual commitments renew by default. Commitments can be removed after their commitment end time passes. In order to remove annual commitment, its plan needs to be changed to monthly or flex first. A capacity commitment resource exists as a child resource of the admin project.",
                      :id "CapacityCommitment"},
 :Empty {:properties {},
         :description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
         :type "object",
         :id "Empty"},
 :ListCapacityCommitmentsResponse {:type "object",
                                   :description "The response for ReservationService.ListCapacityCommitments.",
                                   :id "ListCapacityCommitmentsResponse",
                                   :properties {:nextPageToken {:type "string",
                                                                :description "Token to retrieve the next page of results, or empty if there are no more results in the list."},
                                                :capacityCommitments {:type "array",
                                                                      :items {:$ref "CapacityCommitment"},
                                                                      :description "List of capacity commitments visible to the user."}}},
 :Reservation {:type "object",
               :properties {:updateTime {:type "string",
                                         :description "Output only. Last update time of the reservation.",
                                         :readOnly true,
                                         :format "google-datetime"},
                            :creationTime {:description "Output only. Creation time of the reservation.",
                                           :type "string",
                                           :readOnly true,
                                           :format "google-datetime"},
                            :name {:description "The resource name of the reservation, e.g., `projects/*/locations/*/reservations/team1-prod`.",
                                   :type "string"},
                            :slotCapacity {:type "string",
                                           :description "Minimum slots available to this reservation. A slot is a unit of computational power in BigQuery, and serves as the unit of parallelism. Queries using this reservation might use more slots during runtime if ignore_idle_slots is set to false. If the new reservation's slot capacity exceed the parent's slot capacity or if total slot capacity of the new reservation and its siblings exceeds the parent's slot capacity, the request will fail with `google.rpc.Code.RESOURCE_EXHAUSTED`.",
                                           :format "int64"},
                            :ignoreIdleSlots {:description "If false, any query using this reservation will use idle slots from other reservations within the same admin project. If true, a query using this reservation will execute with the slot capacity specified above at most.",
                                              :type "boolean"}},
               :id "Reservation",
               :description "A reservation is a mechanism used to guarantee slots to users."},
 :SearchAssignmentsResponse {:type "object",
                             :properties {:assignments {:description "List of assignments visible to the user.",
                                                        :type "array",
                                                        :items {:$ref "Assignment"}},
                                          :nextPageToken {:type "string",
                                                          :description "Token to retrieve the next page of results, or empty if there are no more results in the list."}},
                             :description "The response for ReservationService.SearchAssignments.",
                             :id "SearchAssignmentsResponse"},
 :CreateSlotPoolMetadata {:description "The metadata for operation returned from ReservationService.CreateSlotPool.",
                          :type "object",
                          :id "CreateSlotPoolMetadata",
                          :properties {:slotPool {:description "Resource name of the slot pool that is being created. E.g., projects/myproject/locations/us-central1/reservations/foo/slotPools/123",
                                                  :type "string"}}},
 :SearchAllAssignmentsResponse {:id "SearchAllAssignmentsResponse",
                                :type "object",
                                :description "The response for ReservationService.SearchAllAssignments.",
                                :properties {:nextPageToken {:type "string",
                                                             :description "Token to retrieve the next page of results, or empty if there are no more results in the list."},
                                             :assignments {:description "List of assignments visible to the user.",
                                                           :type "array",
                                                           :items {:$ref "Assignment"}}}},
 :SplitCapacityCommitmentResponse {:id "SplitCapacityCommitmentResponse",
                                   :type "object",
                                   :properties {:second {:description "Second capacity commitment, result of a split.",
                                                         :$ref "CapacityCommitment"},
                                                :first {:description "First capacity commitment, result of a split.",
                                                        :$ref "CapacityCommitment"}},
                                   :description "The response for ReservationService.SplitCapacityCommitment."},
 :SplitCapacityCommitmentRequest {:type "object",
                                  :id "SplitCapacityCommitmentRequest",
                                  :properties {:slotCount {:type "string",
                                                           :format "int64",
                                                           :description "Number of slots in the capacity commitment after the split."}},
                                  :description "The request for ReservationService.SplitCapacityCommitment."},
 :ListOperationsResponse {:type "object",
                          :id "ListOperationsResponse",
                          :properties {:nextPageToken {:description "The standard List next-page token.",
                                                       :type "string"},
                                       :operations {:items {:$ref "Operation"},
                                                    :description "A list of operations that matches the specified filter in the request.",
                                                    :type "array"}},
                          :description "The response message for Operations.ListOperations."},
 :ListAssignmentsResponse {:id "ListAssignmentsResponse",
                           :type "object",
                           :properties {:nextPageToken {:type "string",
                                                        :description "Token to retrieve the next page of results, or empty if there are no more results in the list."},
                                        :assignments {:description "List of assignments visible to the user.",
                                                      :items {:$ref "Assignment"},
                                                      :type "array"}},
                           :description "The response for ReservationService.ListAssignments."},
 :BiReservation {:id "BiReservation",
                 :description "Represents a BI Reservation.",
                 :type "object",
                 :properties {:updateTime {:format "google-datetime",
                                           :type "string",
                                           :description "Output only. The last update timestamp of a reservation.",
                                           :readOnly true},
                              :name {:description "The resource name of the singleton BI reservation. Reservation names have the form `projects/{project_id}/locations/{location_id}/bireservation`.",
                                     :type "string"},
                              :size {:type "string",
                                     :format "int64",
                                     :description "Size of a reservation, in bytes."}}},
 :Status {:properties {:details {:type "array",
                                 :description "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                                 :items {:type "object",
                                         :additionalProperties {:type "any",
                                                                :description "Properties of the object. Contains field @type with type URL."}}},
                       :message {:description "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
                                 :type "string"},
                       :code {:format "int32",
                              :description "The status code, which should be an enum value of google.rpc.Code.",
                              :type "integer"}},
          :type "object",
          :id "Status",
          :description "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."}}
