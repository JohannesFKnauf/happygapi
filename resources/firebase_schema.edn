{:AddFirebaseRequest {:description "All fields are required.",
                      :id "AddFirebaseRequest",
                      :properties {:locationId {:type "string",
                                                :description "Deprecated. Instead, to set a Project's default GCP resource location, call [`FinalizeDefaultLocation`](../projects.defaultLocation/finalize) after you add Firebase resources to the GCP `Project`. The ID of the Project's default GCP resource location. The location must be one of the available [GCP resource locations](https://firebase.google.com/docs/projects/locations)."}},
                      :type "object"},
 :DefaultResources {:properties {:hostingSite {:type "string",
                                               :description "The default Firebase Hosting site name, in the format: PROJECT_ID Though rare, your `projectId` might already be used as the name for an existing Hosting site in another project (learn more about creating non-default, [additional sites](https://firebase.google.com/docs/hosting/multisites)). In these cases, your `projectId` is appended with a hyphen then five alphanumeric characters to create your default Hosting site name. For example, if your `projectId` is `myproject123`, your default Hosting site name might be: `myproject123-a5c16`"},
                                 :locationId {:type "string",
                                              :description "The ID of the Project's default GCP resource location. The location is one of the available [GCP resource locations](https://firebase.google.com/docs/projects/locations). This field is omitted if the default GCP resource location has not been finalized yet. To set a Project's default GCP resource location, call [`FinalizeDefaultLocation`](../projects.defaultLocation/finalize) after you add Firebase resources to the Project."},
                                 :realtimeDatabaseInstance {:type "string",
                                                            :description "The default Firebase Realtime Database instance name, in the format: PROJECT_ID Though rare, your `projectId` might already be used as the name for an existing Realtime Database instance in another project (learn more about [database sharding](https://firebase.google.com/docs/database/usage/sharding)). In these cases, your `projectId` is appended with a hyphen then five alphanumeric characters to create your default Realtime Database instance name. For example, if your `projectId` is `myproject123`, your default database instance name might be: `myproject123-a5c16`"},
                                 :storageBucket {:description "The default Cloud Storage for Firebase storage bucket, in the format: PROJECT_ID.appspot.com",
                                                 :type "string"}},
                    :description "The default resources associated with the Project.",
                    :id "DefaultResources",
                    :type "object"},
 :ListShaCertificatesResponse {:id "ListShaCertificatesResponse",
                               :properties {:certificates {:items {:$ref "ShaCertificate"},
                                                           :type "array",
                                                           :description "The list of each `ShaCertificate` associated with the `AndroidApp`."}},
                               :type "object"},
 :FinalizeDefaultLocationRequest {:properties {:locationId {:description "The ID of the Project's default GCP resource location. The location must be one of the available [GCP resource locations](https://firebase.google.com/docs/projects/locations).",
                                                            :type "string"}},
                                  :id "FinalizeDefaultLocationRequest",
                                  :type "object"},
 :Operation {:id "Operation",
             :properties {:metadata {:additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                            :type "any"},
                                     :description "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                                     :type "object"},
                          :name {:description "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                                 :type "string"},
                          :done {:description "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                                 :type "boolean"},
                          :error {:$ref "Status",
                                  :description "The error result of the operation in case of failure or cancellation."},
                          :response {:description "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                                     :type "object",
                                     :additionalProperties {:type "any",
                                                            :description "Properties of the object. Contains field @type with type URL."}}},
             :type "object",
             :description "This resource represents a long-running operation that is the result of a network API call."},
 :AddGoogleAnalyticsRequest {:type "object",
                             :properties {:analyticsAccountId {:type "string",
                                                               :description "The ID for the existing [Google Analytics account](http://www.google.com/analytics/) that you want to link with the `FirebaseProject`. Specifying this field will provision a new Google Analytics property in your Google Analytics account and associate the new property with the `FirebaseProject`."},
                                          :analyticsPropertyId {:description "The ID for the existing Google Analytics property that you want to associate with the `FirebaseProject`.",
                                                                :type "string"}},
                             :id "AddGoogleAnalyticsRequest"},
 :WebApp {:description "Details of a Firebase App for the web.",
          :type "object",
          :properties {:displayName {:type "string",
                                     :description "The user-assigned display name for the `WebApp`."},
                       :name {:description "The resource name of the WebApp, in the format: projects/PROJECT_IDENTIFIER /webApps/APP_ID * PROJECT_IDENTIFIER: the parent Project's [`ProjectNumber`](../projects#FirebaseProject.FIELDS.project_number) ***(recommended)*** or its [`ProjectId`](../projects#FirebaseProject.FIELDS.project_id). Learn more about using project identifiers in Google's [AIP 2510 standard](https://google.aip.dev/cloud/2510). Note that the value for PROJECT_IDENTIFIER in any response body will be the `ProjectId`. * APP_ID: the globally unique, Firebase-assigned identifier for the App (see [`appId`](../projects.webApps#WebApp.FIELDS.app_id)).",
                              :type "string"},
                       :appUrls {:description "The URLs where the `WebApp` is hosted.",
                                 :items {:type "string"},
                                 :type "array"},
                       :webId {:readOnly true,
                               :description "Output only. Immutable. A unique, Firebase-assigned identifier for the `WebApp`. This identifier is only used to populate the `namespace` value for the `WebApp`. For most use cases, use `appId` to identify or reference the App. The `webId` value is only unique within a `FirebaseProject` and its associated Apps.",
                               :type "string"},
                       :appId {:type "string",
                               :description "Immutable. The globally unique, Firebase-assigned identifier for the `WebApp`. This identifier should be treated as an opaque token, as the data format is not specified."},
                       :projectId {:description "Immutable. A user-assigned unique identifier of the parent FirebaseProject for the `WebApp`.",
                                   :type "string"}},
          :id "WebApp"},
 :StatusProto {:type "object",
               :description "Wire-format for a Status object",
               :properties {:canonicalCode {:description "The canonical error code (see codes.proto) that most closely corresponds to this status. May be missing.",
                                            :type "integer",
                                            :format "int32"},
                            :messageSet {:$ref "MessageSet",
                                         :description "message_set associates an arbitrary proto message with the status."},
                            :space {:description "The following are usually only present when code != 0 Space to which this status belongs",
                                    :type "string"},
                            :code {:description "Numeric code drawn from the space specified below. Often, this is the canonical error space, and code is drawn from google3/util/task/codes.proto",
                                   :type "integer",
                                   :format "int32"},
                            :message {:description "Detail message",
                                      :type "string"}},
               :id "StatusProto"},
 :IosApp {:description "Details of a Firebase App for iOS.",
          :id "IosApp",
          :properties {:projectId {:type "string",
                                   :description "Immutable. A user-assigned unique identifier of the parent FirebaseProject for the `IosApp`."},
                       :appId {:type "string",
                               :description "Immutable. The globally unique, Firebase-assigned identifier for the `IosApp`. This identifier should be treated as an opaque token, as the data format is not specified."},
                       :displayName {:type "string",
                                     :description "The user-assigned display name for the `IosApp`."},
                       :bundleId {:type "string",
                                  :description "Immutable. The canonical bundle ID of the iOS app as it would appear in the iOS AppStore."},
                       :appStoreId {:type "string",
                                    :description "The automatically generated Apple ID assigned to the iOS app by Apple in the iOS App Store."},
                       :name {:description "The resource name of the IosApp, in the format: projects/PROJECT_IDENTIFIER /iosApps/APP_ID * PROJECT_IDENTIFIER: the parent Project's [`ProjectNumber`](../projects#FirebaseProject.FIELDS.project_number) ***(recommended)*** or its [`ProjectId`](../projects#FirebaseProject.FIELDS.project_id). Learn more about using project identifiers in Google's [AIP 2510 standard](https://google.aip.dev/cloud/2510). Note that the value for PROJECT_IDENTIFIER in any response body will be the `ProjectId`. * APP_ID: the globally unique, Firebase-assigned identifier for the App (see [`appId`](../projects.iosApps#IosApp.FIELDS.app_id)).",
                              :type "string"}},
          :type "object"},
 :FirebaseAppInfo {:type "object",
                   :properties {:name {:type "string",
                                       :description "The resource name of the Firebase App, in the format: projects/PROJECT_ID /iosApps/APP_ID or projects/PROJECT_ID/androidApps/APP_ID or projects/ PROJECT_ID/webApps/APP_ID"},
                                :platform {:enumDescriptions ["Unknown state. This is only used for distinguishing unset values."
                                                              "The Firebase App is associated with iOS."
                                                              "The Firebase App is associated with Android."
                                                              "The Firebase App is associated with web."],
                                           :enum ["PLATFORM_UNSPECIFIED"
                                                  "IOS"
                                                  "ANDROID"
                                                  "WEB"],
                                           :type "string",
                                           :description "The platform of the Firebase App."},
                                :displayName {:description "The user-assigned display name of the Firebase App.",
                                              :type "string"},
                                :appId {:description "Output only. Immutable. The globally unique, Firebase-assigned identifier for the `WebApp`. This identifier should be treated as an opaque token, as the data format is not specified.",
                                        :type "string",
                                        :readOnly true},
                                :namespace {:description "Output only. Immutable. The platform-specific identifier of the App. *Note:* For most use cases, use `appId`, which is the canonical, globally unique identifier for referencing an App. This string is derived from a native identifier for each platform: `packageName` for an `AndroidApp`, `bundleId` for an `IosApp`, and `webId` for a `WebApp`. Its contents should be treated as opaque, as the native identifier format may change as platforms evolve. This string is only unique within a `FirebaseProject` and its associated Apps.",
                                            :type "string",
                                            :readOnly true}},
                   :description "A high-level summary of an App.",
                   :id "FirebaseAppInfo"},
 :ListAvailableProjectsResponse {:type "object",
                                 :properties {:nextPageToken {:type "string",
                                                              :description "If the result list is too large to fit in a single response, then a token is returned. If the string is empty, then this response is the last page of results. This token can be used in a subsequent calls to `ListAvailableProjects` to find the next group of Projects. Page tokens are short-lived and should not be persisted."},
                                              :projectInfo {:items {:$ref "ProjectInfo"},
                                                            :type "array",
                                                            :description "The list of GCP `Projects` which can have Firebase resources added to them."}},
                                 :id "ListAvailableProjectsResponse"},
 :ListWebAppsResponse {:id "ListWebAppsResponse",
                       :type "object",
                       :properties {:apps {:type "array",
                                           :items {:$ref "WebApp"},
                                           :description "List of each `WebApp` associated with the specified `FirebaseProject`."},
                                    :nextPageToken {:type "string",
                                                    :description "If the result list is too large to fit in a single response, then a token is returned. If the string is empty, then this response is the last page of results. This token can be used in a subsequent call to `ListWebApps` to find the next group of Apps. Page tokens are short-lived and should not be persisted."}}},
 :MessageSet {:id "MessageSet",
              :description "This is proto2's version of MessageSet.",
              :properties {},
              :type "object"},
 :RemoveAnalyticsRequest {:id "RemoveAnalyticsRequest",
                          :properties {:analyticsPropertyId {:type "string",
                                                             :description "Optional. The ID of the Google Analytics property associated with the specified `FirebaseProject`. - If not set, then the Google Analytics property that is currently associated with the specified `FirebaseProject` is removed. - If set, and the specified `FirebaseProject` is currently associated with a *different* Google Analytics property, then the response is a `412 Precondition Failed` error. "}},
                          :type "object"},
 :IosAppConfig {:description "Configuration metadata of a single Firebase App for iOS.",
                :type "object",
                :id "IosAppConfig",
                :properties {:configFileContents {:format "byte",
                                                  :description "The content of the XML configuration file.",
                                                  :type "string"},
                             :configFilename {:description "The filename that the configuration artifact for the `IosApp` is typically saved as. For example: `GoogleService-Info.plist`",
                                              :type "string"}}},
 :ProjectInfo {:id "ProjectInfo",
               :type "object",
               :description "A reference to a Google Cloud Platform (GCP) `Project`.",
               :properties {:project {:type "string",
                                      :description "The resource name of the GCP `Project` to which Firebase resources can be added, in the format: projects/PROJECT_IDENTIFIER Refer to the `FirebaseProject` [`name`](../projects#FirebaseProject.FIELDS.name) field for details about PROJECT_IDENTIFIER values."},
                            :locationId {:description "The ID of the Project's default GCP resource location. The location is one of the available [GCP resource locations](https://firebase.google.com/docs/projects/locations). Not all Projects will have this field populated. If it is not populated, it means that the Project does not yet have a default GCP resource location. To set a Project's default GCP resource location, call [`FinalizeDefaultLocation`](../projects.defaultLocation/finalize) after you add Firebase resources to the Project.",
                                         :type "string"},
                            :displayName {:type "string",
                                          :description "The user-assigned display name of the GCP `Project`, for example: `My App`"}}},
 :Empty {:description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
         :type "object",
         :id "Empty",
         :properties {}},
 :AnalyticsDetails {:type "object",
                    :id "AnalyticsDetails",
                    :properties {:streamMappings {:items {:$ref "StreamMapping"},
                                                  :description " - For `AndroidApps` and `IosApps`: a map of `app` to `streamId` for each Firebase App in the specified `FirebaseProject`. Each `app` and `streamId` appears only once. - For `WebApps`: a map of `app` to `streamId` and `measurementId` for each `WebApp` in the specified `FirebaseProject`. Each `app`, `streamId`, and `measurementId` appears only once.",
                                                  :type "array"},
                                 :analyticsProperty {:description "The Analytics Property object associated with the specified `FirebaseProject`. This object contains the details of the Google Analytics property associated with the Project.",
                                                     :$ref "AnalyticsProperty"}}},
 :WebAppConfig {:properties {:locationId {:type "string",
                                          :description "The ID of the Project's default GCP resource location. The location is one of the available [GCP resource locations](https://firebase.google.com/docs/projects/locations). This field is omitted if the default GCP resource location has not been finalized yet. To set a Project's default GCP resource location, call [`FinalizeDefaultLocation`](../projects.defaultLocation/finalize) after you add Firebase resources to the Project."},
                             :authDomain {:type "string",
                                          :description "The domain Firebase Auth configures for OAuth redirects, in the format: PROJECT_ID.firebaseapp.com"},
                             :databaseURL {:type "string",
                                           :description "The default Firebase Realtime Database URL."},
                             :apiKey {:description "The API key associated with the `WebApp`.",
                                      :type "string"},
                             :appId {:type "string",
                                     :description "Immutable. The globally unique, Firebase-assigned identifier for the `WebApp`."},
                             :projectId {:type "string",
                                         :description "Immutable. A user-assigned unique identifier for the `FirebaseProject`."},
                             :storageBucket {:type "string",
                                             :description "The default Cloud Storage for Firebase storage bucket name."},
                             :messagingSenderId {:type "string",
                                                 :description "The sender ID for use with Firebase Cloud Messaging."},
                             :measurementId {:description "The unique Google-assigned identifier of the Google Analytics web stream associated with the `WebApp`. Firebase SDKs use this ID to interact with Google Analytics APIs. This field is only present if the `WebApp` is linked to a web stream in a Google Analytics App + Web property. Learn more about this ID and Google Analytics web streams in the [Analytics documentation](https://support.google.com/analytics/topic/9303475). To generate a `measurementId` and link the `WebApp` with a Google Analytics web stream, call [`AddGoogleAnalytics`](../../v1beta1/projects/addGoogleAnalytics). For apps using the Firebase JavaScript SDK v7.20.0 and later, Firebase dynamically fetches the `measurementId` when your app initializes Analytics. Having this ID in your config object is optional, but it does serve as a fallback in the rare case that the dynamic fetch fails.",
                                             :type "string"}},
                :type "object",
                :description "Configuration metadata of a single Firebase App for the web.",
                :id "WebAppConfig"},
 :SearchFirebaseAppsResponse {:properties {:apps {:type "array",
                                                  :items {:$ref "FirebaseAppInfo"},
                                                  :description "One page of results from a call to `SearchFirebaseApps`."},
                                           :nextPageToken {:description "If the result list is too large to fit in a single response, then a token is returned. This token can be used in a subsequent calls to `SearchFirebaseApps` to find the next group of Apps. Page tokens are short-lived and should not be persisted.",
                                                           :type "string"}},
                              :type "object",
                              :id "SearchFirebaseAppsResponse"},
 :ListAvailableLocationsResponse {:id "ListAvailableLocationsResponse",
                                  :properties {:nextPageToken {:description "If the result list is too large to fit in a single response, then a token is returned. If the string is empty, then this response is the last page of results and all available locations have been listed. This token can be used in a subsequent call to `ListAvailableLocations` to find more locations. Page tokens are short-lived and should not be persisted.",
                                                               :type "string"},
                                               :locations {:description "One page of results from a call to `ListAvailableLocations`.",
                                                           :items {:$ref "Location"},
                                                           :type "array"}},
                                  :type "object"},
 :AnalyticsProperty {:type "object",
                     :description "Details of a Google Analytics property",
                     :id "AnalyticsProperty",
                     :properties {:displayName {:type "string",
                                                :description "The display name of the Google Analytics property associated with the specified `FirebaseProject`."},
                                  :id {:type "string",
                                       :description "The globally unique, Google-assigned identifier of the Google Analytics property associated with the specified `FirebaseProject`. If you called [`AddGoogleAnalytics`](../../v1beta1/projects/addGoogleAnalytics) to link the `FirebaseProject` with a Google Analytics account, the value in this `id` field is the same as the ID of the property either specified or provisioned with that call to `AddGoogleAnalytics`."}}},
 :ListIosAppsResponse {:id "ListIosAppsResponse",
                       :properties {:nextPageToken {:type "string",
                                                    :description "If the result list is too large to fit in a single response, then a token is returned. If the string is empty, then this response is the last page of results. This token can be used in a subsequent call to `ListIosApps` to find the next group of Apps. Page tokens are short-lived and should not be persisted."},
                                    :apps {:items {:$ref "IosApp"},
                                           :description "List of each `IosApp` associated with the specified `FirebaseProject`.",
                                           :type "array"}},
                       :type "object"},
 :AndroidApp {:properties {:appId {:type "string",
                                   :description "Immutable. The globally unique, Firebase-assigned identifier for the `AndroidApp`. This identifier should be treated as an opaque token, as the data format is not specified."},
                           :displayName {:description "The user-assigned display name for the `AndroidApp`.",
                                         :type "string"},
                           :name {:type "string",
                                  :description "The resource name of the AndroidApp, in the format: projects/ PROJECT_IDENTIFIER/androidApps/APP_ID * PROJECT_IDENTIFIER: the parent Project's [`ProjectNumber`](../projects#FirebaseProject.FIELDS.project_number) ***(recommended)*** or its [`ProjectId`](../projects#FirebaseProject.FIELDS.project_id). Learn more about using project identifiers in Google's [AIP 2510 standard](https://google.aip.dev/cloud/2510). Note that the value for PROJECT_IDENTIFIER in any response body will be the `ProjectId`. * APP_ID: the globally unique, Firebase-assigned identifier for the App (see [`appId`](../projects.androidApps#AndroidApp.FIELDS.app_id))."},
                           :packageName {:type "string",
                                         :description "Immutable. The canonical package name of the Android app as would appear in the Google Play Developer Console."},
                           :projectId {:type "string",
                                       :description "Immutable. A user-assigned unique identifier of the parent FirebaseProject for the `AndroidApp`."}},
              :type "object",
              :description "Details of a Firebase App for Android.",
              :id "AndroidApp"},
 :StreamMapping {:id "StreamMapping",
                 :properties {:streamId {:format "int64",
                                         :description "The unique Google-assigned identifier of the Google Analytics data stream associated with the Firebase App. Learn more about Google Analytics data streams in the [Analytics documentation](https://support.google.com/analytics/answer/9303323).",
                                         :type "string"},
                              :measurementId {:type "string",
                                              :description "Applicable for Firebase Web Apps only. The unique Google-assigned identifier of the Google Analytics web stream associated with the Firebase Web App. Firebase SDKs use this ID to interact with Google Analytics APIs. Learn more about this ID and Google Analytics web streams in the [Analytics documentation](https://support.google.com/analytics/topic/9303475)."},
                              :app {:description "The resource name of the Firebase App associated with the Google Analytics data stream, in the format: projects/PROJECT_IDENTIFIER/androidApps/APP_ID or projects/PROJECT_IDENTIFIER/iosApps/APP_ID or projects/PROJECT_IDENTIFIER /webApps/APP_ID Refer to the `FirebaseProject` [`name`](../projects#FirebaseProject.FIELDS.name) field for details about PROJECT_IDENTIFIER values.",
                                    :type "string"}},
                 :type "object",
                 :description "A mapping of a Firebase App to a Google Analytics data stream"},
 :AndroidAppConfig {:type "object",
                    :properties {:configFileContents {:format "byte",
                                                      :type "string",
                                                      :description "The contents of the JSON configuration file."},
                                 :configFilename {:type "string",
                                                  :description "The filename that the configuration artifact for the `AndroidApp` is typically saved as. For example: `google-services.json`"}},
                    :description "Configuration metadata of a single Firebase App for Android.",
                    :id "AndroidAppConfig"},
 :FirebaseProject {:id "FirebaseProject",
                   :properties {:name {:description "The resource name of the Project, in the format: projects/PROJECT_IDENTIFIER PROJECT_IDENTIFIER: the Project's [`ProjectNumber`](../projects#FirebaseProject.FIELDS.project_number) ***(recommended)*** or its [`ProjectId`](../projects#FirebaseProject.FIELDS.project_id). Learn more about using project identifiers in Google's [AIP 2510 standard](https://google.aip.dev/cloud/2510). Note that the value for PROJECT_IDENTIFIER in any response body will be the `ProjectId`.",
                                       :type "string"},
                                :projectId {:description "Immutable. A user-assigned unique identifier for the Project. This identifier may appear in URLs or names for some Firebase resources associated with the Project, but it should generally be treated as a convenience alias to reference the Project.",
                                            :type "string"},
                                :projectNumber {:format "int64",
                                                :type "string",
                                                :description "Immutable. The globally unique, Google-assigned canonical identifier for the Project. Use this identifier when configuring integrations and/or making API calls to Firebase or third-party services."},
                                :displayName {:type "string",
                                              :description "The user-assigned display name of the Project."},
                                :state {:readOnly true,
                                        :type "string",
                                        :description "Output only. The lifecycle state of the Project. Updates to the state must be performed via com.google.cloudresourcemanager.v1.Projects.DeleteProject and com.google.cloudresourcemanager.v1.Projects.UndeleteProject",
                                        :enum ["STATE_UNSPECIFIED"
                                               "ACTIVE"
                                               "DELETED"],
                                        :enumDescriptions ["Unspecified state."
                                                           "The normal and active state."
                                                           "The Project has been marked for deletion by the user."]},
                                :resources {:$ref "DefaultResources",
                                            :description "The default Firebase resources associated with the Project."}},
                   :description "A `FirebaseProject` is the top-level Firebase entity. It is the container for Firebase Apps, Firebase Hosting sites, storage systems (Firebase Realtime Database, Cloud Firestore, Cloud Storage buckets), and other Firebase and Google Cloud Platform (GCP) resources. You create a `FirebaseProject` by calling AddFirebase and specifying an *existing* [GCP `Project`](https://cloud.google.com/resource-manager/reference/rest/v1/projects). This adds Firebase resources to the existing GCP `Project`. Since a FirebaseProject is actually also a GCP `Project`, a `FirebaseProject` has the same underlying GCP identifiers (`projectNumber` and `projectId`). This allows for easy interop with Google APIs.",
                   :type "object"},
 :Location {:type "object",
            :description "A GCP resource location that can be selected for a FirebaseProject.",
            :id "Location",
            :properties {:locationId {:description "The ID of the GCP resource location. It will be one of the available [GCP resource locations](https://firebase.google.com/docs/projects/locations#types).",
                                      :type "string"},
                         :features {:description "Products and services that are available in the GCP resource location.",
                                    :items {:enumDescriptions ["Used internally for distinguishing unset values and is not intended for external use."
                                                               "This location supports Cloud Firestore database instances. App Engine is available in this location, so it can be a Project's [default GCP resource location](//firebase.google.com/docs/projects/locations#default-cloud-location)."
                                                               "This location supports default Cloud Storage buckets. App Engine is available in this location, so it can be a Project's [default GCP resource location](//firebase.google.com/docs/projects/locations#default-cloud-location)."
                                                               "Cloud Functions for Firebase is available in this location."],
                                            :enum ["LOCATION_FEATURE_UNSPECIFIED"
                                                   "FIRESTORE"
                                                   "DEFAULT_STORAGE"
                                                   "FUNCTIONS"],
                                            :type "string"},
                                    :type "array"},
                         :type {:type "string",
                                :enumDescriptions ["Used internally for distinguishing unset values and is not intended for external use."
                                                   "The location is a regional location. Data in a regional location is replicated in multiple zones within a region."
                                                   "The location is a multi-regional location. Data in a multi-region location is replicated in multiple regions. Within each region, data is replicated in multiple zones."],
                                :enum ["LOCATION_TYPE_UNSPECIFIED"
                                       "REGIONAL"
                                       "MULTI_REGIONAL"],
                                :description "Indicates whether the GCP resource location is a [regional or multi-regional location](https://firebase.google.com/docs/projects/locations#types) for data replication."}}},
 :ListAndroidAppsResponse {:type "object",
                           :id "ListAndroidAppsResponse",
                           :properties {:apps {:description "List of each `AndroidApp` associated with the specified `FirebaseProject`.",
                                               :type "array",
                                               :items {:$ref "AndroidApp"}},
                                        :nextPageToken {:type "string",
                                                        :description "If the result list is too large to fit in a single response, then a token is returned. If the string is empty, then this response is the last page of results. This token can be used in a subsequent call to `ListAndroidApps` to find the next group of Apps. Page tokens are short-lived and should not be persisted."}}},
 :ListFirebaseProjectsResponse {:id "ListFirebaseProjectsResponse",
                                :properties {:nextPageToken {:type "string",
                                                             :description "If the result list is too large to fit in a single response, then a token is returned. If the string is empty, then this response is the last page of results. This token can be used in a subsequent calls to `ListFirebaseProjects` to find the next group of Projects. Page tokens are short-lived and should not be persisted."},
                                             :results {:type "array",
                                                       :description "One page of the list of Projects that are accessible to the caller.",
                                                       :items {:$ref "FirebaseProject"}}},
                                :type "object"},
 :AdminSdkConfig {:type "object",
                  :properties {:databaseURL {:type "string",
                                             :description "The default Firebase Realtime Database URL."},
                               :projectId {:type "string",
                                           :description "Immutable. A user-assigned unique identifier for the `FirebaseProject`. This identifier may appear in URLs or names for some Firebase resources associated with the Project, but it should generally be treated as a convenience alias to reference the Project."},
                               :storageBucket {:type "string",
                                               :description "The default Cloud Storage for Firebase storage bucket name."},
                               :locationId {:type "string",
                                            :description "The ID of the Project's default GCP resource location. The location is one of the available [GCP resource locations](https://firebase.google.com/docs/projects/locations). This field is omitted if the default GCP resource location has not been finalized yet. To set a Project's default GCP resource location, call [`FinalizeDefaultLocation`](../projects.defaultLocation/finalize) after you add Firebase resources to the Project."}},
                  :id "AdminSdkConfig"},
 :ShaCertificate {:type "object",
                  :id "ShaCertificate",
                  :description "A SHA-1 or SHA-256 certificate associated with the AndroidApp.",
                  :properties {:certType {:enumDescriptions ["Unknown state. This is only used for distinguishing unset values."
                                                             "Certificate is a SHA-1 type certificate."
                                                             "Certificate is a SHA-256 type certificate."],
                                          :description "The type of SHA certificate encoded in the hash.",
                                          :enum ["SHA_CERTIFICATE_TYPE_UNSPECIFIED"
                                                 "SHA_1"
                                                 "SHA_256"],
                                          :type "string"},
                               :shaHash {:description "The certificate hash for the `AndroidApp`.",
                                         :type "string"},
                               :name {:type "string",
                                      :description "The resource name of the ShaCertificate for the AndroidApp, in the format: projects/PROJECT_IDENTIFIER/androidApps/APP_ID/sha/SHA_HASH * PROJECT_IDENTIFIER: the parent Project's [`ProjectNumber`](../projects#FirebaseProject.FIELDS.project_number) ***(recommended)*** or its [`ProjectId`](../projects#FirebaseProject.FIELDS.project_id). Learn more about using project identifiers in Google's [AIP 2510 standard](https://google.aip.dev/cloud/2510). Note that the value for PROJECT_IDENTIFIER in any response body will be the `ProjectId`. * APP_ID: the globally unique, Firebase-assigned identifier for the App (see [`appId`](../projects.androidApps#AndroidApp.FIELDS.app_id)). * SHA_HASH: the certificate hash for the App (see [`shaHash`](../projects.androidApps.sha#ShaCertificate.FIELDS.sha_hash))."}}},
 :Status {:properties {:code {:description "The status code, which should be an enum value of google.rpc.Code.",
                              :type "integer",
                              :format "int32"},
                       :details {:items {:additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                                :type "any"},
                                         :type "object"},
                                 :type "array",
                                 :description "A list of messages that carry the error details. There is a common set of message types for APIs to use."},
                       :message {:description "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
                                 :type "string"}},
          :type "object",
          :description "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
          :id "Status"}}
