{:RemoveIosAppRequest {:id "RemoveIosAppRequest",
                       :type "object",
                       :properties {:allowMissing {:description "If set to true, and the App is not found, the request will succeed but no action will be taken on the server.",
                                                   :type "boolean"},
                                    :validateOnly {:description "If set to true, the request is only validated. The App will _not_ be removed.",
                                                   :type "boolean"},
                                    :etag {:description "Checksum provided in the IosApp resource. If provided, this checksum ensures that the client has an up-to-date value before proceeding.",
                                           :type "string"},
                                    :immediate {:description "Determines whether to _immediately_ delete the IosApp. If set to true, the App is immediately deleted from the Project and cannot be restored to the Project. If not set, defaults to false, which means the App will be set to expire in 30 days. Within the 30 days, the App may be restored to the Project using UndeleteIosApp",
                                                :type "boolean"}}},
 :AddFirebaseRequest {:id "AddFirebaseRequest",
                      :description "All fields are required.",
                      :type "object",
                      :properties {:locationId {:description "Deprecated. Instead, to set a Project's default GCP resource location, call [`FinalizeDefaultLocation`](../projects.defaultLocation/finalize) after you add Firebase resources to the GCP `Project`. The ID of the Project's default GCP resource location. The location must be one of the available [GCP resource locations](https://firebase.google.com/docs/projects/locations).",
                                                :type "string"}}},
 :DefaultResources {:id "DefaultResources",
                    :deprecated true,
                    :description "**DEPRECATED.** _Auto-provisioning of these resources is changing, so this object no longer reliably provides information about the resources within the Project. Instead, retrieve information about each resource directly from its resource-specific API._ The default auto-provisioned resources associated with the Project.",
                    :type "object",
                    :properties {:hostingSite {:description "Output only. **DEPRECATED.** _Instead, find the default Firebase Hosting site name using the [ListSites](https://firebase.google.com/docs/reference/hosting/rest/v1beta1/projects.sites/list) within the Firebase Hosting REST API. Note that the default site for the Project might not yet be provisioned, so the return might not contain a default site._ The default Firebase Hosting site name, in the format: PROJECT_ID Though rare, your `projectId` might already be used as the name for an existing Hosting site in another project (learn more about creating non-default, [additional sites](https://firebase.google.com/docs/hosting/multisites)). In these cases, your `projectId` is appended with a hyphen then five alphanumeric characters to create your default Hosting site name. For example, if your `projectId` is `myproject123`, your default Hosting site name might be: `myproject123-a5c16`",
                                               :readOnly true,
                                               :deprecated true,
                                               :type "string"},
                                 :realtimeDatabaseInstance {:description "Output only. **DEPRECATED.** _Instead, find the default Firebase Realtime Database instance name using the [list endpoint](https://firebase.google.com/docs/reference/rest/database/database-management/rest/v1beta/projects.locations.instances/list) within the Firebase Realtime Database REST API. Note that the default instance for the Project might not yet be provisioned, so the return might not contain a default instance._ The default Firebase Realtime Database instance name, in the format: PROJECT_ID Though rare, your `projectId` might already be used as the name for an existing Realtime Database instance in another project (learn more about [database sharding](https://firebase.google.com/docs/database/usage/sharding)). In these cases, your `projectId` is appended with a hyphen then five alphanumeric characters to create your default Realtime Database instance name. For example, if your `projectId` is `myproject123`, your default database instance name might be: `myproject123-a5c16`",
                                                            :readOnly true,
                                                            :deprecated true,
                                                            :type "string"},
                                 :storageBucket {:description "Output only. **DEPRECATED.** _Instead, find the default Cloud Storage for Firebase bucket using the [list endpoint](https://firebase.google.com/docs/reference/rest/storage/rest/v1beta/projects.buckets/list) within the Cloud Storage for Firebase REST API. Note that the default bucket for the Project might not yet be provisioned, so the return might not contain a default bucket._ The default Cloud Storage for Firebase storage bucket, in the format: PROJECT_ID.appspot.com",
                                                 :readOnly true,
                                                 :deprecated true,
                                                 :type "string"},
                                 :locationId {:description "Output only. **DEPRECATED.** _Instead, use product-specific REST APIs to find the location of resources._ The ID of the Project's default GCP resource location. The location is one of the available [GCP resource locations](https://firebase.google.com/docs/projects/locations). This field is omitted if the default GCP resource location has not been finalized yet. To set a Project's default GCP resource location, call [`FinalizeDefaultLocation`](../projects.defaultLocation/finalize) after you add Firebase resources to the Project.",
                                              :readOnly true,
                                              :deprecated true,
                                              :type "string"}}},
 :ListShaCertificatesResponse {:id "ListShaCertificatesResponse",
                               :type "object",
                               :properties {:certificates {:description "The list of each `ShaCertificate` associated with the `AndroidApp`.",
                                                           :type "array",
                                                           :items {:$ref "ShaCertificate"}}}},
 :FinalizeDefaultLocationRequest {:id "FinalizeDefaultLocationRequest",
                                  :deprecated true,
                                  :type "object",
                                  :properties {:locationId {:description "The ID of the Project's default GCP resource location. The location must be one of the available [GCP resource locations](https://firebase.google.com/docs/projects/locations).",
                                                            :type "string"}}},
 :RemoveAndroidAppRequest {:id "RemoveAndroidAppRequest",
                           :type "object",
                           :properties {:allowMissing {:description "If set to true, and the App is not found, the request will succeed but no action will be taken on the server.",
                                                       :type "boolean"},
                                        :validateOnly {:description "If set to true, the request is only validated. The App will _not_ be removed.",
                                                       :type "boolean"},
                                        :etag {:description "Checksum provided in the AndroidApp resource. If provided, this checksum ensures that the client has an up-to-date value before proceeding.",
                                               :type "string"},
                                        :immediate {:description "Determines whether to _immediately_ delete the AndroidApp. If set to true, the App is immediately deleted from the Project and cannot be restored to the Project. If not set, defaults to false, which means the App will be set to expire in 30 days. Within the 30 days, the App may be restored to the Project using UndeleteAndroidApp.",
                                                    :type "boolean"}}},
 :Operation {:id "Operation",
             :description "This resource represents a long-running operation that is the result of a network API call.",
             :type "object",
             :properties {:name {:description "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                                 :type "string"},
                          :metadata {:description "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                                     :type "object",
                                     :additionalProperties {:type "any",
                                                            :description "Properties of the object. Contains field @type with type URL."}},
                          :done {:description "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                                 :type "boolean"},
                          :error {:description "The error result of the operation in case of failure or cancellation.",
                                  :$ref "Status"},
                          :response {:description "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                                     :type "object",
                                     :additionalProperties {:type "any",
                                                            :description "Properties of the object. Contains field @type with type URL."}}}},
 :AddGoogleAnalyticsRequest {:id "AddGoogleAnalyticsRequest",
                             :type "object",
                             :properties {:analyticsAccountId {:description "The ID for the existing [Google Analytics account](http://www.google.com/analytics/) that you want to link with the `FirebaseProject`. Specifying this field will provision a new Google Analytics property in your Google Analytics account and associate the new property with the `FirebaseProject`.",
                                                               :type "string"},
                                          :analyticsPropertyId {:description "The ID for the existing Google Analytics property that you want to associate with the `FirebaseProject`.",
                                                                :type "string"}}},
 :WebApp {:id "WebApp",
          :description "Details of a Firebase App for the web.",
          :type "object",
          :properties {:apiKeyId {:description "The globally unique, Google-assigned identifier (UID) for the Firebase API key associated with the `WebApp`. Be aware that this value is the UID of the API key, _not_ the [`keyString`](https://cloud.google.com/api-keys/docs/reference/rest/v2/projects.locations.keys#Key.FIELDS.key_string) of the API key. The `keyString` is the value that can be found in the App's [configuration artifact](../../rest/v1beta1/projects.webApps/getConfig). If `api_key_id` is not set in requests to [`webApps.Create`](../../rest/v1beta1/projects.webApps/create), then Firebase automatically associates an `api_key_id` with the `WebApp`. This auto-associated key may be an existing valid key or, if no valid key exists, a new one will be provisioned. In patch requests, `api_key_id` cannot be set to an empty value, and the new UID must have no restrictions or only have restrictions that are valid for the associated `WebApp`. We recommend using the [Google Cloud Console](https://console.cloud.google.com/apis/credentials) to manage API keys.",
                                  :type "string"},
                       :displayName {:description "The user-assigned display name for the `WebApp`.",
                                     :type "string"},
                       :name {:description "The resource name of the WebApp, in the format: projects/PROJECT_IDENTIFIER /webApps/APP_ID * PROJECT_IDENTIFIER: the parent Project's [`ProjectNumber`](../projects#FirebaseProject.FIELDS.project_number) ***(recommended)*** or its [`ProjectId`](../projects#FirebaseProject.FIELDS.project_id). Learn more about using project identifiers in Google's [AIP 2510 standard](https://google.aip.dev/cloud/2510). Note that the value for PROJECT_IDENTIFIER in any response body will be the `ProjectId`. * APP_ID: the globally unique, Firebase-assigned identifier for the App (see [`appId`](../projects.webApps#WebApp.FIELDS.app_id)).",
                              :type "string"},
                       :etag {:description "This checksum is computed by the server based on the value of other fields, and it may be sent with update requests to ensure the client has an up-to-date value before proceeding. Learn more about `etag` in Google's [AIP-154 standard](https://google.aip.dev/154#declarative-friendly-resources). This etag is strongly validated.",
                              :type "string"},
                       :state {:description "Output only. The lifecycle state of the App.",
                               :readOnly true,
                               :type "string",
                               :enumDescriptions ["Unspecified state."
                                                  "The App is active."
                                                  "The App has been soft-deleted. After an App has been in the `DELETED` state for more than 30 days, it is considered expired and will be permanently deleted. Up until this time, you can restore the App by calling `Undelete` ([Android](projects.androidApps/undelete) | [iOS](projects.iosApps/undelete) | [web](projects.webApps/undelete))."],
                               :enum ["STATE_UNSPECIFIED"
                                      "ACTIVE"
                                      "DELETED"]},
                       :webId {:description "Output only. Immutable. A unique, Firebase-assigned identifier for the `WebApp`. This identifier is only used to populate the `namespace` value for the `WebApp`. For most use cases, use `appId` to identify or reference the App. The `webId` value is only unique within a `FirebaseProject` and its associated Apps.",
                               :readOnly true,
                               :deprecated true,
                               :type "string"},
                       :appId {:description "Output only. Immutable. The globally unique, Firebase-assigned identifier for the `WebApp`. This identifier should be treated as an opaque token, as the data format is not specified.",
                               :readOnly true,
                               :type "string"},
                       :projectId {:description "Output only. Immutable. A user-assigned unique identifier of the parent FirebaseProject for the `WebApp`.",
                                   :readOnly true,
                                   :type "string"},
                       :expireTime {:description "Output only. Timestamp of when the App will be considered expired and cannot be undeleted. This value is only provided if the App is in the `DELETED` state.",
                                    :readOnly true,
                                    :type "string",
                                    :format "google-datetime"},
                       :appUrls {:description "The URLs where the `WebApp` is hosted.",
                                 :type "array",
                                 :items {:type "string"}}}},
 :StatusProto {:id "StatusProto",
               :description "Wire-format for a Status object",
               :type "object",
               :properties {:code {:description "Numeric code drawn from the space specified below. Often, this is the canonical error space, and code is drawn from google3/util/task/codes.proto",
                                   :type "integer",
                                   :format "int32"},
                            :space {:description "The following are usually only present when code != 0 Space to which this status belongs",
                                    :type "string"},
                            :message {:description "Detail message",
                                      :type "string"},
                            :canonicalCode {:description "The canonical error code (see codes.proto) that most closely corresponds to this status. This may be missing, and in the common case of the generic space, it definitely will be.",
                                            :type "integer",
                                            :format "int32"},
                            :messageSet {:description "message_set associates an arbitrary proto message with the status.",
                                         :$ref "MessageSet"}}},
 :IosApp {:id "IosApp",
          :description "Details of a Firebase App for iOS.",
          :type "object",
          :properties {:teamId {:description "The Apple Developer Team ID associated with the App in the App Store.",
                                :type "string"},
                       :apiKeyId {:description "The globally unique, Google-assigned identifier (UID) for the Firebase API key associated with the `IosApp`. Be aware that this value is the UID of the API key, _not_ the [`keyString`](https://cloud.google.com/api-keys/docs/reference/rest/v2/projects.locations.keys#Key.FIELDS.key_string) of the API key. The `keyString` is the value that can be found in the App's [configuration artifact](../../rest/v1beta1/projects.iosApps/getConfig). If `api_key_id` is not set in requests to [`iosApps.Create`](../../rest/v1beta1/projects.iosApps/create), then Firebase automatically associates an `api_key_id` with the `IosApp`. This auto-associated key may be an existing valid key or, if no valid key exists, a new one will be provisioned. In patch requests, `api_key_id` cannot be set to an empty value, and the new UID must have no restrictions or only have restrictions that are valid for the associated `IosApp`. We recommend using the [Google Cloud Console](https://console.cloud.google.com/apis/credentials) to manage API keys.",
                                  :type "string"},
                       :displayName {:description "The user-assigned display name for the `IosApp`.",
                                     :type "string"},
                       :name {:description "The resource name of the IosApp, in the format: projects/PROJECT_IDENTIFIER /iosApps/APP_ID * PROJECT_IDENTIFIER: the parent Project's [`ProjectNumber`](../projects#FirebaseProject.FIELDS.project_number) ***(recommended)*** or its [`ProjectId`](../projects#FirebaseProject.FIELDS.project_id). Learn more about using project identifiers in Google's [AIP 2510 standard](https://google.aip.dev/cloud/2510). Note that the value for PROJECT_IDENTIFIER in any response body will be the `ProjectId`. * APP_ID: the globally unique, Firebase-assigned identifier for the App (see [`appId`](../projects.iosApps#IosApp.FIELDS.app_id)).",
                              :type "string"},
                       :etag {:description "This checksum is computed by the server based on the value of other fields, and it may be sent with update requests to ensure the client has an up-to-date value before proceeding. Learn more about `etag` in Google's [AIP-154 standard](https://google.aip.dev/154#declarative-friendly-resources). This etag is strongly validated.",
                              :type "string"},
                       :state {:description "Output only. The lifecycle state of the App.",
                               :readOnly true,
                               :type "string",
                               :enumDescriptions ["Unspecified state."
                                                  "The App is active."
                                                  "The App has been soft-deleted. After an App has been in the `DELETED` state for more than 30 days, it is considered expired and will be permanently deleted. Up until this time, you can restore the App by calling `Undelete` ([Android](projects.androidApps/undelete) | [iOS](projects.iosApps/undelete) | [web](projects.webApps/undelete))."],
                               :enum ["STATE_UNSPECIFIED"
                                      "ACTIVE"
                                      "DELETED"]},
                       :appStoreId {:description "The automatically generated Apple ID assigned to the iOS app by Apple in the iOS App Store.",
                                    :type "string"},
                       :bundleId {:description "Immutable. The canonical bundle ID of the iOS app as it would appear in the iOS AppStore.",
                                  :type "string"},
                       :appId {:description "Output only. Immutable. The globally unique, Firebase-assigned identifier for the `IosApp`. This identifier should be treated as an opaque token, as the data format is not specified.",
                               :readOnly true,
                               :type "string"},
                       :projectId {:description "Output only. Immutable. A user-assigned unique identifier of the parent FirebaseProject for the `IosApp`.",
                                   :readOnly true,
                                   :type "string"},
                       :expireTime {:description "Output only. Timestamp of when the App will be considered expired and cannot be undeleted. This value is only provided if the App is in the `DELETED` state.",
                                    :readOnly true,
                                    :type "string",
                                    :format "google-datetime"}}},
 :UndeleteAndroidAppRequest {:id "UndeleteAndroidAppRequest",
                             :type "object",
                             :properties {:validateOnly {:description "If set to true, the request is only validated. The App will _not_ be undeleted.",
                                                         :type "boolean"},
                                          :etag {:description "Checksum provided in the AndroidApp resource. If provided, this checksum ensures that the client has an up-to-date value before proceeding.",
                                                 :type "string"}}},
 :FirebaseAppInfo {:id "FirebaseAppInfo",
                   :description "A high-level summary of an App.",
                   :type "object",
                   :properties {:name {:description "The resource name of the Firebase App, in the format: projects/PROJECT_ID /iosApps/APP_ID or projects/PROJECT_ID/androidApps/APP_ID or projects/ PROJECT_ID/webApps/APP_ID",
                                       :type "string"},
                                :displayName {:description "The user-assigned display name of the Firebase App.",
                                              :type "string"},
                                :platform {:description "The platform of the Firebase App.",
                                           :type "string",
                                           :enumDescriptions ["Unknown state. This is only used for distinguishing unset values."
                                                              "The Firebase App is associated with iOS."
                                                              "The Firebase App is associated with Android."
                                                              "The Firebase App is associated with web."],
                                           :enum ["PLATFORM_UNSPECIFIED"
                                                  "IOS"
                                                  "ANDROID"
                                                  "WEB"]},
                                :appId {:description "Output only. Immutable. The globally unique, Firebase-assigned identifier for the `WebApp`. This identifier should be treated as an opaque token, as the data format is not specified.",
                                        :readOnly true,
                                        :type "string"},
                                :namespace {:description "Output only. Immutable. The platform-specific identifier of the App. *Note:* For most use cases, use `appId`, which is the canonical, globally unique identifier for referencing an App. This string is derived from a native identifier for each platform: `packageName` for an `AndroidApp`, `bundleId` for an `IosApp`, and `webId` for a `WebApp`. Its contents should be treated as opaque, as the native identifier format may change as platforms evolve. This string is only unique within a `FirebaseProject` and its associated Apps.",
                                            :readOnly true,
                                            :type "string"},
                                :apiKeyId {:description "The globally unique, Google-assigned identifier (UID) for the Firebase API key associated with the App. Be aware that this value is the UID of the API key, _not_ the [`keyString`](https://cloud.google.com/api-keys/docs/reference/rest/v2/projects.locations.keys#Key.FIELDS.key_string) of the API key. The `keyString` is the value that can be found in the App's configuration artifact ([`AndroidApp`](../../rest/v1beta1/projects.androidApps/getConfig) | [`IosApp`](../../rest/v1beta1/projects.iosApps/getConfig) | [`WebApp`](../../rest/v1beta1/projects.webApps/getConfig)). If `api_key_id` is not set in requests to create the App ([`AndroidApp`](../../rest/v1beta1/projects.androidApps/create) | [`IosApp`](../../rest/v1beta1/projects.iosApps/create) | [`WebApp`](../../rest/v1beta1/projects.webApps/create)), then Firebase automatically associates an `api_key_id` with the App. This auto-associated key may be an existing valid key or, if no valid key exists, a new one will be provisioned.",
                                           :type "string"},
                                :state {:description "Output only. The lifecycle state of the App.",
                                        :readOnly true,
                                        :type "string",
                                        :enumDescriptions ["Unspecified state."
                                                           "The App is active."
                                                           "The App has been soft-deleted. After an App has been in the `DELETED` state for more than 30 days, it is considered expired and will be permanently deleted. Up until this time, you can restore the App by calling `Undelete` ([Android](projects.androidApps/undelete) | [iOS](projects.iosApps/undelete) | [web](projects.webApps/undelete))."],
                                        :enum ["STATE_UNSPECIFIED"
                                               "ACTIVE"
                                               "DELETED"]},
                                :expireTime {:description "Output only. Timestamp of when the App will be considered expired and cannot be undeleted. This value is only provided if the App is in the `DELETED` state.",
                                             :readOnly true,
                                             :type "string",
                                             :format "google-datetime"}}},
 :ListAvailableProjectsResponse {:id "ListAvailableProjectsResponse",
                                 :type "object",
                                 :properties {:projectInfo {:description "The list of GCP `Projects` which can have Firebase resources added to them.",
                                                            :type "array",
                                                            :items {:$ref "ProjectInfo"}},
                                              :nextPageToken {:description "If the result list is too large to fit in a single response, then a token is returned. If the string is empty, then this response is the last page of results. This token can be used in a subsequent calls to `ListAvailableProjects` to find the next group of Projects. Page tokens are short-lived and should not be persisted.",
                                                              :type "string"}}},
 :ListWebAppsResponse {:id "ListWebAppsResponse",
                       :type "object",
                       :properties {:apps {:description "List of each `WebApp` associated with the specified `FirebaseProject`.",
                                           :type "array",
                                           :items {:$ref "WebApp"}},
                                    :nextPageToken {:description "If the result list is too large to fit in a single response, then a token is returned. If the string is empty, then this response is the last page of results. This token can be used in a subsequent call to `ListWebApps` to find the next group of Apps. Page tokens are short-lived and should not be persisted.",
                                                    :type "string"}}},
 :MessageSet {:id "MessageSet",
              :description "This is proto2's version of MessageSet.",
              :type "object",
              :properties {}},
 :RemoveAnalyticsRequest {:id "RemoveAnalyticsRequest",
                          :type "object",
                          :properties {:analyticsPropertyId {:description "Optional. The ID of the Google Analytics property associated with the specified `FirebaseProject`. - If not set, then the Google Analytics property that is currently associated with the specified `FirebaseProject` is removed. - If set, and the specified `FirebaseProject` is currently associated with a *different* Google Analytics property, then the response is a `412 Precondition Failed` error. ",
                                                             :type "string"}}},
 :IosAppConfig {:id "IosAppConfig",
                :description "Configuration metadata of a single Firebase App for iOS.",
                :type "object",
                :properties {:configFilename {:description "The filename that the configuration artifact for the `IosApp` is typically saved as. For example: `GoogleService-Info.plist`",
                                              :type "string"},
                             :configFileContents {:description "The content of the XML configuration file.",
                                                  :type "string",
                                                  :format "byte"}}},
 :ProjectInfo {:id "ProjectInfo",
               :description "A reference to a Google Cloud Platform (GCP) `Project`.",
               :type "object",
               :properties {:project {:description "The resource name of the GCP `Project` to which Firebase resources can be added, in the format: projects/PROJECT_IDENTIFIER Refer to the `FirebaseProject` [`name`](../projects#FirebaseProject.FIELDS.name) field for details about PROJECT_IDENTIFIER values.",
                                      :type "string"},
                            :displayName {:description "The user-assigned display name of the GCP `Project`, for example: `My App`",
                                          :type "string"},
                            :locationId {:description "The ID of the Project's default GCP resource location. The location is one of the available [GCP resource locations](https://firebase.google.com/docs/projects/locations). Not all Projects will have this field populated. If it is not populated, it means that the Project does not yet have a default GCP resource location. To set a Project's default GCP resource location, call [`FinalizeDefaultLocation`](../projects.defaultLocation/finalize) after you add Firebase resources to the Project.",
                                         :type "string"}}},
 :Empty {:id "Empty",
         :description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
         :type "object",
         :properties {}},
 :AnalyticsDetails {:id "AnalyticsDetails",
                    :type "object",
                    :properties {:analyticsProperty {:description "The Analytics Property object associated with the specified `FirebaseProject`. This object contains the details of the Google Analytics property associated with the Project.",
                                                     :$ref "AnalyticsProperty"},
                                 :streamMappings {:description " - For `AndroidApps` and `IosApps`: a map of `app` to `streamId` for each Firebase App in the specified `FirebaseProject`. Each `app` and `streamId` appears only once. - For `WebApps`: a map of `app` to `streamId` and `measurementId` for each `WebApp` in the specified `FirebaseProject`. Each `app`, `streamId`, and `measurementId` appears only once.",
                                                  :type "array",
                                                  :items {:$ref "StreamMapping"}}}},
 :UndeleteIosAppRequest {:id "UndeleteIosAppRequest",
                         :type "object",
                         :properties {:validateOnly {:description "If set to true, the request is only validated. The App will _not_ be undeleted.",
                                                     :type "boolean"},
                                      :etag {:description "Checksum provided in the IosApp resource. If provided, this checksum ensures that the client has an up-to-date value before proceeding.",
                                             :type "string"}}},
 :RemoveWebAppRequest {:id "RemoveWebAppRequest",
                       :type "object",
                       :properties {:allowMissing {:description "If set to true, and the App is not found, the request will succeed but no action will be taken on the server.",
                                                   :type "boolean"},
                                    :validateOnly {:description "If set to true, the request is only validated. The App will _not_ be removed.",
                                                   :type "boolean"},
                                    :etag {:description "Checksum provided in the WebApp resource. If provided, this checksum ensures that the client has an up-to-date value before proceeding.",
                                           :type "string"},
                                    :immediate {:description "Determines whether to _immediately_ delete the WebApp. If set to true, the App is immediately deleted from the Project and cannot be restored to the Project. If not set, defaults to false, which means the App will be set to expire in 30 days. Within the 30 days, the App may be restored to the Project using UndeleteWebApp",
                                                :type "boolean"}}},
 :WebAppConfig {:id "WebAppConfig",
                :description "Configuration metadata of a single Firebase App for the web.",
                :type "object",
                :properties {:locationId {:description "**DEPRECATED.** _Instead, use product-specific REST APIs to find the location of resources._ The ID of the Project's default GCP resource location. The location is one of the available [GCP resource locations](https://firebase.google.com/docs/projects/locations). This field is omitted if the default GCP resource location has not been finalized yet. To set a Project's default GCP resource location, call [`FinalizeDefaultLocation`](../projects.defaultLocation/finalize) after you add Firebase resources to the Project.",
                                          :deprecated true,
                                          :type "string"},
                             :authDomain {:description "The domain Firebase Auth configures for OAuth redirects, in the format: PROJECT_ID.firebaseapp.com",
                                          :type "string"},
                             :databaseURL {:description "**DEPRECATED.** _Instead, find the default Firebase Realtime Database instance name using the [list endpoint](https://firebase.google.com/docs/reference/rest/database/database-management/rest/v1beta/projects.locations.instances/list) within the Firebase Realtime Database REST API. Note that the default instance for the Project might not yet be provisioned, so the return might not contain a default instance._ The default Firebase Realtime Database URL.",
                                           :deprecated true,
                                           :type "string"},
                             :apiKey {:description "The [`keyString`](https://cloud.google.com/api-keys/docs/reference/rest/v2/projects.locations.keys#Key.FIELDS.key_string) of the API key associated with the `WebApp`. Note that this value is _not_ the [`apiKeyId`](../projects.webApps#WebApp.FIELDS.api_key_id) (the UID) of the API key associated with the `WebApp`.",
                                      :type "string"},
                             :appId {:description "Immutable. The globally unique, Firebase-assigned identifier for the `WebApp`.",
                                     :type "string"},
                             :projectId {:description "Immutable. A user-assigned unique identifier for the `FirebaseProject`.",
                                         :type "string"},
                             :storageBucket {:description "**DEPRECATED.** _Instead, find the default Cloud Storage for Firebase bucket using the [list endpoint](https://firebase.google.com/docs/reference/rest/storage/rest/v1beta/projects.buckets/list) within the Cloud Storage for Firebase REST API. Note that the default bucket for the Project might not yet be provisioned, so the return might not contain a default bucket._ The default Cloud Storage for Firebase storage bucket name.",
                                             :deprecated true,
                                             :type "string"},
                             :messagingSenderId {:description "The sender ID for use with Firebase Cloud Messaging.",
                                                 :type "string"},
                             :measurementId {:description "The unique Google-assigned identifier of the Google Analytics web stream associated with the `WebApp`. Firebase SDKs use this ID to interact with Google Analytics APIs. This field is only present if the `WebApp` is linked to a web stream in a Google Analytics App + Web property. Learn more about this ID and Google Analytics web streams in the [Analytics documentation](https://support.google.com/analytics/answer/9304153). To generate a `measurementId` and link the `WebApp` with a Google Analytics web stream, call [`AddGoogleAnalytics`](../../v1beta1/projects/addGoogleAnalytics). For apps using the Firebase JavaScript SDK v7.20.0 and later, Firebase dynamically fetches the `measurementId` when your app initializes Analytics. Having this ID in your config object is optional, but it does serve as a fallback in the rare case that the dynamic fetch fails.",
                                             :type "string"}}},
 :SearchFirebaseAppsResponse {:id "SearchFirebaseAppsResponse",
                              :type "object",
                              :properties {:apps {:description "One page of results from a call to `SearchFirebaseApps`.",
                                                  :type "array",
                                                  :items {:$ref "FirebaseAppInfo"}},
                                           :nextPageToken {:description "If the result list is too large to fit in a single response, then a token is returned. This token can be used in a subsequent calls to `SearchFirebaseApps` to find the next group of Apps. Page tokens are short-lived and should not be persisted.",
                                                           :type "string"}}},
 :ListAvailableLocationsResponse {:id "ListAvailableLocationsResponse",
                                  :deprecated true,
                                  :type "object",
                                  :properties {:locations {:description "One page of results from a call to `ListAvailableLocations`.",
                                                           :type "array",
                                                           :items {:$ref "Location"}},
                                               :nextPageToken {:description "If the result list is too large to fit in a single response, then a token is returned. If the string is empty, then this response is the last page of results and all available locations have been listed. This token can be used in a subsequent call to `ListAvailableLocations` to find more locations. Page tokens are short-lived and should not be persisted.",
                                                               :type "string"}}},
 :AnalyticsProperty {:id "AnalyticsProperty",
                     :description "Details of a Google Analytics property",
                     :type "object",
                     :properties {:id {:description "The globally unique, Google-assigned identifier of the Google Analytics property associated with the specified `FirebaseProject`. If you called [`AddGoogleAnalytics`](../../v1beta1/projects/addGoogleAnalytics) to link the `FirebaseProject` with a Google Analytics account, the value in this `id` field is the same as the ID of the property either specified or provisioned with that call to `AddGoogleAnalytics`.",
                                       :type "string"},
                                  :displayName {:description "The display name of the Google Analytics property associated with the specified `FirebaseProject`.",
                                                :type "string"},
                                  :analyticsAccountId {:description "Output only. The ID of the [Google Analytics account](https://www.google.com/analytics/) for the Google Analytics property associated with the specified FirebaseProject.",
                                                       :readOnly true,
                                                       :type "string"}}},
 :ListIosAppsResponse {:id "ListIosAppsResponse",
                       :type "object",
                       :properties {:apps {:description "List of each `IosApp` associated with the specified `FirebaseProject`.",
                                           :type "array",
                                           :items {:$ref "IosApp"}},
                                    :nextPageToken {:description "If the result list is too large to fit in a single response, then a token is returned. If the string is empty, then this response is the last page of results. This token can be used in a subsequent call to `ListIosApps` to find the next group of Apps. Page tokens are short-lived and should not be persisted.",
                                                    :type "string"}}},
 :UndeleteWebAppRequest {:id "UndeleteWebAppRequest",
                         :type "object",
                         :properties {:validateOnly {:description "If set to true, the request is only validated. The App will _not_ be undeleted.",
                                                     :type "boolean"},
                                      :etag {:description "Checksum provided in the WebApp resource. If provided, this checksum ensures that the client has an up-to-date value before proceeding.",
                                             :type "string"}}},
 :AndroidApp {:id "AndroidApp",
              :description "Details of a Firebase App for Android.",
              :type "object",
              :properties {:packageName {:description "Immutable. The canonical package name of the Android app as would appear in the Google Play Developer Console.",
                                         :type "string"},
                           :apiKeyId {:description "The globally unique, Google-assigned identifier (UID) for the Firebase API key associated with the `AndroidApp`. Be aware that this value is the UID of the API key, _not_ the [`keyString`](https://cloud.google.com/api-keys/docs/reference/rest/v2/projects.locations.keys#Key.FIELDS.key_string) of the API key. The `keyString` is the value that can be found in the App's [configuration artifact](../../rest/v1beta1/projects.androidApps/getConfig). If `api_key_id` is not set in requests to [`androidApps.Create`](../../rest/v1beta1/projects.androidApps/create), then Firebase automatically associates an `api_key_id` with the `AndroidApp`. This auto-associated key may be an existing valid key or, if no valid key exists, a new one will be provisioned. In patch requests, `api_key_id` cannot be set to an empty value, and the new UID must have no restrictions or only have restrictions that are valid for the associated `AndroidApp`. We recommend using the [Google Cloud Console](https://console.cloud.google.com/apis/credentials) to manage API keys.",
                                      :type "string"},
                           :displayName {:description "The user-assigned display name for the `AndroidApp`.",
                                         :type "string"},
                           :name {:description "The resource name of the AndroidApp, in the format: projects/ PROJECT_IDENTIFIER/androidApps/APP_ID * PROJECT_IDENTIFIER: the parent Project's [`ProjectNumber`](../projects#FirebaseProject.FIELDS.project_number) ***(recommended)*** or its [`ProjectId`](../projects#FirebaseProject.FIELDS.project_id). Learn more about using project identifiers in Google's [AIP 2510 standard](https://google.aip.dev/cloud/2510). Note that the value for PROJECT_IDENTIFIER in any response body will be the `ProjectId`. * APP_ID: the globally unique, Firebase-assigned identifier for the App (see [`appId`](../projects.androidApps#AndroidApp.FIELDS.app_id)).",
                                  :type "string"},
                           :etag {:description "This checksum is computed by the server based on the value of other fields, and it may be sent with update requests to ensure the client has an up-to-date value before proceeding. Learn more about `etag` in Google's [AIP-154 standard](https://google.aip.dev/154#declarative-friendly-resources). This etag is strongly validated.",
                                  :type "string"},
                           :state {:description "Output only. The lifecycle state of the App.",
                                   :readOnly true,
                                   :type "string",
                                   :enumDescriptions ["Unspecified state."
                                                      "The App is active."
                                                      "The App has been soft-deleted. After an App has been in the `DELETED` state for more than 30 days, it is considered expired and will be permanently deleted. Up until this time, you can restore the App by calling `Undelete` ([Android](projects.androidApps/undelete) | [iOS](projects.iosApps/undelete) | [web](projects.webApps/undelete))."],
                                   :enum ["STATE_UNSPECIFIED"
                                          "ACTIVE"
                                          "DELETED"]},
                           :sha256Hashes {:description "The SHA256 certificate hashes for the AndroidApp.",
                                          :type "array",
                                          :items {:type "string"}},
                           :sha1Hashes {:description "The SHA1 certificate hashes for the AndroidApp.",
                                        :type "array",
                                        :items {:type "string"}},
                           :appId {:description "Output only. Immutable. The globally unique, Firebase-assigned identifier for the `AndroidApp`. This identifier should be treated as an opaque token, as the data format is not specified.",
                                   :readOnly true,
                                   :type "string"},
                           :projectId {:description "Output only. Immutable. A user-assigned unique identifier of the parent FirebaseProject for the `AndroidApp`.",
                                       :readOnly true,
                                       :type "string"},
                           :expireTime {:description "Output only. Timestamp of when the App will be considered expired and cannot be undeleted. This value is only provided if the App is in the `DELETED` state.",
                                        :readOnly true,
                                        :type "string",
                                        :format "google-datetime"}}},
 :StreamMapping {:id "StreamMapping",
                 :description "A mapping of a Firebase App to a Google Analytics data stream",
                 :type "object",
                 :properties {:app {:description "The resource name of the Firebase App associated with the Google Analytics data stream, in the format: projects/PROJECT_IDENTIFIER/androidApps/APP_ID or projects/PROJECT_IDENTIFIER/iosApps/APP_ID or projects/PROJECT_IDENTIFIER /webApps/APP_ID Refer to the `FirebaseProject` [`name`](../projects#FirebaseProject.FIELDS.name) field for details about PROJECT_IDENTIFIER values.",
                                    :type "string"},
                              :streamId {:description "The unique Google-assigned identifier of the Google Analytics data stream associated with the Firebase App. Learn more about Google Analytics data streams in the [Analytics documentation](https://support.google.com/analytics/answer/9303323).",
                                         :type "string",
                                         :format "int64"},
                              :measurementId {:description "Applicable for Firebase Web Apps only. The unique Google-assigned identifier of the Google Analytics web stream associated with the Firebase Web App. Firebase SDKs use this ID to interact with Google Analytics APIs. Learn more about this ID and Google Analytics web streams in the [Analytics documentation](https://support.google.com/analytics/answer/9304153).",
                                              :type "string"}}},
 :AndroidAppConfig {:id "AndroidAppConfig",
                    :description "Configuration metadata of a single Firebase App for Android.",
                    :type "object",
                    :properties {:configFilename {:description "The filename that the configuration artifact for the `AndroidApp` is typically saved as. For example: `google-services.json`",
                                                  :type "string"},
                                 :configFileContents {:description "The contents of the JSON configuration file.",
                                                      :type "string",
                                                      :format "byte"}}},
 :OperationMetadata {:id "OperationMetadata",
                     :description "Describes the progress of an LRO. It is included in the `metadata` field of the `Operation`.",
                     :type "object",
                     :properties {}},
 :FirebaseProject {:id "FirebaseProject",
                   :description "A `FirebaseProject` is the top-level Firebase entity. It is the container for Firebase Apps, Firebase Hosting sites, storage systems (Firebase Realtime Database, Cloud Firestore, Cloud Storage buckets), and other Firebase and Google Cloud Platform (GCP) resources. You create a `FirebaseProject` by calling AddFirebase and specifying an *existing* [GCP `Project`](https://cloud.google.com/resource-manager/reference/rest/v1/projects). This adds Firebase resources to the existing GCP `Project`. Since a FirebaseProject is actually also a GCP `Project`, a `FirebaseProject` has the same underlying GCP identifiers (`projectNumber` and `projectId`). This allows for easy interop with Google APIs.",
                   :type "object",
                   :properties {:name {:description "The resource name of the Project, in the format: projects/PROJECT_IDENTIFIER PROJECT_IDENTIFIER: the Project's [`ProjectNumber`](../projects#FirebaseProject.FIELDS.project_number) ***(recommended)*** or its [`ProjectId`](../projects#FirebaseProject.FIELDS.project_id). Learn more about using project identifiers in Google's [AIP 2510 standard](https://google.aip.dev/cloud/2510). Note that the value for PROJECT_IDENTIFIER in any response body will be the `ProjectId`.",
                                       :type "string"},
                                :projectId {:description "Output only. Immutable. A user-assigned unique identifier for the Project. This identifier may appear in URLs or names for some Firebase resources associated with the Project, but it should generally be treated as a convenience alias to reference the Project.",
                                            :readOnly true,
                                            :type "string"},
                                :projectNumber {:description "Output only. Immutable. The globally unique, Google-assigned canonical identifier for the Project. Use this identifier when configuring integrations and/or making API calls to Firebase or third-party services.",
                                                :readOnly true,
                                                :type "string",
                                                :format "int64"},
                                :displayName {:description "The user-assigned display name of the Project.",
                                              :type "string"},
                                :resources {:description "Output only. **DEPRECATED.** _Auto-provisioning of these resources is changing, so this object no longer reliably provides information about the Project. Instead, retrieve information about each resource directly from its resource-specific API._ The default Firebase resources associated with the Project.",
                                            :readOnly true,
                                            :deprecated true,
                                            :$ref "DefaultResources"},
                                :state {:description "Output only. The lifecycle state of the Project.",
                                        :readOnly true,
                                        :type "string",
                                        :enumDescriptions ["Unspecified state."
                                                           "The Project is active."
                                                           "The Project has been soft-deleted."],
                                        :enum ["STATE_UNSPECIFIED"
                                               "ACTIVE"
                                               "DELETED"]},
                                :annotations {:description "A set of user-defined annotations for the FirebaseProject. Learn more about annotations in Google's [AIP-128 standard](https://google.aip.dev/128#annotations). These annotations are intended solely for developers and client-side tools. Firebase services will not mutate this annotations set.",
                                              :type "object",
                                              :additionalProperties {:type "string"}},
                                :etag {:description "This checksum is computed by the server based on the value of other fields, and it may be sent with update requests to ensure the client has an up-to-date value before proceeding. Learn more about `etag` in Google's [AIP-154 standard](https://google.aip.dev/154#declarative-friendly-resources). This etag is strongly validated.",
                                       :type "string"}}},
 :Location {:id "Location",
            :deprecated true,
            :description "**DEPRECATED.** _This Location is no longer used to determine Firebase resource locations. Instead, consult product documentation to determine valid locations for each resource used in your Project._ A GCP resource location that can be selected for a FirebaseProject.",
            :type "object",
            :properties {:locationId {:description "The ID of the GCP resource location. It will be one of the available [GCP resource locations](https://firebase.google.com/docs/projects/locations#types).",
                                      :type "string"},
                         :type {:description "Indicates whether the GCP resource location is a [regional or multi-regional location](https://firebase.google.com/docs/projects/locations#types) for data replication.",
                                :type "string",
                                :enumDescriptions ["Used internally for distinguishing unset values and is not intended for external use."
                                                   "The location is a regional location. Data in a regional location is replicated in multiple zones within a region."
                                                   "The location is a multi-regional location. Data in a multi-region location is replicated in multiple regions. Within each region, data is replicated in multiple zones."],
                                :enum ["LOCATION_TYPE_UNSPECIFIED"
                                       "REGIONAL"
                                       "MULTI_REGIONAL"]},
                         :features {:description "Products and services that are available in the GCP resource location.",
                                    :type "array",
                                    :items {:type "string",
                                            :enumDescriptions ["Used internally for distinguishing unset values and is not intended for external use."
                                                               "This location supports Cloud Firestore database instances. App Engine is available in this location, so it can be a Project's [default GCP resource location](//firebase.google.com/docs/projects/locations#default-cloud-location)."
                                                               "This location supports default Cloud Storage buckets. App Engine is available in this location, so it can be a Project's [default GCP resource location](//firebase.google.com/docs/projects/locations#default-cloud-location)."
                                                               "Cloud Functions for Firebase is available in this location."],
                                            :enum ["LOCATION_FEATURE_UNSPECIFIED"
                                                   "FIRESTORE"
                                                   "DEFAULT_STORAGE"
                                                   "FUNCTIONS"]}}}},
 :ListAndroidAppsResponse {:id "ListAndroidAppsResponse",
                           :type "object",
                           :properties {:apps {:description "List of each `AndroidApp` associated with the specified `FirebaseProject`.",
                                               :type "array",
                                               :items {:$ref "AndroidApp"}},
                                        :nextPageToken {:description "If the result list is too large to fit in a single response, then a token is returned. If the string is empty, then this response is the last page of results. This token can be used in a subsequent call to `ListAndroidApps` to find the next group of Apps. Page tokens are short-lived and should not be persisted.",
                                                        :type "string"}}},
 :ListFirebaseProjectsResponse {:id "ListFirebaseProjectsResponse",
                                :type "object",
                                :properties {:results {:description "One page of the list of Projects that are accessible to the caller.",
                                                       :type "array",
                                                       :items {:$ref "FirebaseProject"}},
                                             :nextPageToken {:description "If the result list is too large to fit in a single response, then a token is returned. If the string is empty, then this response is the last page of results. This token can be used in a subsequent calls to `ListFirebaseProjects` to find the next group of Projects. Page tokens are short-lived and should not be persisted.",
                                                             :type "string"}}},
 :AdminSdkConfig {:id "AdminSdkConfig",
                  :type "object",
                  :properties {:projectId {:description "Immutable. A user-assigned unique identifier for the `FirebaseProject`. This identifier may appear in URLs or names for some Firebase resources associated with the Project, but it should generally be treated as a convenience alias to reference the Project.",
                                           :type "string"},
                               :databaseURL {:description "**DEPRECATED.** _Instead, find the default Firebase Realtime Database instance name using the [list endpoint](https://firebase.google.com/docs/reference/rest/database/database-management/rest/v1beta/projects.locations.instances/list) within the Firebase Realtime Database REST API. Note that the default instance for the Project might not yet be provisioned, so the return might not contain a default instance._ The default Firebase Realtime Database URL.",
                                             :deprecated true,
                                             :type "string"},
                               :storageBucket {:description "**DEPRECATED.** _Instead, find the default Cloud Storage for Firebase bucket using the [list endpoint](https://firebase.google.com/docs/reference/rest/storage/rest/v1beta/projects.buckets/list) within the Cloud Storage for Firebase REST API. Note that the default bucket for the Project might not yet be provisioned, so the return might not contain a default bucket._ The default Cloud Storage for Firebase storage bucket name.",
                                               :deprecated true,
                                               :type "string"},
                               :locationId {:description "**DEPRECATED.** _Instead, use product-specific REST APIs to find the location of resources._ The ID of the Project's default GCP resource location. The location is one of the available [GCP resource locations](https://firebase.google.com/docs/projects/locations). This field is omitted if the default GCP resource location has not been finalized yet. To set a Project's default GCP resource location, call [`FinalizeDefaultLocation`](../projects.defaultLocation/finalize) after you add Firebase resources to the Project.",
                                            :deprecated true,
                                            :type "string"}}},
 :ShaCertificate {:id "ShaCertificate",
                  :description "A SHA-1 or SHA-256 certificate associated with the AndroidApp.",
                  :type "object",
                  :properties {:name {:description "The resource name of the ShaCertificate for the AndroidApp, in the format: projects/PROJECT_IDENTIFIER/androidApps/APP_ID/sha/SHA_HASH * PROJECT_IDENTIFIER: the parent Project's [`ProjectNumber`](../projects#FirebaseProject.FIELDS.project_number) ***(recommended)*** or its [`ProjectId`](../projects#FirebaseProject.FIELDS.project_id). Learn more about using project identifiers in Google's [AIP 2510 standard](https://google.aip.dev/cloud/2510). Note that the value for PROJECT_IDENTIFIER in any response body will be the `ProjectId`. * APP_ID: the globally unique, Firebase-assigned identifier for the App (see [`appId`](../projects.androidApps#AndroidApp.FIELDS.app_id)). * SHA_HASH: the certificate hash for the App (see [`shaHash`](../projects.androidApps.sha#ShaCertificate.FIELDS.sha_hash)).",
                                      :type "string"},
                               :shaHash {:description "The certificate hash for the `AndroidApp`.",
                                         :type "string"},
                               :certType {:description "The type of SHA certificate encoded in the hash.",
                                          :type "string",
                                          :enumDescriptions ["Unknown state. This is only used for distinguishing unset values."
                                                             "Certificate is a SHA-1 type certificate."
                                                             "Certificate is a SHA-256 type certificate."],
                                          :enum ["SHA_CERTIFICATE_TYPE_UNSPECIFIED"
                                                 "SHA_1"
                                                 "SHA_256"]}}},
 :ProductMetadata {:id "ProductMetadata",
                   :description "Metadata about a long-running Product operation.",
                   :type "object",
                   :properties {:warningMessages {:description "List of warnings related to the associated operation.",
                                                  :type "array",
                                                  :items {:type "string"}}}},
 :Status {:id "Status",
          :description "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
          :type "object",
          :properties {:code {:description "The status code, which should be an enum value of google.rpc.Code.",
                              :type "integer",
                              :format "int32"},
                       :message {:description "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
                                 :type "string"},
                       :details {:description "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                                 :type "array",
                                 :items {:type "object",
                                         :additionalProperties {:type "any",
                                                                :description "Properties of the object. Contains field @type with type URL."}}}}}}
