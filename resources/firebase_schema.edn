{:AddFirebaseRequest {:description "All fields are required.",
                      :type "object",
                      :properties {:regionCode {:description "Deprecated. Instead, to link your Project with a Google Analytics account,\ncall [`AddGoogleAnalytics`](../../v1beta1/projects/addGoogleAnalytics)\nafter you add Firebase resources to your Project.\n<br>\n<br>The region code (CLDR) that the account will use for Firebase Analytics\ndata.\n<br>For example: US, GB, or DE\n<br>\n<br>In Java, use `com.google.i18n.identifiers.RegionCode`.",
                                                :type "string"},
                                   :timeZone {:description "Deprecated. Instead, to link your Project with a Google Analytics account,\ncall [`AddGoogleAnalytics`](../../v1beta1/projects/addGoogleAnalytics)\nafter you add Firebase resources to your Project.\n<br>\n<br>The time zone that the account will use for Firebase Analytics data.\n<br>For example: America/Los_Angeles or Africa/Abidjan",
                                              :type "string"},
                                   :locationId {:description "Deprecated. Instead, to set your project's default GCP resource location,\ncall [`FinalizeDefaultLocation`](../projects.defaultLocation/finalize)\nafter you add Firebase resources to your project.\n<br>\n<br>The ID of the project's default GCP resource location. The location\nmust be one of the available\n[GCP resource\nlocations](https://firebase.google.com/docs/projects/locations).",
                                                :type "string"}},
                      :id "AddFirebaseRequest"},
 :DefaultResources {:description "The default resources associated with a `FirebaseProject`.",
                    :type "object",
                    :properties {:hostingSite {:description "The default Firebase Hosting site name, in the format:\n<br><code><var>projectId</var></code>\n<br>Though rare, your `projectId` might already be used as the name for an\nexisting Hosting site in another project (learn more about creating\nnon-default,\n[additional sites](https://firebase.google.com/docs/hosting/multisites)).\nIn these cases, your `projectId` is appended with a hyphen then five\nalphanumeric characters to create your default Hosting site name. For\nexample, if your `projectId` is `myproject123`, your default Hosting site\nname might be:\n<br><code>myproject123-a5c16</code>",
                                               :type "string"},
                                 :storageBucket {:description "The default Cloud Storage for Firebase storage bucket, in the format:\n<br><code><var>projectId</var>.appspot.com</code>",
                                                 :type "string"},
                                 :realtimeDatabaseInstance {:description "The default Firebase Realtime Database instance name, in the format:\n<br><code><var>projectId</var></code>\n<br>Though rare, your `projectId` might already be used as the name for an\nexisting Realtime Database instance in another project (learn more about\n[database\nsharding](https://firebase.google.com/docs/database/usage/sharding)). In\nthese cases, your `projectId` is appended with a hyphen then five\nalphanumeric characters to create your default Realtime Database instance\nname. For example, if your `projectId` is `myproject123`, your default\ndatabase instance name might be:\n<br><code>myproject123-a5c16</code>",
                                                            :type "string"},
                                 :locationId {:description "The ID of the project's default GCP resource location. The location is one\nof the available\n[GCP resource\nlocations](https://firebase.google.com/docs/projects/locations). <br>\n<br>This field is omitted if the default GCP resource location has not been\nfinalized yet. To set your project's default GCP resource location,\ncall [`FinalizeDefaultLocation`](../projects.defaultLocation/finalize)\nafter you add Firebase services to your project.",
                                              :type "string"}},
                    :id "DefaultResources"},
 :TypedMessage {:description "Message that groups a protocol type_id (as defined by MessageSet),\nwith an encoded message of that type.  Its use is similar to\nMessageSet, except it represents a single (type, encoded message)\ninstead of a set.\n\nTo fill for known protocol type:\n  MyProtocolMsg proto;\n  TypedMessage typed_msg;\n  typed_msg.set_type_id(MyProtocolMsg::MESSAGE_TYPE_ID);\n  proto.AppendToCord(typed_msg.mutable_message());\n\nTo fill for unknown protocol type:\n  ProtocolMessage proto;\n  TypedMessage typed_msg;\n  typed_msg.set_type_id(proto.GetMapper()->type_id());\n  proto.AppendToCord(typed_msg.mutable_message());",
                :type "object",
                :properties {:message {:description "Message bytes.",
                                       :format "byte",
                                       :type "string"},
                             :typeId {:description "Identifier for the type.",
                                      :format "int32",
                                      :type "integer"}},
                :id "TypedMessage"},
 :ListShaCertificatesResponse {:type "object",
                               :properties {:certificates {:description "The list of SHA certificates associated with the App.",
                                                           :type "array",
                                                           :items {:$ref "ShaCertificate"}}},
                               :id "ListShaCertificatesResponse"},
 :FinalizeDefaultLocationRequest {:type "object",
                                  :properties {:locationId {:type "string",
                                                            :description "The ID of the default GCP resource location for the Project. The location\nmust be one of the available\n[GCP resource\nlocations](https://firebase.google.com/docs/projects/locations)."}},
                                  :id "FinalizeDefaultLocationRequest"},
 :Operation {:properties {:done {:description "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
                                 :type "boolean"},
                          :response {:additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                            :type "any"},
                                     :description "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
                                     :type "object"},
                          :name {:description "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should be a resource name ending with `operations/{unique_id}`.",
                                 :type "string"},
                          :error {:$ref "Status",
                                  :description "The error result of the operation in case of failure or cancellation."},
                          :metadata {:description "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
                                     :type "object",
                                     :additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                            :type "any"}}},
             :id "Operation",
             :description "This resource represents a long-running operation that is the result of a\nnetwork API call.",
             :type "object"},
 :AddGoogleAnalyticsRequest {:type "object",
                             :properties {:analyticsPropertyId {:description "The ID for the existing Google Analytics property that you want to\nassociate with your `FirebaseProject`.",
                                                                :type "string"},
                                          :analyticsAccountId {:description "The ID for the existing\n[Google Analytics account](http://www.google.com/analytics/) that you\nwant to link with your `FirebaseProject`.\n<br>\n<br>Specifying this field will provision a new Google Analytics\nproperty in your Google Analytics account and associate the new property\nwith your `FirebaseProject`.",
                                                               :type "string"}},
                             :id "AddGoogleAnalyticsRequest"},
 :WebApp {:properties {:name {:description "The fully qualified resource name of the App, for example:\n<br><code>projects/<var>projectId</var>/webApps/<var>appId</var></code>",
                              :type "string"},
                       :displayName {:description "The user-assigned display name of the App.",
                                     :type "string"},
                       :appId {:description "Immutable. The globally unique, Firebase-assigned identifier of the App.\n<br>\n<br>This identifier should be treated as an opaque token, as the data\nformat is not specified.",
                               :type "string"},
                       :projectId {:description "The globally unique, user-assigned ID of the parent Project for the App.",
                                   :type "string"},
                       :appUrls {:description "The fully qualified URLs where the App is hosted.",
                                 :type "array",
                                 :items {:type "string"}}},
          :id "WebApp",
          :description "Details of a Firebase App for the web.",
          :type "object"},
 :StatusProto {:description "Wire-format for a Status object",
               :type "object",
               :properties {:code {:description "Numeric code drawn from the space specified below. Often, this is the\ncanonical error space, and code is drawn from google3/util/task/codes.proto",
                                   :format "int32",
                                   :type "integer"},
                            :message {:type "string",
                                      :description "Detail message"},
                            :messageSet {:description "message_set associates an arbitrary proto message with the status.",
                                         :$ref "MessageSet"},
                            :canonicalCode {:type "integer",
                                            :description "The canonical error code (see codes.proto) that most closely\ncorresponds to this status. May be missing.",
                                            :format "int32"},
                            :payload {:$ref "TypedMessage",
                                      :description "DEPRECATED.\n\nThis field was deprecated in 2011 with cl/20297133.  Java support\nfor the field was moved to a proto1 backward compatibility class\nin April 2017 with cl/142615857 and cl/154123203.  There was\nnever support for this field in Go; if set Go will ignore it.\nC++ stopped setting StatusProto::payload in October 2015 with cl/106347055,\nand stopped reading the field in October 2017 with cl/173324114.\n\nIn general, newly written code should use only \"message_set\". If you need\nto maintain backward compatibility with code written before 3/25/2011, do\nthe following:\n\n- During the transition period, either (1) set both \"payload\" and\n  \"message_set\", or (2) write the consumer of StatusProto so that it can\n  forge a MessageSet object from \"payload\" if \"message_set\" is missing.\n  The C++ util::Status implementation does (2).\n\n- Once all the consumers are converted to accept \"message_set\", then\n  remove the use of \"payload\" on the producer side."},
                            :space {:description "The following are usually only present when code != 0\nSpace to which this status belongs",
                                    :type "string"}},
               :id "StatusProto"},
 :IosApp {:type "object",
          :properties {:displayName {:description "The user-assigned display name of the App.",
                                     :type "string"},
                       :bundleId {:type "string",
                                  :description "The canonical bundle ID of the iOS App as it would appear in the iOS\nAppStore."},
                       :appStoreId {:description "The automatically generated Apple ID assigned to the App by Apple in the\niOS App Store.",
                                    :type "string"},
                       :name {:type "string",
                              :description "The fully qualified resource name of the App, in the format:\n<br><code>projects/<var>projectId</var>/iosApps/<var>appId</var></code>"},
                       :projectId {:description "The globally unique, user-assigned ID of the parent Project for the App.",
                                   :type "string"},
                       :appId {:type "string",
                               :description "Immutable. The globally unique, Firebase-assigned identifier of the App.\n<br>\n<br>This identifier should be treated as an opaque token, as the data\nformat is not specified."}},
          :id "IosApp",
          :description "Details of a Firebase App for iOS."},
 :FirebaseAppInfo {:description "A high-level summary of an App.",
                   :type "object",
                   :properties {:name {:description "The fully qualified resource name of the Firebase App, in the format:\n<br><code>projects/<var>projectId</var>/iosApps/<var>appId</var></code>\nor <br><code>projects/<var>projectId</var>/androidApps/<var>appId</var>\n</code>",
                                       :type "string"},
                                :displayName {:description "The user-assigned display name of the Firebase App.",
                                              :type "string"},
                                :appId {:description "Immutable. The globally unique, Firebase-assigned identifier of the App.\n<br>\n<br>This identifier should be treated as an opaque token, as the data\nformat is not specified.",
                                        :type "string"},
                                :platform {:description "The platform of the Firebase App.",
                                           :type "string",
                                           :enumDescriptions ["Unknown state. This is only used for distinguishing unset values."
                                                              "The Firebase App is associated with iOS."
                                                              "The Firebase App is associated with Android."
                                                              "The Firebase App is associated with web."],
                                           :enum ["PLATFORM_UNSPECIFIED"
                                                  "IOS"
                                                  "ANDROID"
                                                  "WEB"]}},
                   :id "FirebaseAppInfo"},
 :ListAvailableProjectsResponse {:id "ListAvailableProjectsResponse",
                                 :type "object",
                                 :properties {:nextPageToken {:description "If the result list is too large to fit in a single response, then a token\nis returned. If the string is empty, then this response is the last page of\nresults.\n<br>\n<br>This token can be used in a subsequent calls to `ListAvailableProjects`\nto find the next group of GCP `Projects`.\n<br>\n<br>Page tokens are short-lived and should not be persisted.",
                                                              :type "string"},
                                              :projectInfo {:description "The list of GCP `Projects` which can have Firebase resources added to them.",
                                                            :type "array",
                                                            :items {:$ref "ProjectInfo"}}}},
 :ListWebAppsResponse {:type "object",
                       :properties {:apps {:description "List of each WebApp that is in the parent Firebase Project.",
                                           :type "array",
                                           :items {:$ref "WebApp"}},
                                    :nextPageToken {:description "If the result list is too large to fit in a single response, then a token\nis returned. If the string is empty, then this response is the last page of\nresults.\n<br>\n<br>This token can be used in a subsequent call to `ListWebApps` to find\nthe next group of Apps.\n<br>\n<br>Page tokens are short-lived and should not be persisted.",
                                                    :type "string"}},
                       :id "ListWebAppsResponse"},
 :MessageSet {:properties {},
              :id "MessageSet",
              :description "This is proto2's version of MessageSet.",
              :type "object"},
 :RemoveAnalyticsRequest {:type "object",
                          :properties {:analyticsPropertyId {:description "Optional. The ID of the Google Analytics property associated with the\nspecified `FirebaseProject`.\n<ul>\n<li>If not set, then the Google Analytics property that is currently\nassociated with the specified `FirebaseProject` is removed.</li>\n<li>If set, and the specified `FirebaseProject` is currently associated\nwith a <em>different</em> Google Analytics property, then the response is a\n`412 Precondition Failed` error.</li>\n</ul>",
                                                             :type "string"}},
                          :id "RemoveAnalyticsRequest"},
 :IosAppConfig {:description "Configuration metadata of a single Firebase App for iOS.",
                :type "object",
                :properties {:configFilename {:description "The filename that the configuration artifact is typically saved as.\n<br>For example: `GoogleService-Info.plist`",
                                              :type "string"},
                             :configFileContents {:description "The content of the XML configuration file.",
                                                  :format "byte",
                                                  :type "string"}},
                :id "IosAppConfig"},
 :ProjectInfo {:description "A reference to a Google Cloud Platform (GCP) `Project`.",
               :type "object",
               :properties {:project {:description "The resource name of the GCP `Project` to which Firebase resources can be\nadded, in the format:\n<br><code>projects/<var>projectId</var></code>",
                                      :type "string"},
                            :displayName {:description "The user-assigned display name of the GCP `Project`, for example:\n<code>My App</code>",
                                          :type "string"},
                            :locationId {:type "string",
                                         :description "The ID of the project's default GCP resource location. The location is one\nof the available\n[GCP resource\nlocations](https://firebase.google.com/docs/projects/locations). <br> <br>\nNot all projects will have this field populated. If it is not populated, it\nmeans that the project does not yet have a default GCP resource location.\nTo set your project's default GCP resource location, call\n[`FinalizeDefaultLocation`](../projects.defaultLocation/finalize) after you\nadd Firebase resources to your project."}},
               :id "ProjectInfo"},
 :Empty {:description "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
         :type "object",
         :properties {},
         :id "Empty"},
 :AnalyticsDetails {:type "object",
                    :properties {:analyticsProperty {:description "The Analytics Property object associated with the specified\n`FirebaseProject`.\n<br>\n<br>This object contains the details of the Google Analytics property\nassociated with the specified `FirebaseProject`.",
                                                     :$ref "AnalyticsProperty"},
                                 :streamMappings {:type "array",
                                                  :items {:$ref "StreamMapping"},
                                                  :description "For Android Apps and iOS Apps: A map of `app` to `streamId` for each\nFirebase App in the specified `FirebaseProject`. Each `app` and\n`streamId` appears only once.<br>\n<br>\nFor Web Apps: A map of `app` to `streamId` and `measurementId` for each\nFirebase App in the specified `FirebaseProject`. Each `app`, `streamId`,\nand `measurementId` appears only once."}},
                    :id "AnalyticsDetails"},
 :WebAppConfig {:description "Configuration metadata of a single Firebase App for the web.",
                :type "object",
                :properties {:locationId {:description "The ID of the project's default GCP resource location. The location is one\nof the available\n[GCP resource\nlocations](https://firebase.google.com/docs/projects/locations). <br>\n<br>This field is omitted if the default GCP resource location has not been\nfinalized yet. To set your project's default GCP resource location,\ncall [`FinalizeDefaultLocation`](../projects.defaultLocation/finalize)\nafter you add Firebase services to your project.",
                                          :type "string"},
                             :authDomain {:description "The domain Firebase Auth configures for OAuth redirects, in the format:\n<br><code><var>projectId</var>.firebaseapp.com</code>",
                                          :type "string"},
                             :databaseURL {:description "The default Firebase Realtime Database URL.",
                                           :type "string"},
                             :apiKey {:description "The API key associated with the web App.",
                                      :type "string"},
                             :appId {:description "Immutable. The globally unique, Firebase-assigned identifier of the App.",
                                     :type "string"},
                             :projectId {:description "Immutable. The globally unique, user-assigned project ID of the parent\nProject for the App.",
                                         :type "string"},
                             :storageBucket {:description "The default Cloud Storage for Firebase storage bucket name.",
                                             :type "string"},
                             :messagingSenderId {:type "string",
                                                 :description "The sender ID for use with Firebase Cloud Messaging."},
                             :measurementId {:description "The unique Google-assigned identifier of the Google Analytics web stream\nassociated with the Firebase Web App. Firebase SDKs use this ID to interact\nwith Google Analytics APIs.\n<br>\n<br>This field is only present if the App is linked to a web stream in a\nGoogle Analytics App + Web property. Learn more about this ID and Google\nAnalytics web streams in the [Analytics\ndocumentation](https://support.google.com/analytics/topic/9303475).\n<br>\n<br>To generate a `measurementId` and link the Web App with a Google\nAnalytics web stream, call\n[`AddGoogleAnalytics`](../../v1beta1/projects/addGoogleAnalytics).",
                                             :type "string"}},
                :id "WebAppConfig"},
 :SearchFirebaseAppsResponse {:type "object",
                              :properties {:apps {:description "One page of results from a call to `SearchFirebaseApps`.",
                                                  :type "array",
                                                  :items {:$ref "FirebaseAppInfo"}},
                                           :nextPageToken {:description "If the result list is too large to fit in a single response, then a token\nis returned.\n<br>\n<br>This token can be used in a subsequent calls to `SearchFirebaseApps`\nto find the next group of Apps.\n<br>If the string is empty, then this response is the last page of results.\n<br>Page tokens are short-lived and should not be persisted.",
                                                           :type "string"}},
                              :id "SearchFirebaseAppsResponse"},
 :ListAvailableLocationsResponse {:type "object",
                                  :properties {:nextPageToken {:description "If the result list is too large to fit in a single response, then a token\nis returned. If the string is empty, then this response is the last page of\nresults and all available locations have been listed.\n<br>\n<br>This token can be used in a subsequent call to\n`ListAvailableLocations` to find more locations.\n<br>\n<br>Page tokens are short-lived and should not be persisted.",
                                                               :type "string"},
                                               :locations {:description "One page of results from a call to `ListAvailableLocations`.",
                                                           :type "array",
                                                           :items {:$ref "Location"}}},
                                  :id "ListAvailableLocationsResponse"},
 :AnalyticsProperty {:description "Details of a Google Analytics property",
                     :type "object",
                     :properties {:displayName {:description "The display name of the Google Analytics property associated with the\nspecified `FirebaseProject`.",
                                                :type "string"},
                                  :id {:description "The globally unique, Google-assigned identifier of the Google Analytics\nproperty associated with the specified `FirebaseProject`.\n<br>\n<br>If you called\n[`AddGoogleAnalytics`](../../v1beta1/projects/addGoogleAnalytics) to link\nyour `FirebaseProject` with a Google Analytics account, the value in this\n`id` field is the same as the ID of the property either specified or\nprovisioned with that call to `AddGoogleAnalytics`.",
                                       :type "string"}},
                     :id "AnalyticsProperty"},
 :ListIosAppsResponse {:type "object",
                       :properties {:apps {:description "List of each IosApp that is in the parent Firebase Project.",
                                           :type "array",
                                           :items {:$ref "IosApp"}},
                                    :nextPageToken {:description "If the result list is too large to fit in a single response, then a token\nis returned. If the string is empty, then this response is the last page of\nresults.\n<br>\n<br>This token can be used in a subsequent call to `ListIosApps` to find\nthe next group of Apps.\n<br>\n<br>Page tokens are short-lived and should not be persisted.",
                                                    :type "string"}},
                       :id "ListIosAppsResponse"},
 :AndroidApp {:type "object",
              :properties {:displayName {:type "string",
                                         :description "The user-assigned display name of the App."},
                           :appId {:description "Immutable. The globally unique, Firebase-assigned identifier of the App.\n<br>\n<br>This identifier should be treated as an opaque token, as the data\nformat is not specified.",
                                   :type "string"},
                           :projectId {:description "The globally unique, user-assigned ID of the parent Project for the App.",
                                       :type "string"},
                           :name {:description "The fully qualified resource name of the App, in the format:\n<br><code>projects/<var>projectId</var>/androidApps/<var>appId</var></code>",
                                  :type "string"},
                           :packageName {:description "The canonical package name of the Android App as would appear in the\nGoogle Play Developer Console.",
                                         :type "string"}},
              :id "AndroidApp",
              :description "Details of a Firebase App for Android."},
 :StreamMapping {:type "object",
                 :properties {:streamId {:description "The unique Google-assigned identifier of the Google Analytics data stream\nassociated with the Firebase App.\n<br>\n<br>Learn more about Google Analytics data streams in the\n[Analytics\ndocumentation](https://support.google.com/analytics/answer/9303323).",
                                         :format "int64",
                                         :type "string"},
                              :app {:description "The fully qualified resource name of the Firebase App associated with the\nGoogle Analytics data stream, in the format:\n<br><code>projects/<var>projectId</var>/androidApps/<var>appId</var></code>\nor\n<code>projects/<var>projectId</var>/iosApps/<var>appId</var></code>\nor\n<code>projects/<var>projectId</var>/webApps/<var>appId</var></code>",
                                    :type "string"},
                              :measurementId {:type "string",
                                              :description "Applicable for Firebase Web Apps only.<br>\n<br>The unique Google-assigned identifier of the Google Analytics web\nstream associated with the Firebase Web App. Firebase SDKs use this ID to\ninteract with Google Analytics APIs.\n<br>\n<br>Learn more about this ID and Google Analytics web streams in the\n[Analytics\ndocumentation](https://support.google.com/analytics/topic/9303475)."}},
                 :id "StreamMapping",
                 :description "A mapping of a Firebase App to a Google Analytics data stream"},
 :AndroidAppConfig {:description "Configuration metadata of a single Firebase App for Android.",
                    :type "object",
                    :properties {:configFileContents {:description "The contents of the JSON configuration file.",
                                                      :format "byte",
                                                      :type "string"},
                                 :configFilename {:description "The filename that the configuration artifact is typically saved as.\n<br>For example: `google-services.json`",
                                                  :type "string"}},
                    :id "AndroidAppConfig"},
 :FirebaseProject {:id "FirebaseProject",
                   :description "A `FirebaseProject` is the top-level Firebase entity. It is the container for\nFirebase Apps, Firebase Hosting sites, storage systems (Firebase Realtime\nDatabase, Cloud Firestore, Cloud Storage buckets) and other Firebase and\nGoogle Cloud Platform (GCP) resources.\n<br>\n<br>You can create a new `FirebaseProject` in the\n[Firebase console](https://console.firebase.google.com/),\nor you can add Firebase resources to an existing\n[GCP\n`Project`](https://cloud.google.com/resource-manager/reference/rest/v1/projects)\nby calling\nAddFirebase.\n<br>\n<br>A `FirebaseProject` is actually also a GCP `Project`, so a\n`FirebaseProject` uses underlying GCP identifiers (most importantly,\n`projectId`) as its own for easy interop with GCP APIs.",
                   :type "object",
                   :properties {:resources {:$ref "DefaultResources",
                                            :description "The default Firebase resources associated with the Project."},
                                :name {:description "The fully qualified resource name of the Project, in the format:\n<br><code>projects/<var>projectId</var></code>",
                                       :type "string"},
                                :displayName {:description "The user-assigned display name of the Project.",
                                              :type "string"},
                                :projectId {:description "Immutable. The globally unique, user-assigned ID of the Project.",
                                            :type "string"},
                                :projectNumber {:description "The globally unique, Google-assigned identifier of the Project.",
                                                :format "int64",
                                                :type "string"}}},
 :Location {:description "A GCP resource location that can be selected for a Project.",
            :type "object",
            :properties {:locationId {:description "The ID of the GCP resource location. It will be one of the available [GCP\nresource\nlocations](https://firebase.google.com/docs/projects/locations#types).",
                                      :type "string"},
                         :type {:enum ["LOCATION_TYPE_UNSPECIFIED"
                                       "REGIONAL"
                                       "MULTI_REGIONAL"],
                                :description "Indicates whether the GCP resource location is a [regional or\nmulti-regional\nlocation](https://firebase.google.com/docs/projects/locations#types)\nfor data replication.",
                                :type "string",
                                :enumDescriptions ["Used internally for distinguishing unset values and is not intended for\nexternal use."
                                                   "The location is a regional location.\n<br>Data in a regional location is replicated in multiple zones within a\nregion."
                                                   "The location is a multi-regional location.\n<br>Data in a multi-region location is replicated in multiple regions.\nWithin each region, data is replicated in multiple zones."]},
                         :features {:type "array",
                                    :items {:type "string",
                                            :enum ["LOCATION_FEATURE_UNSPECIFIED"
                                                   "FIRESTORE"
                                                   "DEFAULT_STORAGE"
                                                   "FUNCTIONS"]},
                                    :enumDescriptions ["Used internally for distinguishing unset values and is not intended for\nexternal use."
                                                       "This location supports Cloud Firestore database instances.\n<br>\nApp Engine is available in this location, so it can be a project's\n[default GCP resource\nlocation](//firebase.google.com/docs/projects/locations#default-cloud-location)."
                                                       "This location supports default Cloud Storage buckets.\n<br>\nApp Engine is available in this location, so it can be a project's\n[default GCP resource\nlocation](//firebase.google.com/docs/projects/locations#default-cloud-location)."
                                                       "Cloud Functions for Firebase is available in this location."],
                                    :description "Products and services that are available in the GCP resource location."}},
            :id "Location"},
 :ListAndroidAppsResponse {:type "object",
                           :properties {:apps {:description "List of each AndroidApp that is in the parent Firebase Project.",
                                               :type "array",
                                               :items {:$ref "AndroidApp"}},
                                        :nextPageToken {:description "If the result list is too large to fit in a single response, then a token\nis returned. If the string is empty, then this response is the last page of\nresults.\n<br>\n<br>This token can be used in a subsequent call to `ListAndroidApps` to\nfind the next group of Apps.\n<br>\n<br>Page tokens are short-lived and should not be persisted.",
                                                        :type "string"}},
                           :id "ListAndroidAppsResponse"},
 :ListFirebaseProjectsResponse {:id "ListFirebaseProjectsResponse",
                                :type "object",
                                :properties {:nextPageToken {:description "If the result list is too large to fit in a single response, then a token\nis returned. If the string is empty, then this response is the last page of\nresults.\n<br>\n<br>This token can be used in a subsequent calls to `ListFirebaseProjects`\nto find the next group of Projects.\n<br>\n<br>Page tokens are short-lived and should not be persisted.",
                                                             :type "string"},
                                             :results {:description "One page of the list of Projects that are accessible to the caller.",
                                                       :type "array",
                                                       :items {:$ref "FirebaseProject"}}}},
 :AdminSdkConfig {:type "object",
                  :properties {:locationId {:description "The ID of the project's default GCP resource location. The location is one\nof the available\n[GCP resource\nlocations](https://firebase.google.com/docs/projects/locations). <br>\n<br>This field is omitted if the default GCP resource location has not been\nfinalized yet. To set your project's default GCP resource location,\ncall [`FinalizeDefaultLocation`](../projects.defaultLocation/finalize)\nafter you add Firebase services to your project.",
                                            :type "string"},
                               :projectId {:description "Immutable. The globally unique, user-assigned project ID of the parent\nProject.",
                                           :type "string"},
                               :databaseURL {:description "The default Firebase Realtime Database URL.",
                                             :type "string"},
                               :storageBucket {:description "The default Cloud Storage for Firebase storage bucket name.",
                                               :type "string"}},
                  :id "AdminSdkConfig"},
 :ShaCertificate {:type "object",
                  :properties {:shaHash {:description "The certificate hash for the App.",
                                         :type "string"},
                               :certType {:type "string",
                                          :enumDescriptions ["Unknown state.  This is only used for distinguishing unset values."
                                                             "Certificate is a SHA-1 type certificate."
                                                             "Certificate is a SHA-256 type certificate."],
                                          :enum ["SHA_CERTIFICATE_TYPE_UNSPECIFIED"
                                                 "SHA_1"
                                                 "SHA_256"],
                                          :description "The SHA certificate type."},
                               :name {:description "The fully qualified resource name of the `sha-key`, in the format:\n<br><code>projects/<var>projectId</var>/androidApps/<var>appId</var>/sha/<var>shaId</var></code>",
                                      :type "string"}},
                  :id "ShaCertificate",
                  :description "A SHA-1 or SHA-256 certificate associated with the AndroidApp."},
 :Status {:properties {:details {:description "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
                                 :type "array",
                                 :items {:type "object",
                                         :additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                                :type "any"}}},
                       :code {:type "integer",
                              :description "The status code, which should be an enum value of google.rpc.Code.",
                              :format "int32"},
                       :message {:description "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
                                 :type "string"}},
          :id "Status",
          :description "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors).",
          :type "object"}}
