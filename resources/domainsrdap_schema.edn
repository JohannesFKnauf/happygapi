{:Notice {:id "Notice",
          :type "object",
          :description "Notices object defined in [section 4.3 of RFC 7483](https://tools.ietf.org/html/rfc7483#section-4.3).",
          :properties {:description {:items {:type "string"},
                                     :description "Description of the notice.",
                                     :type "array"},
                       :links {:items {:$ref "Link"},
                               :type "array",
                               :description "Link to a document containing more information."},
                       :title {:type "string",
                               :description "Title of a notice. Example: \"Terms of Service\"."},
                       :type {:type "string",
                              :description "Type values defined in [section 10.2.1 of RFC 7483](https://tools.ietf.org/html/rfc7483#section-10.2.1) specific to a whole response: \"result set truncated due to authorization\", \"result set truncated due to excessive load\", \"result set truncated due to unexplainable reasons\"."}}},
 :Link {:type "object",
        :id "Link",
        :properties {:href {:description "Target URL of a link. Example: \"http://example.com/previous\".",
                            :type "string"},
                     :rel {:description "Relation type of a link. Example: \"previous\".",
                           :type "string"},
                     :value {:type "string",
                             :description "URL giving context for the link. Example: \"http://example.com/current\"."},
                     :media {:description "Media type of the link destination. Example: \"screen\".",
                             :type "string"},
                     :hreflang {:type "string",
                                :description "Language code of a link. Example: \"en\"."},
                     :type {:type "string",
                            :description "Content type of the link. Example: \"application/json\"."},
                     :title {:description "Title of this link. Example: \"title\".",
                             :type "string"}},
        :description "Links object defined in [section 4.2 of RFC 7483](https://tools.ietf.org/html/rfc7483#section-4.2)."},
 :HttpBody {:type "object",
            :id "HttpBody",
            :properties {:extensions {:description "Application specific response metadata. Must be set in the first response for streaming APIs.",
                                      :type "array",
                                      :items {:type "object",
                                              :additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                                     :type "any"}}},
                         :contentType {:type "string",
                                       :description "The HTTP Content-Type header value specifying the content type of the body."},
                         :data {:type "string",
                                :format "byte",
                                :description "The HTTP request/response body as raw binary."}},
            :description "Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged."},
 :RdapResponse {:id "RdapResponse",
                :type "object",
                :description "Response to a general RDAP query.",
                :properties {:title {:type "string",
                                     :description "Error title."},
                             :jsonResponse {:$ref "HttpBody",
                                            :description "HTTP response with content type set to \"application/json+rdap\"."},
                             :rdapConformance {:items {:type "string"},
                                               :type "array",
                                               :description "RDAP conformance level."},
                             :lang {:type "string",
                                    :description "Error language code. Error response info fields are defined in [section 6 of RFC 7483](https://tools.ietf.org/html/rfc7483#section-6)."},
                             :notices {:type "array",
                                       :items {:$ref "Notice"},
                                       :description "Notices applying to this response."},
                             :errorCode {:description "Error HTTP code. Example: \"501\".",
                                         :format "int32",
                                         :type "integer"},
                             :description {:description "Error description.",
                                           :items {:type "string"},
                                           :type "array"}}}}
