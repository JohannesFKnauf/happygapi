{:Operation {:type "object",
             :id "Operation",
             :description "This resource represents a long-running operation that is the result of a network API call.",
             :properties {:metadata {:description "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                                     :type "object",
                                     :additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                            :type "any"}},
                          :response {:type "object",
                                     :description "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                                     :additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                            :type "any"}},
                          :done {:type "boolean",
                                 :description "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."},
                          :name {:description "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                                 :type "string"},
                          :error {:$ref "Status",
                                  :description "The error result of the operation in case of failure or cancellation."}}},
 :Empty {:properties {},
         :description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
         :id "Empty",
         :type "object"},
 :ListWorkflowsResponse {:description "Response for the ListWorkflows method.",
                         :type "object",
                         :id "ListWorkflowsResponse",
                         :properties {:nextPageToken {:type "string",
                                                      :description "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."},
                                      :unreachable {:type "array",
                                                    :description "Unreachable resources.",
                                                    :items {:type "string"}},
                                      :workflows {:type "array",
                                                  :description "The workflows which match the request.",
                                                  :items {:$ref "Workflow"}}}},
 :ListLocationsResponse {:properties {:locations {:items {:$ref "Location"},
                                                  :type "array",
                                                  :description "A list of locations that matches the specified filter in the request."},
                                      :nextPageToken {:type "string",
                                                      :description "The standard List next-page token."}},
                         :description "The response message for Locations.ListLocations.",
                         :id "ListLocationsResponse",
                         :type "object"},
 :Workflow {:type "object",
            :id "Workflow",
            :properties {:description {:type "string",
                                       :description "Description of the workflow provided by the user. Must be at most 1000 unicode characters long."},
                         :serviceAccount {:description "Name of the service account associated with the latest workflow version. This service account represents the identity of the workflow and determines what permissions the workflow has. Format: projects/{project}/serviceAccounts/{account} Using `-` as a wildcard for the `{project}` will infer the project from the account. The `{account}` value can be the `email` address or the `unique_id` of the service account. If not provided, workflow will use the project's default service account. Modifying this field for an existing workflow results in a new workflow revision.",
                                          :type "string"},
                         :labels {:description "Labels associated with this workflow. Labels can contain at most 64 entries. Keys and values can be no longer than 63 characters and can only contain lowercase letters, numeric characters, underscores and dashes. Label keys must start with a letter. International characters are allowed.",
                                  :additionalProperties {:type "string"},
                                  :type "object"},
                         :sourceContents {:description "Workflow code to be executed. The size limit is 128KB.",
                                          :type "string"},
                         :revisionCreateTime {:format "google-datetime",
                                              :description "Output only. The timestamp that the latest revision of the workflow was created.",
                                              :readOnly true,
                                              :type "string"},
                         :name {:description "The resource name of the workflow. Format: projects/{project}/locations/{location}/workflows/{workflow}",
                                :type "string"},
                         :createTime {:description "Output only. The timestamp of when the workflow was created.",
                                      :type "string",
                                      :format "google-datetime",
                                      :readOnly true},
                         :revisionId {:readOnly true,
                                      :description "Output only. The revision of the workflow. A new revision of a workflow is created as a result of updating the following properties of a workflow: - Service account - Workflow code to be executed The format is \"000001-a4d\", where the first 6 characters define the zero-padded revision ordinal number. They are followed by a hyphen and 3 hexadecimal random characters.",
                                      :type "string"},
                         :state {:enumDescriptions ["Invalid state."
                                                    "The workflow has been deployed successfully and is serving."],
                                 :description "Output only. State of the workflow deployment.",
                                 :enum ["STATE_UNSPECIFIED" "ACTIVE"],
                                 :readOnly true,
                                 :type "string"},
                         :updateTime {:format "google-datetime",
                                      :type "string",
                                      :description "Output only. The last update timestamp of the workflow.",
                                      :readOnly true}},
            :description "Workflow program to be executed by Workflows."},
 :OperationMetadata {:id "OperationMetadata",
                     :properties {:createTime {:description "The time the operation was created.",
                                               :format "google-datetime",
                                               :type "string"},
                                  :verb {:description "Name of the verb executed by the operation.",
                                         :type "string"},
                                  :apiVersion {:description "API version used to start the operation.",
                                               :type "string"},
                                  :endTime {:format "google-datetime",
                                            :description "The time the operation finished running.",
                                            :type "string"},
                                  :target {:type "string",
                                           :description "Server-defined resource path for the target of the operation."}},
                     :description "Represents the metadata of the long-running operation.",
                     :type "object"},
 :ListOperationsResponse {:id "ListOperationsResponse",
                          :type "object",
                          :properties {:operations {:items {:$ref "Operation"},
                                                    :type "array",
                                                    :description "A list of operations that matches the specified filter in the request."},
                                       :nextPageToken {:type "string",
                                                       :description "The standard List next-page token."}},
                          :description "The response message for Operations.ListOperations."},
 :Location {:description "A resource that represents Google Cloud Platform location.",
            :id "Location",
            :type "object",
            :properties {:locationId {:description "The canonical id for this location. For example: `\"us-east1\"`.",
                                      :type "string"},
                         :metadata {:description "Service-specific metadata. For example the available capacity at the given location.",
                                    :additionalProperties {:type "any",
                                                           :description "Properties of the object. Contains field @type with type URL."},
                                    :type "object"},
                         :name {:description "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
                                :type "string"},
                         :displayName {:type "string",
                                       :description "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."},
                         :labels {:additionalProperties {:type "string"},
                                  :description "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
                                  :type "object"}}},
 :Status {:id "Status",
          :type "object",
          :description "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
          :properties {:details {:type "array",
                                 :items {:type "object",
                                         :additionalProperties {:type "any",
                                                                :description "Properties of the object. Contains field @type with type URL."}},
                                 :description "A list of messages that carry the error details. There is a common set of message types for APIs to use."},
                       :message {:description "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
                                 :type "string"},
                       :code {:description "The status code, which should be an enum value of google.rpc.Code.",
                              :type "integer",
                              :format "int32"}}}}
