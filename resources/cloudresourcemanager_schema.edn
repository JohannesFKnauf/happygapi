{:GetPolicyOptions {:id "GetPolicyOptions",
                    :description "Encapsulates settings provided to GetIamPolicy.",
                    :type "object",
                    :properties {:requestedPolicyVersion {:description "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                                                          :type "integer",
                                                          :format "int32"}}},
 :UndeleteProjectMetadata {:id "UndeleteProjectMetadata",
                           :description "A status object which is used as the `metadata` field for the Operation returned by `UndeleteProject`.",
                           :type "object",
                           :properties {}},
 :MoveFolderRequest {:id "MoveFolderRequest",
                     :description "The MoveFolder request message.",
                     :type "object",
                     :properties {:destinationParent {:description "Required. The resource name of the folder or organization which should be the folder's new parent. Must be of the form `folders/{folder_id}` or `organizations/{org_id}`.",
                                                      :type "string"}}},
 :ListTagKeysResponse {:id "ListTagKeysResponse",
                       :description "The ListTagKeys response message.",
                       :type "object",
                       :properties {:tagKeys {:description "List of TagKeys that live under the specified parent in the request.",
                                              :type "array",
                                              :items {:$ref "TagKey"}},
                                    :nextPageToken {:description "A pagination token returned from a previous call to `ListTagKeys` that indicates from where listing should continue.",
                                                    :type "string"}}},
 :ListLiensResponse {:id "ListLiensResponse",
                     :description "The response message for Liens.ListLiens.",
                     :type "object",
                     :properties {:liens {:description "A list of Liens.",
                                          :type "array",
                                          :items {:$ref "Lien"}},
                                  :nextPageToken {:description "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                                                  :type "string"}}},
 :CreateProjectMetadata {:id "CreateProjectMetadata",
                         :description "A status object which is used as the `metadata` field for the Operation returned by CreateProject. It provides insight for when significant phases of Project creation have completed.",
                         :type "object",
                         :properties {:createTime {:description "Creation time of the project creation workflow.",
                                                   :type "string",
                                                   :format "google-datetime"},
                                      :gettable {:description "True if the project can be retrieved using `GetProject`. No other operations on the project are guaranteed to work until the project creation is complete.",
                                                 :type "boolean"},
                                      :ready {:description "True if the project creation process is complete.",
                                              :type "boolean"}}},
 :CreateFolderMetadata {:id "CreateFolderMetadata",
                        :description "Metadata pertaining to the Folder creation process.",
                        :type "object",
                        :properties {:displayName {:description "The display name of the folder.",
                                                   :type "string"},
                                     :parent {:description "The resource name of the folder or organization we are creating the folder under.",
                                              :type "string"}}},
 :CloudresourcemanagerGoogleCloudResourcemanagerV2alpha1FolderOperation {:id "CloudresourcemanagerGoogleCloudResourcemanagerV2alpha1FolderOperation",
                                                                         :description "Metadata describing a long running folder operation",
                                                                         :type "object",
                                                                         :properties {:displayName {:description "The display name of the folder.",
                                                                                                    :type "string"},
                                                                                      :operationType {:description "The type of this operation.",
                                                                                                      :type "string",
                                                                                                      :enumDescriptions ["Operation type not specified."
                                                                                                                         "A create folder operation."
                                                                                                                         "A move folder operation."],
                                                                                                      :enum ["OPERATION_TYPE_UNSPECIFIED"
                                                                                                             "CREATE"
                                                                                                             "MOVE"]},
                                                                                      :sourceParent {:description "The resource name of the folder's parent. Only applicable when the operation_type is MOVE.",
                                                                                                     :type "string"},
                                                                                      :destinationParent {:description "The resource name of the folder or organization we are either creating the folder under or moving the folder to.",
                                                                                                          :type "string"}}},
 :UpdateFolderMetadata {:id "UpdateFolderMetadata",
                        :description "A status object which is used as the `metadata` field for the Operation returned by UpdateFolder.",
                        :type "object",
                        :properties {}},
 :Operation {:id "Operation",
             :description "This resource represents a long-running operation that is the result of a network API call.",
             :type "object",
             :properties {:name {:description "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                                 :type "string"},
                          :metadata {:description "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                                     :type "object",
                                     :additionalProperties {:type "any",
                                                            :description "Properties of the object. Contains field @type with type URL."}},
                          :done {:description "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                                 :type "boolean"},
                          :error {:description "The error result of the operation in case of failure or cancellation.",
                                  :$ref "Status"},
                          :response {:description "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                                     :type "object",
                                     :additionalProperties {:type "any",
                                                            :description "Properties of the object. Contains field @type with type URL."}}}},
 :SetIamPolicyRequest {:id "SetIamPolicyRequest",
                       :description "Request message for `SetIamPolicy` method.",
                       :type "object",
                       :properties {:policy {:description "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
                                             :$ref "Policy"},
                                    :updateMask {:description "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
                                                 :type "string",
                                                 :format "google-fieldmask"}}},
 :AuditConfig {:id "AuditConfig",
               :description "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.",
               :type "object",
               :properties {:service {:description "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.",
                                      :type "string"},
                            :auditLogConfigs {:description "The configuration for logging of each type of permission.",
                                              :type "array",
                                              :items {:$ref "AuditLogConfig"}}}},
 :FolderOperation {:id "FolderOperation",
                   :description "Metadata describing a long running folder operation",
                   :type "object",
                   :properties {:displayName {:description "The display name of the folder.",
                                              :type "string"},
                                :operationType {:description "The type of this operation.",
                                                :type "string",
                                                :enumDescriptions ["Operation type not specified."
                                                                   "A create folder operation."
                                                                   "A move folder operation."],
                                                :enum ["OPERATION_TYPE_UNSPECIFIED"
                                                       "CREATE"
                                                       "MOVE"]},
                                :sourceParent {:description "The resource name of the folder's parent. Only applicable when the operation_type is MOVE.",
                                               :type "string"},
                                :destinationParent {:description "The resource name of the folder or organization we are either creating the folder under or moving the folder to.",
                                                    :type "string"}}},
 :AuditLogConfig {:id "AuditLogConfig",
                  :description "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
                  :type "object",
                  :properties {:logType {:description "The log type that this config enables.",
                                         :type "string",
                                         :enumDescriptions ["Default case. Should never be this."
                                                            "Admin reads. Example: CloudIAM getIamPolicy"
                                                            "Data writes. Example: CloudSQL Users create"
                                                            "Data reads. Example: CloudSQL Users list"],
                                         :enum ["LOG_TYPE_UNSPECIFIED"
                                                "ADMIN_READ"
                                                "DATA_WRITE"
                                                "DATA_READ"]},
                               :exemptedMembers {:description "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
                                                 :type "array",
                                                 :items {:type "string"}}}},
 :DeleteOrganizationMetadata {:id "DeleteOrganizationMetadata",
                              :description "A status object which is used as the `metadata` field for the operation returned by DeleteOrganization.",
                              :type "object",
                              :properties {}},
 :Lien {:id "Lien",
        :description "A Lien represents an encumbrance on the actions that can be performed on a resource.",
        :type "object",
        :properties {:name {:description "A system-generated unique identifier for this Lien. Example: `liens/1234abcd`",
                            :type "string"},
                     :parent {:description "A reference to the resource this Lien is attached to. The server will validate the parent against those for which Liens are supported. Example: `projects/1234`",
                              :type "string"},
                     :restrictions {:description "The types of operations which should be blocked as a result of this Lien. Each value should correspond to an IAM permission. The server will validate the permissions against those for which Liens are supported. An empty list is meaningless and will be rejected. Example: ['resourcemanager.projects.delete']",
                                    :type "array",
                                    :items {:type "string"}},
                     :reason {:description "Concise user-visible strings indicating why an action cannot be performed on a resource. Maximum length of 200 characters. Example: 'Holds production API key'",
                              :type "string"},
                     :origin {:description "A stable, user-visible/meaningful string identifying the origin of the Lien, intended to be inspected programmatically. Maximum length of 200 characters. Example: 'compute.googleapis.com'",
                              :type "string"},
                     :createTime {:description "The creation time of this Lien.",
                                  :type "string",
                                  :format "google-datetime"}}},
 :GetIamPolicyRequest {:id "GetIamPolicyRequest",
                       :description "Request message for `GetIamPolicy` method.",
                       :type "object",
                       :properties {:options {:description "OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`.",
                                              :$ref "GetPolicyOptions"}}},
 :ProjectCreationStatus {:id "ProjectCreationStatus",
                         :description "A status object which is used as the `metadata` field for the Operation returned by CreateProject. It provides insight for when significant phases of Project creation have completed.",
                         :type "object",
                         :properties {:createTime {:description "Creation time of the project creation workflow.",
                                                   :type "string",
                                                   :format "google-datetime"},
                                      :gettable {:description "True if the project can be retrieved using GetProject. No other operations on the project are guaranteed to work until the project creation is complete.",
                                                 :type "boolean"},
                                      :ready {:description "True if the project creation process is complete.",
                                              :type "boolean"}}},
 :CloudresourcemanagerGoogleCloudResourcemanagerV2beta1FolderOperation {:id "CloudresourcemanagerGoogleCloudResourcemanagerV2beta1FolderOperation",
                                                                        :description "Metadata describing a long running folder operation",
                                                                        :type "object",
                                                                        :properties {:displayName {:description "The display name of the folder.",
                                                                                                   :type "string"},
                                                                                     :operationType {:description "The type of this operation.",
                                                                                                     :type "string",
                                                                                                     :enumDescriptions ["Operation type not specified."
                                                                                                                        "A create folder operation."
                                                                                                                        "A move folder operation."],
                                                                                                     :enum ["OPERATION_TYPE_UNSPECIFIED"
                                                                                                            "CREATE"
                                                                                                            "MOVE"]},
                                                                                     :sourceParent {:description "The resource name of the folder's parent. Only applicable when the operation_type is MOVE.",
                                                                                                    :type "string"},
                                                                                     :destinationParent {:description "The resource name of the folder or organization we are either creating the folder under or moving the folder to.",
                                                                                                         :type "string"}}},
 :MoveProjectRequest {:id "MoveProjectRequest",
                      :description "The request sent to MoveProject method.",
                      :type "object",
                      :properties {:destinationParent {:description "Required. The new parent to move the Project under.",
                                                       :type "string"}}},
 :DeleteTagValueMetadata {:id "DeleteTagValueMetadata",
                          :description "Runtime operation information for deleting a TagValue.",
                          :type "object",
                          :properties {}},
 :ListFoldersResponse {:id "ListFoldersResponse",
                       :description "The ListFolders response message.",
                       :type "object",
                       :properties {:folders {:description "A possibly paginated list of folders that are direct descendants of the specified parent resource.",
                                              :type "array",
                                              :items {:$ref "Folder"}},
                                    :nextPageToken {:description "A pagination token returned from a previous call to `ListFolders` that indicates from where listing should continue.",
                                                    :type "string"}}},
 :UpdateTagKeyMetadata {:id "UpdateTagKeyMetadata",
                        :description "Runtime operation information for updating a TagKey.",
                        :type "object",
                        :properties {}},
 :UndeleteFolderMetadata {:id "UndeleteFolderMetadata",
                          :description "A status object which is used as the `metadata` field for the `Operation` returned by `UndeleteFolder`.",
                          :type "object",
                          :properties {}},
 :Binding {:id "Binding",
           :description "Associates `members`, or principals, with a `role`.",
           :type "object",
           :properties {:role {:description "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an overview of the IAM roles and permissions, see the [IAM documentation](https://cloud.google.com/iam/docs/roles-overview). For a list of the available pre-defined roles, see [here](https://cloud.google.com/iam/docs/understanding-roles).",
                               :type "string"},
                        :members {:description "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workforce identity pool. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`: All workforce identities in a group. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All workforce identities with a specific attribute value. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`: All identities in a workforce identity pool. * `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workload identity pool. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`: A workload identity pool group. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All identities in a workload identity pool with a certain attribute. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`: All identities in a workload identity pool. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: Deleted single identity in a workforce identity pool. For example, `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.",
                                  :type "array",
                                  :items {:type "string"}},
                        :condition {:description "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                                    :$ref "Expr"}}},
 :DeleteTagKeyMetadata {:id "DeleteTagKeyMetadata",
                        :description "Runtime operation information for deleting a TagKey.",
                        :type "object",
                        :properties {}},
 :CreateTagValueMetadata {:id "CreateTagValueMetadata",
                          :description "Runtime operation information for creating a TagValue.",
                          :type "object",
                          :properties {}},
 :DeleteFolderMetadata {:id "DeleteFolderMetadata",
                        :description "A status object which is used as the `metadata` field for the `Operation` returned by `DeleteFolder`.",
                        :type "object",
                        :properties {}},
 :Empty {:id "Empty",
         :description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
         :type "object",
         :properties {}},
 :DeleteTagBindingMetadata {:id "DeleteTagBindingMetadata",
                            :description "Runtime operation information for deleting a TagBinding.",
                            :type "object",
                            :properties {}},
 :TagValue {:id "TagValue",
            :description "A TagValue is a child of a particular TagKey. This is used to group cloud resources for the purpose of controlling them using policies.",
            :type "object",
            :properties {:name {:description "Immutable. Resource name for TagValue in the format `tagValues/456`.",
                                :type "string"},
                         :parent {:description "Immutable. The resource name of the new TagValue's parent TagKey. Must be of the form `tagKeys/{tag_key_id}`.",
                                  :type "string"},
                         :shortName {:description "Required. Immutable. User-assigned short name for TagValue. The short name should be unique for TagValues within the same parent TagKey. The short name must be 63 characters or less, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between.",
                                     :type "string"},
                         :namespacedName {:description "Output only. The namespaced name of the TagValue. Can be in the form `{organization_id}/{tag_key_short_name}/{tag_value_short_name}` or `{project_id}/{tag_key_short_name}/{tag_value_short_name}` or `{project_number}/{tag_key_short_name}/{tag_value_short_name}`.",
                                          :readOnly true,
                                          :type "string"},
                         :description {:description "Optional. User-assigned description of the TagValue. Must not exceed 256 characters. Read-write.",
                                       :type "string"},
                         :createTime {:description "Output only. Creation time.",
                                      :readOnly true,
                                      :type "string",
                                      :format "google-datetime"},
                         :updateTime {:description "Output only. Update time.",
                                      :readOnly true,
                                      :type "string",
                                      :format "google-datetime"},
                         :etag {:description "Optional. Entity tag which users can pass to prevent race conditions. This field is always set in server responses. See UpdateTagValueRequest for details.",
                                :type "string"}}},
 :UndeleteProjectRequest {:id "UndeleteProjectRequest",
                          :description "The request sent to the UndeleteProject method.",
                          :type "object",
                          :properties {}},
 :UpdateProjectMetadata {:id "UpdateProjectMetadata",
                         :description "A status object which is used as the `metadata` field for the Operation returned by UpdateProject.",
                         :type "object",
                         :properties {}},
 :TagHold {:id "TagHold",
           :description "A TagHold represents the use of a TagValue that is not captured by TagBindings. If a TagValue has any TagHolds, deletion will be blocked. This resource is intended to be created in the same cloud location as the `holder`.",
           :type "object",
           :properties {:name {:description "Output only. The resource name of a TagHold. This is a String of the form: `tagValues/{tag-value-id}/tagHolds/{tag-hold-id}` (e.g. `tagValues/123/tagHolds/456`). This resource name is generated by the server.",
                               :readOnly true,
                               :type "string"},
                        :holder {:description "Required. The name of the resource where the TagValue is being used. Must be less than 200 characters. E.g. `//compute.googleapis.com/compute/projects/myproject/regions/us-east-1/instanceGroupManagers/instance-group`",
                                 :type "string"},
                        :origin {:description "Optional. An optional string representing the origin of this request. This field should include human-understandable information to distinguish origins from each other. Must be less than 200 characters. E.g. `migs-35678234`",
                                 :type "string"},
                        :helpLink {:description "Optional. A URL where an end user can learn more about removing this hold. E.g. `https://cloud.google.com/resource-manager/docs/tags/tags-creating-and-managing`",
                                   :type "string"},
                        :createTime {:description "Output only. The time this TagHold was created.",
                                     :readOnly true,
                                     :type "string",
                                     :format "google-datetime"}}},
 :EffectiveTag {:id "EffectiveTag",
                :description "An EffectiveTag represents a tag that applies to a resource during policy evaluation. Tags can be either directly bound to a resource or inherited from its ancestor. EffectiveTag contains the name and namespaced_name of the tag value and tag key, with additional fields of `inherited` to indicate the inheritance status of the effective tag.",
                :type "object",
                :properties {:tagValue {:description "Resource name for TagValue in the format `tagValues/456`.",
                                        :type "string"},
                             :namespacedTagValue {:description "The namespaced name of the TagValue. Can be in the form `{organization_id}/{tag_key_short_name}/{tag_value_short_name}` or `{project_id}/{tag_key_short_name}/{tag_value_short_name}` or `{project_number}/{tag_key_short_name}/{tag_value_short_name}`.",
                                                  :type "string"},
                             :tagKey {:description "The name of the TagKey, in the format `tagKeys/{id}`, such as `tagKeys/123`.",
                                      :type "string"},
                             :namespacedTagKey {:description "The namespaced name of the TagKey. Can be in the form `{organization_id}/{tag_key_short_name}` or `{project_id}/{tag_key_short_name}` or `{project_number}/{tag_key_short_name}`.",
                                                :type "string"},
                             :tagKeyParentName {:description "The parent name of the tag key. Must be in the format `organizations/{organization_id}` or `projects/{project_number}`",
                                                :type "string"},
                             :inherited {:description "Indicates the inheritance status of a tag value attached to the given resource. If the tag value is inherited from one of the resource's ancestors, inherited will be true. If false, then the tag value is directly attached to the resource, inherited will be false.",
                                         :type "boolean"}}},
 :SearchFoldersResponse {:id "SearchFoldersResponse",
                         :description "The response message for searching folders.",
                         :type "object",
                         :properties {:folders {:description "A possibly paginated folder search results. the specified parent resource.",
                                                :type "array",
                                                :items {:$ref "Folder"}},
                                      :nextPageToken {:description "A pagination token returned from a previous call to `SearchFolders` that indicates from where searching should continue.",
                                                      :type "string"}}},
 :ListTagBindingsResponse {:id "ListTagBindingsResponse",
                           :description "The ListTagBindings response.",
                           :type "object",
                           :properties {:tagBindings {:description "A possibly paginated list of TagBindings for the specified resource.",
                                                      :type "array",
                                                      :items {:$ref "TagBinding"}},
                                        :nextPageToken {:description "Pagination token. If the result set is too large to fit in a single response, this token is returned. It encodes the position of the current result cursor. Feeding this value into a new list request with the `page_token` parameter gives the next page of the results. When `next_page_token` is not filled in, there is no next page and the list returned is the last page in the result set. Pagination tokens have a limited lifetime.",
                                                        :type "string"}}},
 :TestIamPermissionsRequest {:id "TestIamPermissionsRequest",
                             :description "Request message for `TestIamPermissions` method.",
                             :type "object",
                             :properties {:permissions {:description "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
                                                        :type "array",
                                                        :items {:type "string"}}}},
 :DeleteProjectMetadata {:id "DeleteProjectMetadata",
                         :description "A status object which is used as the `metadata` field for the Operation returned by `DeleteProject`.",
                         :type "object",
                         :properties {}},
 :Folder {:id "Folder",
          :description "A folder in an organization's resource hierarchy, used to organize that organization's resources.",
          :type "object",
          :properties {:tags {:description "Optional. Input only. Immutable. Tag keys/values directly bound to this folder. Each item in the map must be expressed as \" : \". For example: \"123/environment\" : \"production\", \"123/costCenter\" : \"marketing\" Note: Currently this field is in Preview.",
                              :type "object",
                              :additionalProperties {:type "string"}},
                       :deleteTime {:description "Output only. Timestamp when the folder was requested to be deleted.",
                                    :readOnly true,
                                    :type "string",
                                    :format "google-datetime"},
                       :parent {:description "Required. The folder's parent's resource name. Updates to the folder's parent must be performed using MoveFolder.",
                                :type "string"},
                       :displayName {:description "The folder's display name. A folder's display name must be unique amongst its siblings. For example, no two folders with the same parent can share the same display name. The display name must start and end with a letter or digit, may contain letters, digits, spaces, hyphens and underscores and can be no longer than 30 characters. This is captured by the regular expression: `[\\p{L}\\p{N}]([\\p{L}\\p{N}_- ]{0,28}[\\p{L}\\p{N}])?`.",
                                     :type "string"},
                       :name {:description "Output only. The resource name of the folder. Its format is `folders/{folder_id}`, for example: \"folders/1234\".",
                              :readOnly true,
                              :type "string"},
                       :createTime {:description "Output only. Timestamp when the folder was created.",
                                    :readOnly true,
                                    :type "string",
                                    :format "google-datetime"},
                       :etag {:description "Output only. A checksum computed by the server based on the current value of the folder resource. This may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
                              :readOnly true,
                              :type "string"},
                       :state {:description "Output only. The lifecycle state of the folder. Updates to the state must be performed using DeleteFolder and UndeleteFolder.",
                               :readOnly true,
                               :type "string",
                               :enumDescriptions ["Unspecified state."
                                                  "The normal and active state."
                                                  "The folder has been marked for deletion by the user."],
                               :enum ["STATE_UNSPECIFIED"
                                      "ACTIVE"
                                      "DELETE_REQUESTED"]},
                       :updateTime {:description "Output only. Timestamp when the folder was last modified.",
                                    :readOnly true,
                                    :type "string",
                                    :format "google-datetime"}}},
 :UndeleteOrganizationMetadata {:id "UndeleteOrganizationMetadata",
                                :description "A status object which is used as the `metadata` field for the Operation returned by UndeleteOrganization.",
                                :type "object",
                                :properties {}},
 :ListEffectiveTagsResponse {:id "ListEffectiveTagsResponse",
                             :description "The response of ListEffectiveTags.",
                             :type "object",
                             :properties {:effectiveTags {:description "A possibly paginated list of effective tags for the specified resource.",
                                                          :type "array",
                                                          :items {:$ref "EffectiveTag"}},
                                          :nextPageToken {:description "Pagination token. If the result set is too large to fit in a single response, this token is returned. It encodes the position of the current result cursor. Feeding this value into a new list request with the `page_token` parameter gives the next page of the results. When `next_page_token` is not filled in, there is no next page and the list returned is the last page in the result set. Pagination tokens have a limited lifetime.",
                                                          :type "string"}}},
 :TestIamPermissionsResponse {:id "TestIamPermissionsResponse",
                              :description "Response message for `TestIamPermissions` method.",
                              :type "object",
                              :properties {:permissions {:description "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                                                         :type "array",
                                                         :items {:type "string"}}}},
 :ListProjectsResponse {:id "ListProjectsResponse",
                        :description "A page of the response received from the ListProjects method. A paginated response where more pages are available has `next_page_token` set. This token can be used in a subsequent request to retrieve the next request page. NOTE: A response may contain fewer elements than the request `page_size` and still have a `next_page_token`.",
                        :type "object",
                        :properties {:projects {:description "The list of Projects under the parent. This list can be paginated.",
                                                :type "array",
                                                :items {:$ref "Project"}},
                                     :nextPageToken {:description "Pagination token. If the result set is too large to fit in a single response, this token is returned. It encodes the position of the current result cursor. Feeding this value into a new list request with the `page_token` parameter gives the next page of the results. When `next_page_token` is not filled in, there is no next page and the list returned is the last page in the result set. Pagination tokens have a limited lifetime.",
                                                     :type "string"}}},
 :TagKey {:id "TagKey",
          :description "A TagKey, used to group a set of TagValues.",
          :type "object",
          :properties {:description {:description "Optional. User-assigned description of the TagKey. Must not exceed 256 characters. Read-write.",
                                     :type "string"},
                       :parent {:description "Immutable. The resource name of the TagKey's parent. A TagKey can be parented by an Organization or a Project. For a TagKey parented by an Organization, its parent must be in the form `organizations/{org_id}`. For a TagKey parented by a Project, its parent can be in the form `projects/{project_id}` or `projects/{project_number}`.",
                                :type "string"},
                       :purpose {:description "Optional. A purpose denotes that this Tag is intended for use in policies of a specific policy engine, and will involve that policy engine in management operations involving this Tag. A purpose does not grant a policy engine exclusive rights to the Tag, and it may be referenced by other policy engines. A purpose cannot be changed once set.",
                                 :type "string",
                                 :enumDescriptions ["Unspecified purpose."
                                                    "Purpose for Compute Engine firewalls. A corresponding `purpose_data` should be set for the network the tag is intended for. The key should be `network` and the value should be in ## either of these two formats: `https://www.googleapis.com/compute/{compute_version}/projects/{project_id}/global/networks/{network_id}` - `{project_id}/{network_name}` ## Examples: `https://www.googleapis.com/compute/staging_v1/projects/fail-closed-load-testing/global/networks/6992953698831725600` - `fail-closed-load-testing/load-testing-network`"
                                                    "Purpose for data governance. Tag Values created under a key with this purpose may have Tag Value children. No `purpose_data` should be set."],
                                 :enum ["PURPOSE_UNSPECIFIED"
                                        "GCE_FIREWALL"
                                        "DATA_GOVERNANCE"]},
                       :name {:description "Immutable. The resource name for a TagKey. Must be in the format `tagKeys/{tag_key_id}`, where `tag_key_id` is the generated numeric id for the TagKey.",
                              :type "string"},
                       :createTime {:description "Output only. Creation time.",
                                    :readOnly true,
                                    :type "string",
                                    :format "google-datetime"},
                       :namespacedName {:description "Output only. Immutable. Namespaced name of the TagKey.",
                                        :readOnly true,
                                        :type "string"},
                       :etag {:description "Optional. Entity tag which users can pass to prevent race conditions. This field is always set in server responses. See UpdateTagKeyRequest for details.",
                              :type "string"},
                       :updateTime {:description "Output only. Update time.",
                                    :readOnly true,
                                    :type "string",
                                    :format "google-datetime"},
                       :shortName {:description "Required. Immutable. The user friendly name for a TagKey. The short name should be unique for TagKeys within the same tag namespace. The short name must be 1-63 characters, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between.",
                                   :type "string"},
                       :purposeData {:description "Optional. Purpose data corresponds to the policy system that the tag is intended for. See documentation for `Purpose` for formatting of this field. Purpose data cannot be changed once set.",
                                     :type "object",
                                     :additionalProperties {:type "string"}}}},
 :ListTagValuesResponse {:id "ListTagValuesResponse",
                         :description "The ListTagValues response.",
                         :type "object",
                         :properties {:tagValues {:description "A possibly paginated list of TagValues that are direct descendants of the specified parent TagKey.",
                                                  :type "array",
                                                  :items {:$ref "TagValue"}},
                                      :nextPageToken {:description "A pagination token returned from a previous call to `ListTagValues` that indicates from where listing should continue. This is currently not used, but the server may at any point start supplying a valid token.",
                                                      :type "string"}}},
 :MoveFolderMetadata {:id "MoveFolderMetadata",
                      :description "Metadata pertaining to the folder move process.",
                      :type "object",
                      :properties {:displayName {:description "The display name of the folder.",
                                                 :type "string"},
                                   :sourceParent {:description "The resource name of the folder's parent.",
                                                  :type "string"},
                                   :destinationParent {:description "The resource name of the folder or organization to move the folder to.",
                                                       :type "string"}}},
 :TagBinding {:id "TagBinding",
              :description "A TagBinding represents a connection between a TagValue and a cloud resource Once a TagBinding is created, the TagValue is applied to all the descendants of the Google Cloud resource.",
              :type "object",
              :properties {:name {:description "Output only. The name of the TagBinding. This is a String of the form: `tagBindings/{full-resource-name}/{tag-value-name}` (e.g. `tagBindings/%2F%2Fcloudresourcemanager.googleapis.com%2Fprojects%2F123/tagValues/456`).",
                                  :readOnly true,
                                  :type "string"},
                           :parent {:description "The full resource name of the resource the TagValue is bound to. E.g. `//cloudresourcemanager.googleapis.com/projects/123`",
                                    :type "string"},
                           :tagValue {:description "The TagValue of the TagBinding. Must be of the form `tagValues/456`.",
                                      :type "string"},
                           :tagValueNamespacedName {:description "The namespaced name for the TagValue of the TagBinding. Must be in the format `{parent_id}/{tag_key_short_name}/{short_name}`. For methods that support TagValue namespaced name, only one of tag_value_namespaced_name or tag_value may be filled. Requests with both fields will be rejected.",
                                                    :type "string"}}},
 :Expr {:id "Expr",
        :description "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
        :type "object",
        :properties {:expression {:description "Textual representation of an expression in Common Expression Language syntax.",
                                  :type "string"},
                     :title {:description "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
                             :type "string"},
                     :description {:description "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
                                   :type "string"},
                     :location {:description "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
                                :type "string"}}},
 :SearchProjectsResponse {:id "SearchProjectsResponse",
                          :description "A page of the response received from the SearchProjects method. A paginated response where more pages are available has `next_page_token` set. This token can be used in a subsequent request to retrieve the next request page.",
                          :type "object",
                          :properties {:projects {:description "The list of Projects that matched the list filter query. This list can be paginated.",
                                                  :type "array",
                                                  :items {:$ref "Project"}},
                                       :nextPageToken {:description "Pagination token. If the result set is too large to fit in a single response, this token is returned. It encodes the position of the current result cursor. Feeding this value into a new list request with the `page_token` parameter gives the next page of the results. When `next_page_token` is not filled in, there is no next page and the list returned is the last page in the result set. Pagination tokens have a limited lifetime.",
                                                       :type "string"}}},
 :UpdateTagValueMetadata {:id "UpdateTagValueMetadata",
                          :description "Runtime operation information for updating a TagValue.",
                          :type "object",
                          :properties {}},
 :MoveProjectMetadata {:id "MoveProjectMetadata",
                       :description "A status object which is used as the `metadata` field for the Operation returned by MoveProject.",
                       :type "object",
                       :properties {}},
 :Organization {:id "Organization",
                :description "The root node in the resource hierarchy to which a particular entity's (a company, for example) resources belong.",
                :type "object",
                :properties {:name {:description "Output only. The resource name of the organization. This is the organization's relative path in the API. Its format is \"organizations/[organization_id]\". For example, \"organizations/1234\".",
                                    :readOnly true,
                                    :type "string"},
                             :displayName {:description "Output only. A human-readable string that refers to the organization in the Google Cloud Console. This string is set by the server and cannot be changed. The string will be set to the primary domain (for example, \"google.com\") of the Google Workspace customer that owns the organization.",
                                           :readOnly true,
                                           :type "string"},
                             :directoryCustomerId {:description "Immutable. The G Suite / Workspace customer id used in the Directory API.",
                                                   :type "string"},
                             :state {:description "Output only. The organization's current lifecycle state.",
                                     :readOnly true,
                                     :type "string",
                                     :enumDescriptions ["Unspecified state. This is only useful for distinguishing unset values."
                                                        "The normal and active state."
                                                        "The organization has been marked for deletion by the user."],
                                     :enum ["STATE_UNSPECIFIED"
                                            "ACTIVE"
                                            "DELETE_REQUESTED"]},
                             :createTime {:description "Output only. Timestamp when the Organization was created.",
                                          :readOnly true,
                                          :type "string",
                                          :format "google-datetime"},
                             :updateTime {:description "Output only. Timestamp when the Organization was last modified.",
                                          :readOnly true,
                                          :type "string",
                                          :format "google-datetime"},
                             :deleteTime {:description "Output only. Timestamp when the Organization was requested for deletion.",
                                          :readOnly true,
                                          :type "string",
                                          :format "google-datetime"},
                             :etag {:description "Output only. A checksum computed by the server based on the current value of the Organization resource. This may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
                                    :readOnly true,
                                    :type "string"}}},
 :CreateTagBindingMetadata {:id "CreateTagBindingMetadata",
                            :description "Runtime operation information for creating a TagValue.",
                            :type "object",
                            :properties {}},
 :SearchOrganizationsResponse {:id "SearchOrganizationsResponse",
                               :description "The response returned from the `SearchOrganizations` method.",
                               :type "object",
                               :properties {:organizations {:description "The list of Organizations that matched the search query, possibly paginated.",
                                                            :type "array",
                                                            :items {:$ref "Organization"}},
                                            :nextPageToken {:description "A pagination token to be used to retrieve the next page of results. If the result is too large to fit within the page size specified in the request, this field will be set with a token that can be used to fetch the next page of results. If this field is empty, it indicates that this response contains the last page of results.",
                                                            :type "string"}}},
 :CreateTagKeyMetadata {:id "CreateTagKeyMetadata",
                        :description "Runtime operation information for creating a TagKey.",
                        :type "object",
                        :properties {}},
 :UndeleteFolderRequest {:id "UndeleteFolderRequest",
                         :description "The UndeleteFolder request message.",
                         :type "object",
                         :properties {}},
 :FolderOperationError {:id "FolderOperationError",
                        :description "A classification of the Folder Operation error.",
                        :type "object",
                        :properties {:errorMessageId {:description "The type of operation error experienced.",
                                                      :type "string",
                                                      :enumDescriptions ["The error type was unrecognized or unspecified."
                                                                         "The attempted action would violate the max folder depth constraint."
                                                                         "The attempted action would violate the max child folders constraint."
                                                                         "The attempted action would violate the locally-unique folder display_name constraint."
                                                                         "The resource being moved has been deleted."
                                                                         "The resource a folder was being added to has been deleted."
                                                                         "The attempted action would introduce cycle in resource path."
                                                                         "The attempted action would move a folder that is already being moved."
                                                                         "The folder the caller is trying to delete contains active resources."
                                                                         "The attempted action would violate the max deleted folder depth constraint."],
                                                      :enum ["ERROR_TYPE_UNSPECIFIED"
                                                             "ACTIVE_FOLDER_HEIGHT_VIOLATION"
                                                             "MAX_CHILD_FOLDERS_VIOLATION"
                                                             "FOLDER_NAME_UNIQUENESS_VIOLATION"
                                                             "RESOURCE_DELETED_VIOLATION"
                                                             "PARENT_DELETED_VIOLATION"
                                                             "CYCLE_INTRODUCED_VIOLATION"
                                                             "FOLDER_BEING_MOVED_VIOLATION"
                                                             "FOLDER_TO_DELETE_NON_EMPTY_VIOLATION"
                                                             "DELETED_FOLDER_HEIGHT_VIOLATION"]}}},
 :ListTagHoldsResponse {:id "ListTagHoldsResponse",
                        :description "The ListTagHolds response.",
                        :type "object",
                        :properties {:tagHolds {:description "A possibly paginated list of TagHolds.",
                                                :type "array",
                                                :items {:$ref "TagHold"}},
                                     :nextPageToken {:description "Pagination token. If the result set is too large to fit in a single response, this token is returned. It encodes the position of the current result cursor. Feeding this value into a new list request with the `page_token` parameter gives the next page of the results. When `next_page_token` is not filled in, there is no next page and the list returned is the last page in the result set. Pagination tokens have a limited lifetime.",
                                                     :type "string"}}},
 :Policy {:id "Policy",
          :description "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
          :type "object",
          :properties {:version {:description "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                                 :type "integer",
                                 :format "int32"},
                       :bindings {:description "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                                  :type "array",
                                  :items {:$ref "Binding"}},
                       :auditConfigs {:description "Specifies cloud audit logging configuration for this policy.",
                                      :type "array",
                                      :items {:$ref "AuditConfig"}},
                       :etag {:description "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                              :type "string",
                              :format "byte"}}},
 :Project {:id "Project",
           :description "A project is a high-level Google Cloud entity. It is a container for ACLs, APIs, App Engine Apps, VMs, and other Google Cloud Platform resources.",
           :type "object",
           :properties {:tags {:description "Optional. Input only. Immutable. Tag keys/values directly bound to this project. Each item in the map must be expressed as \" : \". For example: \"123/environment\" : \"production\", \"123/costCenter\" : \"marketing\" Note: Currently this field is in Preview.",
                               :type "object",
                               :additionalProperties {:type "string"}},
                        :labels {:description "Optional. The labels associated with this project. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: \\[a-z\\](\\[-a-z0-9\\]*\\[a-z0-9\\])?. Label values must be between 0 and 63 characters long and must conform to the regular expression (\\[a-z\\](\\[-a-z0-9\\]*\\[a-z0-9\\])?)?. No more than 64 labels can be associated with a given resource. Clients should store labels in a representation such as JSON that does not depend on specific characters being disallowed. Example: `\"myBusinessDimension\" : \"businessValue\"`",
                                 :type "object",
                                 :additionalProperties {:type "string"}},
                        :deleteTime {:description "Output only. The time at which this resource was requested for deletion.",
                                     :readOnly true,
                                     :type "string",
                                     :format "google-datetime"},
                        :parent {:description "Optional. A reference to a parent Resource. eg., `organizations/123` or `folders/876`.",
                                 :type "string"},
                        :displayName {:description "Optional. A user-assigned display name of the project. When present it must be between 4 to 30 characters. Allowed characters are: lowercase and uppercase letters, numbers, hyphen, single-quote, double-quote, space, and exclamation point. Example: `My Project`",
                                      :type "string"},
                        :name {:description "Output only. The unique resource name of the project. It is an int64 generated number prefixed by \"projects/\". Example: `projects/415104041262`",
                               :readOnly true,
                               :type "string"},
                        :createTime {:description "Output only. Creation time.",
                                     :readOnly true,
                                     :type "string",
                                     :format "google-datetime"},
                        :etag {:description "Output only. A checksum computed by the server based on the current value of the Project resource. This may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
                               :readOnly true,
                               :type "string"},
                        :state {:description "Output only. The project lifecycle state.",
                                :readOnly true,
                                :type "string",
                                :enumDescriptions ["Unspecified state. This is only used/useful for distinguishing unset values."
                                                   "The normal and active state."
                                                   "The project has been marked for deletion by the user (by invoking DeleteProject) or by the system (Google Cloud Platform). This can generally be reversed by invoking UndeleteProject."],
                                :enum ["STATE_UNSPECIFIED"
                                       "ACTIVE"
                                       "DELETE_REQUESTED"]},
                        :updateTime {:description "Output only. The most recent time this resource was modified.",
                                     :readOnly true,
                                     :type "string",
                                     :format "google-datetime"},
                        :projectId {:description "Immutable. The unique, user-assigned id of the project. It must be 6 to 30 lowercase ASCII letters, digits, or hyphens. It must start with a letter. Trailing hyphens are prohibited. Example: `tokyo-rain-123`",
                                    :type "string"}}},
 :Status {:id "Status",
          :description "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
          :type "object",
          :properties {:code {:description "The status code, which should be an enum value of google.rpc.Code.",
                              :type "integer",
                              :format "int32"},
                       :message {:description "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
                                 :type "string"},
                       :details {:description "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                                 :type "array",
                                 :items {:type "object",
                                         :additionalProperties {:type "any",
                                                                :description "Properties of the object. Contains field @type with type URL."}}}}}}
