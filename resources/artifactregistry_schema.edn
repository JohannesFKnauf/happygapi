{:UploadAptArtifactMediaResponse {:description "The response to upload an artifact.",
                                  :properties {:operation {:$ref "Operation",
                                                           :description "Operation to be returned to the user."}},
                                  :type "object",
                                  :id "UploadAptArtifactMediaResponse"},
 :Operation {:description "This resource represents a long-running operation that is the result of a network API call.",
             :id "Operation",
             :properties {:name {:type "string",
                                 :description "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."},
                          :done {:type "boolean",
                                 :description "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."},
                          :metadata {:additionalProperties {:type "any",
                                                            :description "Properties of the object. Contains field @type with type URL."},
                                     :type "object",
                                     :description "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."},
                          :error {:$ref "Status",
                                  :description "The error result of the operation in case of failure or cancellation."},
                          :response {:type "object",
                                     :additionalProperties {:type "any",
                                                            :description "Properties of the object. Contains field @type with type URL."},
                                     :description "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."}},
             :type "object"},
 :ImportAptArtifactsErrorInfo {:id "ImportAptArtifactsErrorInfo",
                               :properties {:error {:description "The detailed error status.",
                                                    :$ref "Status"},
                                            :gcsSource {:$ref "ImportAptArtifactsGcsSource",
                                                        :description "Google Cloud Storage location requested."}},
                               :type "object",
                               :description "Error information explaining why a package was not imported."},
 :ListDockerImagesResponse {:properties {:dockerImages {:description "The docker images returned.",
                                                        :type "array",
                                                        :items {:$ref "DockerImage"}},
                                         :nextPageToken {:type "string",
                                                         :description "The token to retrieve the next page of artifacts, or empty if there are no more artifacts to return."}},
                            :id "ListDockerImagesResponse",
                            :description "The response from listing docker images.",
                            :type "object"},
 :CancelOperationRequest {:type "object",
                          :description "The request message for Operations.CancelOperation.",
                          :id "CancelOperationRequest",
                          :properties {}},
 :ImportYumArtifactsResponse {:id "ImportYumArtifactsResponse",
                              :description "The response message from importing artifacts.",
                              :type "object",
                              :properties {:errors {:items {:$ref "ImportYumArtifactsErrorInfo"},
                                                    :type "array",
                                                    :description "Detailed error info for packages that were not imported."},
                                           :yumArtifacts {:description "The yum artifacts updated.",
                                                          :type "array",
                                                          :items {:$ref "YumArtifact"}}}},
 :Empty {:properties {},
         :description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
         :type "object",
         :id "Empty"},
 :DockerImage {:properties {:name {:description "Required. registry_location, project_id, repository_name and image id forms a unique image name:`projects//locations//repository//dockerImages/`. For example, \"projects/test-project/locations/us-west4/repositories/test-repo/dockerImages/ nginx@sha256:e9954c1fc875017be1c3e36eca16be2d9e9bccc4bf072163515467d6a823c7cf\", where \"us-west4\" is the registry_location, \"test-project\" is the project_id, \"test-repo\" is the repository_name and \"nginx@sha256:e9954c1fc875017be1c3e36eca16be2d9e9bccc4bf072163515467d6a823c7cf\" is the image's digest.",
                                   :type "string"},
                            :tags {:description "Tags attached to this image.",
                                   :items {:type "string"},
                                   :type "array"},
                            :imageSizeBytes {:format "int64",
                                             :type "string",
                                             :description "Calculated size of the image. This field is returned as the 'metadata.imageSizeBytes' field in the Version resource."},
                            :uri {:type "string",
                                  :description "Required. URL to access the image. Example: us-west4-docker.pkg.dev/test-project/test-repo/nginx@sha256:e9954c1fc875017be1c3e36eca16be2d9e9bccc4bf072163515467d6a823c7cf"},
                            :buildTime {:format "google-datetime",
                                        :type "string",
                                        :description "The time this image was built. This field is returned as the 'metadata.buildTime' field in the Version resource. The build time is returned to the client as an RFC 3339 string, which can be easily used with the JavaScript Date constructor and keeps the Version timestamps returned via OnePlatform consistent, as JSON marshals google.protobuf.Timestamp into an RFC 3339 string."},
                            :uploadTime {:type "string",
                                         :description "Time the image was uploaded.",
                                         :format "google-datetime"},
                            :mediaType {:description "Media type of this image, e.g. \"application/vnd.docker.distribution.manifest.v2+json\". This field is returned as the 'metadata.mediaType' field in the Version resource.",
                                        :type "string"}},
               :description "DockerImage represents a docker artifact. The following fields are returned as untyped metadata in the Version resource, using camelcase keys (i.e. metadata.imageSizeBytes): - imageSizeBytes - mediaType - buildTime",
               :id "DockerImage",
               :type "object"},
 :UploadAptArtifactResponse {:description "The response of the completed artifact upload operation. This response is contained in the Operation and available to users.",
                             :id "UploadAptArtifactResponse",
                             :type "object",
                             :properties {:aptArtifacts {:description "The Apt artifacts updated.",
                                                         :items {:$ref "AptArtifact"},
                                                         :type "array"}}},
 :YumArtifact {:id "YumArtifact",
               :type "object",
               :properties {:architecture {:description "Output only. Operating system architecture of the artifact.",
                                           :readOnly true,
                                           :type "string"},
                            :packageType {:type "string",
                                          :enumDescriptions ["Package type is not specified."
                                                             "Binary package (.rpm). .rpm"
                                                             "Source package (.srpm)."],
                                          :enum ["PACKAGE_TYPE_UNSPECIFIED"
                                                 "BINARY"
                                                 "SOURCE"],
                                          :readOnly true,
                                          :description "Output only. An artifact is a binary or source package."},
                            :packageName {:readOnly true,
                                          :description "Output only. The yum package name of the artifact.",
                                          :type "string"},
                            :name {:type "string",
                                   :description "Output only. The Artifact Registry resource name of the artifact.",
                                   :readOnly true}},
               :description "A detailed representation of a Yum artifact."},
 :ImportAptArtifactsResponse {:type "object",
                              :id "ImportAptArtifactsResponse",
                              :properties {:aptArtifacts {:description "The Apt artifacts updated.",
                                                          :items {:$ref "AptArtifact"},
                                                          :type "array"},
                                           :errors {:description "Detailed error info for packages that were not imported.",
                                                    :type "array",
                                                    :items {:$ref "ImportAptArtifactsErrorInfo"}}},
                              :description "The response message from importing artifacts."},
 :ListRepositoriesResponse {:type "object",
                            :description "The response from listing repositories.",
                            :id "ListRepositoriesResponse",
                            :properties {:repositories {:description "The repositories returned.",
                                                        :type "array",
                                                        :items {:$ref "Repository"}},
                                         :nextPageToken {:type "string",
                                                         :description "The token to retrieve the next page of repositories, or empty if there are no more repositories to return."}}},
 :ImportYumArtifactsGcsSource {:id "ImportYumArtifactsGcsSource",
                               :properties {:useWildcards {:description "Supports URI wildcards for matching multiple objects from a single URI.",
                                                           :type "boolean"},
                                            :uris {:items {:type "string"},
                                                   :type "array",
                                                   :description "Cloud Storage paths URI (e.g., gs://my_bucket//my_object)."}},
                               :description "Google Cloud Storage location where the artifacts currently reside.",
                               :type "object"},
 :ImportAptArtifactsGcsSource {:description "Google Cloud Storage location where the artifacts currently reside.",
                               :id "ImportAptArtifactsGcsSource",
                               :type "object",
                               :properties {:uris {:description "Cloud Storage paths URI (e.g., gs://my_bucket//my_object).",
                                                   :items {:type "string"},
                                                   :type "array"},
                                            :useWildcards {:description "Supports URI wildcards for matching multiple objects from a single URI.",
                                                           :type "boolean"}}},
 :AptArtifact {:description "A detailed representation of an Apt artifact. Information in the record is derived from the archive's control file. See https://www.debian.org/doc/debian-policy/ch-controlfields.html",
               :properties {:packageType {:enumDescriptions ["Package type is not specified."
                                                             "Binary package."
                                                             "Source package."],
                                          :enum ["PACKAGE_TYPE_UNSPECIFIED"
                                                 "BINARY"
                                                 "SOURCE"],
                                          :description "Output only. An artifact is a binary or source package.",
                                          :readOnly true,
                                          :type "string"},
                            :architecture {:type "string",
                                           :readOnly true,
                                           :description "Output only. Operating system architecture of the artifact."},
                            :name {:description "Output only. The Artifact Registry resource name of the artifact.",
                                   :type "string",
                                   :readOnly true},
                            :controlFile {:readOnly true,
                                          :format "byte",
                                          :description "Output only. Contents of the artifact's control metadata file.",
                                          :type "string"},
                            :packageName {:readOnly true,
                                          :description "Output only. The Apt package name of the artifact.",
                                          :type "string"},
                            :component {:type "string",
                                        :description "Output only. Repository component of the artifact.",
                                        :readOnly true}},
               :type "object",
               :id "AptArtifact"},
 :ListOperationsResponse {:description "The response message for Operations.ListOperations.",
                          :type "object",
                          :id "ListOperationsResponse",
                          :properties {:operations {:type "array",
                                                    :items {:$ref "Operation"},
                                                    :description "A list of operations that matches the specified filter in the request."},
                                       :nextPageToken {:type "string",
                                                       :description "The standard List next-page token."}}},
 :Repository {:description "A Repository for storing artifacts with a specific format.",
              :type "object",
              :properties {:labels {:type "object",
                                    :additionalProperties {:type "string"},
                                    :description "Labels with user-defined metadata. This field may contain up to 64 entries. Label keys and values may be no longer than 63 characters. Label keys must begin with a lowercase letter and may only contain lowercase letters, numeric characters, underscores, and dashes."},
                           :format {:description "The format of packages that are stored in the repository.",
                                    :type "string",
                                    :enumDescriptions ["Unspecified package format."
                                                       "Docker package format."
                                                       "Maven package format."
                                                       "NPM package format."
                                                       "APT package format."
                                                       "YUM package format."
                                                       "Python package format."],
                                    :enum ["FORMAT_UNSPECIFIED"
                                           "DOCKER"
                                           "MAVEN"
                                           "NPM"
                                           "APT"
                                           "YUM"
                                           "PYTHON"]},
                           :name {:type "string",
                                  :description "The name of the repository, for example: \"projects/p1/locations/us-central1/repositories/repo1\"."},
                           :createTime {:format "google-datetime",
                                        :description "The time when the repository was created.",
                                        :type "string"},
                           :kmsKeyName {:type "string",
                                        :description "The Cloud KMS resource name of the customer managed encryption key that’s used to encrypt the contents of the Repository. Has the form: `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`. This value may not be changed after the Repository has been created."},
                           :updateTime {:type "string",
                                        :format "google-datetime",
                                        :description "The time when the repository was last updated."},
                           :description {:description "The user-provided description of the repository.",
                                         :type "string"}},
              :id "Repository"},
 :ImportYumArtifactsErrorInfo {:properties {:error {:$ref "Status",
                                                    :description "The detailed error status."},
                                            :gcsSource {:description "Google Cloud Storage location requested.",
                                                        :$ref "ImportYumArtifactsGcsSource"}},
                               :type "object",
                               :description "Error information explaining why a package was not imported.",
                               :id "ImportYumArtifactsErrorInfo"},
 :UploadYumArtifactMediaResponse {:id "UploadYumArtifactMediaResponse",
                                  :properties {:operation {:description "Operation to be returned to the user.",
                                                           :$ref "Operation"}},
                                  :type "object",
                                  :description "The response to upload an artifact."},
 :UploadYumArtifactResponse {:description "The response of the completed artifact upload operation. This response is contained in the Operation and available to users.",
                             :type "object",
                             :properties {:yumArtifacts {:items {:$ref "YumArtifact"},
                                                         :type "array",
                                                         :description "The Apt artifacts updated."}},
                             :id "UploadYumArtifactResponse"},
 :Status {:description "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
          :type "object",
          :id "Status",
          :properties {:code {:type "integer",
                              :description "The status code, which should be an enum value of google.rpc.Code.",
                              :format "int32"},
                       :details {:type "array",
                                 :description "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                                 :items {:additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                                :type "any"},
                                         :type "object"}},
                       :message {:type "string",
                                 :description "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."}}}}
