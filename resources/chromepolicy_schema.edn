{:Proto2DescriptorProto {:type "object",
                         :id "Proto2DescriptorProto",
                         :properties {:name {:type "string"},
                                      :oneofDecl {:items {:$ref "Proto2OneofDescriptorProto"},
                                                  :type "array"},
                                      :field {:items {:$ref "Proto2FieldDescriptorProto"},
                                              :type "array"},
                                      :enumType {:type "array",
                                                 :items {:$ref "Proto2EnumDescriptorProto"}},
                                      :nestedType {:type "array",
                                                   :items {:$ref "Proto2DescriptorProto"}}},
                         :description "Describes a message type."},
 :GoogleChromePolicyV1ResolveResponse {:description "Response message for getting the resolved policy value for a specific target.",
                                       :properties {:resolvedPolicies {:items {:$ref "GoogleChromePolicyV1ResolvedPolicy"},
                                                                       :type "array",
                                                                       :description "The list of resolved policies found by the resolve request."},
                                                    :nextPageToken {:type "string",
                                                                    :description "The page token used to get the next set of resolved policies found by the request."}},
                                       :id "GoogleChromePolicyV1ResolveResponse",
                                       :type "object"},
 :GoogleChromePolicyV1PolicySchema {:type "object",
                                    :id "GoogleChromePolicyV1PolicySchema",
                                    :description "Resource representing a policy schema. Next ID: 10",
                                    :properties {:definition {:$ref "Proto2FileDescriptorProto",
                                                              :description "Schema definition using proto descriptor."},
                                                 :fieldDescriptions {:items {:$ref "GoogleChromePolicyV1PolicySchemaFieldDescription"},
                                                                     :type "array",
                                                                     :description "Output only. Detailed description of each field that is part of the schema.",
                                                                     :readOnly true},
                                                 :accessRestrictions {:items {:type "string"},
                                                                      :readOnly true,
                                                                      :description "Output only. Specific access restrictions related to this policy.",
                                                                      :type "array"},
                                                 :name {:description "Format: name=customers/{customer}/policySchemas/{schema_namespace}",
                                                        :type "string"},
                                                 :policyDescription {:type "string",
                                                                     :description "Output only. Description about the policy schema for user consumption.",
                                                                     :readOnly true},
                                                 :schemaName {:description "Output only. The full qualified name of the policy schema. This value is used to fill the field `policy_schema` in PolicyValue when calling BatchInheritOrgUnitPolicies or BatchModifyOrgUnitPolicies.",
                                                              :type "string",
                                                              :readOnly true},
                                                 :supportUri {:description "Output only. URI to related support article for this schema.",
                                                              :readOnly true,
                                                              :type "string"},
                                                 :additionalTargetKeyNames {:type "array",
                                                                            :description "Output only. Additional key names that will be used to identify the target of the policy value. When specifying a `policyTargetKey`, each of the additional keys specified here will have to be included in the `additionalTargetKeys` map.",
                                                                            :readOnly true,
                                                                            :items {:$ref "GoogleChromePolicyV1AdditionalTargetKeyName"}},
                                                 :notices {:readOnly true,
                                                           :type "array",
                                                           :items {:$ref "GoogleChromePolicyV1PolicySchemaNoticeDescription"},
                                                           :description "Output only. Special notice messages related to setting certain values in certain fields in the schema."}}},
 :Proto2EnumValueDescriptorProto {:id "Proto2EnumValueDescriptorProto",
                                  :properties {:name {:type "string"},
                                               :number {:type "integer",
                                                        :format "int32"}},
                                  :description "Describes a value within an enum.",
                                  :type "object"},
 :GoogleChromePolicyV1ModifyOrgUnitPolicyRequest {:id "GoogleChromePolicyV1ModifyOrgUnitPolicyRequest",
                                                  :properties {:policyValue {:$ref "GoogleChromePolicyV1PolicyValue",
                                                                             :description "The new value for the policy."},
                                                               :policyTargetKey {:$ref "GoogleChromePolicyV1PolicyTargetKey",
                                                                                 :description "Required. The key of the target for which we want to modify a policy. The target resource must point to an Org Unit."},
                                                               :updateMask {:format "google-fieldmask",
                                                                            :type "string",
                                                                            :description "Required. Policy fields to update. Only fields in this mask will be updated; other fields in `policy_value` will be ignored (even if they have values). If a field is in this list it must have a value in 'policy_value'."}},
                                                  :type "object",
                                                  :description "Request parameters for modifying a policy value for a specific org unit target."},
 :GoogleChromePolicyV1PolicySchemaFieldKnownValueDescription {:id "GoogleChromePolicyV1PolicySchemaFieldKnownValueDescription",
                                                              :description "Provides detailed information about a known value that is allowed for a particular field in a PolicySchema.",
                                                              :type "object",
                                                              :properties {:description {:type "string",
                                                                                         :description "Output only. Additional description for this value.",
                                                                                         :readOnly true},
                                                                           :value {:readOnly true,
                                                                                   :description "Output only. The string represenstation of the value that can be set for the field.",
                                                                                   :type "string"}}},
 :Proto2FileDescriptorProto {:description "Describes a complete .proto file.",
                             :id "Proto2FileDescriptorProto",
                             :type "object",
                             :properties {:syntax {:description "The syntax of the proto file. The supported values are \"proto2\" and \"proto3\".",
                                                   :type "string"},
                                          :package {:description "e.g. \"foo\", \"foo.bar\", etc.",
                                                    :type "string"},
                                          :name {:description "file name, relative to root of source tree",
                                                 :type "string"},
                                          :enumType {:items {:$ref "Proto2EnumDescriptorProto"},
                                                     :type "array"},
                                          :messageType {:type "array",
                                                        :items {:$ref "Proto2DescriptorProto"},
                                                        :description "All top-level definitions in this file."}}},
 :GoogleProtobufEmpty {:properties {},
                       :description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
                       :type "object",
                       :id "GoogleProtobufEmpty"},
 :GoogleChromePolicyV1BatchModifyOrgUnitPoliciesRequest {:properties {:requests {:description "List of policies to modify as defined by the `requests`. All requests in the list must follow these restrictions: 1. All schemas in the list must have the same root namespace. 2. All `policyTargetKey.targetResource` values must point to an org unit resource. 3. All `policyTargetKey` values must have the same key names in the ` additionalTargetKeys`. This also means if one of the targets has an empty `additionalTargetKeys` map, all of the targets must have an empty `additionalTargetKeys` map. 4. No two modification requests can reference the same `policySchema` + ` policyTargetKey` pair. ",
                                                                                 :type "array",
                                                                                 :items {:$ref "GoogleChromePolicyV1ModifyOrgUnitPolicyRequest"}}},
                                                         :id "GoogleChromePolicyV1BatchModifyOrgUnitPoliciesRequest",
                                                         :type "object",
                                                         :description "Request message for modifying multiple policy values for a specific target."},
 :Proto2OneofDescriptorProto {:description "Describes a oneof.",
                              :properties {:name {:type "string"}},
                              :id "Proto2OneofDescriptorProto",
                              :type "object"},
 :Proto2EnumDescriptorProto {:type "object",
                             :properties {:name {:type "string"},
                                          :value {:items {:$ref "Proto2EnumValueDescriptorProto"},
                                                  :type "array"}},
                             :description "Describes an enum type.",
                             :id "Proto2EnumDescriptorProto"},
 :GoogleChromePolicyV1AdditionalTargetKeyName {:properties {:key {:description "Key name.",
                                                                  :type "string"},
                                                            :keyDescription {:type "string",
                                                                             :description "Key description."}},
                                               :description "Additional key names that will be used to identify the target of the policy value.",
                                               :type "object",
                                               :id "GoogleChromePolicyV1AdditionalTargetKeyName"},
 :GoogleChromePolicyV1PolicySchemaFieldDescription {:description "Provides detailed information for a particular field that is part of a PolicySchema.",
                                                    :type "object",
                                                    :id "GoogleChromePolicyV1PolicySchemaFieldDescription",
                                                    :properties {:description {:readOnly true,
                                                                               :type "string",
                                                                               :description "Output only. The description for the field."},
                                                                 :knownValueDescriptions {:readOnly true,
                                                                                          :items {:$ref "GoogleChromePolicyV1PolicySchemaFieldKnownValueDescription"},
                                                                                          :type "array",
                                                                                          :description "Output only. If the field has a set of know values, this field will provide a description for these values."},
                                                                 :inputConstraint {:description "Output only. Any input constraints associated on the values for the field.",
                                                                                   :readOnly true,
                                                                                   :type "string"},
                                                                 :nestedFieldDescriptions {:items {:$ref "GoogleChromePolicyV1PolicySchemaFieldDescription"},
                                                                                           :type "array",
                                                                                           :readOnly true,
                                                                                           :description "Output only. Provides the description of the fields nested in this field, if the field is a message type that defines multiple fields."},
                                                                 :field {:type "string",
                                                                         :readOnly true,
                                                                         :description "Output only. The name of the field for associated with this description."}}},
 :GoogleChromePolicyV1PolicyValue {:id "GoogleChromePolicyV1PolicyValue",
                                   :type "object",
                                   :properties {:value {:type "object",
                                                        :additionalProperties {:description "Properties of the object.",
                                                                               :type "any"},
                                                        :description "The value of the policy that is compatible with the schema that it is associated with."},
                                                :policySchema {:type "string",
                                                               :description "The fully qualified name of the policy schema associated with this policy."}},
                                   :description "A particular value for a policy managed by the service."},
 :GoogleChromePolicyV1UploadPolicyFileResponse {:type "object",
                                                :description "Response message for downloading an uploaded file. Next ID: 2",
                                                :id "GoogleChromePolicyV1UploadPolicyFileResponse",
                                                :properties {:downloadUri {:description "The uri for end user to download the file.",
                                                                           :type "string"}}},
 :GoogleChromePolicyV1PolicyTargetKey {:description "The key used to identify the target on which the policy will be applied.",
                                       :properties {:targetResource {:description "The target resource on which this policy is applied. The following resources are supported: * Organizational Unit (\"orgunits/{orgunit_id}\")",
                                                                     :type "string"},
                                                    :additionalTargetKeys {:type "object",
                                                                           :additionalProperties {:type "string"},
                                                                           :description "Map containing the additional target key name and value pairs used to further identify the target of the policy."}},
                                       :type "object",
                                       :id "GoogleChromePolicyV1PolicyTargetKey"},
 :Proto2FieldDescriptorProto {:id "Proto2FieldDescriptorProto",
                              :description "Describes a field within a message.",
                              :type "object",
                              :properties {:typeName {:type "string",
                                                      :description "For message and enum types, this is the name of the type. If the name starts with a '.', it is fully-qualified. Otherwise, C++-like scoping rules are used to find the type (i.e. first the nested types within this message are searched, then within the parent, on up to the root namespace)."},
                                           :number {:format "int32",
                                                    :type "integer"},
                                           :oneofIndex {:format "int32",
                                                        :type "integer",
                                                        :description "If set, gives the index of a oneof in the containing type's oneof_decl list. This field is a member of that oneof."},
                                           :name {:type "string"},
                                           :proto3Optional {:type "boolean",
                                                            :description "If true, this is a proto3 \"optional\". When a proto3 field is optional, it tracks presence regardless of field type. When proto3_optional is true, this field must be belong to a oneof to signal to old proto3 clients that presence is tracked for this field. This oneof is known as a \"synthetic\" oneof, and this field must be its sole member (each proto3 optional field gets its own synthetic oneof). Synthetic oneofs exist in the descriptor only, and do not generate any API. Synthetic oneofs must be ordered after all \"real\" oneofs. For message fields, proto3_optional doesn't create any semantic change, since non-repeated message fields always track presence. However it still indicates the semantic detail of whether the user wrote \"optional\" or not. This can be useful for round-tripping the .proto file. For consistency we give message fields a synthetic oneof also, even though it is not required to track presence. This is especially important because the parser can't tell if a field is a message or an enum, so it must always create a synthetic oneof. Proto2 optional fields do not set this flag, because they already indicate optional with `LABEL_OPTIONAL`."},
                                           :type {:enum ["TYPE_DOUBLE"
                                                         "TYPE_FLOAT"
                                                         "TYPE_INT64"
                                                         "TYPE_UINT64"
                                                         "TYPE_INT32"
                                                         "TYPE_FIXED64"
                                                         "TYPE_FIXED32"
                                                         "TYPE_BOOL"
                                                         "TYPE_STRING"
                                                         "TYPE_GROUP"
                                                         "TYPE_MESSAGE"
                                                         "TYPE_BYTES"
                                                         "TYPE_UINT32"
                                                         "TYPE_ENUM"
                                                         "TYPE_SFIXED32"
                                                         "TYPE_SFIXED64"
                                                         "TYPE_SINT32"
                                                         "TYPE_SINT64"],
                                                  :enumDescriptions ["0 is reserved for errors. Order is weird for historical reasons."
                                                                     ""
                                                                     "Not ZigZag encoded. Negative numbers take 10 bytes. Use TYPE_SINT64 if negative values are likely."
                                                                     ""
                                                                     "Not ZigZag encoded. Negative numbers take 10 bytes. Use TYPE_SINT32 if negative values are likely."
                                                                     ""
                                                                     ""
                                                                     ""
                                                                     ""
                                                                     "Tag-delimited aggregate. Group type is deprecated and not supported in proto3. However, Proto3 implementations should still be able to parse the group wire format and treat group fields as unknown fields."
                                                                     "Length-delimited aggregate."
                                                                     "New in version 2."
                                                                     ""
                                                                     ""
                                                                     ""
                                                                     ""
                                                                     "Uses ZigZag encoding."
                                                                     "Uses ZigZag encoding."],
                                                  :type "string",
                                                  :description "If type_name is set, this need not be set. If both this and type_name are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP."},
                                           :label {:enumDescriptions ["0 is reserved for errors"
                                                                      ""
                                                                      ""],
                                                   :type "string",
                                                   :enum ["LABEL_OPTIONAL"
                                                          "LABEL_REQUIRED"
                                                          "LABEL_REPEATED"]},
                                           :jsonName {:description "JSON name of this field. The value is set by protocol compiler. If the user has set a \"json_name\" option on this field, that option's value will be used. Otherwise, it's deduced from the field's name by converting it to camelCase.",
                                                      :type "string"},
                                           :defaultValue {:description "For numeric types, contains the original text representation of the value. For booleans, \"true\" or \"false\". For strings, contains the default text contents (not escaped in any way). For bytes, contains the C escaped value. All bytes >= 128 are escaped.",
                                                          :type "string"}}},
 :GoogleChromePolicyV1InheritOrgUnitPolicyRequest {:id "GoogleChromePolicyV1InheritOrgUnitPolicyRequest",
                                                   :description "Request parameters for inheriting policy value of a specific org unit target from the policy value of its parent org unit.",
                                                   :properties {:policySchema {:description "The fully qualified name of the policy schema that is being inherited.",
                                                                               :type "string"},
                                                                :policyTargetKey {:$ref "GoogleChromePolicyV1PolicyTargetKey",
                                                                                  :description "Required. The key of the target for which we want to modify a policy. The target resource must point to an Org Unit."}},
                                                   :type "object"},
 :GoogleChromePolicyV1ResolvedPolicy {:type "object",
                                      :id "GoogleChromePolicyV1ResolvedPolicy",
                                      :properties {:sourceKey {:readOnly true,
                                                               :description "Output only. The source resource from which this policy value is obtained. May be the same as `targetKey` if the policy is directly modified on the target, otherwise it would be another resource from which the policy gets its value (if applicable). If not present, the source is the default value for the customer.",
                                                               :$ref "GoogleChromePolicyV1PolicyTargetKey"},
                                                   :value {:readOnly true,
                                                           :description "Output only. The resolved value of the policy.",
                                                           :$ref "GoogleChromePolicyV1PolicyValue"},
                                                   :targetKey {:description "Output only. The target resource for which the resolved policy value applies.",
                                                               :readOnly true,
                                                               :$ref "GoogleChromePolicyV1PolicyTargetKey"}},
                                      :description "The resolved value of a policy for a given target."},
 :GoogleChromePolicyV1BatchInheritOrgUnitPoliciesRequest {:properties {:requests {:items {:$ref "GoogleChromePolicyV1InheritOrgUnitPolicyRequest"},
                                                                                  :type "array",
                                                                                  :description "List of policies that have to inherit their values as defined by the `requests`. All requests in the list must follow these restrictions: 1. All schemas in the list must have the same root namespace. 2. All `policyTargetKey.targetResource` values must point to an org unit resource. 3. All `policyTargetKey` values must have the same key names in the ` additionalTargetKeys`. This also means if one of the targets has an empty `additionalTargetKeys` map, all of the targets must have an empty `additionalTargetKeys` map. 4. No two modification requests can reference the same `policySchema` + ` policyTargetKey` pair. "}},
                                                          :description "Request message for specifying that multiple policy values inherit their value from their parents.",
                                                          :id "GoogleChromePolicyV1BatchInheritOrgUnitPoliciesRequest",
                                                          :type "object"},
 :GoogleChromePolicyV1PolicySchemaNoticeDescription {:properties {:field {:description "Output only. The field name associated with the notice.",
                                                                          :type "string",
                                                                          :readOnly true},
                                                                  :acknowledgementRequired {:readOnly true,
                                                                                            :description "Output only. Whether the user needs to acknowledge the notice message before the value can be set.",
                                                                                            :type "boolean"},
                                                                  :noticeMessage {:type "string",
                                                                                  :readOnly true,
                                                                                  :description "Output only. The notice message associate with the value of the field."},
                                                                  :noticeValue {:description "Output only. The value of the field that has a notice. When setting the field to this value, the user may be required to acknowledge the notice message in order for the value to be set.",
                                                                                :type "string",
                                                                                :readOnly true}},
                                                     :id "GoogleChromePolicyV1PolicySchemaNoticeDescription",
                                                     :type "object",
                                                     :description "Provides special notice messages related to a particular value in a field that is part of a PolicySchema."},
 :GoogleChromePolicyV1UploadPolicyFileRequest {:properties {:policyField {:description "Required. The fully qualified policy schema and field name this file is uploaded for. This information will be used to validate the content type of the file.",
                                                                          :type "string"}},
                                               :type "object",
                                               :id "GoogleChromePolicyV1UploadPolicyFileRequest",
                                               :description "Request message for uploading a file for a policy. Next ID: 5"},
 :GoogleChromePolicyV1ListPolicySchemasResponse {:description "Response message for listing policy schemas that match a filter.",
                                                 :properties {:policySchemas {:description "The list of policy schemas that match the query.",
                                                                              :type "array",
                                                                              :items {:$ref "GoogleChromePolicyV1PolicySchema"}},
                                                              :nextPageToken {:type "string",
                                                                              :description "The page token used to get the next page of policy schemas."}},
                                                 :id "GoogleChromePolicyV1ListPolicySchemasResponse",
                                                 :type "object"},
 :GoogleChromePolicyV1ResolveRequest {:properties {:policyTargetKey {:description "Required. The key of the target resource on which the policies should be resolved. The target resource must point to an Org Unit.",
                                                                     :$ref "GoogleChromePolicyV1PolicyTargetKey"},
                                                   :pageSize {:type "integer",
                                                              :description "The maximum number of policies to return, defaults to 100 and has a maximum of 1000.",
                                                              :format "int32"},
                                                   :policySchemaFilter {:description "The schema filter to apply to the resolve request. Specify a schema name to view a particular schema, for example: chrome.users.ShowLogoutButton Wildcards are supported, but only in the leaf portion of the schema name. Wildcards cannot be used in namespace directly. Please read https://developers.google.com/chrome/chrome-management/guides/policyapi for details on schema namepsaces. For example: Valid: \"chrome.users.*\", \"chrome.users.apps.*\", \"chrome.printers.*\" Invalid: \"*\", \"*.users\", \"chrome.*\", \"chrome.*.apps.*\"",
                                                                        :type "string"},
                                                   :pageToken {:description "The page token used to retrieve a specific page of the request.",
                                                               :type "string"}},
                                      :id "GoogleChromePolicyV1ResolveRequest",
                                      :type "object",
                                      :description "Request message for getting the resolved policy value for a specific target."}}
