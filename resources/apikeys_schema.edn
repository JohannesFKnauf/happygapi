{:V2UndeleteKeyRequest {:type "object",
                        :id "V2UndeleteKeyRequest",
                        :properties {},
                        :description "Request message for `UndeleteKey` method."},
 :V2Restrictions {:id "V2Restrictions",
                  :description "Describes the restrictions on the key.",
                  :properties {:browserKeyRestrictions {:$ref "V2BrowserKeyRestrictions",
                                                        :description "The HTTP referrers (websites) that are allowed to use the key."},
                               :androidKeyRestrictions {:$ref "V2AndroidKeyRestrictions",
                                                        :description "The Android apps that are allowed to use the key."},
                               :serverKeyRestrictions {:description "The IP addresses of callers that are allowed to use the key.",
                                                       :$ref "V2ServerKeyRestrictions"},
                               :apiTargets {:description "A restriction for a specific service and optionally one or more specific methods. Requests are allowed if they match any of these restrictions. If no restrictions are specified, all targets are allowed.",
                                            :items {:$ref "V2ApiTarget"},
                                            :type "array"},
                               :iosKeyRestrictions {:$ref "V2IosKeyRestrictions",
                                                    :description "The iOS apps that are allowed to use the key."}},
                  :type "object"},
 :V2BrowserKeyRestrictions {:properties {:allowedReferrers {:items {:type "string"},
                                                            :type "array",
                                                            :description "A list of regular expressions for the referrer URLs that are allowed to make API calls with this key."}},
                            :type "object",
                            :id "V2BrowserKeyRestrictions",
                            :description "The HTTP referrers (websites) that are allowed to use the key."},
 :Operation {:type "object",
             :properties {:error {:$ref "Status",
                                  :description "The error result of the operation in case of failure or cancellation."},
                          :response {:type "object",
                                     :description "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                                     :additionalProperties {:type "any",
                                                            :description "Properties of the object. Contains field @type with type URL."}},
                          :done {:description "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                                 :type "boolean"},
                          :name {:type "string",
                                 :description "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."},
                          :metadata {:type "object",
                                     :description "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                                     :additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                            :type "any"}}},
             :id "Operation",
             :description "This resource represents a long-running operation that is the result of a network API call."},
 :V2GetKeyStringResponse {:type "object",
                          :id "V2GetKeyStringResponse",
                          :properties {:keyString {:description "An encrypted and signed value of the key.",
                                                   :type "string"}},
                          :description "Response message for `GetKeyString` method."},
 :V2IosKeyRestrictions {:properties {:allowedBundleIds {:description "A list of bundle IDs that are allowed when making API calls with this key.",
                                                        :type "array",
                                                        :items {:type "string"}}},
                        :id "V2IosKeyRestrictions",
                        :type "object",
                        :description "The iOS apps that are allowed to use the key."},
 :V2Key {:id "V2Key",
         :type "object",
         :description "The representation of a key managed by the API Keys API.",
         :properties {:restrictions {:description "Key restrictions.",
                                     :$ref "V2Restrictions"},
                      :deleteTime {:readOnly true,
                                   :format "google-datetime",
                                   :description "Output only. A timestamp when this key was deleted. If the resource is not deleted, this must be empty.",
                                   :type "string"},
                      :displayName {:type "string",
                                    :description "Human-readable display name of this key that you can modify. The maximum length is 63 characters."},
                      :uid {:readOnly true,
                            :description "Output only. Unique id in UUID4 format.",
                            :type "string"},
                      :name {:readOnly true,
                             :description "Output only. The resource name of the key. The `name` has the form: `projects//locations/global/keys/`. For example: `projects/123456867718/locations/global/keys/b7ff1f9f-8275-410a-94dd-3855ee9b5dd2` NOTE: Key is a global resource; hence the only supported value for location is `global`.",
                             :type "string"},
                      :createTime {:type "string",
                                   :readOnly true,
                                   :format "google-datetime",
                                   :description "Output only. A timestamp identifying the time this key was originally created."},
                      :keyString {:description "Output only. An encrypted and signed value held by this key. This field can be accessed only through the `GetKeyString` method.",
                                  :readOnly true,
                                  :type "string"},
                      :etag {:readOnly true,
                             :description "Output only. A checksum computed by the server based on the current value of the Key resource. This may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
                             :type "string"},
                      :updateTime {:type "string",
                                   :format "google-datetime",
                                   :readOnly true,
                                   :description "Output only. A timestamp identifying the time this key was last updated."}}},
 :V2CloneKeyRequest {:type "object",
                     :description "Request message for `CloneKey` method.",
                     :id "V2CloneKeyRequest",
                     :properties {:keyId {:description "User specified key id (optional). If specified, it will become the final component of the key resource name. The id must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. In another word, the id must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`. The id must NOT be a UUID-like string.",
                                          :type "string"}}},
 :V2ApiTarget {:description "A restriction for a specific service and optionally one or multiple specific methods. Both fields are case insensitive.",
               :type "object",
               :properties {:methods {:items {:type "string"},
                                      :description "Optional. List of one or more methods that can be called. If empty, all methods for the service are allowed. A wildcard (*) can be used as the last symbol. Valid examples: `google.cloud.translate.v2.TranslateService.GetSupportedLanguage` `TranslateText` `Get*` `translate.googleapis.com.Get*`",
                                      :type "array"},
                            :service {:type "string",
                                      :description "The service for this restriction. It should be the canonical service name, for example: `translate.googleapis.com`. You can use [`gcloud services list`](/sdk/gcloud/reference/services/list) to get a list of services that are enabled in the project."}},
               :id "V2ApiTarget"},
 :V2AndroidApplication {:properties {:sha1Fingerprint {:type "string",
                                                       :description "The SHA1 fingerprint of the application. For example, both sha1 formats are acceptable : DA:39:A3:EE:5E:6B:4B:0D:32:55:BF:EF:95:60:18:90:AF:D8:07:09 or DA39A3EE5E6B4B0D3255BFEF95601890AFD80709. Output format is the latter."},
                                     :packageName {:description "The package name of the application.",
                                                   :type "string"}},
                        :type "object",
                        :id "V2AndroidApplication",
                        :description "Identifier of an Android application for key use."},
 :V2ServerKeyRestrictions {:properties {:allowedIps {:items {:type "string"},
                                                     :description "A list of the caller IP addresses that are allowed to make API calls with this key.",
                                                     :type "array"}},
                           :type "object",
                           :id "V2ServerKeyRestrictions",
                           :description "The IP addresses of callers that are allowed to use the key."},
 :V2AndroidKeyRestrictions {:type "object",
                            :id "V2AndroidKeyRestrictions",
                            :description "The Android apps that are allowed to use the key.",
                            :properties {:allowedApplications {:type "array",
                                                               :description "A list of Android applications that are allowed to make API calls with this key.",
                                                               :items {:$ref "V2AndroidApplication"}}}},
 :V2ListKeysResponse {:properties {:keys {:items {:$ref "V2Key"},
                                          :type "array",
                                          :description "A list of API keys."},
                                   :nextPageToken {:description "The pagination token for the next page of results.",
                                                   :type "string"}},
                      :type "object",
                      :id "V2ListKeysResponse",
                      :description "Response message for `ListKeys` method."},
 :V2LookupKeyResponse {:id "V2LookupKeyResponse",
                       :properties {:parent {:description "The project that owns the key with the value specified in the request.",
                                             :type "string"},
                                    :name {:description "The resource name of the API key. If the API key has been purged, resource name is empty.",
                                           :type "string"}},
                       :type "object",
                       :description "Response message for `LookupKey` method."},
 :Status {:id "Status",
          :properties {:details {:type "array",
                                 :description "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                                 :items {:additionalProperties {:type "any",
                                                                :description "Properties of the object. Contains field @type with type URL."},
                                         :type "object"}},
                       :message {:description "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
                                 :type "string"},
                       :code {:type "integer",
                              :description "The status code, which should be an enum value of google.rpc.Code.",
                              :format "int32"}},
          :description "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
          :type "object"}}
