{:RoomParticipant {:id "RoomParticipant",
                   :type "object",
                   :description "This is a JSON template for a participant in a room.",
                   :properties {:capabilities {:type "array",
                                               :description "The capabilities which can be used when communicating with this participant.",
                                               :items {:type "string"}},
                                :leaveReason {:type "string",
                                              :description "The reason the participant left the room; populated if the participant status is PARTICIPANT_LEFT.\nPossible values are:  \n- \"PLAYER_LEFT\" - The player explicitly chose to leave the room. \n- \"GAME_LEFT\" - The game chose to remove the player from the room. \n- \"ABANDONED\" - The player switched to another application and abandoned the room.\n- \"PEER_CONNECTION_FAILURE\" - The client was unable to establish or maintain a connection to other peer(s) in the room.\n- \"SERVER_ERROR\" - The client received an error response when it tried to communicate with the server. \n- \"TIMEOUT\" - The client timed out while waiting for players to join and connect. \n- \"PRESENCE_FAILURE\" - The client's XMPP connection ended abruptly."},
                                :connected {:type "boolean",
                                            :description "True if this participant is in the fully connected set of peers in the room."},
                                :clientAddress {:$ref "RoomClientAddress",
                                                :description "Client address for the participant."},
                                :status {:type "string",
                                         :description "The status of the participant with respect to the room.\nPossible values are:  \n- \"PARTICIPANT_INVITED\" - The participant has been invited to join the room, but has not yet responded. \n- \"PARTICIPANT_JOINED\" - The participant has joined the room (either after creating it or accepting an invitation.) \n- \"PARTICIPANT_DECLINED\" - The participant declined an invitation to join the room. \n- \"PARTICIPANT_LEFT\" - The participant joined the room and then left it."},
                                :id {:type "string",
                                     :description "An identifier for the participant in the scope of the room. Cannot be used to identify a player across rooms or in other contexts."},
                                :kind {:type "string",
                                       :description "Uniquely identifies the type of this resource. Value is always the fixed string games#roomParticipant.",
                                       :default "games#roomParticipant"},
                                :autoMatched {:type "boolean",
                                              :description "True if this participant was auto-matched with the requesting player."},
                                :player {:$ref "Player",
                                         :description "Information about the player. Not populated if this player was anonymously auto-matched against the requesting player. (Either player or autoMatchedPlayer will be set.)"},
                                :autoMatchedPlayer {:$ref "AnonymousPlayer",
                                                    :description "Information about a player that has been anonymously auto-matched against the requesting player. (Either player or autoMatchedPlayer will be set.)"}}},
 :AchievementDefinitionsListResponse {:id "AchievementDefinitionsListResponse",
                                      :type "object",
                                      :description "This is a JSON template for a list of achievement definition objects.",
                                      :properties {:items {:type "array",
                                                           :description "The achievement definitions.",
                                                           :items {:$ref "AchievementDefinition"}},
                                                   :kind {:type "string",
                                                          :description "Uniquely identifies the type of this resource. Value is always the fixed string games#achievementDefinitionsListResponse.",
                                                          :default "games#achievementDefinitionsListResponse"},
                                                   :nextPageToken {:type "string",
                                                                   :description "Token corresponding to the next page of results."}}},
 :PlayerLeaderboardScoreListResponse {:id "PlayerLeaderboardScoreListResponse",
                                      :type "object",
                                      :description "This is a JSON template for a list of player leaderboard scores.",
                                      :properties {:items {:type "array",
                                                           :description "The leaderboard scores.",
                                                           :items {:$ref "PlayerLeaderboardScore"}},
                                                   :kind {:type "string",
                                                          :description "Uniquely identifies the type of this resource. Value is always the fixed string games#playerLeaderboardScoreListResponse.",
                                                          :default "games#playerLeaderboardScoreListResponse"},
                                                   :nextPageToken {:type "string",
                                                                   :description "The pagination token for the next page of results."},
                                                   :player {:$ref "Player",
                                                            :description "The Player resources for the owner of this score."}}},
 :TurnBasedMatchTurn {:id "TurnBasedMatchTurn",
                      :type "object",
                      :description "This is a JSON template for the object representing a turn.",
                      :properties {:data {:$ref "TurnBasedMatchDataRequest",
                                          :description "The shared game state data after the turn is over."},
                                   :kind {:type "string",
                                          :description "Uniquely identifies the type of this resource. Value is always the fixed string games#turnBasedMatchTurn.",
                                          :default "games#turnBasedMatchTurn"},
                                   :matchVersion {:type "integer",
                                                  :description "The version of this match: an increasing counter, used to avoid out-of-date updates to the match.",
                                                  :format "int32"},
                                   :pendingParticipantId {:type "string",
                                                          :description "The ID of the participant who should take their turn next. May be set to the current player's participant ID to update match state without changing the turn. If not set, the match will wait for other player(s) to join via automatching; this is only valid if automatch criteria is set on the match with remaining slots for automatched players."},
                                   :results {:type "array",
                                             :description "The match results for the participants in the match.",
                                             :items {:$ref "ParticipantResult"}}}},
 :TurnBasedMatchRematch {:id "TurnBasedMatchRematch",
                         :type "object",
                         :description "This is a JSON template for a rematch response.",
                         :properties {:kind {:type "string",
                                             :description "Uniquely identifies the type of this resource. Value is always the fixed string games#turnBasedMatchRematch.",
                                             :default "games#turnBasedMatchRematch"},
                                      :previousMatch {:$ref "TurnBasedMatch",
                                                      :description "The old match that the rematch was created from; will be updated such that the rematchId field will point at the new match."},
                                      :rematch {:$ref "TurnBasedMatch",
                                                :description "The newly created match; a rematch of the old match with the same participants."}}},
 :LeaderboardEntry {:id "LeaderboardEntry",
                    :type "object",
                    :description "This is a JSON template for the Leaderboard Entry resource.",
                    :properties {:scoreRank {:type "string",
                                             :description "The rank of this score for this leaderboard.",
                                             :format "int64"},
                                 :timeSpan {:type "string",
                                            :description "The time span of this high score.\nPossible values are:  \n- \"ALL_TIME\" - The score is an all-time high score. \n- \"WEEKLY\" - The score is a weekly high score. \n- \"DAILY\" - The score is a daily high score."},
                                 :writeTimestampMillis {:type "string",
                                                        :description "The timestamp at which this score was recorded, in milliseconds since the epoch in UTC.",
                                                        :format "int64"},
                                 :formattedScore {:type "string",
                                                  :description "The localized string for the numerical value of this score."},
                                 :formattedScoreRank {:type "string",
                                                      :description "The localized string for the rank of this score for this leaderboard."},
                                 :scoreValue {:type "string",
                                              :description "The numerical value of this score.",
                                              :format "int64"},
                                 :kind {:type "string",
                                        :description "Uniquely identifies the type of this resource. Value is always the fixed string games#leaderboardEntry.",
                                        :default "games#leaderboardEntry"},
                                 :player {:$ref "Player",
                                          :description "The player who holds this score."},
                                 :scoreTag {:type "string",
                                            :description "Additional information about the score. Values must contain no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986."}}},
 :RoomStatus {:id "RoomStatus",
              :type "object",
              :description "This is a JSON template for the status of a room that the player has joined.",
              :properties {:autoMatchingStatus {:$ref "RoomAutoMatchStatus",
                                                :description "Auto-matching status for this room. Not set if the room is not currently in the automatching queue."},
                           :kind {:type "string",
                                  :description "Uniquely identifies the type of this resource. Value is always the fixed string games#roomStatus.",
                                  :default "games#roomStatus"},
                           :participants {:type "array",
                                          :description "The participants involved in the room, along with their statuses. Includes participants who have left or declined invitations.",
                                          :items {:$ref "RoomParticipant"}},
                           :roomId {:type "string",
                                    :description "Globally unique ID for a room."},
                           :status {:type "string",
                                    :description "The status of the room.\nPossible values are:  \n- \"ROOM_INVITING\" - One or more players have been invited and not responded. \n- \"ROOM_AUTO_MATCHING\" - One or more slots need to be filled by auto-matching. \n- \"ROOM_CONNECTING\" - Players have joined are connecting to each other (either before or after auto-matching). \n- \"ROOM_ACTIVE\" - All players have joined and connected to each other. \n- \"ROOM_DELETED\" - All joined players have left."},
                           :statusVersion {:type "integer",
                                           :description "The version of the status for the room: an increasing counter, used by the client to ignore out-of-order updates to room status.",
                                           :format "int32"}}},
 :ApplicationVerifyResponse {:id "ApplicationVerifyResponse",
                             :type "object",
                             :description "This is a JSON template for a third party application verification response resource.",
                             :properties {:alternate_player_id {:type "string",
                                                                :description "An alternate ID that was once used for the player that was issued the auth token used in this request. (This field is not normally populated.)"},
                                          :kind {:type "string",
                                                 :description "Uniquely identifies the type of this resource. Value is always the fixed string games#applicationVerifyResponse.",
                                                 :default "games#applicationVerifyResponse"},
                                          :player_id {:type "string",
                                                      :description "The ID of the player that was issued the auth token used in this request."}}},
 :EventDefinitionListResponse {:id "EventDefinitionListResponse",
                               :type "object",
                               :description "This is a JSON template for a ListDefinitions response.",
                               :properties {:items {:type "array",
                                                    :description "The event definitions.",
                                                    :items {:$ref "EventDefinition"}},
                                            :kind {:type "string",
                                                   :description "Uniquely identifies the type of this resource. Value is always the fixed string games#eventDefinitionListResponse.",
                                                   :default "games#eventDefinitionListResponse"},
                                            :nextPageToken {:type "string",
                                                            :description "The pagination token for the next page of results."}}},
 :SnapshotImage {:id "SnapshotImage",
                 :type "object",
                 :description "This is a JSON template for an image of a snapshot.",
                 :properties {:height {:type "integer",
                                       :description "The height of the image.",
                                       :format "int32"},
                              :kind {:type "string",
                                     :description "Uniquely identifies the type of this resource. Value is always the fixed string games#snapshotImage.",
                                     :default "games#snapshotImage"},
                              :mime_type {:type "string",
                                          :description "The MIME type of the image."},
                              :url {:type "string",
                                    :description "The URL of the image. This URL may be invalidated at any time and should not be cached."},
                              :width {:type "integer",
                                      :description "The width of the image.",
                                      :format "int32"}}},
 :EventPeriodUpdate {:id "EventPeriodUpdate",
                     :type "object",
                     :description "This is a JSON template for an event period update resource.",
                     :properties {:kind {:type "string",
                                         :description "Uniquely identifies the type of this resource. Value is always the fixed string games#eventPeriodUpdate.",
                                         :default "games#eventPeriodUpdate"},
                                  :timePeriod {:$ref "EventPeriodRange",
                                               :description "The time period being covered by this update."},
                                  :updates {:type "array",
                                            :description "The updates being made for this time period.",
                                            :items {:$ref "EventUpdateRequest"}}}},
 :PlayerExperienceInfo {:id "PlayerExperienceInfo",
                        :type "object",
                        :description "This is a JSON template for 1P/3P metadata about the player's experience.",
                        :properties {:currentExperiencePoints {:type "string",
                                                               :description "The current number of experience points for the player.",
                                                               :format "int64"},
                                     :currentLevel {:$ref "PlayerLevel",
                                                    :description "The current level of the player."},
                                     :kind {:type "string",
                                            :description "Uniquely identifies the type of this resource. Value is always the fixed string games#playerExperienceInfo.",
                                            :default "games#playerExperienceInfo"},
                                     :lastLevelUpTimestampMillis {:type "string",
                                                                  :description "The timestamp when the player was leveled up, in millis since Unix epoch UTC.",
                                                                  :format "int64"},
                                     :nextLevel {:$ref "PlayerLevel",
                                                 :description "The next level of the player. If the current level is the maximum level, this should be same as the current level."}}},
 :AchievementRevealResponse {:id "AchievementRevealResponse",
                             :type "object",
                             :description "This is a JSON template for an achievement reveal response",
                             :properties {:currentState {:type "string",
                                                         :description "The current state of the achievement for which a reveal was attempted. This might be UNLOCKED if the achievement was already unlocked.\nPossible values are:  \n- \"REVEALED\" - Achievement is revealed. \n- \"UNLOCKED\" - Achievement is unlocked."},
                                          :kind {:type "string",
                                                 :description "Uniquely identifies the type of this resource. Value is always the fixed string games#achievementRevealResponse.",
                                                 :default "games#achievementRevealResponse"}}},
 :ScoreSubmission {:id "ScoreSubmission",
                   :type "object",
                   :description "This is a JSON template for a request to submit a score to leaderboards.",
                   :properties {:kind {:type "string",
                                       :description "Uniquely identifies the type of this resource. Value is always the fixed string games#scoreSubmission.",
                                       :default "games#scoreSubmission"},
                                :leaderboardId {:type "string",
                                                :description "The leaderboard this score is being submitted to."},
                                :score {:type "string",
                                        :description "The new score being submitted.",
                                        :format "int64"},
                                :scoreTag {:type "string",
                                           :description "Additional information about this score. Values will contain no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986.",
                                           :pattern "[a-zA-Z0-9-._~]{0,64}"},
                                :signature {:type "string",
                                            :description "Signature Values will contain URI-safe characters as defined by section 2.3 of RFC 3986."}}},
 :EventUpdateRequest {:id "EventUpdateRequest",
                      :type "object",
                      :description "This is a JSON template for an event period update resource.",
                      :properties {:definitionId {:type "string",
                                                  :description "The ID of the event being modified in this update."},
                                   :kind {:type "string",
                                          :description "Uniquely identifies the type of this resource. Value is always the fixed string games#eventUpdateRequest.",
                                          :default "games#eventUpdateRequest"},
                                   :updateCount {:type "string",
                                                 :description "The number of times this event occurred in this time period.",
                                                 :format "int64"}}},
 :AchievementUpdateMultipleRequest {:id "AchievementUpdateMultipleRequest",
                                    :type "object",
                                    :description "This is a JSON template for a list of achievement update requests.",
                                    :properties {:kind {:type "string",
                                                        :description "Uniquely identifies the type of this resource. Value is always the fixed string games#achievementUpdateMultipleRequest.",
                                                        :default "games#achievementUpdateMultipleRequest"},
                                                 :updates {:type "array",
                                                           :description "The individual achievement update requests.",
                                                           :items {:$ref "AchievementUpdateRequest"}}}},
 :InstanceWebDetails {:id "InstanceWebDetails",
                      :type "object",
                      :description "This is a JSON template for the Web details resource.",
                      :properties {:kind {:type "string",
                                          :description "Uniquely identifies the type of this resource. Value is always the fixed string games#instanceWebDetails.",
                                          :default "games#instanceWebDetails"},
                                   :launchUrl {:type "string",
                                               :description "Launch URL for the game."},
                                   :preferred {:type "boolean",
                                               :description "Indicates that this instance is the default for new installations."}}},
 :PlayerScoreListResponse {:id "PlayerScoreListResponse",
                           :type "object",
                           :description "This is a JSON template for a list of score submission statuses.",
                           :properties {:kind {:type "string",
                                               :description "Uniquely identifies the type of this resource. Value is always the fixed string games#playerScoreListResponse.",
                                               :default "games#playerScoreListResponse"},
                                        :submittedScores {:type "array",
                                                          :description "The score submissions statuses.",
                                                          :items {:$ref "PlayerScoreResponse"}}}},
 :AchievementUpdateMultipleResponse {:id "AchievementUpdateMultipleResponse",
                                     :type "object",
                                     :description "This is a JSON template for an achievement unlock response.",
                                     :properties {:kind {:type "string",
                                                         :description "Uniquely identifies the type of this resource. Value is always the fixed string games#achievementUpdateListResponse.",
                                                         :default "games#achievementUpdateMultipleResponse"},
                                                  :updatedAchievements {:type "array",
                                                                        :description "The updated state of the achievements.",
                                                                        :items {:$ref "AchievementUpdateResponse"}}}},
 :PlayerListResponse {:id "PlayerListResponse",
                      :type "object",
                      :description "This is a JSON template for a third party player list response.",
                      :properties {:items {:type "array",
                                           :description "The players.",
                                           :items {:$ref "Player"}},
                                   :kind {:type "string",
                                          :description "Uniquely identifies the type of this resource. Value is always the fixed string games#playerListResponse.",
                                          :default "games#playerListResponse"},
                                   :nextPageToken {:type "string",
                                                   :description "Token corresponding to the next page of results."}}},
 :CategoryListResponse {:id "CategoryListResponse",
                        :type "object",
                        :description "This is a JSON template for a list of category data objects.",
                        :properties {:items {:type "array",
                                             :description "The list of categories with usage data.",
                                             :items {:$ref "Category"}},
                                     :kind {:type "string",
                                            :description "Uniquely identifies the type of this resource. Value is always the fixed string games#categoryListResponse.",
                                            :default "games#categoryListResponse"},
                                     :nextPageToken {:type "string",
                                                     :description "Token corresponding to the next page of results."}}},
 :RoomLeaveRequest {:id "RoomLeaveRequest",
                    :type "object",
                    :description "This is a JSON template for a leave room request.",
                    :properties {:kind {:type "string",
                                        :description "Uniquely identifies the type of this resource. Value is always the fixed string games#roomLeaveRequest.",
                                        :default "games#roomLeaveRequest"},
                                 :leaveDiagnostics {:$ref "RoomLeaveDiagnostics",
                                                    :description "Diagnostics for a player leaving the room."},
                                 :reason {:type "string",
                                          :description "Reason for leaving the match.\nPossible values are:  \n- \"PLAYER_LEFT\" - The player chose to leave the room.. \n- \"GAME_LEFT\" - The game chose to remove the player from the room. \n- \"REALTIME_ABANDONED\" - The player switched to another application and abandoned the room. \n- \"REALTIME_PEER_CONNECTION_FAILURE\" - The client was unable to establish a connection to other peer(s). \n- \"REALTIME_SERVER_CONNECTION_FAILURE\" - The client was unable to communicate with the server. \n- \"REALTIME_SERVER_ERROR\" - The client received an error response when it tried to communicate with the server. \n- \"REALTIME_TIMEOUT\" - The client timed out while waiting for a room. \n- \"REALTIME_CLIENT_DISCONNECTING\" - The client disconnects without first calling Leave. \n- \"REALTIME_SIGN_OUT\" - The user signed out of G+ while in the room. \n- \"REALTIME_GAME_CRASHED\" - The game crashed. \n- \"REALTIME_ROOM_SERVICE_CRASHED\" - RoomAndroidService crashed. \n- \"REALTIME_DIFFERENT_CLIENT_ROOM_OPERATION\" - Another client is trying to enter a room. \n- \"REALTIME_SAME_CLIENT_ROOM_OPERATION\" - The same client is trying to enter a new room."}}},
 :AchievementIncrementResponse {:id "AchievementIncrementResponse",
                                :type "object",
                                :description "This is a JSON template for an achievement increment response",
                                :properties {:currentSteps {:type "integer",
                                                            :description "The current steps recorded for this incremental achievement.",
                                                            :format "int32"},
                                             :kind {:type "string",
                                                    :description "Uniquely identifies the type of this resource. Value is always the fixed string games#achievementIncrementResponse.",
                                                    :default "games#achievementIncrementResponse"},
                                             :newlyUnlocked {:type "boolean",
                                                             :description "Whether the current steps for the achievement has reached the number of steps required to unlock."}}},
 :EventUpdateResponse {:id "EventUpdateResponse",
                       :type "object",
                       :description "This is a JSON template for an event period update resource.",
                       :properties {:batchFailures {:type "array",
                                                    :description "Any batch-wide failures which occurred applying updates.",
                                                    :items {:$ref "EventBatchRecordFailure"}},
                                    :eventFailures {:type "array",
                                                    :description "Any failures updating a particular event.",
                                                    :items {:$ref "EventRecordFailure"}},
                                    :kind {:type "string",
                                           :description "Uniquely identifies the type of this resource. Value is always the fixed string games#eventUpdateResponse.",
                                           :default "games#eventUpdateResponse"},
                                    :playerEvents {:type "array",
                                                   :description "The current status of any updated events",
                                                   :items {:$ref "PlayerEvent"}}}},
 :RoomAutoMatchStatus {:id "RoomAutoMatchStatus",
                       :type "object",
                       :description "This is a JSON template for status of room automatching that is in progress.",
                       :properties {:kind {:type "string",
                                           :description "Uniquely identifies the type of this resource. Value is always the fixed string games#roomAutoMatchStatus.",
                                           :default "games#roomAutoMatchStatus"},
                                    :waitEstimateSeconds {:type "integer",
                                                          :description "An estimate for the amount of time (in seconds) that auto-matching is expected to take to complete.",
                                                          :format "int32"}}},
 :RoomModification {:id "RoomModification",
                    :type "object",
                    :description "This is a JSON template for room modification metadata.",
                    :properties {:kind {:type "string",
                                        :description "Uniquely identifies the type of this resource. Value is always the fixed string games#roomModification.",
                                        :default "games#roomModification"},
                                 :modifiedTimestampMillis {:type "string",
                                                           :description "The timestamp at which they modified the room, in milliseconds since the epoch in UTC.",
                                                           :format "int64"},
                                 :participantId {:type "string",
                                                 :description "The ID of the participant that modified the room."}}},
 :PlayerEventListResponse {:id "PlayerEventListResponse",
                           :type "object",
                           :description "This is a JSON template for a ListByPlayer response.",
                           :properties {:items {:type "array",
                                                :description "The player events.",
                                                :items {:$ref "PlayerEvent"}},
                                        :kind {:type "string",
                                               :description "Uniquely identifies the type of this resource. Value is always the fixed string games#playerEventListResponse.",
                                               :default "games#playerEventListResponse"},
                                        :nextPageToken {:type "string",
                                                        :description "The pagination token for the next page of results."}}},
 :Room {:id "Room",
        :type "object",
        :description "This is a JSON template for a room resource object.",
        :properties {:description {:type "string",
                                   :description "This short description is generated by our servers and worded relative to the player requesting the room. It is intended to be displayed when the room is shown in a list (that is, an invitation to a room.)"},
                     :variant {:type "integer",
                               :description "The variant / mode of the application being played; can be any integer value, or left blank.",
                               :format "int32"},
                     :participants {:type "array",
                                    :description "The participants involved in the room, along with their statuses. Includes participants who have left or declined invitations.",
                                    :items {:$ref "RoomParticipant"}},
                     :inviterId {:type "string",
                                 :description "The ID of the participant that invited the user to the room. Not set if the user was not invited to the room."},
                     :roomId {:type "string",
                              :description "Globally unique ID for a room."},
                     :lastUpdateDetails {:$ref "RoomModification",
                                         :description "Details about the last update to the room."},
                     :applicationId {:type "string",
                                     :description "The ID of the application being played."},
                     :autoMatchingCriteria {:$ref "RoomAutoMatchingCriteria",
                                            :description "Criteria for auto-matching players into this room."},
                     :autoMatchingStatus {:$ref "RoomAutoMatchStatus",
                                          :description "Auto-matching status for this room. Not set if the room is not currently in the auto-matching queue."},
                     :status {:type "string",
                              :description "The status of the room.\nPossible values are:  \n- \"ROOM_INVITING\" - One or more players have been invited and not responded. \n- \"ROOM_AUTO_MATCHING\" - One or more slots need to be filled by auto-matching. \n- \"ROOM_CONNECTING\" - Players have joined and are connecting to each other (either before or after auto-matching). \n- \"ROOM_ACTIVE\" - All players have joined and connected to each other. \n- \"ROOM_DELETED\" - The room should no longer be shown on the client. Returned in sync calls when a player joins a room (as a tombstone), or for rooms where all joined participants have left."},
                     :kind {:type "string",
                            :description "Uniquely identifies the type of this resource. Value is always the fixed string games#room.",
                            :default "games#room"},
                     :creationDetails {:$ref "RoomModification",
                                       :description "Details about the room creation."},
                     :roomStatusVersion {:type "integer",
                                         :description "The version of the room status: an increasing counter, used by the client to ignore out-of-order updates to room status.",
                                         :format "int32"}}},
 :InstanceAndroidDetails {:id "InstanceAndroidDetails",
                          :type "object",
                          :description "This is a JSON template for the Android instance details resource.",
                          :properties {:enablePiracyCheck {:type "boolean",
                                                           :description "Flag indicating whether the anti-piracy check is enabled."},
                                       :kind {:type "string",
                                              :description "Uniquely identifies the type of this resource. Value is always the fixed string games#instanceAndroidDetails.",
                                              :default "games#instanceAndroidDetails"},
                                       :packageName {:type "string",
                                                     :description "Android package name which maps to Google Play URL."},
                                       :preferred {:type "boolean",
                                                   :description "Indicates that this instance is the default for new installations."}}},
 :ApplicationCategory {:id "ApplicationCategory",
                       :type "object",
                       :description "This is a JSON template for an application category object.",
                       :properties {:kind {:type "string",
                                           :description "Uniquely identifies the type of this resource. Value is always the fixed string games#applicationCategory.",
                                           :default "games#applicationCategory"},
                                    :primary {:type "string",
                                              :description "The primary category."},
                                    :secondary {:type "string",
                                                :description "The secondary category."}}},
 :PlayerLeaderboardScore {:id "PlayerLeaderboardScore",
                          :type "object",
                          :description "This is a JSON template for a player leaderboard score object.",
                          :properties {:scoreString {:type "string",
                                                     :description "The formatted value of this score."},
                                       :socialRank {:$ref "LeaderboardScoreRank",
                                                    :description "The social rank of the score in this leaderboard."},
                                       :writeTimestamp {:type "string",
                                                        :description "The timestamp at which this score was recorded, in milliseconds since the epoch in UTC.",
                                                        :format "int64"},
                                       :timeSpan {:type "string",
                                                  :description "The time span of this score.\nPossible values are:  \n- \"ALL_TIME\" - The score is an all-time score. \n- \"WEEKLY\" - The score is a weekly score. \n- \"DAILY\" - The score is a daily score."},
                                       :scoreValue {:type "string",
                                                    :description "The numerical value of this score.",
                                                    :format "int64"},
                                       :kind {:type "string",
                                              :description "Uniquely identifies the type of this resource. Value is always the fixed string games#playerLeaderboardScore.",
                                              :default "games#playerLeaderboardScore"},
                                       :scoreTag {:type "string",
                                                  :description "Additional information about the score. Values must contain no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986."},
                                       :publicRank {:$ref "LeaderboardScoreRank",
                                                    :description "The public rank of the score in this leaderboard. This object will not be present if the user is not sharing their scores publicly."},
                                       :leaderboard_id {:type "string",
                                                        :description "The ID of the leaderboard this score is in."}}},
 :RoomP2PStatus {:id "RoomP2PStatus",
                 :type "object",
                 :description "This is a JSON template for an update on the status of a peer in a room.",
                 :properties {:connectionSetupLatencyMillis {:type "integer",
                                                             :description "The amount of time in milliseconds it took to establish connections with this peer.",
                                                             :format "int32"},
                              :error {:type "string",
                                      :description "The error code in event of a failure.\nPossible values are:  \n- \"P2P_FAILED\" - The client failed to establish a P2P connection with the peer. \n- \"PRESENCE_FAILED\" - The client failed to register to receive P2P connections. \n- \"RELAY_SERVER_FAILED\" - The client received an error when trying to use the relay server to establish a P2P connection with the peer."},
                              :error_reason {:type "string",
                                             :description "More detailed diagnostic message returned in event of a failure."},
                              :kind {:type "string",
                                     :description "Uniquely identifies the type of this resource. Value is always the fixed string games#roomP2PStatus.",
                                     :default "games#roomP2PStatus"},
                              :participantId {:type "string",
                                              :description "The ID of the participant."},
                              :status {:type "string",
                                       :description "The status of the peer in the room.\nPossible values are:  \n- \"CONNECTION_ESTABLISHED\" - The client established a P2P connection with the peer. \n- \"CONNECTION_FAILED\" - The client failed to establish directed presence with the peer."},
                              :unreliableRoundtripLatencyMillis {:type "integer",
                                                                 :description "The amount of time in milliseconds it took to send packets back and forth on the unreliable channel with this peer.",
                                                                 :format "int32"}}},
 :TurnBasedMatchParticipant {:id "TurnBasedMatchParticipant",
                             :type "object",
                             :description "This is a JSON template for a participant in a turn-based match.",
                             :properties {:autoMatched {:type "boolean",
                                                        :description "True if this participant was auto-matched with the requesting player."},
                                          :autoMatchedPlayer {:$ref "AnonymousPlayer",
                                                              :description "Information about a player that has been anonymously auto-matched against the requesting player. (Either player or autoMatchedPlayer will be set.)"},
                                          :id {:type "string",
                                               :description "An identifier for the participant in the scope of the match. Cannot be used to identify a player across matches or in other contexts."},
                                          :kind {:type "string",
                                                 :description "Uniquely identifies the type of this resource. Value is always the fixed string games#turnBasedMatchParticipant.",
                                                 :default "games#turnBasedMatchParticipant"},
                                          :player {:$ref "Player",
                                                   :description "Information about the player. Not populated if this player was anonymously auto-matched against the requesting player. (Either player or autoMatchedPlayer will be set.)"},
                                          :status {:type "string",
                                                   :description "The status of the participant with respect to the match.\nPossible values are:  \n- \"PARTICIPANT_NOT_INVITED_YET\" - The participant is slated to be invited to the match, but the invitation has not been sent; the invite will be sent when it becomes their turn. \n- \"PARTICIPANT_INVITED\" - The participant has been invited to join the match, but has not yet responded. \n- \"PARTICIPANT_JOINED\" - The participant has joined the match (either after creating it or accepting an invitation.) \n- \"PARTICIPANT_DECLINED\" - The participant declined an invitation to join the match. \n- \"PARTICIPANT_LEFT\" - The participant joined the match and then left it. \n- \"PARTICIPANT_FINISHED\" - The participant finished playing in the match. \n- \"PARTICIPANT_UNRESPONSIVE\" - The participant did not take their turn in the allotted time."}}},
 :Snapshot {:id "Snapshot",
            :type "object",
            :description "This is a JSON template for an snapshot object.",
            :properties {:description {:type "string",
                                       :description "The description of this snapshot."},
                         :progressValue {:type "string",
                                         :description "The progress value (64-bit integer set by developer) associated with this snapshot.",
                                         :format "int64"},
                         :durationMillis {:type "string",
                                          :description "The duration associated with this snapshot, in millis.",
                                          :format "int64"},
                         :uniqueName {:type "string",
                                      :description "The unique name provided when the snapshot was created."},
                         :lastModifiedMillis {:type "string",
                                              :description "The timestamp (in millis since Unix epoch) of the last modification to this snapshot.",
                                              :format "int64"},
                         :type {:type "string",
                                :description "The type of this snapshot.\nPossible values are:  \n- \"SAVE_GAME\" - A snapshot representing a save game."},
                         :title {:type "string",
                                 :description "The title of this snapshot."},
                         :coverImage {:$ref "SnapshotImage",
                                      :description "The cover image of this snapshot. May be absent if there is no image."},
                         :id {:type "string",
                              :description "The ID of the snapshot."},
                         :kind {:type "string",
                                :description "Uniquely identifies the type of this resource. Value is always the fixed string games#snapshot.",
                                :default "games#snapshot"},
                         :driveId {:type "string",
                                   :description "The ID of the file underlying this snapshot in the Drive API. Only present if the snapshot is a view on a Drive file and the file is owned by the caller."}}},
 :PushTokenId {:id "PushTokenId",
               :type "object",
               :description "This is a JSON template for a push token ID resource.",
               :properties {:ios {:type "object",
                                  :description "A push token ID for iOS devices.",
                                  :properties {:apns_device_token {:type "string",
                                                                   :description "Device token supplied by an iOS system call to register for remote notifications. Encode this field as web-safe base64.",
                                                                   :format "byte"},
                                               :apns_environment {:type "string",
                                                                  :description "Indicates whether this token should be used for the production or sandbox APNS server."}}},
                            :kind {:type "string",
                                   :description "Uniquely identifies the type of this resource. Value is always the fixed string games#pushTokenId.",
                                   :default "games#pushTokenId"}}},
 :PlayerAchievementListResponse {:id "PlayerAchievementListResponse",
                                 :type "object",
                                 :description "This is a JSON template for a list of achievement objects.",
                                 :properties {:items {:type "array",
                                                      :description "The achievements.",
                                                      :items {:$ref "PlayerAchievement"}},
                                              :kind {:type "string",
                                                     :description "Uniquely identifies the type of this resource. Value is always the fixed string games#playerAchievementListResponse.",
                                                     :default "games#playerAchievementListResponse"},
                                              :nextPageToken {:type "string",
                                                              :description "Token corresponding to the next page of results."}}},
 :RoomAutoMatchingCriteria {:id "RoomAutoMatchingCriteria",
                            :type "object",
                            :description "This is a JSON template for a room auto-match criteria object.",
                            :properties {:exclusiveBitmask {:type "string",
                                                            :description "A bitmask indicating when auto-matches are valid. When ANDed with other exclusive bitmasks, the result must be zero. Can be used to support exclusive roles within a game.",
                                                            :format "int64"},
                                         :kind {:type "string",
                                                :description "Uniquely identifies the type of this resource. Value is always the fixed string games#roomAutoMatchingCriteria.",
                                                :default "games#roomAutoMatchingCriteria"},
                                         :maxAutoMatchingPlayers {:type "integer",
                                                                  :description "The maximum number of players that should be added to the room by auto-matching.",
                                                                  :format "int32"},
                                         :minAutoMatchingPlayers {:type "integer",
                                                                  :description "The minimum number of players that should be added to the room by auto-matching.",
                                                                  :format "int32"}}},
 :TurnBasedMatchSync {:id "TurnBasedMatchSync",
                      :type "object",
                      :description "This is a JSON template for a list of turn-based matches returned from a sync.",
                      :properties {:items {:type "array",
                                           :description "The matches.",
                                           :items {:$ref "TurnBasedMatch"}},
                                   :kind {:type "string",
                                          :description "Uniquely identifies the type of this resource. Value is always the fixed string games#turnBasedMatchSync.",
                                          :default "games#turnBasedMatchSync"},
                                   :moreAvailable {:type "boolean",
                                                   :description "True if there were more matches available to fetch at the time the response was generated (which were not returned due to page size limits.)"},
                                   :nextPageToken {:type "string",
                                                   :description "The pagination token for the next page of results."}}},
 :RoomList {:id "RoomList",
            :type "object",
            :description "This is a JSON template for a list of rooms.",
            :properties {:items {:type "array",
                                 :description "The rooms.",
                                 :items {:$ref "Room"}},
                         :kind {:type "string",
                                :description "Uniquely identifies the type of this resource. Value is always the fixed string games#roomList.",
                                :default "games#roomList"},
                         :nextPageToken {:type "string",
                                         :description "The pagination token for the next page of results."}}},
 :PlayerScoreResponse {:id "PlayerScoreResponse",
                       :type "object",
                       :description "This is a JSON template for a list of leaderboard entry resources.",
                       :properties {:beatenScoreTimeSpans {:type "array",
                                                           :description "The time spans where the submitted score is better than the existing score for that time span.\nPossible values are:  \n- \"ALL_TIME\" - The score is an all-time score. \n- \"WEEKLY\" - The score is a weekly score. \n- \"DAILY\" - The score is a daily score.",
                                                           :items {:type "string"}},
                                    :formattedScore {:type "string",
                                                     :description "The formatted value of the submitted score."},
                                    :kind {:type "string",
                                           :description "Uniquely identifies the type of this resource. Value is always the fixed string games#playerScoreResponse.",
                                           :default "games#playerScoreResponse"},
                                    :leaderboardId {:type "string",
                                                    :description "The leaderboard ID that this score was submitted to."},
                                    :scoreTag {:type "string",
                                               :description "Additional information about this score. Values will contain no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986."},
                                    :unbeatenScores {:type "array",
                                                     :description "The scores in time spans that have not been beaten. As an example, the submitted score may be better than the player's DAILY score, but not better than the player's scores for the WEEKLY or ALL_TIME time spans.",
                                                     :items {:$ref "PlayerScore"}}}},
 :PlayerEvent {:id "PlayerEvent",
               :type "object",
               :description "This is a JSON template for an event status resource.",
               :properties {:definitionId {:type "string",
                                           :description "The ID of the event definition."},
                            :formattedNumEvents {:type "string",
                                                 :description "The current number of times this event has occurred, as a string. The formatting of this string depends on the configuration of your event in the Play Games Developer Console."},
                            :kind {:type "string",
                                   :description "Uniquely identifies the type of this resource. Value is always the fixed string games#playerEvent.",
                                   :default "games#playerEvent"},
                            :numEvents {:type "string",
                                        :description "The current number of times this event has occurred.",
                                        :format "int64"},
                            :playerId {:type "string",
                                       :description "The ID of the player."}}},
 :AchievementUpdateRequest {:id "AchievementUpdateRequest",
                            :type "object",
                            :description "This is a JSON template for a request to update an achievement.",
                            :properties {:achievementId {:type "string",
                                                         :description "The achievement this update is being applied to."},
                                         :incrementPayload {:$ref "GamesAchievementIncrement",
                                                            :description "The payload if an update of type INCREMENT was requested for the achievement."},
                                         :kind {:type "string",
                                                :description "Uniquely identifies the type of this resource. Value is always the fixed string games#achievementUpdateRequest.",
                                                :default "games#achievementUpdateRequest"},
                                         :setStepsAtLeastPayload {:$ref "GamesAchievementSetStepsAtLeast",
                                                                  :description "The payload if an update of type SET_STEPS_AT_LEAST was requested for the achievement."},
                                         :updateType {:type "string",
                                                      :description "The type of update being applied.\nPossible values are:  \n- \"REVEAL\" - Achievement is revealed. \n- \"UNLOCK\" - Achievement is unlocked. \n- \"INCREMENT\" - Achievement is incremented. \n- \"SET_STEPS_AT_LEAST\" - Achievement progress is set to at least the passed value."}}},
 :TurnBasedMatchList {:id "TurnBasedMatchList",
                      :type "object",
                      :description "This is a JSON template for a list of turn-based matches.",
                      :properties {:items {:type "array",
                                           :description "The matches.",
                                           :items {:$ref "TurnBasedMatch"}},
                                   :kind {:type "string",
                                          :description "Uniquely identifies the type of this resource. Value is always the fixed string games#turnBasedMatchList.",
                                          :default "games#turnBasedMatchList"},
                                   :nextPageToken {:type "string",
                                                   :description "The pagination token for the next page of results."}}},
 :PlayerScoreSubmissionList {:id "PlayerScoreSubmissionList",
                             :type "object",
                             :description "This is a JSON template for a list of score submission requests",
                             :properties {:kind {:type "string",
                                                 :description "Uniquely identifies the type of this resource. Value is always the fixed string games#playerScoreSubmissionList.",
                                                 :default "games#playerScoreSubmissionList"},
                                          :scores {:type "array",
                                                   :description "The score submissions.",
                                                   :items {:$ref "ScoreSubmission"}}}},
 :PlayerAchievement {:id "PlayerAchievement",
                     :type "object",
                     :description "This is a JSON template for an achievement object.",
                     :properties {:achievementState {:type "string",
                                                     :description "The state of the achievement.\nPossible values are:  \n- \"HIDDEN\" - Achievement is hidden. \n- \"REVEALED\" - Achievement is revealed. \n- \"UNLOCKED\" - Achievement is unlocked."},
                                  :currentSteps {:type "integer",
                                                 :description "The current steps for an incremental achievement.",
                                                 :format "int32"},
                                  :experiencePoints {:type "string",
                                                     :description "Experience points earned for the achievement. This field is absent for achievements that have not yet been unlocked and 0 for achievements that have been unlocked by testers but that are unpublished.",
                                                     :format "int64"},
                                  :formattedCurrentStepsString {:type "string",
                                                                :description "The current steps for an incremental achievement as a string."},
                                  :id {:type "string",
                                       :description "The ID of the achievement."},
                                  :kind {:type "string",
                                         :description "Uniquely identifies the type of this resource. Value is always the fixed string games#playerAchievement.",
                                         :default "games#playerAchievement"},
                                  :lastUpdatedTimestamp {:type "string",
                                                         :description "The timestamp of the last modification to this achievement's state.",
                                                         :format "int64"}}},
 :RoomP2PStatuses {:id "RoomP2PStatuses",
                   :type "object",
                   :description "This is a JSON template for an update on the status of peers in a room.",
                   :properties {:kind {:type "string",
                                       :description "Uniquely identifies the type of this resource. Value is always the fixed string games#roomP2PStatuses.",
                                       :default "games#roomP2PStatuses"},
                                :updates {:type "array",
                                          :description "The updates for the peers.",
                                          :items {:$ref "RoomP2PStatus"}}}},
 :TurnBasedMatch {:id "TurnBasedMatch",
                  :type "object",
                  :description "This is a JSON template for a turn-based match resource object.",
                  :properties {:pendingParticipantId {:type "string",
                                                      :description "The ID of the participant that is taking a turn."},
                               :description {:type "string",
                                             :description "This short description is generated by our servers based on turn state and is localized and worded relative to the player requesting the match. It is intended to be displayed when the match is shown in a list."},
                               :withParticipantId {:type "string",
                                                   :description "The ID of another participant in the match that can be used when describing the participants the user is playing with."},
                               :matchNumber {:type "integer",
                                             :description "The number of the match in a chain of rematches. Will be set to 1 for the first match and incremented by 1 for each rematch.",
                                             :format "int32"},
                               :variant {:type "integer",
                                         :description "The variant / mode of the application being played; can be any integer value, or left blank.",
                                         :format "int32"},
                               :participants {:type "array",
                                              :description "The participants involved in the match, along with their statuses. Includes participants who have left or declined invitations.",
                                              :items {:$ref "TurnBasedMatchParticipant"}},
                               :inviterId {:type "string",
                                           :description "The ID of the participant that invited the user to the match. Not set if the user was not invited to the match."},
                               :matchVersion {:type "integer",
                                              :description "The version of this match: an increasing counter, used to avoid out-of-date updates to the match.",
                                              :format "int32"},
                               :rematchId {:type "string",
                                           :description "The ID of a rematch of this match. Only set for completed matches that have been rematched."},
                               :lastUpdateDetails {:$ref "TurnBasedMatchModification",
                                                   :description "Details about the last update to the match."},
                               :userMatchStatus {:type "string",
                                                 :description "The status of the current user in the match. Derived from the match type, match status, the user's participant status, and the pending participant for the match.\nPossible values are:  \n- \"USER_INVITED\" - The user has been invited to join the match and has not responded yet. \n- \"USER_AWAITING_TURN\" - The user is waiting for their turn. \n- \"USER_TURN\" - The user has an action to take in the match. \n- \"USER_MATCH_COMPLETED\" - The match has ended (it is completed, canceled, or expired.)"},
                               :applicationId {:type "string",
                                               :description "The ID of the application being played."},
                               :autoMatchingCriteria {:$ref "TurnBasedAutoMatchingCriteria",
                                                      :description "Criteria for auto-matching players into this match."},
                               :status {:type "string",
                                        :description "The status of the match.\nPossible values are:  \n- \"MATCH_AUTO_MATCHING\" - One or more slots need to be filled by auto-matching; the match cannot be established until they are filled. \n- \"MATCH_ACTIVE\" - The match has started. \n- \"MATCH_COMPLETE\" - The match has finished. \n- \"MATCH_CANCELED\" - The match was canceled. \n- \"MATCH_EXPIRED\" - The match expired due to inactivity. \n- \"MATCH_DELETED\" - The match should no longer be shown on the client. Returned only for tombstones for matches when sync is called."},
                               :kind {:type "string",
                                      :description "Uniquely identifies the type of this resource. Value is always the fixed string games#turnBasedMatch.",
                                      :default "games#turnBasedMatch"},
                               :creationDetails {:$ref "TurnBasedMatchModification",
                                                 :description "Details about the match creation."},
                               :matchId {:type "string",
                                         :description "Globally unique ID for a turn-based match."},
                               :previousMatchData {:$ref "TurnBasedMatchData",
                                                   :description "The data / game state for the previous match; set for the first turn of rematches only."},
                               :data {:$ref "TurnBasedMatchData",
                                      :description "The data / game state for this match."},
                               :results {:type "array",
                                         :description "The results reported for this match.",
                                         :items {:$ref "ParticipantResult"}}}},
 :ProfileSettings {:id "ProfileSettings",
                   :type "object",
                   :description "This is a JSON template for profile settings",
                   :properties {:kind {:type "string",
                                       :description "Uniquely identifies the type of this resource. Value is always the fixed string games#profileSettings.",
                                       :default "games#profileSettings"},
                                :profileVisible {:type "boolean"}}},
 :AggregateStats {:id "AggregateStats",
                  :type "object",
                  :description "This is a JSON template for aggregate stats.",
                  :properties {:count {:type "string",
                                       :description "The number of messages sent between a pair of peers.",
                                       :format "int64"},
                               :kind {:type "string",
                                      :description "Uniquely identifies the type of this resource. Value is always the fixed string games#aggregateStats.",
                                      :default "games#aggregateStats"},
                               :max {:type "string",
                                     :description "The maximum amount.",
                                     :format "int64"},
                               :min {:type "string",
                                     :description "The minimum amount.",
                                     :format "int64"},
                               :sum {:type "string",
                                     :description "The total number of bytes sent for messages between a pair of peers.",
                                     :format "int64"}}},
 :RevisionCheckResponse {:id "RevisionCheckResponse",
                         :type "object",
                         :description "This is a JSON template for the result of checking a revision.",
                         :properties {:apiVersion {:type "string",
                                                   :description "The version of the API this client revision should use when calling API methods."},
                                      :kind {:type "string",
                                             :description "Uniquely identifies the type of this resource. Value is always the fixed string games#revisionCheckResponse.",
                                             :default "games#revisionCheckResponse"},
                                      :revisionStatus {:type "string",
                                                       :description "The result of the revision check.\nPossible values are:  \n- \"OK\" - The revision being used is current. \n- \"DEPRECATED\" - There is currently a newer version available, but the revision being used still works. \n- \"INVALID\" - The revision being used is not supported in any released version."}}},
 :SnapshotListResponse {:id "SnapshotListResponse",
                        :type "object",
                        :description "This is a JSON template for a list of snapshot objects.",
                        :properties {:items {:type "array",
                                             :description "The snapshots.",
                                             :items {:$ref "Snapshot"}},
                                     :kind {:type "string",
                                            :description "Uniquely identifies the type of this resource. Value is always the fixed string games#snapshotListResponse.",
                                            :default "games#snapshotListResponse"},
                                     :nextPageToken {:type "string",
                                                     :description "Token corresponding to the next page of results. If there are no more results, the token is omitted."}}},
 :Category {:id "Category",
            :type "object",
            :description "This is a JSON template for data related to individual game categories.",
            :properties {:category {:type "string",
                                    :description "The category name."},
                         :experiencePoints {:type "string",
                                            :description "Experience points earned in this category.",
                                            :format "int64"},
                         :kind {:type "string",
                                :description "Uniquely identifies the type of this resource. Value is always the fixed string games#category.",
                                :default "games#category"}}},
 :RoomLeaveDiagnostics {:id "RoomLeaveDiagnostics",
                        :type "object",
                        :description "This is a JSON template for room leave diagnostics.",
                        :properties {:androidNetworkSubtype {:type "integer",
                                                             :description "Android network subtype. http://developer.android.com/reference/android/net/NetworkInfo.html#getSubtype()",
                                                             :format "int32"},
                                     :androidNetworkType {:type "integer",
                                                          :description "Android network type. http://developer.android.com/reference/android/net/NetworkInfo.html#getType()",
                                                          :format "int32"},
                                     :iosNetworkType {:type "integer",
                                                      :description "iOS network type as defined in Reachability.h.",
                                                      :format "int32"},
                                     :kind {:type "string",
                                            :description "Uniquely identifies the type of this resource. Value is always the fixed string games#roomLeaveDiagnostics.",
                                            :default "games#roomLeaveDiagnostics"},
                                     :networkOperatorCode {:type "string",
                                                           :description "The MCC+MNC code for the client's network connection. On Android: http://developer.android.com/reference/android/telephony/TelephonyManager.html#getNetworkOperator() On iOS, see: https://developer.apple.com/library/ios/documentation/NetworkingInternet/Reference/CTCarrier/Reference/Reference.html"},
                                     :networkOperatorName {:type "string",
                                                           :description "The name of the carrier of the client's network connection. On Android: http://developer.android.com/reference/android/telephony/TelephonyManager.html#getNetworkOperatorName() On iOS: https://developer.apple.com/library/ios/documentation/NetworkingInternet/Reference/CTCarrier/Reference/Reference.html#//apple_ref/occ/instp/CTCarrier/carrierName"},
                                     :peerSession {:type "array",
                                                   :description "Diagnostics about all peer sessions.",
                                                   :items {:$ref "PeerSessionDiagnostics"}},
                                     :socketsUsed {:type "boolean",
                                                   :description "Whether or not sockets were used."}}},
 :PushToken {:id "PushToken",
             :type "object",
             :description "This is a JSON template for a push token resource.",
             :properties {:clientRevision {:type "string",
                                           :description "The revision of the client SDK used by your application, in the same format that's used by revisions.check. Used to send backward compatible messages. Format: [PLATFORM_TYPE]:[VERSION_NUMBER]. Possible values of PLATFORM_TYPE are:  \n- IOS - Push token is for iOS"},
                          :id {:$ref "PushTokenId",
                               :description "Unique identifier for this push token."},
                          :kind {:type "string",
                                 :description "Uniquely identifies the type of this resource. Value is always the fixed string games#pushToken.",
                                 :default "games#pushToken"},
                          :language {:type "string",
                                     :description "The preferred language for notifications that are sent using this token."}}},
 :MetagameConfig {:id "MetagameConfig",
                  :type "object",
                  :description "This is a JSON template for the metagame config resource",
                  :properties {:currentVersion {:type "integer",
                                                :description "Current version of the metagame configuration data. When this data is updated, the version number will be increased by one.",
                                                :format "int32"},
                               :kind {:type "string",
                                      :description "Uniquely identifies the type of this resource. Value is always the fixed string games#metagameConfig.",
                                      :default "games#metagameConfig"},
                               :playerLevels {:type "array",
                                              :description "The list of player levels.",
                                              :items {:$ref "PlayerLevel"}}}},
 :ImageAsset {:id "ImageAsset",
              :type "object",
              :description "This is a JSON template for an image asset object.",
              :properties {:height {:type "integer",
                                    :description "The height of the asset.",
                                    :format "int32"},
                           :kind {:type "string",
                                  :description "Uniquely identifies the type of this resource. Value is always the fixed string games#imageAsset.",
                                  :default "games#imageAsset"},
                           :name {:type "string",
                                  :description "The name of the asset."},
                           :url {:type "string",
                                 :description "The URL of the asset."},
                           :width {:type "integer",
                                   :description "The width of the asset.",
                                   :format "int32"}}},
 :RoomClientAddress {:id "RoomClientAddress",
                     :type "object",
                     :description "This is a JSON template for the client address when setting up a room.",
                     :properties {:kind {:type "string",
                                         :description "Uniquely identifies the type of this resource. Value is always the fixed string games#roomClientAddress.",
                                         :default "games#roomClientAddress"},
                                  :xmppAddress {:type "string",
                                                :description "The XMPP address of the client on the Google Games XMPP network."}}},
 :PeerChannelDiagnostics {:id "PeerChannelDiagnostics",
                          :type "object",
                          :description "This is a JSON template for peer channel diagnostics.",
                          :properties {:bytesReceived {:$ref "AggregateStats",
                                                       :description "Number of bytes received."},
                                       :bytesSent {:$ref "AggregateStats",
                                                   :description "Number of bytes sent."},
                                       :kind {:type "string",
                                              :description "Uniquely identifies the type of this resource. Value is always the fixed string games#peerChannelDiagnostics.",
                                              :default "games#peerChannelDiagnostics"},
                                       :numMessagesLost {:type "integer",
                                                         :description "Number of messages lost.",
                                                         :format "int32"},
                                       :numMessagesReceived {:type "integer",
                                                             :description "Number of messages received.",
                                                             :format "int32"},
                                       :numMessagesSent {:type "integer",
                                                         :description "Number of messages sent.",
                                                         :format "int32"},
                                       :numSendFailures {:type "integer",
                                                         :description "Number of send failures.",
                                                         :format "int32"},
                                       :roundtripLatencyMillis {:$ref "AggregateStats",
                                                                :description "Roundtrip latency stats in milliseconds."}}},
 :LeaderboardListResponse {:id "LeaderboardListResponse",
                           :type "object",
                           :description "This is a JSON template for a list of leaderboard objects.",
                           :properties {:items {:type "array",
                                                :description "The leaderboards.",
                                                :items {:$ref "Leaderboard"}},
                                        :kind {:type "string",
                                               :description "Uniquely identifies the type of this resource. Value is always the fixed string games#leaderboardListResponse.",
                                               :default "games#leaderboardListResponse"},
                                        :nextPageToken {:type "string",
                                                        :description "Token corresponding to the next page of results."}}},
 :GamesAchievementSetStepsAtLeast {:id "GamesAchievementSetStepsAtLeast",
                                   :type "object",
                                   :description "This is a JSON template for the payload to request to increment an achievement.",
                                   :properties {:kind {:type "string",
                                                       :description "Uniquely identifies the type of this resource. Value is always the fixed string games#GamesAchievementSetStepsAtLeast.",
                                                       :default "games#GamesAchievementSetStepsAtLeast"},
                                                :steps {:type "integer",
                                                        :description "The minimum number of steps for the achievement to be set to.",
                                                        :format "int32"}}},
 :TurnBasedAutoMatchingCriteria {:id "TurnBasedAutoMatchingCriteria",
                                 :type "object",
                                 :description "This is a JSON template for an turn-based auto-match criteria object.",
                                 :properties {:exclusiveBitmask {:type "string",
                                                                 :description "A bitmask indicating when auto-matches are valid. When ANDed with other exclusive bitmasks, the result must be zero. Can be used to support exclusive roles within a game.",
                                                                 :format "int64"},
                                              :kind {:type "string",
                                                     :description "Uniquely identifies the type of this resource. Value is always the fixed string games#turnBasedAutoMatchingCriteria.",
                                                     :default "games#turnBasedAutoMatchingCriteria"},
                                              :maxAutoMatchingPlayers {:type "integer",
                                                                       :description "The maximum number of players that should be added to the match by auto-matching.",
                                                                       :format "int32"},
                                              :minAutoMatchingPlayers {:type "integer",
                                                                       :description "The minimum number of players that should be added to the match by auto-matching.",
                                                                       :format "int32"}}},
 :EventChild {:id "EventChild",
              :type "object",
              :description "This is a JSON template for an event child relationship resource.",
              :properties {:childId {:type "string",
                                     :description "The ID of the child event."},
                           :kind {:type "string",
                                  :description "Uniquely identifies the type of this resource. Value is always the fixed string games#eventChild.",
                                  :default "games#eventChild"}}},
 :PeerSessionDiagnostics {:id "PeerSessionDiagnostics",
                          :type "object",
                          :description "This is a JSON template for peer session diagnostics.",
                          :properties {:connectedTimestampMillis {:type "string",
                                                                  :description "Connected time in milliseconds.",
                                                                  :format "int64"},
                                       :kind {:type "string",
                                              :description "Uniquely identifies the type of this resource. Value is always the fixed string games#peerSessionDiagnostics.",
                                              :default "games#peerSessionDiagnostics"},
                                       :participantId {:type "string",
                                                       :description "The participant ID of the peer."},
                                       :reliableChannel {:$ref "PeerChannelDiagnostics",
                                                         :description "Reliable channel diagnostics."},
                                       :unreliableChannel {:$ref "PeerChannelDiagnostics",
                                                           :description "Unreliable channel diagnostics."}}},
 :TurnBasedMatchCreateRequest {:id "TurnBasedMatchCreateRequest",
                               :type "object",
                               :description "This is a JSON template for a turn-based match creation request.",
                               :properties {:autoMatchingCriteria {:$ref "TurnBasedAutoMatchingCriteria",
                                                                   :description "Criteria for auto-matching players into this match."},
                                            :invitedPlayerIds {:type "array",
                                                               :description "The player ids to invite to the match.",
                                                               :items {:type "string"}},
                                            :kind {:type "string",
                                                   :description "Uniquely identifies the type of this resource. Value is always the fixed string games#turnBasedMatchCreateRequest.",
                                                   :default "games#turnBasedMatchCreateRequest"},
                                            :requestId {:type "string",
                                                        :description "A randomly generated numeric ID. This number is used at the server to ensure that the request is handled correctly across retries.",
                                                        :format "int64"},
                                            :variant {:type "integer",
                                                      :description "The variant / mode of the application to be played. This can be any integer value, or left blank. You should use a small number of variants to keep the auto-matching pool as large as possible.",
                                                      :format "int32"}}},
 :TurnBasedMatchModification {:id "TurnBasedMatchModification",
                              :type "object",
                              :description "This is a JSON template for turn-based match modification metadata.",
                              :properties {:kind {:type "string",
                                                  :description "Uniquely identifies the type of this resource. Value is always the fixed string games#turnBasedMatchModification.",
                                                  :default "games#turnBasedMatchModification"},
                                           :modifiedTimestampMillis {:type "string",
                                                                     :description "The timestamp at which they modified the match, in milliseconds since the epoch in UTC.",
                                                                     :format "int64"},
                                           :participantId {:type "string",
                                                           :description "The ID of the participant that modified the match."}}},
 :EventDefinition {:id "EventDefinition",
                   :type "object",
                   :description "This is a JSON template for an event definition resource.",
                   :properties {:childEvents {:type "array",
                                              :description "A list of events that are a child of this event.",
                                              :items {:$ref "EventChild"}},
                                :description {:type "string",
                                              :description "Description of what this event represents."},
                                :displayName {:type "string",
                                              :description "The name to display for the event."},
                                :id {:type "string",
                                     :description "The ID of the event."},
                                :imageUrl {:type "string",
                                           :description "The base URL for the image that represents the event."},
                                :isDefaultImageUrl {:type "boolean",
                                                    :description "Indicates whether the icon image being returned is a default image, or is game-provided."},
                                :kind {:type "string",
                                       :description "Uniquely identifies the type of this resource. Value is always the fixed string games#eventDefinition.",
                                       :default "games#eventDefinition"},
                                :visibility {:type "string",
                                             :description "The visibility of event being tracked in this definition.\nPossible values are:  \n- \"REVEALED\": This event should be visible to all users. \n- \"HIDDEN\": This event should only be shown to users that have recorded this event at least once."}}},
 :AnonymousPlayer {:id "AnonymousPlayer",
                   :type "object",
                   :description "This is a JSON template for an anonymous player",
                   :properties {:avatarImageUrl {:type "string",
                                                 :description "The base URL for the image to display for the anonymous player."},
                                :displayName {:type "string",
                                              :description "The name to display for the anonymous player."},
                                :kind {:type "string",
                                       :description "Uniquely identifies the type of this resource. Value is always the fixed string games#anonymousPlayer.",
                                       :default "games#anonymousPlayer"}}},
 :AchievementUnlockResponse {:id "AchievementUnlockResponse",
                             :type "object",
                             :description "This is a JSON template for an achievement unlock response",
                             :properties {:kind {:type "string",
                                                 :description "Uniquely identifies the type of this resource. Value is always the fixed string games#achievementUnlockResponse.",
                                                 :default "games#achievementUnlockResponse"},
                                          :newlyUnlocked {:type "boolean",
                                                          :description "Whether this achievement was newly unlocked (that is, whether the unlock request for the achievement was the first for the player)."}}},
 :InstanceIosDetails {:id "InstanceIosDetails",
                      :type "object",
                      :description "This is a JSON template for the iOS details resource.",
                      :properties {:bundleIdentifier {:type "string",
                                                      :description "Bundle identifier."},
                                   :itunesAppId {:type "string",
                                                 :description "iTunes App ID."},
                                   :kind {:type "string",
                                          :description "Uniquely identifies the type of this resource. Value is always the fixed string games#instanceIosDetails.",
                                          :default "games#instanceIosDetails"},
                                   :preferredForIpad {:type "boolean",
                                                      :description "Indicates that this instance is the default for new installations on iPad devices."},
                                   :preferredForIphone {:type "boolean",
                                                        :description "Indicates that this instance is the default for new installations on iPhone devices."},
                                   :supportIpad {:type "boolean",
                                                 :description "Flag to indicate if this instance supports iPad."},
                                   :supportIphone {:type "boolean",
                                                   :description "Flag to indicate if this instance supports iPhone."}}},
 :Instance {:id "Instance",
            :type "object",
            :description "This is a JSON template for the Instance resource.",
            :properties {:acquisitionUri {:type "string",
                                          :description "URI which shows where a user can acquire this instance."},
                         :iosInstance {:$ref "InstanceIosDetails",
                                       :description "Platform dependent details for iOS."},
                         :realtimePlay {:type "boolean",
                                        :description "Flag to show if this game instance supports realtime play."},
                         :webInstance {:$ref "InstanceWebDetails",
                                       :description "Platform dependent details for Web."},
                         :androidInstance {:$ref "InstanceAndroidDetails",
                                           :description "Platform dependent details for Android."},
                         :name {:type "string",
                                :description "Localized display name."},
                         :kind {:type "string",
                                :description "Uniquely identifies the type of this resource. Value is always the fixed string games#instance.",
                                :default "games#instance"},
                         :turnBasedPlay {:type "boolean",
                                         :description "Flag to show if this game instance supports turn based play."},
                         :platformType {:type "string",
                                        :description "The platform type.\nPossible values are:  \n- \"ANDROID\" - Instance is for Android. \n- \"IOS\" - Instance is for iOS \n- \"WEB_APP\" - Instance is for Web App."}}},
 :RoomJoinRequest {:id "RoomJoinRequest",
                   :type "object",
                   :description "This is a JSON template for a join room request.",
                   :properties {:capabilities {:type "array",
                                               :description "The capabilities that this client supports for realtime communication.",
                                               :items {:type "string"}},
                                :clientAddress {:$ref "RoomClientAddress",
                                                :description "Client address for the player joining the room."},
                                :kind {:type "string",
                                       :description "Uniquely identifies the type of this resource. Value is always the fixed string games#roomJoinRequest.",
                                       :default "games#roomJoinRequest"},
                                :networkDiagnostics {:$ref "NetworkDiagnostics",
                                                     :description "Network diagnostics for the client joining the room."}}},
 :TurnBasedMatchResults {:id "TurnBasedMatchResults",
                         :type "object",
                         :description "This is a JSON template for a turn-based match results object.",
                         :properties {:data {:$ref "TurnBasedMatchDataRequest",
                                             :description "The final match data."},
                                      :kind {:type "string",
                                             :description "Uniquely identifies the type of this resource. Value is always the fixed string games#turnBasedMatchResults.",
                                             :default "games#turnBasedMatchResults"},
                                      :matchVersion {:type "integer",
                                                     :description "The version of the match being updated.",
                                                     :format "int32"},
                                      :results {:type "array",
                                                :description "The match results for the participants in the match.",
                                                :items {:$ref "ParticipantResult"}}}},
 :AchievementDefinition {:id "AchievementDefinition",
                         :type "object",
                         :description "This is a JSON template for an achievement definition object.",
                         :properties {:description {:type "string",
                                                    :description "The description of the achievement."},
                                      :revealedIconUrl {:type "string",
                                                        :description "The image URL for the revealed achievement icon."},
                                      :experiencePoints {:type "string",
                                                         :description "Experience points which will be earned when unlocking this achievement.",
                                                         :format "int64"},
                                      :initialState {:type "string",
                                                     :description "The initial state of the achievement.\nPossible values are:  \n- \"HIDDEN\" - Achievement is hidden. \n- \"REVEALED\" - Achievement is revealed. \n- \"UNLOCKED\" - Achievement is unlocked."},
                                      :isUnlockedIconUrlDefault {:type "boolean",
                                                                 :description "Indicates whether the unlocked icon image being returned is a default image, or is game-provided."},
                                      :name {:type "string",
                                             :description "The name of the achievement."},
                                      :isRevealedIconUrlDefault {:type "boolean",
                                                                 :description "Indicates whether the revealed icon image being returned is a default image, or is provided by the game."},
                                      :achievementType {:type "string",
                                                        :description "The type of the achievement.\nPossible values are:  \n- \"STANDARD\" - Achievement is either locked or unlocked. \n- \"INCREMENTAL\" - Achievement is incremental."},
                                      :unlockedIconUrl {:type "string",
                                                        :description "The image URL for the unlocked achievement icon."},
                                      :totalSteps {:type "integer",
                                                   :description "The total steps for an incremental achievement.",
                                                   :format "int32"},
                                      :id {:type "string",
                                           :description "The ID of the achievement."},
                                      :kind {:type "string",
                                             :description "Uniquely identifies the type of this resource. Value is always the fixed string games#achievementDefinition.",
                                             :default "games#achievementDefinition"},
                                      :formattedTotalSteps {:type "string",
                                                            :description "The total steps for an incremental achievement as a string."}}},
 :ParticipantResult {:id "ParticipantResult",
                     :type "object",
                     :description "This is a JSON template for a result for a match participant.",
                     :properties {:kind {:type "string",
                                         :description "Uniquely identifies the type of this resource. Value is always the fixed string games#participantResult.",
                                         :default "games#participantResult"},
                                  :participantId {:type "string",
                                                  :description "The ID of the participant."},
                                  :placing {:type "integer",
                                            :description "The placement or ranking of the participant in the match results; a number from one to the number of participants in the match. Multiple participants may have the same placing value in case of a type.",
                                            :format "int32"},
                                  :result {:type "string",
                                           :description "The result of the participant for this match.\nPossible values are:  \n- \"MATCH_RESULT_WIN\" - The participant won the match. \n- \"MATCH_RESULT_LOSS\" - The participant lost the match. \n- \"MATCH_RESULT_TIE\" - The participant tied the match. \n- \"MATCH_RESULT_NONE\" - There was no winner for the match (nobody wins or loses this kind of game.) \n- \"MATCH_RESULT_DISCONNECT\" - The participant disconnected / left during the match. \n- \"MATCH_RESULT_DISAGREED\" - Different clients reported different results for this participant."}}},
 :Played {:id "Played",
          :type "object",
          :description "This is a JSON template for metadata about a player playing a game with the currently authenticated user.",
          :properties {:autoMatched {:type "boolean",
                                     :description "True if the player was auto-matched with the currently authenticated user."},
                       :kind {:type "string",
                              :description "Uniquely identifies the type of this resource. Value is always the fixed string games#played.",
                              :default "games#played"},
                       :timeMillis {:type "string",
                                    :description "The last time the player played the game in milliseconds since the epoch in UTC.",
                                    :format "int64"}}},
 :PlayerLevel {:id "PlayerLevel",
               :type "object",
               :description "This is a JSON template for 1P/3P metadata about a user's level.",
               :properties {:kind {:type "string",
                                   :description "Uniquely identifies the type of this resource. Value is always the fixed string games#playerLevel.",
                                   :default "games#playerLevel"},
                            :level {:type "integer",
                                    :description "The level for the user.",
                                    :format "int32"},
                            :maxExperiencePoints {:type "string",
                                                  :description "The maximum experience points for this level.",
                                                  :format "int64"},
                            :minExperiencePoints {:type "string",
                                                  :description "The minimum experience points for this level.",
                                                  :format "int64"}}},
 :Application {:id "Application",
               :type "object",
               :description "This is a JSON template for the Application resource.",
               :properties {:description {:type "string",
                                          :description "The description of the application."},
                            :category {:$ref "ApplicationCategory",
                                       :description "The category of the application."},
                            :enabledFeatures {:type "array",
                                              :description "A list of features that have been enabled for the application.\nPossible values are:  \n- \"SNAPSHOTS\" - Snapshots has been enabled",
                                              :items {:type "string"}},
                            :assets {:type "array",
                                     :description "The assets of the application.",
                                     :items {:$ref "ImageAsset"}},
                            :name {:type "string",
                                   :description "The name of the application."},
                            :themeColor {:type "string",
                                         :description "A hint to the client UI for what color to use as an app-themed color. The color is given as an RGB triplet (e.g. \"E0E0E0\")."},
                            :achievement_count {:type "integer",
                                                :description "The number of achievements visible to the currently authenticated player.",
                                                :format "int32"},
                            :author {:type "string",
                                     :description "The author of the application."},
                            :lastUpdatedTimestamp {:type "string",
                                                   :description "The last updated timestamp of the application.",
                                                   :format "int64"},
                            :instances {:type "array",
                                        :description "The instances of the application.",
                                        :items {:$ref "Instance"}},
                            :id {:type "string",
                                 :description "The ID of the application."},
                            :kind {:type "string",
                                   :description "Uniquely identifies the type of this resource. Value is always the fixed string games#application.",
                                   :default "games#application"},
                            :leaderboard_count {:type "integer",
                                                :description "The number of leaderboards visible to the currently authenticated player.",
                                                :format "int32"}}},
 :EventRecordRequest {:id "EventRecordRequest",
                      :type "object",
                      :description "This is a JSON template for an event period update resource.",
                      :properties {:currentTimeMillis {:type "string",
                                                       :description "The current time when this update was sent, in milliseconds, since 1970 UTC (Unix Epoch).",
                                                       :format "int64"},
                                   :kind {:type "string",
                                          :description "Uniquely identifies the type of this resource. Value is always the fixed string games#eventRecordRequest.",
                                          :default "games#eventRecordRequest"},
                                   :requestId {:type "string",
                                               :description "The request ID used to identify this attempt to record events.",
                                               :format "int64"},
                                   :timePeriods {:type "array",
                                                 :description "A list of the time period updates being made in this request.",
                                                 :items {:$ref "EventPeriodUpdate"}}}},
 :AchievementSetStepsAtLeastResponse {:id "AchievementSetStepsAtLeastResponse",
                                      :type "object",
                                      :description "This is a JSON template for an achievement set steps at least response.",
                                      :properties {:currentSteps {:type "integer",
                                                                  :description "The current steps recorded for this incremental achievement.",
                                                                  :format "int32"},
                                                   :kind {:type "string",
                                                          :description "Uniquely identifies the type of this resource. Value is always the fixed string games#achievementSetStepsAtLeastResponse.",
                                                          :default "games#achievementSetStepsAtLeastResponse"},
                                                   :newlyUnlocked {:type "boolean",
                                                                   :description "Whether the the current steps for the achievement has reached the number of steps required to unlock."}}},
 :LeaderboardScoreRank {:id "LeaderboardScoreRank",
                        :type "object",
                        :description "This is a JSON template for a score rank in a leaderboard.",
                        :properties {:formattedNumScores {:type "string",
                                                          :description "The number of scores in the leaderboard as a string."},
                                     :formattedRank {:type "string",
                                                     :description "The rank in the leaderboard as a string."},
                                     :kind {:type "string",
                                            :description "Uniquely identifies the type of this resource. Value is always the fixed string games#leaderboardScoreRank.",
                                            :default "games#leaderboardScoreRank"},
                                     :numScores {:type "string",
                                                 :description "The number of scores in the leaderboard.",
                                                 :format "int64"},
                                     :rank {:type "string",
                                            :description "The rank in the leaderboard.",
                                            :format "int64"}}},
 :TurnBasedMatchData {:id "TurnBasedMatchData",
                      :type "object",
                      :description "This is a JSON template for a turn-based match data object.",
                      :properties {:data {:type "string",
                                          :description "The byte representation of the data (limited to 128 kB), as a Base64-encoded string with the URL_SAFE encoding option.",
                                          :format "byte"},
                                   :dataAvailable {:type "boolean",
                                                   :description "True if this match has data available but it wasn't returned in a list response; fetching the match individually will retrieve this data."},
                                   :kind {:type "string",
                                          :description "Uniquely identifies the type of this resource. Value is always the fixed string games#turnBasedMatchData.",
                                          :default "games#turnBasedMatchData"}}},
 :Player {:id "Player",
          :type "object",
          :description "This is a JSON template for a Player resource.",
          :properties {:bannerUrlPortrait {:type "string",
                                           :description "The url to the portrait mode player banner image."},
                       :originalPlayerId {:type "string",
                                          :description "The player ID that was used for this player the first time they signed into the game in question. This is only populated for calls to player.get for the requesting player, only if the player ID has subsequently changed, and only to clients that support remapping player IDs."},
                       :avatarImageUrl {:type "string",
                                        :description "The base URL for the image that represents the player."},
                       :displayName {:type "string",
                                     :description "The name to display for the player."},
                       :name {:type "object",
                              :description "An object representation of the individual components of the player's name. For some players, these fields may not be present.",
                              :properties {:familyName {:type "string",
                                                        :description "The family name of this player. In some places, this is known as the last name."},
                                           :givenName {:type "string",
                                                       :description "The given name of this player. In some places, this is known as the first name."}}},
                       :playerId {:type "string",
                                  :description "The ID of the player."},
                       :title {:type "string",
                               :description "The player's title rewarded for their game activities."},
                       :profileSettings {:$ref "ProfileSettings",
                                         :description "The player's profile settings. Controls whether or not the player's profile is visible to other players."},
                       :kind {:type "string",
                              :description "Uniquely identifies the type of this resource. Value is always the fixed string games#player.",
                              :default "games#player"},
                       :playerStattus {:type "string"},
                       :bannerUrlLandscape {:type "string",
                                            :description "The url to the landscape mode player banner image."},
                       :lastPlayedWith {:$ref "Played",
                                        :description "Details about the last time this player played a multiplayer game with the currently authenticated player. Populated for PLAYED_WITH player collection members."},
                       :friendStatus {:type "string",
                                      :description "The friend status of the given player, relative to the requester. This is unset if the player is not sharing their friends list with the game."},
                       :experienceInfo {:$ref "PlayerExperienceInfo",
                                        :description "An object to represent Play Game experience information for the player."}}},
 :RoomCreateRequest {:id "RoomCreateRequest",
                     :type "object",
                     :description "This is a JSON template for a room creation request.",
                     :properties {:autoMatchingCriteria {:$ref "RoomAutoMatchingCriteria",
                                                         :description "Criteria for auto-matching players into this room."},
                                  :capabilities {:type "array",
                                                 :description "The capabilities that this client supports for realtime communication.",
                                                 :items {:type "string"}},
                                  :clientAddress {:$ref "RoomClientAddress",
                                                  :description "Client address for the player creating the room."},
                                  :invitedPlayerIds {:type "array",
                                                     :description "The player IDs to invite to the room.",
                                                     :items {:type "string"}},
                                  :kind {:type "string",
                                         :description "Uniquely identifies the type of this resource. Value is always the fixed string games#roomCreateRequest.",
                                         :default "games#roomCreateRequest"},
                                  :networkDiagnostics {:$ref "NetworkDiagnostics",
                                                       :description "Network diagnostics for the client creating the room."},
                                  :requestId {:type "string",
                                              :description "A randomly generated numeric ID. This number is used at the server to ensure that the request is handled correctly across retries.",
                                              :format "int64"},
                                  :variant {:type "integer",
                                            :description "The variant / mode of the application to be played. This can be any integer value, or left blank. You should use a small number of variants to keep the auto-matching pool as large as possible.",
                                            :format "int32"}}},
 :PlayerScore {:id "PlayerScore",
               :type "object",
               :description "This is a JSON template for a player score.",
               :properties {:formattedScore {:type "string",
                                             :description "The formatted score for this player score."},
                            :kind {:type "string",
                                   :description "Uniquely identifies the type of this resource. Value is always the fixed string games#playerScore.",
                                   :default "games#playerScore"},
                            :score {:type "string",
                                    :description "The numerical value for this player score.",
                                    :format "int64"},
                            :scoreTag {:type "string",
                                       :description "Additional information about this score. Values will contain no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986."},
                            :timeSpan {:type "string",
                                       :description "The time span for this player score.\nPossible values are:  \n- \"ALL_TIME\" - The score is an all-time score. \n- \"WEEKLY\" - The score is a weekly score. \n- \"DAILY\" - The score is a daily score."}}},
 :GamesAchievementIncrement {:id "GamesAchievementIncrement",
                             :type "object",
                             :description "This is a JSON template for the payload to request to increment an achievement.",
                             :properties {:kind {:type "string",
                                                 :description "Uniquely identifies the type of this resource. Value is always the fixed string games#GamesAchievementIncrement.",
                                                 :default "games#GamesAchievementIncrement"},
                                          :requestId {:type "string",
                                                      :description "The requestId associated with an increment to an achievement.",
                                                      :format "int64"},
                                          :steps {:type "integer",
                                                  :description "The number of steps to be incremented.",
                                                  :format "int32"}}},
 :Leaderboard {:id "Leaderboard",
               :type "object",
               :description "This is a JSON template for the Leaderboard resource.",
               :properties {:iconUrl {:type "string",
                                      :description "The icon for the leaderboard."},
                            :id {:type "string",
                                 :description "The leaderboard ID."},
                            :isIconUrlDefault {:type "boolean",
                                               :description "Indicates whether the icon image being returned is a default image, or is game-provided."},
                            :kind {:type "string",
                                   :description "Uniquely identifies the type of this resource. Value is always the fixed string games#leaderboard.",
                                   :default "games#leaderboard"},
                            :name {:type "string",
                                   :description "The name of the leaderboard."},
                            :order {:type "string",
                                    :description "How scores are ordered.\nPossible values are:  \n- \"LARGER_IS_BETTER\" - Larger values are better; scores are sorted in descending order. \n- \"SMALLER_IS_BETTER\" - Smaller values are better; scores are sorted in ascending order."}}},
 :EventPeriodRange {:id "EventPeriodRange",
                    :type "object",
                    :description "This is a JSON template for an event period time range.",
                    :properties {:kind {:type "string",
                                        :description "Uniquely identifies the type of this resource. Value is always the fixed string games#eventPeriodRange.",
                                        :default "games#eventPeriodRange"},
                                 :periodEndMillis {:type "string",
                                                   :description "The time when this update period ends, in millis, since 1970 UTC (Unix Epoch).",
                                                   :format "int64"},
                                 :periodStartMillis {:type "string",
                                                     :description "The time when this update period begins, in millis, since 1970 UTC (Unix Epoch).",
                                                     :format "int64"}}},
 :NetworkDiagnostics {:id "NetworkDiagnostics",
                      :type "object",
                      :description "This is a JSON template for network diagnostics reported for a client.",
                      :properties {:androidNetworkSubtype {:type "integer",
                                                           :description "The Android network subtype.",
                                                           :format "int32"},
                                   :androidNetworkType {:type "integer",
                                                        :description "The Android network type.",
                                                        :format "int32"},
                                   :iosNetworkType {:type "integer",
                                                    :description "iOS network type as defined in Reachability.h.",
                                                    :format "int32"},
                                   :kind {:type "string",
                                          :description "Uniquely identifies the type of this resource. Value is always the fixed string games#networkDiagnostics.",
                                          :default "games#networkDiagnostics"},
                                   :networkOperatorCode {:type "string",
                                                         :description "The MCC+MNC code for the client's network connection. On Android: http://developer.android.com/reference/android/telephony/TelephonyManager.html#getNetworkOperator() On iOS, see: https://developer.apple.com/library/ios/documentation/NetworkingInternet/Reference/CTCarrier/Reference/Reference.html"},
                                   :networkOperatorName {:type "string",
                                                         :description "The name of the carrier of the client's network connection. On Android: http://developer.android.com/reference/android/telephony/TelephonyManager.html#getNetworkOperatorName() On iOS: https://developer.apple.com/library/ios/documentation/NetworkingInternet/Reference/CTCarrier/Reference/Reference.html#//apple_ref/occ/instp/CTCarrier/carrierName"},
                                   :registrationLatencyMillis {:type "integer",
                                                               :description "The amount of time in milliseconds it took for the client to establish a connection with the XMPP server.",
                                                               :format "int32"}}},
 :EventRecordFailure {:id "EventRecordFailure",
                      :type "object",
                      :description "This is a JSON template for an event update failure resource.",
                      :properties {:eventId {:type "string",
                                             :description "The ID of the event that was not updated."},
                                   :failureCause {:type "string",
                                                  :description "The cause for the update failure.\nPossible values are:  \n- \"NOT_FOUND\" - An attempt was made to set an event that was not defined. \n- \"INVALID_UPDATE_VALUE\" - An attempt was made to increment an event by a non-positive value."},
                                   :kind {:type "string",
                                          :description "Uniquely identifies the type of this resource. Value is always the fixed string games#eventRecordFailure.",
                                          :default "games#eventRecordFailure"}}},
 :AchievementUpdateResponse {:id "AchievementUpdateResponse",
                             :type "object",
                             :description "This is a JSON template for an achievement update response.",
                             :properties {:achievementId {:type "string",
                                                          :description "The achievement this update is was applied to."},
                                          :currentState {:type "string",
                                                         :description "The current state of the achievement.\nPossible values are:  \n- \"HIDDEN\" - Achievement is hidden. \n- \"REVEALED\" - Achievement is revealed. \n- \"UNLOCKED\" - Achievement is unlocked."},
                                          :currentSteps {:type "integer",
                                                         :description "The current steps recorded for this achievement if it is incremental.",
                                                         :format "int32"},
                                          :kind {:type "string",
                                                 :description "Uniquely identifies the type of this resource. Value is always the fixed string games#achievementUpdateResponse.",
                                                 :default "games#achievementUpdateResponse"},
                                          :newlyUnlocked {:type "boolean",
                                                          :description "Whether this achievement was newly unlocked (that is, whether the unlock request for the achievement was the first for the player)."},
                                          :updateOccurred {:type "boolean",
                                                           :description "Whether the requested updates actually affected the achievement."}}},
 :EventBatchRecordFailure {:id "EventBatchRecordFailure",
                           :type "object",
                           :description "This is a JSON template for a batch update failure resource.",
                           :properties {:failureCause {:type "string",
                                                       :description "The cause for the update failure.\nPossible values are:  \n- \"TOO_LARGE\": A batch request was issued with more events than are allowed in a single batch. \n- \"TIME_PERIOD_EXPIRED\": A batch was sent with data too far in the past to record. \n- \"TIME_PERIOD_SHORT\": A batch was sent with a time range that was too short. \n- \"TIME_PERIOD_LONG\": A batch was sent with a time range that was too long. \n- \"ALREADY_UPDATED\": An attempt was made to record a batch of data which was already seen. \n- \"RECORD_RATE_HIGH\": An attempt was made to record data faster than the server will apply updates."},
                                        :kind {:type "string",
                                               :description "Uniquely identifies the type of this resource. Value is always the fixed string games#eventBatchRecordFailure.",
                                               :default "games#eventBatchRecordFailure"},
                                        :range {:$ref "EventPeriodRange",
                                                :description "The time range which was rejected; empty for a request-wide failure."}}},
 :LeaderboardScores {:id "LeaderboardScores",
                     :type "object",
                     :description "This is a JSON template for a ListScores response.",
                     :properties {:items {:type "array",
                                          :description "The scores in the leaderboard.",
                                          :items {:$ref "LeaderboardEntry"}},
                                  :kind {:type "string",
                                         :description "Uniquely identifies the type of this resource. Value is always the fixed string games#leaderboardScores.",
                                         :default "games#leaderboardScores"},
                                  :nextPageToken {:type "string",
                                                  :description "The pagination token for the next page of results."},
                                  :numScores {:type "string",
                                              :description "The total number of scores in the leaderboard.",
                                              :format "int64"},
                                  :playerScore {:$ref "LeaderboardEntry",
                                                :description "The score of the requesting player on the leaderboard. The player's score may appear both here and in the list of scores above. If you are viewing a public leaderboard and the player is not sharing their gameplay information publicly, the scoreRank and formattedScoreRank values will not be present."},
                                  :prevPageToken {:type "string",
                                                  :description "The pagination token for the previous page of results."}}},
 :TurnBasedMatchDataRequest {:id "TurnBasedMatchDataRequest",
                             :type "object",
                             :description "This is a JSON template for sending a turn-based match data object.",
                             :properties {:data {:type "string",
                                                 :description "The byte representation of the data (limited to 128 kB), as a Base64-encoded string with the URL_SAFE encoding option.",
                                                 :format "byte"},
                                          :kind {:type "string",
                                                 :description "Uniquely identifies the type of this resource. Value is always the fixed string games#turnBasedMatchDataRequest.",
                                                 :default "games#turnBasedMatchDataRequest"}}}}
