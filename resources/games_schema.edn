{:AchievementDefinitionsListResponse {:id "AchievementDefinitionsListResponse",
                                      :description "A list of achievement definition objects.",
                                      :type "object",
                                      :properties {:nextPageToken {:type "string",
                                                                   :description "Token corresponding to the next page of results."},
                                                   :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementDefinitionsListResponse`.",
                                                          :type "string"},
                                                   :items {:description "The achievement definitions.",
                                                           :type "array",
                                                           :items {:$ref "AchievementDefinition"}}}},
 :PlayerLeaderboardScoreListResponse {:id "PlayerLeaderboardScoreListResponse",
                                      :properties {:items {:type "array",
                                                           :description "The leaderboard scores.",
                                                           :items {:$ref "PlayerLeaderboardScore"}},
                                                   :player {:$ref "Player",
                                                            :description "The Player resources for the owner of this score."},
                                                   :nextPageToken {:type "string",
                                                                   :description "The pagination token for the next page of results."},
                                                   :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#playerLeaderboardScoreListResponse`.",
                                                          :type "string"}},
                                      :type "object",
                                      :description "A list of player leaderboard scores."},
 :LeaderboardEntry {:type "object",
                    :description "The Leaderboard Entry resource.",
                    :id "LeaderboardEntry",
                    :properties {:scoreRank {:type "string",
                                             :description "The rank of this score for this leaderboard.",
                                             :format "int64"},
                                 :timeSpan {:enum ["SCORE_TIME_SPAN_UNSPECIFIED"
                                                   "ALL_TIME"
                                                   "WEEKLY"
                                                   "DAILY"],
                                            :enumDescriptions ["Default value. This value is unused."
                                                               "The score is an all-time score."
                                                               "The score is a weekly score."
                                                               "The score is a daily score."],
                                            :type "string",
                                            :description "The time span of this high score."},
                                 :writeTimestampMillis {:description "The timestamp at which this score was recorded, in milliseconds since the epoch in UTC.",
                                                        :type "string",
                                                        :format "int64"},
                                 :formattedScore {:type "string",
                                                  :description "The localized string for the numerical value of this score."},
                                 :formattedScoreRank {:type "string",
                                                      :description "The localized string for the rank of this score for this leaderboard."},
                                 :scoreValue {:description "The numerical value of this score.",
                                              :format "int64",
                                              :type "string"},
                                 :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#leaderboardEntry`.",
                                        :type "string"},
                                 :player {:description "The player who holds this score.",
                                          :$ref "Player"},
                                 :scoreTag {:description "Additional information about the score. Values must contain no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986.",
                                            :type "string"}}},
 :ApplicationVerifyResponse {:type "object",
                             :properties {:kind {:type "string",
                                                 :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#applicationVerifyResponse`."},
                                          :alternate_player_id {:type "string",
                                                                :description "An alternate ID that was once used for the player that was issued the auth token used in this request. (This field is not normally populated.)"},
                                          :player_id {:description "The ID of the player that was issued the auth token used in this request.",
                                                      :type "string"}},
                             :id "ApplicationVerifyResponse",
                             :description "A third party application verification response resource."},
 :EventDefinitionListResponse {:type "object",
                               :id "EventDefinitionListResponse",
                               :properties {:nextPageToken {:description "The pagination token for the next page of results.",
                                                            :type "string"},
                                            :kind {:type "string",
                                                   :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#eventDefinitionListResponse`."},
                                            :items {:type "array",
                                                    :items {:$ref "EventDefinition"},
                                                    :description "The event definitions."}},
                               :description "A ListDefinitions response."},
 :SnapshotImage {:properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#snapshotImage`.",
                                     :type "string"},
                              :width {:description "The width of the image.",
                                      :type "integer",
                                      :format "int32"},
                              :url {:description "The URL of the image. This URL may be invalidated at any time and should not be cached.",
                                    :type "string"},
                              :height {:type "integer",
                                       :description "The height of the image.",
                                       :format "int32"},
                              :mime_type {:description "The MIME type of the image.",
                                          :type "string"}},
                 :id "SnapshotImage",
                 :description "An image of a snapshot.",
                 :type "object"},
 :EventPeriodUpdate {:description "An event period update resource.",
                     :id "EventPeriodUpdate",
                     :type "object",
                     :properties {:updates {:type "array",
                                            :items {:$ref "EventUpdateRequest"},
                                            :description "The updates being made for this time period."},
                                  :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#eventPeriodUpdate`.",
                                         :type "string"},
                                  :timePeriod {:$ref "EventPeriodRange",
                                               :description "The time period being covered by this update."}}},
 :PlayerExperienceInfo {:properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#playerExperienceInfo`.",
                                            :type "string"},
                                     :currentLevel {:$ref "PlayerLevel",
                                                    :description "The current level of the player."},
                                     :currentExperiencePoints {:type "string",
                                                               :format "int64",
                                                               :description "The current number of experience points for the player."},
                                     :nextLevel {:description "The next level of the player. If the current level is the maximum level, this should be same as the current level.",
                                                 :$ref "PlayerLevel"},
                                     :lastLevelUpTimestampMillis {:description "The timestamp when the player was leveled up, in millis since Unix epoch UTC.",
                                                                  :format "int64",
                                                                  :type "string"}},
                        :type "object",
                        :id "PlayerExperienceInfo",
                        :description "1P/3P metadata about the player's experience."},
 :AchievementRevealResponse {:type "object",
                             :id "AchievementRevealResponse",
                             :properties {:currentState {:type "string",
                                                         :description "The current state of the achievement for which a reveal was attempted. This might be `UNLOCKED` if the achievement was already unlocked.",
                                                         :enumDescriptions ["Safe default, don't use."
                                                                            "Achievement is revealed."
                                                                            "Achievement is unlocked."],
                                                         :enum ["REVEAL_ACHIEVEMENT_STATE_UNSPECIFIED"
                                                                "REVEALED"
                                                                "UNLOCKED"]},
                                          :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementRevealResponse`.",
                                                 :type "string"}},
                             :description "An achievement reveal response"},
 :ScoreSubmission {:type "object",
                   :properties {:score {:description "The new score being submitted.",
                                        :type "string",
                                        :format "int64"},
                                :kind {:type "string",
                                       :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#scoreSubmission`."},
                                :signature {:description "Signature Values will contain URI-safe characters as defined by section 2.3 of RFC 3986.",
                                            :type "string"},
                                :leaderboardId {:description "The leaderboard this score is being submitted to.",
                                                :type "string"},
                                :scoreTag {:description "Additional information about this score. Values will contain no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986.",
                                           :type "string"}},
                   :id "ScoreSubmission",
                   :description "A request to submit a score to leaderboards."},
 :EventUpdateRequest {:description "An event period update resource.",
                      :type "object",
                      :id "EventUpdateRequest",
                      :properties {:definitionId {:type "string",
                                                  :description "The ID of the event being modified in this update."},
                                   :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#eventUpdateRequest`.",
                                          :type "string"},
                                   :updateCount {:format "int64",
                                                 :type "string",
                                                 :description "The number of times this event occurred in this time period."}}},
 :AchievementUpdateMultipleRequest {:id "AchievementUpdateMultipleRequest",
                                    :type "object",
                                    :properties {:kind {:type "string",
                                                        :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementUpdateMultipleRequest`."},
                                                 :updates {:type "array",
                                                           :description "The individual achievement update requests.",
                                                           :items {:$ref "AchievementUpdateRequest"}}},
                                    :description "A list of achievement update requests."},
 :InstanceWebDetails {:type "object",
                      :description "The Web details resource.",
                      :properties {:launchUrl {:description "Launch URL for the game.",
                                               :type "string"},
                                   :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#instanceWebDetails`.",
                                          :type "string"},
                                   :preferred {:type "boolean",
                                               :description "Indicates that this instance is the default for new installations."}},
                      :id "InstanceWebDetails"},
 :PlayerScoreListResponse {:type "object",
                           :properties {:kind {:type "string",
                                               :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#playerScoreListResponse`."},
                                        :submittedScores {:type "array",
                                                          :description "The score submissions statuses.",
                                                          :items {:$ref "PlayerScoreResponse"}}},
                           :id "PlayerScoreListResponse",
                           :description "A list of score submission statuses."},
 :AchievementUpdateMultipleResponse {:id "AchievementUpdateMultipleResponse",
                                     :description "Response message for UpdateMultipleAchievements rpc.",
                                     :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementUpdateMultipleResponse`.",
                                                         :type "string"},
                                                  :updatedAchievements {:description "The updated state of the achievements.",
                                                                        :type "array",
                                                                        :items {:$ref "AchievementUpdateResponse"}}},
                                     :type "object"},
 :EndPoint {:description "Container for a URL end point of the requested type.",
            :id "EndPoint",
            :properties {:url {:description "A URL suitable for loading in a web browser for the requested endpoint.",
                               :type "string"}},
            :type "object"},
 :PlayerListResponse {:type "object",
                      :id "PlayerListResponse",
                      :properties {:items {:type "array",
                                           :items {:$ref "Player"},
                                           :description "The players."},
                                   :nextPageToken {:type "string",
                                                   :description "Token corresponding to the next page of results."},
                                   :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#playerListResponse`.",
                                          :type "string"}},
                      :description "A third party player list response."},
 :CategoryListResponse {:properties {:kind {:type "string",
                                            :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#categoryListResponse`."},
                                     :items {:description "The list of categories with usage data.",
                                             :type "array",
                                             :items {:$ref "Category"}},
                                     :nextPageToken {:description "Token corresponding to the next page of results.",
                                                     :type "string"}},
                        :id "CategoryListResponse",
                        :description "A third party list metagame categories response.",
                        :type "object"},
 :AchievementIncrementResponse {:description "An achievement increment response",
                                :type "object",
                                :id "AchievementIncrementResponse",
                                :properties {:currentSteps {:description "The current steps recorded for this incremental achievement.",
                                                            :type "integer",
                                                            :format "int32"},
                                             :newlyUnlocked {:description "Whether the current steps for the achievement has reached the number of steps required to unlock.",
                                                             :type "boolean"},
                                             :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementIncrementResponse`.",
                                                    :type "string"}}},
 :EventUpdateResponse {:description "An event period update resource.",
                       :properties {:playerEvents {:description "The current status of any updated events",
                                                   :type "array",
                                                   :items {:$ref "PlayerEvent"}},
                                    :kind {:type "string",
                                           :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#eventUpdateResponse`."},
                                    :batchFailures {:type "array",
                                                    :description "Any batch-wide failures which occurred applying updates.",
                                                    :items {:$ref "EventBatchRecordFailure"}},
                                    :eventFailures {:description "Any failures updating a particular event.",
                                                    :items {:$ref "EventRecordFailure"},
                                                    :type "array"}},
                       :type "object",
                       :id "EventUpdateResponse"},
 :PlayerEventListResponse {:properties {:items {:type "array",
                                                :items {:$ref "PlayerEvent"},
                                                :description "The player events."},
                                        :nextPageToken {:type "string",
                                                        :description "The pagination token for the next page of results."},
                                        :kind {:type "string",
                                               :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#playerEventListResponse`."}},
                           :id "PlayerEventListResponse",
                           :type "object",
                           :description "A ListByPlayer response."},
 :StatsResponse {:type "object",
                 :id "StatsResponse",
                 :description "A third party stats resource.",
                 :properties {:total_spend_next_28_days {:format "float",
                                                         :description "The predicted amount of money that the player going to spend in the next 28 days. E.g., 1, 30, 60, ... . Not populated if there is not enough information.",
                                                         :type "number"},
                              :num_sessions_percentile {:description "The approximation of the sessions percentile of the player within the last 30 days, where a session begins when the player is connected to Play Games Services and ends when they are disconnected. E.g., 0, 0.25, 0.5, 0.75. Not populated if there is not enough information.",
                                                        :type "number",
                                                        :format "float"},
                              :days_since_last_played {:format "int32",
                                                       :description "Number of days since the player last played this game. E.g., 0, 1, 5, 10, ... . Not populated if there is not enough information.",
                                                       :type "integer"},
                              :num_purchases {:description "Number of in-app purchases made by the player in this game. E.g., 0, 1, 5, 10, ... . Not populated if there is not enough information.",
                                              :format "int32",
                                              :type "integer"},
                              :avg_session_length_minutes {:type "number",
                                                           :description "Average session length in minutes of the player. E.g., 1, 30, 60, ... . Not populated if there is not enough information.",
                                                           :format "float"},
                              :churn_probability {:format "float",
                                                  :description "The probability of the player not returning to play the game in the next day. E.g., 0, 0.1, 0.5, ..., 1.0. Not populated if there is not enough information.",
                                                  :type "number"},
                              :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#statsResponse`.",
                                     :type "string"},
                              :spend_percentile {:description "The approximate spend percentile of the player in this game. E.g., 0, 0.25, 0.5, 0.75. Not populated if there is not enough information.",
                                                 :type "number",
                                                 :format "float"},
                              :num_sessions {:description "The approximate number of sessions of the player within the last 28 days, where a session begins when the player is connected to Play Games Services and ends when they are disconnected. E.g., 0, 1, 5, 10, ... . Not populated if there is not enough information.",
                                             :type "integer",
                                             :format "int32"},
                              :spend_probability {:description "The probability of the player going to spend the game in the next seven days. E.g., 0, 0.25, 0.50, 0.75. Not populated if there is not enough information.",
                                                  :format "float",
                                                  :type "number"},
                              :high_spender_probability {:format "float",
                                                         :description "The probability of the player going to spend beyond a threshold amount of money. E.g., 0, 0.25, 0.50, 0.75. Not populated if there is not enough information.",
                                                         :type "number"}}},
 :InstanceAndroidDetails {:type "object",
                          :description "The Android instance details resource.",
                          :properties {:preferred {:description "Indicates that this instance is the default for new installations.",
                                                   :type "boolean"},
                                       :packageName {:type "string",
                                                     :description "Android package name which maps to Google Play URL."},
                                       :enablePiracyCheck {:type "boolean",
                                                           :description "Flag indicating whether the anti-piracy check is enabled."},
                                       :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#instanceAndroidDetails`.",
                                              :type "string"}},
                          :id "InstanceAndroidDetails"},
 :ApplicationCategory {:description "An application category object.",
                       :type "object",
                       :id "ApplicationCategory",
                       :properties {:primary {:type "string",
                                              :description "The primary category."},
                                    :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#applicationCategory`.",
                                           :type "string"},
                                    :secondary {:type "string",
                                                :description "The secondary category."}}},
 :PlayerLeaderboardScore {:properties {:scoreString {:type "string",
                                                     :description "The formatted value of this score."},
                                       :socialRank {:$ref "LeaderboardScoreRank",
                                                    :description "The social rank of the score in this leaderboard."},
                                       :writeTimestamp {:description "The timestamp at which this score was recorded, in milliseconds since the epoch in UTC.",
                                                        :type "string",
                                                        :format "int64"},
                                       :timeSpan {:enumDescriptions ["Default value. This value is unused."
                                                                     "The score is an all-time score."
                                                                     "The score is a weekly score."
                                                                     "The score is a daily score."],
                                                  :description "The time span of this score.",
                                                  :type "string",
                                                  :enum ["SCORE_TIME_SPAN_UNSPECIFIED"
                                                         "ALL_TIME"
                                                         "WEEKLY"
                                                         "DAILY"]},
                                       :friendsRank {:$ref "LeaderboardScoreRank",
                                                     :description "The rank of the score in the friends collection for this leaderboard."},
                                       :scoreValue {:format "int64",
                                                    :type "string",
                                                    :description "The numerical value of this score."},
                                       :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#playerLeaderboardScore`.",
                                              :type "string"},
                                       :scoreTag {:type "string",
                                                  :description "Additional information about the score. Values must contain no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986."},
                                       :publicRank {:description "The public rank of the score in this leaderboard. This object will not be present if the user is not sharing their scores publicly.",
                                                    :$ref "LeaderboardScoreRank"},
                                       :leaderboard_id {:description "The ID of the leaderboard this score is in.",
                                                        :type "string"}},
                          :type "object",
                          :description "A player leaderboard score object.",
                          :id "PlayerLeaderboardScore"},
 :Snapshot {:type "object",
            :properties {:description {:description "The description of this snapshot.",
                                       :type "string"},
                         :progressValue {:type "string",
                                         :format "int64",
                                         :description "The progress value (64-bit integer set by developer) associated with this snapshot."},
                         :durationMillis {:type "string",
                                          :description "The duration associated with this snapshot, in millis.",
                                          :format "int64"},
                         :uniqueName {:type "string",
                                      :description "The unique name provided when the snapshot was created."},
                         :lastModifiedMillis {:format "int64",
                                              :type "string",
                                              :description "The timestamp (in millis since Unix epoch) of the last modification to this snapshot."},
                         :type {:enum ["SNAPSHOT_TYPE_UNSPECIFIED"
                                       "SAVE_GAME"],
                                :type "string",
                                :enumDescriptions ["Default value. This value is unused."
                                                   "A snapshot representing a save game."],
                                :description "The type of this snapshot."},
                         :title {:type "string",
                                 :description "The title of this snapshot."},
                         :coverImage {:description "The cover image of this snapshot. May be absent if there is no image.",
                                      :$ref "SnapshotImage"},
                         :id {:description "The ID of the snapshot.",
                              :type "string"},
                         :kind {:type "string",
                                :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#snapshot`."},
                         :driveId {:description "The ID of the file underlying this snapshot in the Drive API. Only present if the snapshot is a view on a Drive file and the file is owned by the caller.",
                                   :type "string"}},
            :id "Snapshot",
            :description "An snapshot object."},
 :PlayerAchievementListResponse {:description "A list of achievement objects.",
                                 :type "object",
                                 :properties {:items {:type "array",
                                                      :description "The achievements.",
                                                      :items {:$ref "PlayerAchievement"}},
                                              :kind {:type "string",
                                                     :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#playerAchievementListResponse`."},
                                              :nextPageToken {:description "Token corresponding to the next page of results.",
                                                              :type "string"}},
                                 :id "PlayerAchievementListResponse"},
 :PlayerScoreResponse {:description "A list of leaderboard entry resources.",
                       :properties {:kind {:type "string",
                                           :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#playerScoreResponse`."},
                                    :scoreTag {:description "Additional information about this score. Values will contain no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986.",
                                               :type "string"},
                                    :beatenScoreTimeSpans {:description "The time spans where the submitted score is better than the existing score for that time span.",
                                                           :type "array",
                                                           :items {:type "string",
                                                                   :enumDescriptions ["Default value. This value is unused."
                                                                                      "The score is an all-time score."
                                                                                      "The score is a weekly score."
                                                                                      "The score is a daily score."],
                                                                   :enum ["SCORE_TIME_SPAN_UNSPECIFIED"
                                                                          "ALL_TIME"
                                                                          "WEEKLY"
                                                                          "DAILY"]}},
                                    :unbeatenScores {:type "array",
                                                     :description "The scores in time spans that have not been beaten. As an example, the submitted score may be better than the player's `DAILY` score, but not better than the player's scores for the `WEEKLY` or `ALL_TIME` time spans.",
                                                     :items {:$ref "PlayerScore"}},
                                    :leaderboardId {:description "The leaderboard ID that this score was submitted to.",
                                                    :type "string"},
                                    :formattedScore {:type "string",
                                                     :description "The formatted value of the submitted score."}},
                       :type "object",
                       :id "PlayerScoreResponse"},
 :PlayerEvent {:type "object",
               :id "PlayerEvent",
               :properties {:formattedNumEvents {:type "string",
                                                 :description "The current number of times this event has occurred, as a string. The formatting of this string depends on the configuration of your event in the Play Games Developer Console."},
                            :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#playerEvent`.",
                                   :type "string"},
                            :playerId {:type "string",
                                       :description "The ID of the player."},
                            :numEvents {:type "string",
                                        :format "int64",
                                        :description "The current number of times this event has occurred."},
                            :definitionId {:type "string",
                                           :description "The ID of the event definition."}},
               :description "An event status resource."},
 :AchievementUpdateRequest {:properties {:setStepsAtLeastPayload {:$ref "GamesAchievementSetStepsAtLeast",
                                                                  :description "The payload if an update of type `SET_STEPS_AT_LEAST` was requested for the achievement."},
                                         :kind {:type "string",
                                                :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementUpdateRequest`."},
                                         :updateType {:description "The type of update being applied.",
                                                      :enumDescriptions ["Safe default, don't use."
                                                                         "Achievement is revealed."
                                                                         "Achievement is unlocked."
                                                                         "Achievement is incremented."
                                                                         "Achievement progress is set to at least the passed value."],
                                                      :type "string",
                                                      :enum ["ACHIEVEMENT_UPDATE_TYPE_UNSPECIFIED"
                                                             "REVEAL"
                                                             "UNLOCK"
                                                             "INCREMENT"
                                                             "SET_STEPS_AT_LEAST"]},
                                         :achievementId {:type "string",
                                                         :description "The achievement this update is being applied to."},
                                         :incrementPayload {:$ref "GamesAchievementIncrement",
                                                            :description "The payload if an update of type `INCREMENT` was requested for the achievement."}},
                            :description "A request to update an achievement.",
                            :type "object",
                            :id "AchievementUpdateRequest"},
 :PlayerScoreSubmissionList {:description "A list of score submission requests.",
                             :type "object",
                             :id "PlayerScoreSubmissionList",
                             :properties {:scores {:description "The score submissions.",
                                                   :items {:$ref "ScoreSubmission"},
                                                   :type "array"},
                                          :kind {:type "string",
                                                 :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#playerScoreSubmissionList`."}}},
 :PlayerAchievement {:id "PlayerAchievement",
                     :description "An achievement object.",
                     :properties {:lastUpdatedTimestamp {:description "The timestamp of the last modification to this achievement's state.",
                                                         :format "int64",
                                                         :type "string"},
                                  :experiencePoints {:description "Experience points earned for the achievement. This field is absent for achievements that have not yet been unlocked and 0 for achievements that have been unlocked by testers but that are unpublished.",
                                                     :format "int64",
                                                     :type "string"},
                                  :achievementState {:enumDescriptions ["Default value. This value is unused."
                                                                        "Achievement is hidden."
                                                                        "Achievement is revealed."
                                                                        "Achievement is unlocked."],
                                                     :enum ["STATE_UNSPECIFIED"
                                                            "HIDDEN"
                                                            "REVEALED"
                                                            "UNLOCKED"],
                                                     :type "string",
                                                     :description "The state of the achievement."},
                                  :formattedCurrentStepsString {:type "string",
                                                                :description "The current steps for an incremental achievement as a string."},
                                  :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#playerAchievement`.",
                                         :type "string"},
                                  :currentSteps {:description "The current steps for an incremental achievement.",
                                                 :format "int32",
                                                 :type "integer"},
                                  :id {:description "The ID of the achievement.",
                                       :type "string"}},
                     :type "object"},
 :ProfileSettings {:id "ProfileSettings",
                   :properties {:profileVisible {:type "boolean",
                                                 :description "Whether the player's profile is visible to the currently signed in player."},
                                :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#profileSettings`.",
                                       :type "string"},
                                :friendsListVisibility {:enumDescriptions ["Unused."
                                                                           "The friends list is currently visible to the game."
                                                                           "The developer does not have access to the friends list, but can call the Android API to show a consent dialog."
                                                                           "The friends list is currently unavailable for this user, and it is not possible to request access at this time, either because the user has permanently declined or the friends feature is not available to them. In this state, any attempts to request access to the friends list will be unsuccessful."],
                                                        :enum ["FRIENDS_LIST_VISIBILITY_UNSPECIFIED"
                                                               "VISIBLE"
                                                               "REQUEST_REQUIRED"
                                                               "UNAVAILABLE"],
                                                        :type "string"}},
                   :description "Profile settings",
                   :type "object"},
 :RevisionCheckResponse {:properties {:apiVersion {:type "string",
                                                   :description "The version of the API this client revision should use when calling API methods."},
                                      :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#revisionCheckResponse`.",
                                             :type "string"},
                                      :revisionStatus {:enumDescriptions ["Default value. This value is unused."
                                                                          "The revision being used is current."
                                                                          "There is currently a newer version available, but the revision being used still works."
                                                                          "The revision being used is not supported in any released version."],
                                                       :enum ["REVISION_STATUS_UNSPECIFIED"
                                                              "OK"
                                                              "DEPRECATED"
                                                              "INVALID"],
                                                       :description "The result of the revision check.",
                                                       :type "string"}},
                         :type "object",
                         :description "A third party checking a revision response.",
                         :id "RevisionCheckResponse"},
 :SnapshotListResponse {:id "SnapshotListResponse",
                        :properties {:kind {:type "string",
                                            :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#snapshotListResponse`."},
                                     :nextPageToken {:description "Token corresponding to the next page of results. If there are no more results, the token is omitted.",
                                                     :type "string"},
                                     :items {:type "array",
                                             :items {:$ref "Snapshot"},
                                             :description "The snapshots."}},
                        :description "A third party list snapshots response.",
                        :type "object"},
 :Category {:id "Category",
            :properties {:category {:type "string",
                                    :description "The category name."},
                         :kind {:type "string",
                                :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#category`."},
                         :experiencePoints {:format "int64",
                                            :description "Experience points earned in this category.",
                                            :type "string"}},
            :type "object",
            :description "Data related to individual game categories."},
 :MetagameConfig {:type "object",
                  :description "The metagame config resource",
                  :properties {:currentVersion {:type "integer",
                                                :format "int32",
                                                :description "Current version of the metagame configuration data. When this data is updated, the version number will be increased by one."},
                               :playerLevels {:type "array",
                                              :description "The list of player levels.",
                                              :items {:$ref "PlayerLevel"}},
                               :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#metagameConfig`.",
                                      :type "string"}},
                  :id "MetagameConfig"},
 :ImageAsset {:description "An image asset object.",
              :type "object",
              :id "ImageAsset",
              :properties {:kind {:type "string",
                                  :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#imageAsset`."},
                           :url {:description "The URL of the asset.",
                                 :type "string"},
                           :name {:description "The name of the asset.",
                                  :type "string"},
                           :width {:format "int32",
                                   :description "The width of the asset.",
                                   :type "integer"},
                           :height {:description "The height of the asset.",
                                    :type "integer",
                                    :format "int32"}}},
 :LeaderboardListResponse {:id "LeaderboardListResponse",
                           :type "object",
                           :properties {:kind {:type "string",
                                               :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#leaderboardListResponse`."},
                                        :items {:items {:$ref "Leaderboard"},
                                                :description "The leaderboards.",
                                                :type "array"},
                                        :nextPageToken {:type "string",
                                                        :description "Token corresponding to the next page of results."}},
                           :description "A list of leaderboard objects."},
 :GamesAchievementSetStepsAtLeast {:description "The payload to request to increment an achievement.",
                                   :id "GamesAchievementSetStepsAtLeast",
                                   :type "object",
                                   :properties {:kind {:type "string",
                                                       :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#GamesAchievementSetStepsAtLeast`."},
                                                :steps {:format "int32",
                                                        :description "The minimum number of steps for the achievement to be set to.",
                                                        :type "integer"}}},
 :EventChild {:description "An event child relationship resource.",
              :type "object",
              :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#eventChild`.",
                                  :type "string"},
                           :childId {:type "string",
                                     :description "The ID of the child event."}},
              :id "EventChild"},
 :EventDefinition {:type "object",
                   :properties {:imageUrl {:description "The base URL for the image that represents the event.",
                                           :type "string"},
                                :description {:description "Description of what this event represents.",
                                              :type "string"},
                                :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#eventDefinition`.",
                                       :type "string"},
                                :isDefaultImageUrl {:description "Indicates whether the icon image being returned is a default image, or is game-provided.",
                                                    :type "boolean"},
                                :id {:type "string",
                                     :description "The ID of the event."},
                                :childEvents {:type "array",
                                              :description "A list of events that are a child of this event.",
                                              :items {:$ref "EventChild"}},
                                :displayName {:type "string",
                                              :description "The name to display for the event."},
                                :visibility {:enumDescriptions ["Default value. Should not be used."
                                                                "This event should be visible to all users."
                                                                "This event should only be shown to users that have recorded this event at least once."],
                                             :description "The visibility of event being tracked in this definition.",
                                             :enum ["EVENT_VISIBILITY_UNSPECIFIED"
                                                    "REVEALED"
                                                    "HIDDEN"],
                                             :type "string"}},
                   :id "EventDefinition",
                   :description "An event definition resource."},
 :AchievementUnlockResponse {:id "AchievementUnlockResponse",
                             :type "object",
                             :description "An achievement unlock response",
                             :properties {:kind {:type "string",
                                                 :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementUnlockResponse`."},
                                          :newlyUnlocked {:description "Whether this achievement was newly unlocked (that is, whether the unlock request for the achievement was the first for the player).",
                                                          :type "boolean"}}},
 :InstanceIosDetails {:id "InstanceIosDetails",
                      :properties {:kind {:type "string",
                                          :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#instanceIosDetails`."},
                                   :bundleIdentifier {:type "string",
                                                      :description "Bundle identifier."},
                                   :supportIphone {:type "boolean",
                                                   :description "Flag to indicate if this instance supports iPhone."},
                                   :preferredForIpad {:type "boolean",
                                                      :description "Indicates that this instance is the default for new installations on iPad devices."},
                                   :preferredForIphone {:type "boolean",
                                                        :description "Indicates that this instance is the default for new installations on iPhone devices."},
                                   :itunesAppId {:type "string",
                                                 :description "iTunes App ID."},
                                   :supportIpad {:type "boolean",
                                                 :description "Flag to indicate if this instance supports iPad."}},
                      :type "object",
                      :description "The iOS details resource."},
 :Instance {:properties {:acquisitionUri {:description "URI which shows where a user can acquire this instance.",
                                          :type "string"},
                         :iosInstance {:$ref "InstanceIosDetails",
                                       :description "Platform dependent details for iOS."},
                         :realtimePlay {:type "boolean",
                                        :description "Flag to show if this game instance supports realtime play."},
                         :webInstance {:$ref "InstanceWebDetails",
                                       :description "Platform dependent details for Web."},
                         :androidInstance {:$ref "InstanceAndroidDetails",
                                           :description "Platform dependent details for Android."},
                         :name {:type "string",
                                :description "Localized display name."},
                         :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#instance`.",
                                :type "string"},
                         :turnBasedPlay {:description "Flag to show if this game instance supports turn based play.",
                                         :type "boolean"},
                         :platformType {:type "string",
                                        :description "The platform type.",
                                        :enum ["PLATFORM_TYPE_UNSPECIFIED"
                                               "ANDROID"
                                               "IOS"
                                               "WEB_APP"],
                                        :enumDescriptions ["Default value. Should be unused."
                                                           "Instance is for Android."
                                                           "Instance is for iOS."
                                                           "Instance is for Web App."]}},
            :description "The Instance resource.",
            :id "Instance",
            :type "object"},
 :AchievementDefinition {:description "An achievement definition object.",
                         :properties {:description {:description "The description of the achievement.",
                                                    :type "string"},
                                      :revealedIconUrl {:description "The image URL for the revealed achievement icon.",
                                                        :type "string"},
                                      :experiencePoints {:description "Experience points which will be earned when unlocking this achievement.",
                                                         :format "int64",
                                                         :type "string"},
                                      :initialState {:type "string",
                                                     :enumDescriptions ["Safe default, don't use."
                                                                        "Achievement is hidden."
                                                                        "Achievement is revealed."
                                                                        "Achievement is unlocked."],
                                                     :description "The initial state of the achievement.",
                                                     :enum ["INITIAL_ACHIEVEMENT_STATE_UNSPECIFIED"
                                                            "HIDDEN"
                                                            "REVEALED"
                                                            "UNLOCKED"]},
                                      :isUnlockedIconUrlDefault {:description "Indicates whether the unlocked icon image being returned is a default image, or is game-provided.",
                                                                 :type "boolean"},
                                      :name {:type "string",
                                             :description "The name of the achievement."},
                                      :isRevealedIconUrlDefault {:type "boolean",
                                                                 :description "Indicates whether the revealed icon image being returned is a default image, or is provided by the game."},
                                      :achievementType {:type "string",
                                                        :enum ["ACHIEVEMENT_TYPE_UNSPECIFIED"
                                                               "STANDARD"
                                                               "INCREMENTAL"],
                                                        :enumDescriptions ["Safe default, don't use."
                                                                           "Achievement is either locked or unlocked."
                                                                           "Achievement is incremental."],
                                                        :description "The type of the achievement."},
                                      :unlockedIconUrl {:type "string",
                                                        :description "The image URL for the unlocked achievement icon."},
                                      :totalSteps {:type "integer",
                                                   :format "int32",
                                                   :description "The total steps for an incremental achievement."},
                                      :id {:type "string",
                                           :description "The ID of the achievement."},
                                      :kind {:type "string",
                                             :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementDefinition`."},
                                      :formattedTotalSteps {:type "string",
                                                            :description "The total steps for an incremental achievement as a string."}},
                         :id "AchievementDefinition",
                         :type "object"},
 :PlayerLevel {:id "PlayerLevel",
               :properties {:minExperiencePoints {:description "The minimum experience points for this level.",
                                                  :format "int64",
                                                  :type "string"},
                            :level {:type "integer",
                                    :description "The level for the user.",
                                    :format "int32"},
                            :maxExperiencePoints {:format "int64",
                                                  :type "string",
                                                  :description "The maximum experience points for this level."},
                            :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#playerLevel`.",
                                   :type "string"}},
               :type "object",
               :description "1P/3P metadata about a user's level."},
 :Application {:type "object",
               :id "Application",
               :properties {:description {:description "The description of the application.",
                                          :type "string"},
                            :category {:$ref "ApplicationCategory",
                                       :description "The category of the application."},
                            :enabledFeatures {:items {:enumDescriptions ["Safe default, don't use."
                                                                         "Saved Games (snapshots)."],
                                                      :type "string",
                                                      :enum ["APPLICATION_FEATURE_UNSPECIFIED"
                                                             "SNAPSHOTS"]},
                                              :type "array",
                                              :description "A list of features that have been enabled for the application."},
                            :assets {:items {:$ref "ImageAsset"},
                                     :description "The assets of the application.",
                                     :type "array"},
                            :name {:description "The name of the application.",
                                   :type "string"},
                            :themeColor {:description "A hint to the client UI for what color to use as an app-themed color. The color is given as an RGB triplet (e.g. \"E0E0E0\").",
                                         :type "string"},
                            :achievement_count {:type "integer",
                                                :description "The number of achievements visible to the currently authenticated player.",
                                                :format "int32"},
                            :author {:type "string",
                                     :description "The author of the application."},
                            :lastUpdatedTimestamp {:description "The last updated timestamp of the application.",
                                                   :type "string",
                                                   :format "int64"},
                            :instances {:items {:$ref "Instance"},
                                        :description "The instances of the application.",
                                        :type "array"},
                            :id {:description "The ID of the application.",
                                 :type "string"},
                            :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#application`.",
                                   :type "string"},
                            :leaderboard_count {:format "int32",
                                                :type "integer",
                                                :description "The number of leaderboards visible to the currently authenticated player."}},
               :description "The Application resource."},
 :EventRecordRequest {:id "EventRecordRequest",
                      :properties {:timePeriods {:description "A list of the time period updates being made in this request.",
                                                 :type "array",
                                                 :items {:$ref "EventPeriodUpdate"}},
                                   :requestId {:type "string",
                                               :format "int64",
                                               :description "The request ID used to identify this attempt to record events."},
                                   :kind {:type "string",
                                          :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#eventRecordRequest`."},
                                   :currentTimeMillis {:type "string",
                                                       :format "int64",
                                                       :description "The current time when this update was sent, in milliseconds, since 1970 UTC (Unix Epoch)."}},
                      :description "An event period update resource.",
                      :type "object"},
 :AchievementSetStepsAtLeastResponse {:type "object",
                                      :description "An achievement set steps at least response.",
                                      :id "AchievementSetStepsAtLeastResponse",
                                      :properties {:newlyUnlocked {:description "Whether the current steps for the achievement has reached the number of steps required to unlock.",
                                                                   :type "boolean"},
                                                   :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementSetStepsAtLeastResponse`.",
                                                          :type "string"},
                                                   :currentSteps {:type "integer",
                                                                  :description "The current steps recorded for this incremental achievement.",
                                                                  :format "int32"}}},
 :LeaderboardScoreRank {:description "A score rank in a leaderboard.",
                        :id "LeaderboardScoreRank",
                        :properties {:numScores {:type "string",
                                                 :description "The number of scores in the leaderboard.",
                                                 :format "int64"},
                                     :formattedNumScores {:description "The number of scores in the leaderboard as a string.",
                                                          :type "string"},
                                     :rank {:description "The rank in the leaderboard.",
                                            :format "int64",
                                            :type "string"},
                                     :kind {:type "string",
                                            :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#leaderboardScoreRank`."},
                                     :formattedRank {:description "The rank in the leaderboard as a string.",
                                                     :type "string"}},
                        :type "object"},
 :Player {:id "Player",
          :description "A Player resource.",
          :properties {:bannerUrlPortrait {:type "string",
                                           :description "The url to the portrait mode player banner image."},
                       :originalPlayerId {:type "string",
                                          :description "The player ID that was used for this player the first time they signed into the game in question. This is only populated for calls to player.get for the requesting player, only if the player ID has subsequently changed, and only to clients that support remapping player IDs."},
                       :avatarImageUrl {:type "string",
                                        :description "The base URL for the image that represents the player."},
                       :displayName {:description "The name to display for the player.",
                                     :type "string"},
                       :name {:properties {:familyName {:description "The family name of this player. In some places, this is known as the last name.",
                                                        :type "string"},
                                           :givenName {:description "The given name of this player. In some places, this is known as the first name.",
                                                       :type "string"}},
                              :description "A representation of the individual components of the name.",
                              :type "object"},
                       :playerId {:type "string",
                                  :description "The ID of the player."},
                       :title {:description "The player's title rewarded for their game activities.",
                               :type "string"},
                       :profileSettings {:description "The player's profile settings. Controls whether or not the player's profile is visible to other players.",
                                         :$ref "ProfileSettings"},
                       :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#player`",
                              :type "string"},
                       :bannerUrlLandscape {:type "string",
                                            :description "The url to the landscape mode player banner image."},
                       :friendStatus {:enumDescriptions ["Default value. This value is unused."
                                                         "There is no relationship between the players."
                                                         "The player and requester are friends."],
                                      :description "The friend status of the given player, relative to the requester. This is unset if the player is not sharing their friends list with the game.",
                                      :type "string",
                                      :enum ["FRIEND_STATUS_UNSPECIFIED"
                                             "NO_RELATIONSHIP"
                                             "FRIEND"]},
                       :experienceInfo {:description "An object to represent Play Game experience information for the player.",
                                        :$ref "PlayerExperienceInfo"}},
          :type "object"},
 :PlayerScore {:description "A player score.",
               :type "object",
               :id "PlayerScore",
               :properties {:scoreTag {:type "string",
                                       :description "Additional information about this score. Values will contain no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986."},
                            :score {:type "string",
                                    :description "The numerical value for this player score.",
                                    :format "int64"},
                            :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#playerScore`.",
                                   :type "string"},
                            :timeSpan {:enumDescriptions ["Default value. This value is unused."
                                                          "The score is an all-time score."
                                                          "The score is a weekly score."
                                                          "The score is a daily score."],
                                       :description "The time span for this player score.",
                                       :type "string",
                                       :enum ["SCORE_TIME_SPAN_UNSPECIFIED"
                                              "ALL_TIME"
                                              "WEEKLY"
                                              "DAILY"]},
                            :formattedScore {:type "string",
                                             :description "The formatted score for this player score."}}},
 :GamesAchievementIncrement {:type "object",
                             :id "GamesAchievementIncrement",
                             :properties {:requestId {:format "int64",
                                                      :type "string",
                                                      :description "The requestId associated with an increment to an achievement."},
                                          :steps {:format "int32",
                                                  :description "The number of steps to be incremented.",
                                                  :type "integer"},
                                          :kind {:type "string",
                                                 :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#GamesAchievementIncrement`."}},
                             :description "The payload to request to increment an achievement."},
 :Leaderboard {:properties {:iconUrl {:description "The icon for the leaderboard.",
                                      :type "string"},
                            :order {:description "How scores are ordered.",
                                    :type "string",
                                    :enum ["SCORE_ORDER_UNSPECIFIED"
                                           "LARGER_IS_BETTER"
                                           "SMALLER_IS_BETTER"],
                                    :enumDescriptions ["Default value. This value is unused."
                                                       "Larger values are better; scores are sorted in descending order"
                                                       "Smaller values are better; scores are sorted in ascending order"]},
                            :name {:type "string",
                                   :description "The name of the leaderboard."},
                            :id {:description "The leaderboard ID.",
                                 :type "string"},
                            :isIconUrlDefault {:description "Indicates whether the icon image being returned is a default image, or is game-provided.",
                                               :type "boolean"},
                            :kind {:type "string",
                                   :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#leaderboard`."}},
               :description "The Leaderboard resource.",
               :type "object",
               :id "Leaderboard"},
 :EventPeriodRange {:properties {:kind {:type "string",
                                        :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#eventPeriodRange`."},
                                 :periodEndMillis {:description "The time when this update period ends, in millis, since 1970 UTC (Unix Epoch).",
                                                   :format "int64",
                                                   :type "string"},
                                 :periodStartMillis {:description "The time when this update period begins, in millis, since 1970 UTC (Unix Epoch).",
                                                     :type "string",
                                                     :format "int64"}},
                    :type "object",
                    :description "An event period time range.",
                    :id "EventPeriodRange"},
 :EventRecordFailure {:description "An event update failure resource.",
                      :properties {:eventId {:description "The ID of the event that was not updated.",
                                             :type "string"},
                                   :failureCause {:type "string",
                                                  :description "The cause for the update failure.",
                                                  :enum ["EVENT_UPDATE_FAILURE_CAUSE_UNSPECIFIED"
                                                         "NOT_FOUND"
                                                         "INVALID_UPDATE_VALUE"],
                                                  :enumDescriptions ["Default value. Should not use."
                                                                     "An attempt was made to set an event that was not defined."
                                                                     "An attempt was made to increment an event by a non-positive value."]},
                                   :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#eventRecordFailure`.",
                                          :type "string"}},
                      :type "object",
                      :id "EventRecordFailure"},
 :AchievementUpdateResponse {:description "An updated achievement.",
                             :type "object",
                             :properties {:currentState {:enumDescriptions ["Safe default, don't use."
                                                                            "Achievement is hidden."
                                                                            "Achievement is revealed."
                                                                            "Achievement is unlocked."],
                                                         :type "string",
                                                         :description "The current state of the achievement.",
                                                         :enum ["UPDATED_ACHIEVEMENT_STATE_UNSPECIFIED"
                                                                "HIDDEN"
                                                                "REVEALED"
                                                                "UNLOCKED"]},
                                          :kind {:type "string",
                                                 :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementUpdateResponse`."},
                                          :updateOccurred {:description "Whether the requested updates actually affected the achievement.",
                                                           :type "boolean"},
                                          :achievementId {:type "string",
                                                          :description "The achievement this update is was applied to."},
                                          :currentSteps {:description "The current steps recorded for this achievement if it is incremental.",
                                                         :format "int32",
                                                         :type "integer"},
                                          :newlyUnlocked {:type "boolean",
                                                          :description "Whether this achievement was newly unlocked (that is, whether the unlock request for the achievement was the first for the player)."}},
                             :id "AchievementUpdateResponse"},
 :EventBatchRecordFailure {:id "EventBatchRecordFailure",
                           :description "A batch update failure resource.",
                           :type "object",
                           :properties {:failureCause {:type "string",
                                                       :enum ["EVENT_FAILURE_CAUSE_UNSPECIFIED"
                                                              "TOO_LARGE"
                                                              "TIME_PERIOD_EXPIRED"
                                                              "TIME_PERIOD_SHORT"
                                                              "TIME_PERIOD_LONG"
                                                              "ALREADY_UPDATED"
                                                              "RECORD_RATE_HIGH"],
                                                       :description "The cause for the update failure.",
                                                       :enumDescriptions ["Default value. Should not be used."
                                                                          "A batch request was issued with more events than are allowed in a single batch."
                                                                          "A batch was sent with data too far in the past to record."
                                                                          "A batch was sent with a time range that was too short."
                                                                          "A batch was sent with a time range that was too long."
                                                                          "An attempt was made to record a batch of data which was already seen."
                                                                          "An attempt was made to record data faster than the server will apply updates."]},
                                        :range {:description "The time range which was rejected; empty for a request-wide failure.",
                                                :$ref "EventPeriodRange"},
                                        :kind {:type "string",
                                               :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#eventBatchRecordFailure`."}}},
 :LeaderboardScores {:id "LeaderboardScores",
                     :description "A ListScores response.",
                     :type "object",
                     :properties {:numScores {:format "int64",
                                              :type "string",
                                              :description "The total number of scores in the leaderboard."},
                                  :nextPageToken {:description "The pagination token for the next page of results.",
                                                  :type "string"},
                                  :items {:description "The scores in the leaderboard.",
                                          :items {:$ref "LeaderboardEntry"},
                                          :type "array"},
                                  :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#leaderboardScores`.",
                                         :type "string"},
                                  :playerScore {:description "The score of the requesting player on the leaderboard. The player's score may appear both here and in the list of scores above. If you are viewing a public leaderboard and the player is not sharing their gameplay information publicly, the `scoreRank`and `formattedScoreRank` values will not be present.",
                                                :$ref "LeaderboardEntry"},
                                  :prevPageToken {:type "string",
                                                  :description "The pagination token for the previous page of results."}}}}
