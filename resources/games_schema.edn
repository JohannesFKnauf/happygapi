{:AchievementDefinitionsListResponse {:properties {:items {:items {:$ref "AchievementDefinition"},
                                                           :type "array",
                                                           :description "The achievement definitions."},
                                                   :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementDefinitionsListResponse`.",
                                                          :type "string"},
                                                   :nextPageToken {:type "string",
                                                                   :description "Token corresponding to the next page of results."}},
                                      :id "AchievementDefinitionsListResponse",
                                      :type "object",
                                      :description "A list of achievement definition objects."},
 :PlayerLeaderboardScoreListResponse {:type "object",
                                      :id "PlayerLeaderboardScoreListResponse",
                                      :properties {:nextPageToken {:description "The pagination token for the next page of results.",
                                                                   :type "string"},
                                                   :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#playerLeaderboardScoreListResponse`.",
                                                          :type "string"},
                                                   :items {:items {:$ref "PlayerLeaderboardScore"},
                                                           :description "The leaderboard scores.",
                                                           :type "array"},
                                                   :player {:description "The Player resources for the owner of this score.",
                                                            :$ref "Player"}},
                                      :description "A list of player leaderboard scores."},
 :LeaderboardEntry {:properties {:scoreRank {:type "string",
                                             :description "The rank of this score for this leaderboard.",
                                             :format "int64"},
                                 :timeSpan {:type "string",
                                            :description "The time span of this high score.",
                                            :enum ["SCORE_TIME_SPAN_UNSPECIFIED"
                                                   "ALL_TIME"
                                                   "WEEKLY"
                                                   "DAILY"],
                                            :enumDescriptions ["Default value. This value is unused."
                                                               "The score is an all-time score."
                                                               "The score is a weekly score."
                                                               "The score is a daily score."]},
                                 :writeTimestampMillis {:format "int64",
                                                        :description "The timestamp at which this score was recorded, in milliseconds since the epoch in UTC.",
                                                        :type "string"},
                                 :formattedScore {:type "string",
                                                  :description "The localized string for the numerical value of this score."},
                                 :formattedScoreRank {:type "string",
                                                      :description "The localized string for the rank of this score for this leaderboard."},
                                 :scoreValue {:description "The numerical value of this score.",
                                              :type "string",
                                              :format "int64"},
                                 :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#leaderboardEntry`.",
                                        :type "string"},
                                 :player {:description "The player who holds this score.",
                                          :$ref "Player"},
                                 :scoreTag {:type "string",
                                            :description "Additional information about the score. Values must contain no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986."}},
                    :id "LeaderboardEntry",
                    :type "object",
                    :description "The Leaderboard Entry resource."},
 :ApplicationVerifyResponse {:description "A third party application verification response resource.",
                             :properties {:alternate_player_id {:description "An alternate ID that was once used for the player that was issued the auth token used in this request. (This field is not normally populated.)",
                                                                :type "string"},
                                          :kind {:type "string",
                                                 :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#applicationVerifyResponse`."},
                                          :player_id {:type "string",
                                                      :description "The ID of the player that was issued the auth token used in this request."}},
                             :type "object",
                             :id "ApplicationVerifyResponse"},
 :EventDefinitionListResponse {:type "object",
                               :id "EventDefinitionListResponse",
                               :properties {:nextPageToken {:description "The pagination token for the next page of results.",
                                                            :type "string"},
                                            :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#eventDefinitionListResponse`.",
                                                   :type "string"},
                                            :items {:description "The event definitions.",
                                                    :type "array",
                                                    :items {:$ref "EventDefinition"}}},
                               :description "A ListDefinitions response."},
 :SnapshotImage {:description "An image of a snapshot.",
                 :id "SnapshotImage",
                 :properties {:mime_type {:type "string",
                                          :description "The MIME type of the image."},
                              :width {:format "int32",
                                      :type "integer",
                                      :description "The width of the image."},
                              :height {:type "integer",
                                       :format "int32",
                                       :description "The height of the image."},
                              :kind {:type "string",
                                     :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#snapshotImage`."},
                              :url {:type "string",
                                    :description "The URL of the image. This URL may be invalidated at any time and should not be cached."}},
                 :type "object"},
 :EventPeriodUpdate {:description "An event period update resource.",
                     :id "EventPeriodUpdate",
                     :properties {:timePeriod {:$ref "EventPeriodRange",
                                               :description "The time period being covered by this update."},
                                  :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#eventPeriodUpdate`.",
                                         :type "string"},
                                  :updates {:description "The updates being made for this time period.",
                                            :type "array",
                                            :items {:$ref "EventUpdateRequest"}}},
                     :type "object"},
 :PlayerExperienceInfo {:properties {:currentExperiencePoints {:format "int64",
                                                               :description "The current number of experience points for the player.",
                                                               :type "string"},
                                     :nextLevel {:$ref "PlayerLevel",
                                                 :description "The next level of the player. If the current level is the maximum level, this should be same as the current level."},
                                     :lastLevelUpTimestampMillis {:format "int64",
                                                                  :type "string",
                                                                  :description "The timestamp when the player was leveled up, in millis since Unix epoch UTC."},
                                     :kind {:type "string",
                                            :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#playerExperienceInfo`."},
                                     :currentLevel {:description "The current level of the player.",
                                                    :$ref "PlayerLevel"}},
                        :type "object",
                        :id "PlayerExperienceInfo",
                        :description "1P/3P metadata about the player's experience."},
 :AchievementRevealResponse {:id "AchievementRevealResponse",
                             :type "object",
                             :properties {:currentState {:type "string",
                                                         :enum ["REVEAL_ACHIEVEMENT_STATE_UNSPECIFIED"
                                                                "REVEALED"
                                                                "UNLOCKED"],
                                                         :description "The current state of the achievement for which a reveal was attempted. This might be `UNLOCKED` if the achievement was already unlocked.",
                                                         :enumDescriptions ["Safe default, don't use."
                                                                            "Achievement is revealed."
                                                                            "Achievement is unlocked."]},
                                          :kind {:type "string",
                                                 :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementRevealResponse`."}},
                             :description "An achievement reveal response"},
 :ScoreSubmission {:properties {:scoreTag {:description "Additional information about this score. Values will contain no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986.",
                                           :type "string"},
                                :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#scoreSubmission`.",
                                       :type "string"},
                                :leaderboardId {:type "string",
                                                :description "The leaderboard this score is being submitted to."},
                                :score {:type "string",
                                        :format "int64",
                                        :description "The new score being submitted."},
                                :signature {:type "string",
                                            :description "Signature Values will contain URI-safe characters as defined by section 2.3 of RFC 3986."}},
                   :type "object",
                   :id "ScoreSubmission",
                   :description "A request to submit a score to leaderboards."},
 :EventUpdateRequest {:type "object",
                      :properties {:updateCount {:format "int64",
                                                 :description "The number of times this event occurred in this time period.",
                                                 :type "string"},
                                   :definitionId {:description "The ID of the event being modified in this update.",
                                                  :type "string"},
                                   :kind {:type "string",
                                          :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#eventUpdateRequest`."}},
                      :description "An event period update resource.",
                      :id "EventUpdateRequest"},
 :AchievementUpdateMultipleRequest {:description "A list of achievement update requests.",
                                    :properties {:updates {:description "The individual achievement update requests.",
                                                           :type "array",
                                                           :items {:$ref "AchievementUpdateRequest"}},
                                                 :kind {:type "string",
                                                        :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementUpdateMultipleRequest`."}},
                                    :id "AchievementUpdateMultipleRequest",
                                    :type "object"},
 :InstanceWebDetails {:id "InstanceWebDetails",
                      :properties {:preferred {:description "Indicates that this instance is the default for new installations.",
                                               :type "boolean"},
                                   :kind {:type "string",
                                          :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#instanceWebDetails`."},
                                   :launchUrl {:description "Launch URL for the game.",
                                               :type "string"}},
                      :description "The Web details resource.",
                      :type "object"},
 :PlayerScoreListResponse {:description "A list of score submission statuses.",
                           :type "object",
                           :id "PlayerScoreListResponse",
                           :properties {:kind {:type "string",
                                               :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#playerScoreListResponse`."},
                                        :submittedScores {:type "array",
                                                          :items {:$ref "PlayerScoreResponse"},
                                                          :description "The score submissions statuses."}}},
 :AchievementUpdateMultipleResponse {:type "object",
                                     :description "Response message for UpdateMultipleAchievements rpc.",
                                     :properties {:updatedAchievements {:items {:$ref "AchievementUpdateResponse"},
                                                                        :description "The updated state of the achievements.",
                                                                        :type "array"},
                                                  :kind {:type "string",
                                                         :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementUpdateMultipleResponse`."}},
                                     :id "AchievementUpdateMultipleResponse"},
 :ResolveSnapshotHeadRequest {:type "object",
                              :properties {:resolutionPolicy {:type "string",
                                                              :enumDescriptions ["Safe default, don't use explicitly."
                                                                                 "Drops all conflicts and keeps the current head only."
                                                                                 "Use the snapshot with the longest played time."
                                                                                 "Use the snapshot that was most recently modified."
                                                                                 "Use the snapshot with the highest progress value."
                                                                                 "Don't resolve conflicts at all. Effectively only returns the current head revision of the snapshot. Corresponds to a game opening the snapshot with manual resolution policy."],
                                                              :description "Required. The automatic resolution policy. All conflicts are resolved in chronological order, starting from the/ least recent. If the comparison metric is equal for the tentative head and the conflict, the head wins.",
                                                              :enum ["RESOLUTION_POLICY_UNSPECIFIED"
                                                                     "USE_HEAD"
                                                                     "LONGEST_PLAYTIME"
                                                                     "MOST_RECENTLY_MODIFIED"
                                                                     "HIGHEST_PROGRESS"
                                                                     "NO_AUTOMATIC_RESOLUTION"]}},
                              :description "Request for ResolveSnapshotHead RPC.",
                              :id "ResolveSnapshotHeadRequest"},
 :PlayerListResponse {:properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#playerListResponse`.",
                                          :type "string"},
                                   :items {:description "The players.",
                                           :items {:$ref "Player"},
                                           :type "array"},
                                   :nextPageToken {:type "string",
                                                   :description "Token corresponding to the next page of results."}},
                      :description "A third party player list response.",
                      :type "object",
                      :id "PlayerListResponse"},
 :CategoryListResponse {:properties {:items {:description "The list of categories with usage data.",
                                             :items {:$ref "Category"},
                                             :type "array"},
                                     :nextPageToken {:description "Token corresponding to the next page of results.",
                                                     :type "string"},
                                     :kind {:type "string",
                                            :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#categoryListResponse`."}},
                        :type "object",
                        :description "A third party list metagame categories response.",
                        :id "CategoryListResponse"},
 :AchievementIncrementResponse {:description "An achievement increment response",
                                :type "object",
                                :id "AchievementIncrementResponse",
                                :properties {:newlyUnlocked {:type "boolean",
                                                             :description "Whether the current steps for the achievement has reached the number of steps required to unlock."},
                                             :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementIncrementResponse`.",
                                                    :type "string"},
                                             :currentSteps {:description "The current steps recorded for this incremental achievement.",
                                                            :type "integer",
                                                            :format "int32"}}},
 :EventUpdateResponse {:type "object",
                       :id "EventUpdateResponse",
                       :description "An event period update resource.",
                       :properties {:eventFailures {:description "Any failures updating a particular event.",
                                                    :type "array",
                                                    :items {:$ref "EventRecordFailure"}},
                                    :batchFailures {:type "array",
                                                    :description "Any batch-wide failures which occurred applying updates.",
                                                    :items {:$ref "EventBatchRecordFailure"}},
                                    :playerEvents {:type "array",
                                                   :items {:$ref "PlayerEvent"},
                                                   :description "The current status of any updated events"},
                                    :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#eventUpdateResponse`.",
                                           :type "string"}}},
 :SnapshotMetadata {:description "Metadata about a snapshot revision. Snapshot metadata is immutable - a metadata change corresponds to a new snapshot revision.",
                    :id "SnapshotMetadata",
                    :properties {:duration {:type "string",
                                            :description "The duration associated with this snapshot. Values with sub-millisecond precision can be rounded or trimmed to the closest millisecond.",
                                            :format "google-duration"},
                                 :description {:type "string",
                                               :description "The description of this snapshot."},
                                 :title {:type "string",
                                         :description "The title of this snapshot."},
                                 :deviceName {:type "string",
                                              :description "The device that created the current revision."},
                                 :lastModifyTime {:type "string",
                                                  :description "The timestamp of the last modification to this snapshot. Values with sub-millisecond precision can be rounded or trimmed to the closest millisecond.",
                                                  :format "google-datetime"},
                                 :progressValue {:format "int64",
                                                 :type "string",
                                                 :description "The progress value (64-bit integer set by developer) associated with this snapshot."}},
                    :type "object"},
 :PlayerEventListResponse {:id "PlayerEventListResponse",
                           :description "A ListByPlayer response.",
                           :type "object",
                           :properties {:items {:description "The player events.",
                                                :type "array",
                                                :items {:$ref "PlayerEvent"}},
                                        :nextPageToken {:type "string",
                                                        :description "The pagination token for the next page of results."},
                                        :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#playerEventListResponse`.",
                                               :type "string"}}},
 :StatsResponse {:properties {:total_spend_next_28_days {:description "The predicted amount of money that the player going to spend in the next 28 days. E.g., 1, 30, 60, ... . Not populated if there is not enough information.",
                                                         :type "number",
                                                         :format "float"},
                              :num_sessions_percentile {:type "number",
                                                        :format "float",
                                                        :description "The approximation of the sessions percentile of the player within the last 30 days, where a session begins when the player is connected to Play Games Services and ends when they are disconnected. E.g., 0, 0.25, 0.5, 0.75. Not populated if there is not enough information."},
                              :days_since_last_played {:type "integer",
                                                       :description "Number of days since the player last played this game. E.g., 0, 1, 5, 10, ... . Not populated if there is not enough information.",
                                                       :format "int32"},
                              :num_purchases {:description "Number of in-app purchases made by the player in this game. E.g., 0, 1, 5, 10, ... . Not populated if there is not enough information.",
                                              :type "integer",
                                              :format "int32"},
                              :avg_session_length_minutes {:type "number",
                                                           :description "Average session length in minutes of the player. E.g., 1, 30, 60, ... . Not populated if there is not enough information.",
                                                           :format "float"},
                              :churn_probability {:description "The probability of the player not returning to play the game in the next day. E.g., 0, 0.1, 0.5, ..., 1.0. Not populated if there is not enough information.",
                                                  :type "number",
                                                  :format "float"},
                              :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#statsResponse`.",
                                     :type "string"},
                              :spend_percentile {:type "number",
                                                 :description "The approximate spend percentile of the player in this game. E.g., 0, 0.25, 0.5, 0.75. Not populated if there is not enough information.",
                                                 :format "float"},
                              :num_sessions {:type "integer",
                                             :format "int32",
                                             :description "The approximate number of sessions of the player within the last 28 days, where a session begins when the player is connected to Play Games Services and ends when they are disconnected. E.g., 0, 1, 5, 10, ... . Not populated if there is not enough information."},
                              :spend_probability {:format "float",
                                                  :description "The probability of the player going to spend the game in the next seven days. E.g., 0, 0.25, 0.50, 0.75. Not populated if there is not enough information.",
                                                  :type "number"},
                              :high_spender_probability {:format "float",
                                                         :description "The probability of the player going to spend beyond a threshold amount of money. E.g., 0, 0.25, 0.50, 0.75. Not populated if there is not enough information.",
                                                         :type "number"}},
                 :type "object",
                 :description "A third party stats resource.",
                 :id "StatsResponse"},
 :InstanceAndroidDetails {:description "The Android instance details resource.",
                          :id "InstanceAndroidDetails",
                          :properties {:enablePiracyCheck {:description "Flag indicating whether the anti-piracy check is enabled.",
                                                           :type "boolean"},
                                       :preferred {:description "Indicates that this instance is the default for new installations.",
                                                   :type "boolean"},
                                       :packageName {:description "Android package name which maps to Google Play URL.",
                                                     :type "string"},
                                       :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#instanceAndroidDetails`.",
                                              :type "string"}},
                          :type "object"},
 :ApplicationCategory {:properties {:kind {:type "string",
                                           :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#applicationCategory`."},
                                    :secondary {:type "string",
                                                :description "The secondary category."},
                                    :primary {:type "string",
                                              :description "The primary category."}},
                       :description "An application category object.",
                       :type "object",
                       :id "ApplicationCategory"},
 :PlayerLeaderboardScore {:type "object",
                          :id "PlayerLeaderboardScore",
                          :properties {:scoreString {:description "The formatted value of this score.",
                                                     :type "string"},
                                       :socialRank {:$ref "LeaderboardScoreRank",
                                                    :description "The social rank of the score in this leaderboard."},
                                       :writeTimestamp {:format "int64",
                                                        :description "The timestamp at which this score was recorded, in milliseconds since the epoch in UTC.",
                                                        :type "string"},
                                       :timeSpan {:description "The time span of this score.",
                                                  :enum ["SCORE_TIME_SPAN_UNSPECIFIED"
                                                         "ALL_TIME"
                                                         "WEEKLY"
                                                         "DAILY"],
                                                  :type "string",
                                                  :enumDescriptions ["Default value. This value is unused."
                                                                     "The score is an all-time score."
                                                                     "The score is a weekly score."
                                                                     "The score is a daily score."]},
                                       :friendsRank {:description "The rank of the score in the friends collection for this leaderboard.",
                                                     :$ref "LeaderboardScoreRank"},
                                       :scoreValue {:description "The numerical value of this score.",
                                                    :type "string",
                                                    :format "int64"},
                                       :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#playerLeaderboardScore`.",
                                              :type "string"},
                                       :scoreTag {:description "Additional information about the score. Values must contain no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986.",
                                                  :type "string"},
                                       :publicRank {:description "The public rank of the score in this leaderboard. This object will not be present if the user is not sharing their scores publicly.",
                                                    :$ref "LeaderboardScoreRank"},
                                       :leaderboard_id {:description "The ID of the leaderboard this score is in.",
                                                        :type "string"}},
                          :description "A player leaderboard score object."},
 :Snapshot {:description "An snapshot object.",
            :properties {:description {:description "The description of this snapshot.",
                                       :type "string"},
                         :progressValue {:type "string",
                                         :format "int64",
                                         :description "The progress value (64-bit integer set by developer) associated with this snapshot."},
                         :durationMillis {:type "string",
                                          :description "The duration associated with this snapshot, in millis.",
                                          :format "int64"},
                         :uniqueName {:type "string",
                                      :description "The unique name provided when the snapshot was created."},
                         :lastModifiedMillis {:format "int64",
                                              :type "string",
                                              :description "The timestamp (in millis since Unix epoch) of the last modification to this snapshot."},
                         :type {:enumDescriptions ["Default value. This value is unused."
                                                   "A snapshot representing a save game."],
                                :description "The type of this snapshot.",
                                :type "string",
                                :enum ["SNAPSHOT_TYPE_UNSPECIFIED"
                                       "SAVE_GAME"]},
                         :title {:description "The title of this snapshot.",
                                 :type "string"},
                         :coverImage {:$ref "SnapshotImage",
                                      :description "The cover image of this snapshot. May be absent if there is no image."},
                         :id {:description "The ID of the snapshot.",
                              :type "string"},
                         :kind {:type "string",
                                :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#snapshot`."},
                         :driveId {:type "string",
                                   :description "The ID of the file underlying this snapshot in the Drive API. Only present if the snapshot is a view on a Drive file and the file is owned by the caller."}},
            :type "object",
            :id "Snapshot"},
 :PlayerAchievementListResponse {:description "A list of achievement objects.",
                                 :type "object",
                                 :id "PlayerAchievementListResponse",
                                 :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#playerAchievementListResponse`.",
                                                     :type "string"},
                                              :items {:description "The achievements.",
                                                      :type "array",
                                                      :items {:$ref "PlayerAchievement"}},
                                              :nextPageToken {:description "Token corresponding to the next page of results.",
                                                              :type "string"}}},
 :PlayerScoreResponse {:properties {:kind {:type "string",
                                           :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#playerScoreResponse`."},
                                    :formattedScore {:type "string",
                                                     :description "The formatted value of the submitted score."},
                                    :beatenScoreTimeSpans {:items {:enum ["SCORE_TIME_SPAN_UNSPECIFIED"
                                                                          "ALL_TIME"
                                                                          "WEEKLY"
                                                                          "DAILY"],
                                                                   :enumDescriptions ["Default value. This value is unused."
                                                                                      "The score is an all-time score."
                                                                                      "The score is a weekly score."
                                                                                      "The score is a daily score."],
                                                                   :type "string"},
                                                           :description "The time spans where the submitted score is better than the existing score for that time span.",
                                                           :type "array"},
                                    :scoreTag {:description "Additional information about this score. Values will contain no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986.",
                                               :type "string"},
                                    :unbeatenScores {:description "The scores in time spans that have not been beaten. As an example, the submitted score may be better than the player's `DAILY` score, but not better than the player's scores for the `WEEKLY` or `ALL_TIME` time spans.",
                                                     :items {:$ref "PlayerScore"},
                                                     :type "array"},
                                    :leaderboardId {:description "The leaderboard ID that this score was submitted to.",
                                                    :type "string"}},
                       :type "object",
                       :description "A list of leaderboard entry resources.",
                       :id "PlayerScoreResponse"},
 :PlayerEvent {:properties {:numEvents {:type "string",
                                        :description "The current number of times this event has occurred.",
                                        :format "int64"},
                            :kind {:type "string",
                                   :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#playerEvent`."},
                            :playerId {:type "string",
                                       :description "The ID of the player."},
                            :definitionId {:description "The ID of the event definition.",
                                           :type "string"},
                            :formattedNumEvents {:type "string",
                                                 :description "The current number of times this event has occurred, as a string. The formatting of this string depends on the configuration of your event in the Play Games Developer Console."}},
               :description "An event status resource.",
               :type "object",
               :id "PlayerEvent"},
 :AchievementUpdateRequest {:type "object",
                            :description "A request to update an achievement.",
                            :properties {:kind {:type "string",
                                                :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementUpdateRequest`."},
                                         :updateType {:enumDescriptions ["Safe default, don't use."
                                                                         "Achievement is revealed."
                                                                         "Achievement is unlocked."
                                                                         "Achievement is incremented."
                                                                         "Achievement progress is set to at least the passed value."],
                                                      :enum ["ACHIEVEMENT_UPDATE_TYPE_UNSPECIFIED"
                                                             "REVEAL"
                                                             "UNLOCK"
                                                             "INCREMENT"
                                                             "SET_STEPS_AT_LEAST"],
                                                      :description "The type of update being applied.",
                                                      :type "string"},
                                         :incrementPayload {:description "The payload if an update of type `INCREMENT` was requested for the achievement.",
                                                            :$ref "GamesAchievementIncrement"},
                                         :achievementId {:description "The achievement this update is being applied to.",
                                                         :type "string"},
                                         :setStepsAtLeastPayload {:$ref "GamesAchievementSetStepsAtLeast",
                                                                  :description "The payload if an update of type `SET_STEPS_AT_LEAST` was requested for the achievement."}},
                            :id "AchievementUpdateRequest"},
 :PlayerScoreSubmissionList {:properties {:kind {:type "string",
                                                 :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#playerScoreSubmissionList`."},
                                          :scores {:description "The score submissions.",
                                                   :items {:$ref "ScoreSubmission"},
                                                   :type "array"}},
                             :type "object",
                             :description "A list of score submission requests.",
                             :id "PlayerScoreSubmissionList"},
 :PlayerAchievement {:id "PlayerAchievement",
                     :type "object",
                     :description "An achievement object.",
                     :properties {:id {:description "The ID of the achievement.",
                                       :type "string"},
                                  :formattedCurrentStepsString {:description "The current steps for an incremental achievement as a string.",
                                                                :type "string"},
                                  :lastUpdatedTimestamp {:format "int64",
                                                         :type "string",
                                                         :description "The timestamp of the last modification to this achievement's state."},
                                  :achievementState {:description "The state of the achievement.",
                                                     :type "string",
                                                     :enum ["STATE_UNSPECIFIED"
                                                            "HIDDEN"
                                                            "REVEALED"
                                                            "UNLOCKED"],
                                                     :enumDescriptions ["Default value. This value is unused."
                                                                        "Achievement is hidden."
                                                                        "Achievement is revealed."
                                                                        "Achievement is unlocked."]},
                                  :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#playerAchievement`.",
                                         :type "string"},
                                  :currentSteps {:format "int32",
                                                 :type "integer",
                                                 :description "The current steps for an incremental achievement."},
                                  :experiencePoints {:type "string",
                                                     :description "Experience points earned for the achievement. This field is absent for achievements that have not yet been unlocked and 0 for achievements that have been unlocked by testers but that are unpublished.",
                                                     :format "int64"}}},
 :ProfileSettings {:properties {:kind {:type "string",
                                       :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#profileSettings`."},
                                :profileVisible {:type "boolean",
                                                 :description "Whether the player's profile is visible to the currently signed in player."},
                                :friendsListVisibility {:enumDescriptions ["Unused."
                                                                           "The friends list is currently visible to the game."
                                                                           "The developer does not have access to the friends list, but can call the Android API to show a consent dialog."
                                                                           "The friends list is currently unavailable for this user, and it is not possible to request access at this time, either because the user has permanently declined or the friends feature is not available to them. In this state, any attempts to request access to the friends list will be unsuccessful."],
                                                        :type "string",
                                                        :enum ["FRIENDS_LIST_VISIBILITY_UNSPECIFIED"
                                                               "VISIBLE"
                                                               "REQUEST_REQUIRED"
                                                               "UNAVAILABLE"]}},
                   :type "object",
                   :id "ProfileSettings",
                   :description "Profile settings"},
 :RevisionCheckResponse {:type "object",
                         :description "A third party checking a revision response.",
                         :id "RevisionCheckResponse",
                         :properties {:apiVersion {:description "The version of the API this client revision should use when calling API methods.",
                                                   :type "string"},
                                      :revisionStatus {:enumDescriptions ["Default value. This value is unused."
                                                                          "The revision being used is current."
                                                                          "There is currently a newer version available, but the revision being used still works."
                                                                          "The revision being used is not supported in any released version."],
                                                       :enum ["REVISION_STATUS_UNSPECIFIED"
                                                              "OK"
                                                              "DEPRECATED"
                                                              "INVALID"],
                                                       :description "The result of the revision check.",
                                                       :type "string"},
                                      :kind {:type "string",
                                             :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#revisionCheckResponse`."}}},
 :SnapshotListResponse {:description "A third party list snapshots response.",
                        :type "object",
                        :id "SnapshotListResponse",
                        :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#snapshotListResponse`.",
                                            :type "string"},
                                     :items {:description "The snapshots.",
                                             :items {:$ref "Snapshot"},
                                             :type "array"},
                                     :nextPageToken {:type "string",
                                                     :description "Token corresponding to the next page of results. If there are no more results, the token is omitted."}}},
 :Category {:type "object",
            :properties {:kind {:type "string",
                                :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#category`."},
                         :category {:description "The category name.",
                                    :type "string"},
                         :experiencePoints {:format "int64",
                                            :description "Experience points earned in this category.",
                                            :type "string"}},
            :id "Category",
            :description "Data related to individual game categories."},
 :MetagameConfig {:id "MetagameConfig",
                  :type "object",
                  :properties {:currentVersion {:description "Current version of the metagame configuration data. When this data is updated, the version number will be increased by one.",
                                                :type "integer",
                                                :format "int32"},
                               :playerLevels {:items {:$ref "PlayerLevel"},
                                              :type "array",
                                              :description "The list of player levels."},
                               :kind {:type "string",
                                      :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#metagameConfig`."}},
                  :description "The metagame config resource"},
 :ImageAsset {:properties {:name {:type "string",
                                  :description "The name of the asset."},
                           :url {:description "The URL of the asset.",
                                 :type "string"},
                           :width {:description "The width of the asset.",
                                   :type "integer",
                                   :format "int32"},
                           :height {:type "integer",
                                    :description "The height of the asset.",
                                    :format "int32"},
                           :kind {:type "string",
                                  :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#imageAsset`."}},
              :type "object",
              :description "An image asset object.",
              :id "ImageAsset"},
 :SnapshotExtended {:properties {:hasConflictingRevisions {:description "An indicator whether the snapshot has any conflicting revisions or not. Always set.",
                                                           :type "boolean"},
                                 :conflictingRevisions {:type "array",
                                                        :items {:$ref "SnapshotRevision"},
                                                        :description "A list of conflicting revisions. Only set if explicitly requested (e.g. using a field mask or a request flag), or if the RPC guarantees that this field is set. The conflicting revisions are sorted chronologically by their server creation time (oldest first). If there are too many conflicting revisions to return all of them in a single request this will only contain the first batch. In such case, the presented conflicting revisions must be resolved first in order to fetch the next batch."},
                                 :headRevision {:$ref "SnapshotRevision",
                                                :description "The current head revision (the canonical revision as understood by the server)."},
                                 :name {:type "string",
                                        :description "An identifier of the snapshot,developer-specified."}},
                    :type "object",
                    :description "A snapshot represents a saved game state referred to using the developer-provided snapshot_id (think of it as a file's path). The set of attributes and binary data for a specific state is called a revision. Each revision is itself immutable, and referred to by a snapshot_revision_id. At any time, a snapshot has a \"head\" revision, and updates are made against that revision. If a snapshot update is received that isn't against the current head revision, then instead of changing the head revision it will result in a conflicting revision that must be specifically resolved.",
                    :id "SnapshotExtended"},
 :LeaderboardListResponse {:type "object",
                           :description "A list of leaderboard objects.",
                           :properties {:nextPageToken {:type "string",
                                                        :description "Token corresponding to the next page of results."},
                                        :items {:type "array",
                                                :items {:$ref "Leaderboard"},
                                                :description "The leaderboards."},
                                        :kind {:type "string",
                                               :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#leaderboardListResponse`."}},
                           :id "LeaderboardListResponse"},
 :GamesAchievementSetStepsAtLeast {:properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#GamesAchievementSetStepsAtLeast`.",
                                                       :type "string"},
                                                :steps {:description "The minimum number of steps for the achievement to be set to.",
                                                        :type "integer",
                                                        :format "int32"}},
                                   :id "GamesAchievementSetStepsAtLeast",
                                   :type "object",
                                   :description "The payload to request to increment an achievement."},
 :EventChild {:description "An event child relationship resource.",
              :type "object",
              :id "EventChild",
              :properties {:childId {:type "string",
                                     :description "The ID of the child event."},
                           :kind {:type "string",
                                  :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#eventChild`."}}},
 :SnapshotCoverImageResource {:properties {:resourceId {:description "The ID of the image resource. It's guaranteed that if two IDs are equal then the contents are equal as well. It's not guaranteed that two identical blobs coming from separate uploads have the same ID. The resource ID can only be used within the application, user and resource type it was originally returned for. For example, it's not possible to use SnapshotDataResource's resource ID as the resource_id of a SnapshotCoverImageResource, even if the blob is a valid image file.",
                                                        :type "string"},
                                           :height {:type "integer",
                                                    :description "Output only. The height of the image in pixels.",
                                                    :readOnly true,
                                                    :format "int32"},
                                           :width {:readOnly true,
                                                   :description "Output only. The width of the image in pixels.",
                                                   :format "int32",
                                                   :type "integer"},
                                           :mimeType {:readOnly true,
                                                      :type "string",
                                                      :description "Output only. The MIME type of the image."},
                                           :contentHash {:description "Output only. Hash-like weak identifier of the uploaded image bytes, consistent per player per application. Within the context of a single player/application, it's guaranteed that two identical blobs coming from two different uploads will have the same content hash. It's extremely likely, though not guaranteed, that if two content hashes are equal, the images are identical.",
                                                         :readOnly true,
                                                         :type "string"},
                                           :downloadUrl {:description "Output only. A URL the client can use to download the image. May vary across requests, and only guaranteed to be valid for a short time after it is returned.",
                                                         :readOnly true,
                                                         :type "string"}},
                              :type "object",
                              :description "Identifies a snapshot cover image resource. The image is provided by the game.",
                              :id "SnapshotCoverImageResource"},
 :ResolveSnapshotHeadResponse {:properties {:snapshot {:description "The state of the snapshot.",
                                                       :$ref "SnapshotExtended"}},
                               :description "Response for ResolveSnapshotHead RPC.",
                               :id "ResolveSnapshotHeadResponse",
                               :type "object"},
 :EventDefinition {:description "An event definition resource.",
                   :id "EventDefinition",
                   :type "object",
                   :properties {:isDefaultImageUrl {:type "boolean",
                                                    :description "Indicates whether the icon image being returned is a default image, or is game-provided."},
                                :displayName {:type "string",
                                              :description "The name to display for the event."},
                                :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#eventDefinition`.",
                                       :type "string"},
                                :childEvents {:type "array",
                                              :items {:$ref "EventChild"},
                                              :description "A list of events that are a child of this event."},
                                :imageUrl {:description "The base URL for the image that represents the event.",
                                           :type "string"},
                                :id {:type "string",
                                     :description "The ID of the event."},
                                :visibility {:type "string",
                                             :enumDescriptions ["Default value. Should not be used."
                                                                "This event should be visible to all users."
                                                                "This event should only be shown to users that have recorded this event at least once."],
                                             :enum ["EVENT_VISIBILITY_UNSPECIFIED"
                                                    "REVEALED"
                                                    "HIDDEN"],
                                             :description "The visibility of event being tracked in this definition."},
                                :description {:type "string",
                                              :description "Description of what this event represents."}}},
 :AchievementUnlockResponse {:properties {:newlyUnlocked {:description "Whether this achievement was newly unlocked (that is, whether the unlock request for the achievement was the first for the player).",
                                                          :type "boolean"},
                                          :kind {:type "string",
                                                 :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementUnlockResponse`."}},
                             :description "An achievement unlock response",
                             :id "AchievementUnlockResponse",
                             :type "object"},
 :InstanceIosDetails {:id "InstanceIosDetails",
                      :description "The iOS details resource.",
                      :type "object",
                      :properties {:preferredForIphone {:description "Indicates that this instance is the default for new installations on iPhone devices.",
                                                        :type "boolean"},
                                   :bundleIdentifier {:type "string",
                                                      :description "Bundle identifier."},
                                   :supportIpad {:description "Flag to indicate if this instance supports iPad.",
                                                 :type "boolean"},
                                   :preferredForIpad {:description "Indicates that this instance is the default for new installations on iPad devices.",
                                                      :type "boolean"},
                                   :kind {:type "string",
                                          :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#instanceIosDetails`."},
                                   :supportIphone {:description "Flag to indicate if this instance supports iPhone.",
                                                   :type "boolean"},
                                   :itunesAppId {:type "string",
                                                 :description "iTunes App ID."}}},
 :Instance {:description "The Instance resource.",
            :properties {:acquisitionUri {:type "string",
                                          :description "URI which shows where a user can acquire this instance."},
                         :iosInstance {:description "Platform dependent details for iOS.",
                                       :$ref "InstanceIosDetails"},
                         :realtimePlay {:description "Flag to show if this game instance supports realtime play.",
                                        :type "boolean"},
                         :webInstance {:description "Platform dependent details for Web.",
                                       :$ref "InstanceWebDetails"},
                         :androidInstance {:description "Platform dependent details for Android.",
                                           :$ref "InstanceAndroidDetails"},
                         :name {:description "Localized display name.",
                                :type "string"},
                         :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#instance`.",
                                :type "string"},
                         :turnBasedPlay {:description "Flag to show if this game instance supports turn based play.",
                                         :type "boolean"},
                         :platformType {:enum ["PLATFORM_TYPE_UNSPECIFIED"
                                               "ANDROID"
                                               "IOS"
                                               "WEB_APP"],
                                        :description "The platform type.",
                                        :type "string",
                                        :enumDescriptions ["Default value. Should be unused."
                                                           "Instance is for Android."
                                                           "Instance is for iOS."
                                                           "Instance is for Web App."]}},
            :id "Instance",
            :type "object"},
 :AchievementDefinition {:type "object",
                         :id "AchievementDefinition",
                         :properties {:description {:type "string",
                                                    :description "The description of the achievement."},
                                      :revealedIconUrl {:description "The image URL for the revealed achievement icon.",
                                                        :type "string"},
                                      :experiencePoints {:format "int64",
                                                         :type "string",
                                                         :description "Experience points which will be earned when unlocking this achievement."},
                                      :initialState {:description "The initial state of the achievement.",
                                                     :enum ["INITIAL_ACHIEVEMENT_STATE_UNSPECIFIED"
                                                            "HIDDEN"
                                                            "REVEALED"
                                                            "UNLOCKED"],
                                                     :enumDescriptions ["Safe default, don't use."
                                                                        "Achievement is hidden."
                                                                        "Achievement is revealed."
                                                                        "Achievement is unlocked."],
                                                     :type "string"},
                                      :isUnlockedIconUrlDefault {:description "Indicates whether the unlocked icon image being returned is a default image, or is game-provided.",
                                                                 :type "boolean"},
                                      :name {:type "string",
                                             :description "The name of the achievement."},
                                      :isRevealedIconUrlDefault {:type "boolean",
                                                                 :description "Indicates whether the revealed icon image being returned is a default image, or is provided by the game."},
                                      :achievementType {:enumDescriptions ["Safe default, don't use."
                                                                           "Achievement is either locked or unlocked."
                                                                           "Achievement is incremental."],
                                                        :enum ["ACHIEVEMENT_TYPE_UNSPECIFIED"
                                                               "STANDARD"
                                                               "INCREMENTAL"],
                                                        :type "string",
                                                        :description "The type of the achievement."},
                                      :unlockedIconUrl {:description "The image URL for the unlocked achievement icon.",
                                                        :type "string"},
                                      :totalSteps {:description "The total steps for an incremental achievement.",
                                                   :type "integer",
                                                   :format "int32"},
                                      :id {:description "The ID of the achievement.",
                                           :type "string"},
                                      :kind {:type "string",
                                             :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementDefinition`."},
                                      :formattedTotalSteps {:type "string",
                                                            :description "The total steps for an incremental achievement as a string."}},
                         :description "An achievement definition object."},
 :PlayerLevel {:type "object",
               :description "1P/3P metadata about a user's level.",
               :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#playerLevel`.",
                                   :type "string"},
                            :maxExperiencePoints {:description "The maximum experience points for this level.",
                                                  :format "int64",
                                                  :type "string"},
                            :level {:description "The level for the user.",
                                    :format "int32",
                                    :type "integer"},
                            :minExperiencePoints {:type "string",
                                                  :description "The minimum experience points for this level.",
                                                  :format "int64"}},
               :id "PlayerLevel"},
 :Application {:description "The Application resource.",
               :properties {:description {:description "The description of the application.",
                                          :type "string"},
                            :category {:description "The category of the application.",
                                       :$ref "ApplicationCategory"},
                            :enabledFeatures {:type "array",
                                              :description "A list of features that have been enabled for the application.",
                                              :items {:type "string",
                                                      :enum ["APPLICATION_FEATURE_UNSPECIFIED"
                                                             "SNAPSHOTS"],
                                                      :enumDescriptions ["Safe default, don't use."
                                                                         "Saved Games (snapshots)."]}},
                            :assets {:type "array",
                                     :description "The assets of the application.",
                                     :items {:$ref "ImageAsset"}},
                            :name {:type "string",
                                   :description "The name of the application."},
                            :themeColor {:description "A hint to the client UI for what color to use as an app-themed color. The color is given as an RGB triplet (e.g. \"E0E0E0\").",
                                         :type "string"},
                            :achievement_count {:format "int32",
                                                :description "The number of achievements visible to the currently authenticated player.",
                                                :type "integer"},
                            :author {:type "string",
                                     :description "The author of the application."},
                            :lastUpdatedTimestamp {:type "string",
                                                   :format "int64",
                                                   :description "The last updated timestamp of the application."},
                            :instances {:description "The instances of the application.",
                                        :items {:$ref "Instance"},
                                        :type "array"},
                            :id {:description "The ID of the application.",
                                 :type "string"},
                            :kind {:type "string",
                                   :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#application`."},
                            :leaderboard_count {:format "int32",
                                                :type "integer",
                                                :description "The number of leaderboards visible to the currently authenticated player."}},
               :id "Application",
               :type "object"},
 :EventRecordRequest {:id "EventRecordRequest",
                      :type "object",
                      :properties {:kind {:type "string",
                                          :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#eventRecordRequest`."},
                                   :currentTimeMillis {:format "int64",
                                                       :type "string",
                                                       :description "The current time when this update was sent, in milliseconds, since 1970 UTC (Unix Epoch)."},
                                   :timePeriods {:items {:$ref "EventPeriodUpdate"},
                                                 :description "A list of the time period updates being made in this request.",
                                                 :type "array"},
                                   :requestId {:description "The request ID used to identify this attempt to record events.",
                                               :type "string",
                                               :format "int64"}},
                      :description "An event period update resource."},
 :AchievementSetStepsAtLeastResponse {:type "object",
                                      :id "AchievementSetStepsAtLeastResponse",
                                      :properties {:newlyUnlocked {:description "Whether the current steps for the achievement has reached the number of steps required to unlock.",
                                                                   :type "boolean"},
                                                   :kind {:type "string",
                                                          :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementSetStepsAtLeastResponse`."},
                                                   :currentSteps {:format "int32",
                                                                  :type "integer",
                                                                  :description "The current steps recorded for this incremental achievement."}},
                                      :description "An achievement set steps at least response."},
 :LeaderboardScoreRank {:description "A score rank in a leaderboard.",
                        :properties {:numScores {:type "string",
                                                 :description "The number of scores in the leaderboard.",
                                                 :format "int64"},
                                     :formattedNumScores {:type "string",
                                                          :description "The number of scores in the leaderboard as a string."},
                                     :kind {:type "string",
                                            :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#leaderboardScoreRank`."},
                                     :rank {:description "The rank in the leaderboard.",
                                            :format "int64",
                                            :type "string"},
                                     :formattedRank {:description "The rank in the leaderboard as a string.",
                                                     :type "string"}},
                        :id "LeaderboardScoreRank",
                        :type "object"},
 :Player {:properties {:bannerUrlPortrait {:type "string",
                                           :description "The url to the portrait mode player banner image."},
                       :originalPlayerId {:description "The player ID that was used for this player the first time they signed into the game in question. This is only populated for calls to player.get for the requesting player, only if the player ID has subsequently changed, and only to clients that support remapping player IDs.",
                                          :type "string"},
                       :avatarImageUrl {:description "The base URL for the image that represents the player.",
                                        :type "string"},
                       :displayName {:description "The name to display for the player.",
                                     :type "string"},
                       :name {:properties {:givenName {:description "The given name of this player. In some places, this is known as the first name.",
                                                       :type "string"},
                                           :familyName {:type "string",
                                                        :description "The family name of this player. In some places, this is known as the last name."}},
                              :type "object",
                              :description "A representation of the individual components of the name."},
                       :playerId {:type "string",
                                  :description "The ID of the player."},
                       :title {:type "string",
                               :description "The player's title rewarded for their game activities."},
                       :profileSettings {:description "The player's profile settings. Controls whether or not the player's profile is visible to other players.",
                                         :$ref "ProfileSettings"},
                       :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#player`",
                              :type "string"},
                       :bannerUrlLandscape {:description "The url to the landscape mode player banner image.",
                                            :type "string"},
                       :friendStatus {:description "The friend status of the given player, relative to the requester. This is unset if the player is not sharing their friends list with the game.",
                                      :type "string",
                                      :enum ["FRIEND_STATUS_UNSPECIFIED"
                                             "NO_RELATIONSHIP"
                                             "FRIEND"],
                                      :enumDescriptions ["Default value. This value is unused."
                                                         "There is no relationship between the players."
                                                         "The player and requester are friends."]},
                       :experienceInfo {:description "An object to represent Play Game experience information for the player.",
                                        :$ref "PlayerExperienceInfo"}},
          :type "object",
          :description "A Player resource.",
          :id "Player"},
 :PlayerScore {:description "A player score.",
               :type "object",
               :id "PlayerScore",
               :properties {:kind {:type "string",
                                   :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#playerScore`."},
                            :scoreTag {:type "string",
                                       :description "Additional information about this score. Values will contain no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986."},
                            :formattedScore {:description "The formatted score for this player score.",
                                             :type "string"},
                            :score {:format "int64",
                                    :description "The numerical value for this player score.",
                                    :type "string"},
                            :timeSpan {:type "string",
                                       :enumDescriptions ["Default value. This value is unused."
                                                          "The score is an all-time score."
                                                          "The score is a weekly score."
                                                          "The score is a daily score."],
                                       :enum ["SCORE_TIME_SPAN_UNSPECIFIED"
                                              "ALL_TIME"
                                              "WEEKLY"
                                              "DAILY"],
                                       :description "The time span for this player score."}}},
 :SnapshotRevision {:id "SnapshotRevision",
                    :type "object",
                    :description "A Snapshot revision resource. Snapshot revisions are immutable.",
                    :properties {:coverImage {:$ref "SnapshotCoverImageResource",
                                              :description "Reference to the cover image for this revision."},
                                 :blob {:description "Reference to the game provided blob for this revision.",
                                        :$ref "SnapshotDataResource"},
                                 :metadata {:$ref "SnapshotMetadata",
                                            :description "Metadata for this snapshot revision."},
                                 :id {:description "Output only. A server generated identifier of the snapshot revision.",
                                      :type "string",
                                      :readOnly true}}},
 :GamesAchievementIncrement {:properties {:kind {:type "string",
                                                 :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#GamesAchievementIncrement`."},
                                          :requestId {:type "string",
                                                      :format "int64",
                                                      :description "The requestId associated with an increment to an achievement."},
                                          :steps {:format "int32",
                                                  :type "integer",
                                                  :description "The number of steps to be incremented."}},
                             :description "The payload to request to increment an achievement.",
                             :type "object",
                             :id "GamesAchievementIncrement"},
 :Leaderboard {:type "object",
               :description "The Leaderboard resource.",
               :id "Leaderboard",
               :properties {:name {:type "string",
                                   :description "The name of the leaderboard."},
                            :iconUrl {:type "string",
                                      :description "The icon for the leaderboard."},
                            :order {:enumDescriptions ["Default value. This value is unused."
                                                       "Larger values are better; scores are sorted in descending order"
                                                       "Smaller values are better; scores are sorted in ascending order"],
                                    :type "string",
                                    :enum ["SCORE_ORDER_UNSPECIFIED"
                                           "LARGER_IS_BETTER"
                                           "SMALLER_IS_BETTER"],
                                    :description "How scores are ordered."},
                            :isIconUrlDefault {:description "Indicates whether the icon image being returned is a default image, or is game-provided.",
                                               :type "boolean"},
                            :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#leaderboard`.",
                                   :type "string"},
                            :id {:description "The leaderboard ID.",
                                 :type "string"}}},
 :EventPeriodRange {:type "object",
                    :id "EventPeriodRange",
                    :description "An event period time range.",
                    :properties {:periodStartMillis {:format "int64",
                                                     :type "string",
                                                     :description "The time when this update period begins, in millis, since 1970 UTC (Unix Epoch)."},
                                 :kind {:type "string",
                                        :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#eventPeriodRange`."},
                                 :periodEndMillis {:format "int64",
                                                   :type "string",
                                                   :description "The time when this update period ends, in millis, since 1970 UTC (Unix Epoch)."}}},
 :EventRecordFailure {:description "An event update failure resource.",
                      :id "EventRecordFailure",
                      :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#eventRecordFailure`.",
                                          :type "string"},
                                   :failureCause {:type "string",
                                                  :description "The cause for the update failure.",
                                                  :enum ["EVENT_UPDATE_FAILURE_CAUSE_UNSPECIFIED"
                                                         "NOT_FOUND"
                                                         "INVALID_UPDATE_VALUE"],
                                                  :enumDescriptions ["Default value. Should not use."
                                                                     "An attempt was made to set an event that was not defined."
                                                                     "An attempt was made to increment an event by a non-positive value."]},
                                   :eventId {:description "The ID of the event that was not updated.",
                                             :type "string"}},
                      :type "object"},
 :SnapshotDataResource {:id "SnapshotDataResource",
                        :properties {:size {:format "int64",
                                            :type "string",
                                            :description "Size of the saved game blob in bytes."},
                                     :resourceId {:description "The ID of the blob resource. It's guaranteed that if two IDs are equal then the contents are equal as well. It's not guaranteed that two identical blobs coming from separate uploads have the same resource ID. The resource ID can only be used within the application, user and resource type it was originally returned for. For example, it's not possible to use SnapshotDataResource's resource ID as the resource_id of a SnapshotCoverImageResource, even if the blob is a valid image file.",
                                                  :type "string"},
                                     :contentHash {:type "string",
                                                   :readOnly true,
                                                   :description "Output only. Hash-like weak identifier of the uploaded blob, consistent per player per application. Within the context of a single player/application, it's guaranteed that two identical blobs coming from two different uploads will have the same content hash. It's extremely likely, though not guaranteed, that if two content hashes are equal, the blobs are identical."},
                                     :downloadUrl {:readOnly true,
                                                   :type "string",
                                                   :description "Output only. A URL that the client can use to download the blob. May vary across requests, and only guaranteed to be valid for a short time after it is returned."}},
                        :description "Identifies a snapshot data resource. The data is provided by the game.",
                        :type "object"},
 :AchievementUpdateResponse {:id "AchievementUpdateResponse",
                             :properties {:newlyUnlocked {:description "Whether this achievement was newly unlocked (that is, whether the unlock request for the achievement was the first for the player).",
                                                          :type "boolean"},
                                          :updateOccurred {:description "Whether the requested updates actually affected the achievement.",
                                                           :type "boolean"},
                                          :currentState {:description "The current state of the achievement.",
                                                         :enumDescriptions ["Safe default, don't use."
                                                                            "Achievement is hidden."
                                                                            "Achievement is revealed."
                                                                            "Achievement is unlocked."],
                                                         :type "string",
                                                         :enum ["UPDATED_ACHIEVEMENT_STATE_UNSPECIFIED"
                                                                "HIDDEN"
                                                                "REVEALED"
                                                                "UNLOCKED"]},
                                          :currentSteps {:description "The current steps recorded for this achievement if it is incremental.",
                                                         :format "int32",
                                                         :type "integer"},
                                          :achievementId {:type "string",
                                                          :description "The achievement this update is was applied to."},
                                          :kind {:type "string",
                                                 :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementUpdateResponse`."}},
                             :type "object",
                             :description "An updated achievement."},
 :EventBatchRecordFailure {:description "A batch update failure resource.",
                           :id "EventBatchRecordFailure",
                           :type "object",
                           :properties {:range {:description "The time range which was rejected; empty for a request-wide failure.",
                                                :$ref "EventPeriodRange"},
                                        :failureCause {:enum ["EVENT_FAILURE_CAUSE_UNSPECIFIED"
                                                              "TOO_LARGE"
                                                              "TIME_PERIOD_EXPIRED"
                                                              "TIME_PERIOD_SHORT"
                                                              "TIME_PERIOD_LONG"
                                                              "ALREADY_UPDATED"
                                                              "RECORD_RATE_HIGH"],
                                                       :type "string",
                                                       :description "The cause for the update failure.",
                                                       :enumDescriptions ["Default value. Should not be used."
                                                                          "A batch request was issued with more events than are allowed in a single batch."
                                                                          "A batch was sent with data too far in the past to record."
                                                                          "A batch was sent with a time range that was too short."
                                                                          "A batch was sent with a time range that was too long."
                                                                          "An attempt was made to record a batch of data which was already seen."
                                                                          "An attempt was made to record data faster than the server will apply updates."]},
                                        :kind {:type "string",
                                               :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#eventBatchRecordFailure`."}}},
 :LeaderboardScores {:properties {:nextPageToken {:description "The pagination token for the next page of results.",
                                                  :type "string"},
                                  :kind {:type "string",
                                         :description "Uniquely identifies the type of this resource. Value is always the fixed string `games#leaderboardScores`."},
                                  :prevPageToken {:description "The pagination token for the previous page of results.",
                                                  :type "string"},
                                  :playerScore {:$ref "LeaderboardEntry",
                                                :description "The score of the requesting player on the leaderboard. The player's score may appear both here and in the list of scores above. If you are viewing a public leaderboard and the player is not sharing their gameplay information publicly, the `scoreRank`and `formattedScoreRank` values will not be present."},
                                  :numScores {:format "int64",
                                              :description "The total number of scores in the leaderboard.",
                                              :type "string"},
                                  :items {:description "The scores in the leaderboard.",
                                          :type "array",
                                          :items {:$ref "LeaderboardEntry"}}},
                     :id "LeaderboardScores",
                     :description "A ListScores response.",
                     :type "object"}}
