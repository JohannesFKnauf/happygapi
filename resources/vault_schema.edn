{:DriveOptions {:type "object",
                :id "DriveOptions",
                :description "Additional options for Drive search",
                :properties {:includeSharedDrives {:type "boolean",
                                                   :description "Set to **true** to include shared drives."},
                             :versionDate {:type "string",
                                           :description "Search the current version of the Drive file, but export the contents of the last version saved before 12:00 AM UTC on the specified date. Enter the date in UTC.",
                                           :format "google-datetime"},
                             :includeTeamDrives {:type "boolean",
                                                 :description "Set to true to include Team Drive."}}},
 :ReopenMatterRequest {:type "object",
                       :properties {},
                       :id "ReopenMatterRequest",
                       :description "Reopen a matter by ID."},
 :CorpusQuery {:description "Service-specific options for holds.",
               :properties {:hangoutsChatQuery {:$ref "HeldHangoutsChatQuery",
                                                :description "Service-specific options for Chat holds. If set, **CorpusType** must be **HANGOUTS_CHAT**."},
                            :driveQuery {:description "Service-specific options for Drive holds. If set, **CorpusType** must be **DRIVE**.",
                                         :$ref "HeldDriveQuery"},
                            :groupsQuery {:description "Service-specific options for Groups holds. If set, **CorpusType** must be **GROUPS**.",
                                          :$ref "HeldGroupsQuery"},
                            :voiceQuery {:$ref "HeldVoiceQuery",
                                         :description "Service-specific options for Voice holds. If set, **CorpusType** must be **VOICE**."},
                            :mailQuery {:$ref "HeldMailQuery",
                                        :description "Service-specific options for Gmail holds. If set, **CorpusType** must be **MAIL**."}},
               :id "CorpusQuery",
               :type "object"},
 :CloudStorageFile {:properties {:bucketName {:description "The name of the Cloud Storage bucket for the export file. You can use this value in the [Cloud Storage JSON or XML APIs](https://cloud.google.com/storage/docs/apis), but not to list the bucket contents. Instead, you can [get individual export files](https://cloud.google.com/storage/docs/json_api/v1/objects/get) by object name.",
                                              :type "string"},
                                 :size {:format "int64",
                                        :description "The export file size.",
                                        :type "string"},
                                 :objectName {:type "string",
                                              :description "The name of the Cloud Storage object for the export file. You can use this value in the [Cloud Storage JSON or XML APIs](https://cloud.google.com/storage/docs/apis)."},
                                 :md5Hash {:description "The md5 hash of the file.",
                                           :type "string"}},
                    :description "The export file in Cloud Storage",
                    :id "CloudStorageFile",
                    :type "object"},
 :VoiceExportOptions {:id "VoiceExportOptions",
                      :properties {:exportFormat {:enumDescriptions ["No export format specified."
                                                                     "Export as MBOX."
                                                                     "Export as PST."],
                                                  :enum ["EXPORT_FORMAT_UNSPECIFIED"
                                                         "MBOX"
                                                         "PST"],
                                                  :description "The file format for exported text messages.",
                                                  :type "string"}},
                      :type "object",
                      :description "The options for Voice exports."},
 :UndeleteMatterRequest {:description "Undelete a matter by ID.",
                         :properties {},
                         :id "UndeleteMatterRequest",
                         :type "object"},
 :AccountInfo {:properties {:emails {:description "A set of accounts to search.",
                                     :type "array",
                                     :items {:type "string"}}},
               :type "object",
               :id "AccountInfo",
               :description "The accounts to search"},
 :HeldAccount {:id "HeldAccount",
               :description "An account covered by a hold. This structure is immutable. It can be an individual account or a Google Group, depending on the service. To work with Vault resources, the account must have the [required Vault privileges] (https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege.",
               :type "object",
               :properties {:lastName {:description "Output only. The last name of the account holder.",
                                       :type "string"},
                            :accountId {:description "The account ID, as provided by the [Admin SDK](https://developers.google.com/admin-sdk/).",
                                        :type "string"},
                            :firstName {:description "Output only. The first name of the account holder.",
                                        :type "string"},
                            :holdTime {:description "Output only. When the account was put on hold.",
                                       :type "string",
                                       :format "google-datetime"},
                            :email {:type "string",
                                    :description "The primary email address of the account. If used as an input, this takes precedence over **accountId**."}}},
 :RemoveMatterPermissionsRequest {:id "RemoveMatterPermissionsRequest",
                                  :description "Remove an account as a matter collaborator.",
                                  :properties {:accountId {:description "The account ID.",
                                                           :type "string"}},
                                  :type "object"},
 :HangoutsChatInfo {:type "object",
                    :id "HangoutsChatInfo",
                    :description "The Chat spaces to search",
                    :properties {:roomId {:description "A list of Chat spaces IDs, as provided by the [Chat API](https://developers.google.com/hangouts/chat).",
                                          :items {:type "string"},
                                          :type "array"}}},
 :HeldHangoutsChatQuery {:description "Options for Chat holds.",
                         :type "object",
                         :properties {:includeRooms {:description "To include messages in Chat spaces the user was a member of, set to **true**.",
                                                     :type "boolean"}},
                         :id "HeldHangoutsChatQuery"},
 :CloseMatterRequest {:id "CloseMatterRequest",
                      :properties {},
                      :description "Close a matter by ID.",
                      :type "object"},
 :ListMattersResponse {:properties {:matters {:items {:$ref "Matter"},
                                              :type "array",
                                              :description "List of matters."},
                                    :nextPageToken {:description "Page token to retrieve the next page of results in the list.",
                                                    :type "string"}},
                       :type "object",
                       :id "ListMattersResponse",
                       :description "Provides the list of matters."},
 :Operation {:properties {:name {:description "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                                 :type "string"},
                          :error {:$ref "Status",
                                  :description "The error result of the operation in case of failure or cancellation."},
                          :response {:description "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                                     :type "object",
                                     :additionalProperties {:type "any",
                                                            :description "Properties of the object. Contains field @type with type URL."}},
                          :done {:description "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                                 :type "boolean"},
                          :metadata {:type "object",
                                     :additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                            :type "any"},
                                     :description "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."}},
             :id "Operation",
             :type "object",
             :description "This resource represents a long-running operation that is the result of a network API call."},
 :GroupsExportOptions {:id "GroupsExportOptions",
                       :properties {:exportFormat {:enum ["EXPORT_FORMAT_UNSPECIFIED"
                                                          "MBOX"
                                                          "PST"],
                                                   :description "The file format for exported messages.",
                                                   :enumDescriptions ["No export format specified."
                                                                      "Export as MBOX."
                                                                      "Export as PST."],
                                                   :type "string"}},
                       :description "Options for Groups exports.",
                       :type "object"},
 :HeldGroupsQuery {:type "object",
                   :id "HeldGroupsQuery",
                   :properties {:startTime {:type "string",
                                            :description "The start time for the query. Specify in GMT. The value is rounded to 12 AM on the specified date.",
                                            :format "google-datetime"},
                                :terms {:description "The [search operators](https://support.google.com/vault/answer/2474474) used to refine the messages covered by the hold.",
                                        :type "string"},
                                :endTime {:description "The end time for the query. Specify in GMT. The value is rounded to 12 AM on the specified date.",
                                          :type "string",
                                          :format "google-datetime"}},
                   :description "Query options for group holds."},
 :AddMatterPermissionsRequest {:type "object",
                               :description "Add an account with the permission specified. The role cannot be owner. If an account already has a role in the matter, the existing role is overwritten.",
                               :properties {:ccMe {:description "Only relevant if **sendEmails** is **true**. To CC the requestor in the email message, set to **true**. To not CC requestor, set to **false**.",
                                                   :type "boolean"},
                                            :matterPermission {:$ref "MatterPermission",
                                                               :description "The account and its role to add."},
                                            :sendEmails {:type "boolean",
                                                         :description "To send a notification email to the added account, set to **true**. To not send a notification email, set to **false**."}},
                               :id "AddMatterPermissionsRequest"},
 :MailOptions {:properties {:excludeDrafts {:type "boolean",
                                            :description "Set to **true** to exclude drafts."}},
               :type "object",
               :description "Additional options for Gmail search",
               :id "MailOptions"},
 :HangoutsChatExportOptions {:properties {:exportFormat {:enumDescriptions ["No export format specified."
                                                                            "Export as MBOX."
                                                                            "Export as PST."],
                                                         :type "string",
                                                         :enum ["EXPORT_FORMAT_UNSPECIFIED"
                                                                "MBOX"
                                                                "PST"],
                                                         :description "The file format for exported messages."}},
                             :type "object",
                             :id "HangoutsChatExportOptions",
                             :description "Options for Chat exports."},
 :HeldMailQuery {:description "Query options for Gmail holds.",
                 :properties {:endTime {:type "string",
                                        :format "google-datetime",
                                        :description "The end time for the query. Specify in GMT. The value is rounded to 12 AM on the specified date."},
                              :terms {:description "The [search operators](https://support.google.com/vault/answer/2474474) used to refine the messages covered by the hold.",
                                      :type "string"},
                              :startTime {:description "The start time for the query. Specify in GMT. The value is rounded to 12 AM on the specified date.",
                                          :type "string",
                                          :format "google-datetime"}},
                 :type "object",
                 :id "HeldMailQuery"},
 :AddHeldAccountResult {:properties {:account {:$ref "HeldAccount",
                                               :description "Returned when the account was successfully created."},
                                     :status {:description "Reports the request status. If it failed, returns an error message.",
                                              :$ref "Status"}},
                        :id "AddHeldAccountResult",
                        :type "object",
                        :description "The status of each account creation, and the **HeldAccount**, if successful."},
 :CancelOperationRequest {:id "CancelOperationRequest",
                          :properties {},
                          :description "The request message for Operations.CancelOperation.",
                          :type "object"},
 :TeamDriveInfo {:type "object",
                 :description "Team Drives to search",
                 :properties {:teamDriveIds {:type "array",
                                             :description "List of Team Drive IDs, as provided by the [Drive API](https://developers.google.com/drive).",
                                             :items {:type "string"}}},
                 :id "TeamDriveInfo"},
 :VoiceOptions {:description "Additional options for Voice search",
                :id "VoiceOptions",
                :properties {:coveredData {:type "array",
                                           :description "Datatypes to search",
                                           :items {:type "string",
                                                   :enumDescriptions ["Covered data unspecified."
                                                                      "Voice text messages."
                                                                      "Voicemails and their transcripts."
                                                                      "Call logs."],
                                                   :enum ["COVERED_DATA_UNSPECIFIED"
                                                          "TEXT_MESSAGES"
                                                          "VOICEMAILS"
                                                          "CALL_LOGS"]}}},
                :type "object"},
 :MailCountResult {:description "Gmail and classic Hangouts-specific count metrics.",
                   :type "object",
                   :id "MailCountResult",
                   :properties {:nonQueryableAccounts {:type "array",
                                                       :description "When **DataScope** is **HELD_DATA**, the number of accounts in the request that are not queried because they are not on hold. For other data scopes, this field is not set.",
                                                       :items {:type "string"}},
                                :matchingAccountsCount {:format "int64",
                                                        :description "Total number of accounts that can be queried and have more than zero messages.",
                                                        :type "string"},
                                :accountCounts {:type "array",
                                                :items {:$ref "AccountCount"},
                                                :description "Subtotal count per matching account that have more than zero messages."},
                                :accountCountErrors {:items {:$ref "AccountCountError"},
                                                     :type "array",
                                                     :description "Errors occurred when querying these accounts."},
                                :queriedAccountsCount {:format "int64",
                                                       :description "Total number of accounts involved in this count operation.",
                                                       :type "string"}}},
 :Matter {:type "object",
          :description "Represents a matter. To work with Vault resources, the account must have the [required Vault privileges] (https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege.",
          :properties {:matterId {:description "The matter ID, which is generated by the server. Leave blank when creating a matter.",
                                  :type "string"},
                       :name {:description "The name of the matter.",
                              :type "string"},
                       :description {:type "string",
                                     :description "An optional description for the matter."},
                       :state {:enum ["STATE_UNSPECIFIED"
                                      "OPEN"
                                      "CLOSED"
                                      "DELETED"],
                               :type "string",
                               :description "The state of the matter.",
                               :enumDescriptions ["The matter has no specified state."
                                                  "The matter is open."
                                                  "The matter is closed."
                                                  "The matter is deleted."]},
                       :matterPermissions {:description "Lists the users and their permission for the matter. Currently there is no programmer defined limit on the number of permissions a matter can have.",
                                           :items {:$ref "MatterPermission"},
                                           :type "array"}},
          :id "Matter"},
 :HeldDriveQuery {:id "HeldDriveQuery",
                  :properties {:includeSharedDriveFiles {:description "To include files in shared drives in the hold, set to **true**.",
                                                         :type "boolean"},
                               :includeTeamDriveFiles {:type "boolean",
                                                       :description "To include files in Team Drives in the hold, set to **true**."}},
                  :type "object",
                  :description "Options for Drive holds."},
 :ListHeldAccountsResponse {:id "ListHeldAccountsResponse",
                            :type "object",
                            :description "Returns a list of the accounts covered by a hold.",
                            :properties {:accounts {:items {:$ref "HeldAccount"},
                                                    :description "The held accounts on a hold.",
                                                    :type "array"}}},
 :Export {:type "object",
          :description "An export. To work with Vault resources, the account must have the [required Vault privileges](https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege.",
          :properties {:name {:description "The export name.",
                              :type "string"},
                       :createTime {:description "Output only. The time when the export was created.",
                                    :format "google-datetime",
                                    :type "string"},
                       :requester {:$ref "UserInfo",
                                   :description "Output only. The requester of the export."},
                       :status {:type "string",
                                :enum ["EXPORT_STATUS_UNSPECIFIED"
                                       "COMPLETED"
                                       "FAILED"
                                       "IN_PROGRESS"],
                                :description "Output only. The status of the export.",
                                :enumDescriptions ["The status is unspecified."
                                                   "The export completed."
                                                   "The export failed."
                                                   "The export is in progress."]},
                       :id {:type "string",
                            :description "Output only. The generated export ID."},
                       :matterId {:description "Output only. The matter ID.",
                                  :type "string"},
                       :cloudStorageSink {:description "Output only. The sink for export files in Cloud Storage.",
                                          :$ref "CloudStorageSink"},
                       :query {:description "The query parameters used to create the export.",
                               :$ref "Query"},
                       :stats {:$ref "ExportStats",
                               :description "Output only. Details about the export progress and size."},
                       :exportOptions {:$ref "ExportOptions",
                                       :description "Additional export options."}},
          :id "Export"},
 :RemoveHeldAccountsResponse {:description "Response for batch delete held accounts.",
                              :type "object",
                              :properties {:statuses {:description "A list of statuses for the deleted accounts. Results have the same order as the request.",
                                                      :type "array",
                                                      :items {:$ref "Status"}}},
                              :id "RemoveHeldAccountsResponse"},
 :AddHeldAccountsResponse {:description "Response for batch create held accounts.",
                           :type "object",
                           :id "AddHeldAccountsResponse",
                           :properties {:responses {:type "array",
                                                    :items {:$ref "AddHeldAccountResult"},
                                                    :description "The list of responses, in the same order as the batch request."}}},
 :UserInfo {:description "User's information.",
            :id "UserInfo",
            :type "object",
            :properties {:displayName {:description "The displayed name of the user.",
                                       :type "string"},
                         :email {:type "string",
                                 :description "The email address of the user."}}},
 :Hold {:id "Hold",
        :type "object",
        :description "A hold. A hold prevents the specified Google Workspace service from purging data for specific accounts or all members of an organizational unit. To work with Vault resources, the account must have the [required Vault privileges] (https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege.",
        :properties {:accounts {:items {:$ref "HeldAccount"},
                                :description "If set, the hold applies to the specified accounts and **orgUnit** must be empty.",
                                :type "array"},
                     :query {:$ref "CorpusQuery",
                             :description "Service-specific options. If set, **CorpusQuery** must match **CorpusType**."},
                     :holdId {:description "The unique immutable ID of the hold. Assigned during creation.",
                              :type "string"},
                     :orgUnit {:description "If set, the hold applies to all members of the organizational unit and **accounts** must be empty. This property is mutable. For Groups holds, set **accounts**.",
                               :$ref "HeldOrgUnit"},
                     :corpus {:description "The service to be searched.",
                              :enumDescriptions ["No service specified."
                                                 "Drive, including Meet and Sites."
                                                 "For search, Gmail and classic Hangouts. For holds, Gmail only."
                                                 "Groups."
                                                 "For search, Google Chat only. For holds, Google Chat and classic Hangouts."
                                                 "Google Voice."],
                              :enum ["CORPUS_TYPE_UNSPECIFIED"
                                     "DRIVE"
                                     "MAIL"
                                     "GROUPS"
                                     "HANGOUTS_CHAT"
                                     "VOICE"],
                              :type "string"},
                     :name {:description "The name of the hold.",
                            :type "string"},
                     :updateTime {:format "google-datetime",
                                  :description "The last time this hold was modified.",
                                  :type "string"}}},
 :MailExportOptions {:type "object",
                     :id "MailExportOptions",
                     :properties {:showConfidentialModeContent {:description "To export confidential mode content, set to **true**.",
                                                                :type "boolean"},
                                  :exportFormat {:enumDescriptions ["No export format specified."
                                                                    "Export as MBOX."
                                                                    "Export as PST."],
                                                 :description "The file format for exported messages.",
                                                 :enum ["EXPORT_FORMAT_UNSPECIFIED"
                                                        "MBOX"
                                                        "PST"],
                                                 :type "string"}},
                     :description "Options for Gmail exports."},
 :Empty {:type "object",
         :properties {},
         :id "Empty",
         :description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."},
 :HeldOrgUnit {:id "HeldOrgUnit",
               :type "object",
               :description "The organizational unit covered by a hold. This structure is immutable.",
               :properties {:orgUnitId {:type "string",
                                        :description "The organizational unit's immutable ID as provided by the [Admin SDK](https://developers.google.com/admin-sdk/)."},
                            :holdTime {:format "google-datetime",
                                       :description "When the organizational unit was put on hold. This property is immutable.",
                                       :type "string"}}},
 :RemoveHeldAccountsRequest {:id "RemoveHeldAccountsRequest",
                             :type "object",
                             :description "Remove a list of accounts from a hold.",
                             :properties {:accountIds {:description "The account IDs of the accounts to remove from the hold.",
                                                       :type "array",
                                                       :items {:type "string"}}}},
 :MatterPermission {:id "MatterPermission",
                    :description "Users can be matter owners or collaborators. Each matter has only one owner. All others users who can access the matter are collaborators. When an account is purged, its corresponding MatterPermission resources cease to exist.",
                    :type "object",
                    :properties {:accountId {:description "The account ID, as provided by the [Admin SDK](https://developers.google.com/admin-sdk/).",
                                             :type "string"},
                                 :role {:description "The user's role for the matter.",
                                        :enumDescriptions ["No role assigned."
                                                           "A collaborator on the matter."
                                                           "The owner of the matter."],
                                        :type "string",
                                        :enum ["ROLE_UNSPECIFIED"
                                               "COLLABORATOR"
                                               "OWNER"]}}},
 :CloseMatterResponse {:description "Response to a CloseMatterRequest.",
                       :id "CloseMatterResponse",
                       :type "object",
                       :properties {:matter {:description "The updated matter, with state **CLOSED**.",
                                             :$ref "Matter"}}},
 :AddHeldAccountsRequest {:id "AddHeldAccountsRequest",
                          :properties {:emails {:items {:type "string"},
                                                :description "A comma-separated list of the emails of the accounts to add to the hold. Specify either **emails** or **account_ids**, but not both.",
                                                :type "array"},
                                       :accountIds {:description "A comma-separated list of the account IDs of the accounts to add to the hold. Specify either **emails** or **account_ids**, but not both.",
                                                    :items {:type "string"},
                                                    :type "array"}},
                          :description "Add a list of accounts to a hold.",
                          :type "object"},
 :CountArtifactsResponse {:properties {:groupsCountResult {:description "Count metrics for Groups.",
                                                           :$ref "GroupsCountResult"},
                                       :totalCount {:format "int64",
                                                    :description "Total count of messages.",
                                                    :type "string"},
                                       :mailCountResult {:$ref "MailCountResult",
                                                         :description "Count metrics for Gmail and classic Hangouts."}},
                          :description "Definition of the response for method CountArtifacts.",
                          :id "CountArtifactsResponse",
                          :type "object"},
 :SavedQuery {:description "The definition of a saved query. To work with Vault resources, the account must have the [required Vault privileges](https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege.",
              :id "SavedQuery",
              :type "object",
              :properties {:matterId {:type "string",
                                      :description "Output only. The matter ID of the matter the saved query is saved in. The server does not use this field during create and always uses matter ID in the URL."},
                           :displayName {:description "The name of the saved query.",
                                         :type "string"},
                           :savedQueryId {:description "A unique identifier for the saved query.",
                                          :type "string"},
                           :createTime {:type "string",
                                        :format "google-datetime",
                                        :description "Output only. The server-generated timestamp when the saved query was created."},
                           :query {:description "The search parameters of the saved query.",
                                   :$ref "Query"}}},
 :ListExportsResponse {:id "ListExportsResponse",
                       :description "The exports for a matter.",
                       :properties {:exports {:items {:$ref "Export"},
                                              :description "The list of exports.",
                                              :type "array"},
                                    :nextPageToken {:type "string",
                                                    :description "Page token to retrieve the next page of results in the list."}},
                       :type "object"},
 :ExportOptions {:type "object",
                 :properties {:groupsOptions {:$ref "GroupsExportOptions",
                                              :description "Options for Groups exports."},
                              :region {:type "string",
                                       :enum ["EXPORT_REGION_UNSPECIFIED"
                                              "ANY"
                                              "US"
                                              "EUROPE"],
                                       :description "The requested data region for the export.",
                                       :enumDescriptions ["The region is unspecified. Defaults to ANY."
                                                          "Any region."
                                                          "United States region."
                                                          "Europe region."]},
                              :voiceOptions {:$ref "VoiceExportOptions",
                                             :description "Options for Voice exports."},
                              :mailOptions {:description "Options for Gmail exports.",
                                            :$ref "MailExportOptions"},
                              :hangoutsChatOptions {:description "Options for Chat exports.",
                                                    :$ref "HangoutsChatExportOptions"},
                              :driveOptions {:description "Options for Drive exports.",
                                             :$ref "DriveExportOptions"}},
                 :description "Additional options for exports",
                 :id "ExportOptions"},
 :GroupsCountResult {:id "GroupsCountResult",
                     :description "Groups specific count metrics.",
                     :type "object",
                     :properties {:accountCounts {:items {:$ref "AccountCount"},
                                                  :type "array",
                                                  :description "Subtotal count per matching account that have more than zero messages."},
                                  :accountCountErrors {:items {:$ref "AccountCountError"},
                                                       :description "Error occurred when querying these accounts.",
                                                       :type "array"},
                                  :matchingAccountsCount {:format "int64",
                                                          :description "Total number of accounts that can be queried and have more than zero messages.",
                                                          :type "string"},
                                  :nonQueryableAccounts {:description "When **DataScope** is **HELD_DATA**, these accounts in the request are not queried because they are not on hold. For other data scope, this field is not set.",
                                                         :type "array",
                                                         :items {:type "string"}},
                                  :queriedAccountsCount {:format "int64",
                                                         :type "string",
                                                         :description "Total number of accounts involved in this count operation."}}},
 :SharedDriveInfo {:id "SharedDriveInfo",
                   :type "object",
                   :description "The shared drives to search",
                   :properties {:sharedDriveIds {:items {:type "string"},
                                                 :description "A list of shared drive IDs, as provided by the [Drive API](https://developers.google.com/drive).",
                                                 :type "array"}}},
 :ListSavedQueriesResponse {:properties {:nextPageToken {:type "string",
                                                         :description "Page token to retrieve the next page of results in the list. If this is empty, then there are no more saved queries to list."},
                                         :savedQueries {:type "array",
                                                        :description "List of saved queries.",
                                                        :items {:$ref "SavedQuery"}}},
                            :id "ListSavedQueriesResponse",
                            :description "Definition of the response for method ListSaveQuery.",
                            :type "object"},
 :HangoutsChatOptions {:id "HangoutsChatOptions",
                       :type "object",
                       :properties {:includeRooms {:type "boolean",
                                                   :description "For searches by account or organizational unit, set to **true** to include rooms."}},
                       :description "Additional options for Google Chat search"},
 :CountArtifactsMetadata {:type "object",
                          :description "Long running operation metadata for CountArtifacts.",
                          :properties {:matterId {:type "string",
                                                  :description "The matter ID of the associated matter."},
                                       :query {:description "The search query from the request.",
                                               :$ref "Query"},
                                       :startTime {:format "google-datetime",
                                                   :type "string",
                                                   :description "Creation time of count operation."},
                                       :endTime {:description "End time of count operation. Available when operation is done.",
                                                 :format "google-datetime",
                                                 :type "string"}},
                          :id "CountArtifactsMetadata"},
 :AccountCount {:properties {:count {:type "string",
                                     :format "int64",
                                     :description "The number of results (messages or files) found for this account."},
                             :account {:$ref "UserInfo",
                                       :description "Account owner."}},
                :description "The results count for each account.",
                :type "object",
                :id "AccountCount"},
 :Query {:type "object",
         :properties {:hangoutsChatOptions {:$ref "HangoutsChatOptions",
                                            :description "Set Chat search-specific options. (read-only)"},
                      :orgUnitInfo {:description "Required when **SearchMethod** is **ORG_UNIT**.",
                                    :$ref "OrgUnitInfo"},
                      :timeZone {:description "The time zone name. It should be an IANA TZ name, such as \"America/Los_Angeles\". For a list of time zone names, see [Time Zone](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). For more information about how Vault uses time zones, see [the Vault help center](https://support.google.com/vault/answer/6092995#time).",
                                 :type "string"},
                      :hangoutsChatInfo {:description "Required when **SearchMethod** is **ROOM**. (read-only)",
                                         :$ref "HangoutsChatInfo"},
                      :startTime {:type "string",
                                  :description "The start time for the search query. Specify in GMT. The value is rounded to 12 AM on the specified date.",
                                  :format "google-datetime"},
                      :terms {:description "Service-specific [search operators](https://support.google.com/vault/answer/2474474) to filter search results.",
                              :type "string"},
                      :searchMethod {:type "string",
                                     :description "The search method to use.",
                                     :enum ["SEARCH_METHOD_UNSPECIFIED"
                                            "ACCOUNT"
                                            "ORG_UNIT"
                                            "TEAM_DRIVE"
                                            "ENTIRE_ORG"
                                            "ROOM"
                                            "SHARED_DRIVE"],
                                     :enumDescriptions ["A search method must be specified or else it is rejected."
                                                        "Search the data of the accounts specified in [AccountInfo](https://developers.google.com/vault/reference/rest/v1/Query#accountinfo)."
                                                        "Search the data of all accounts in the organizational unit specified in [OrgUnitInfo](https://developers.google.com/vault/reference/rest/v1/Query#orgunitinfo)."
                                                        "Search the data in the Team Drive specified in **team_drive_info**."
                                                        "Search the data of all accounts in the organization. Supported only for Gmail. When specified, you don't need to specify **AccountInfo** or **OrgUnitInfo**."
                                                        "Search messages in the Chat spaces specified in [HangoutsChatInfo](https://developers.google.com/vault/reference/rest/v1/Query#hangoutschatinfo)."
                                                        "Search the files in the shared drives specified in [SharedDriveInfo](https://developers.devsite.corp.google.com/vault/reference/rest/v1/Query#shareddriveinfo)."]},
                      :method {:description "The entity to search. This field replaces **searchMethod** to support shared drives. When **searchMethod** is **TEAM_DRIVE**, the response of this field is **SHARED_DRIVE**.",
                               :enumDescriptions ["A search method must be specified or else it is rejected."
                                                  "Search the data of the accounts specified in [AccountInfo](https://developers.google.com/vault/reference/rest/v1/Query#accountinfo)."
                                                  "Search the data of all accounts in the organizational unit specified in [OrgUnitInfo](https://developers.google.com/vault/reference/rest/v1/Query#orgunitinfo)."
                                                  "Search the data in the Team Drive specified in **team_drive_info**."
                                                  "Search the data of all accounts in the organization. Supported only for Gmail. When specified, you don't need to specify **AccountInfo** or **OrgUnitInfo**."
                                                  "Search messages in the Chat spaces specified in [HangoutsChatInfo](https://developers.google.com/vault/reference/rest/v1/Query#hangoutschatinfo)."
                                                  "Search the files in the shared drives specified in [SharedDriveInfo](https://developers.devsite.corp.google.com/vault/reference/rest/v1/Query#shareddriveinfo)."],
                               :enum ["SEARCH_METHOD_UNSPECIFIED"
                                      "ACCOUNT"
                                      "ORG_UNIT"
                                      "TEAM_DRIVE"
                                      "ENTIRE_ORG"
                                      "ROOM"
                                      "SHARED_DRIVE"],
                               :type "string"},
                      :voiceOptions {:description "Set Voice search-specific options.",
                                     :$ref "VoiceOptions"},
                      :endTime {:description "The end time for the search query. Specify in GMT. The value is rounded to 12 AM on the specified date.",
                                :format "google-datetime",
                                :type "string"},
                      :sharedDriveInfo {:$ref "SharedDriveInfo",
                                        :description "Required when **SearchMethod** is **SHARED_DRIVE**."},
                      :accountInfo {:description "Required when **SearchMethod** is **ACCOUNT**.",
                                    :$ref "AccountInfo"},
                      :corpus {:description "The Google Workspace service to search.",
                               :type "string",
                               :enum ["CORPUS_TYPE_UNSPECIFIED"
                                      "DRIVE"
                                      "MAIL"
                                      "GROUPS"
                                      "HANGOUTS_CHAT"
                                      "VOICE"],
                               :enumDescriptions ["No service specified."
                                                  "Drive, including Meet and Sites."
                                                  "For search, Gmail and classic Hangouts. For holds, Gmail only."
                                                  "Groups."
                                                  "For search, Google Chat only. For holds, Google Chat and classic Hangouts."
                                                  "Google Voice."]},
                      :teamDriveInfo {:$ref "TeamDriveInfo",
                                      :description "Required when **SearchMethod** is **TEAM_DRIVE**."},
                      :mailOptions {:$ref "MailOptions",
                                    :description "Set Gmail search-specific options."},
                      :driveOptions {:$ref "DriveOptions",
                                     :description "Set Drive search-specific options."},
                      :dataScope {:enumDescriptions ["No data source specified."
                                                     "All available data."
                                                     "Only data on hold."
                                                     "Only data not yet processed by Vault. (Gmail and Groups only)"],
                                  :type "string",
                                  :enum ["DATA_SCOPE_UNSPECIFIED"
                                         "ALL_DATA"
                                         "HELD_DATA"
                                         "UNPROCESSED_DATA"],
                                  :description "The data source to search."}},
         :id "Query",
         :description "The query definition used for search and export."},
 :CountArtifactsRequest {:id "CountArtifactsRequest",
                         :properties {:view {:enumDescriptions ["Default. Same as **TOTAL_COUNT**."
                                                                "Response includes counts of the total accounts, queried accounts, matching accounts, non-queryable accounts, and queried account errors."
                                                                "Response includes the same details as **TOTAL_COUNT**, plus additional account breakdown."],
                                             :enum ["COUNT_RESULT_VIEW_UNSPECIFIED"
                                                    "TOTAL_COUNT"
                                                    "ALL"],
                                             :type "string",
                                             :description "Sets the granularity of the count results."},
                                      :query {:$ref "Query",
                                              :description "The search query."}},
                         :description "Count artifacts request.",
                         :type "object"},
 :HeldVoiceQuery {:description "Options for Voice holds.",
                  :id "HeldVoiceQuery",
                  :type "object",
                  :properties {:coveredData {:type "array",
                                             :items {:enum ["COVERED_DATA_UNSPECIFIED"
                                                            "TEXT_MESSAGES"
                                                            "VOICEMAILS"
                                                            "CALL_LOGS"],
                                                     :type "string",
                                                     :enumDescriptions ["Covered data unspecified."
                                                                        "Voice text messages."
                                                                        "Voicemails and their transcripts."
                                                                        "Call logs."]},
                                             :description "A list of data types covered by the hold. Should be non-empty. Order does not matter and duplicates are ignored."}}},
 :ExportStats {:id "ExportStats",
               :description "Progress information for an export.",
               :properties {:exportedArtifactCount {:description "The number of messages or files already processed for export.",
                                                    :type "string",
                                                    :format "int64"},
                            :totalArtifactCount {:description "The number of messages or files to be exported.",
                                                 :type "string",
                                                 :format "int64"},
                            :sizeInBytes {:description "The size of export in bytes.",
                                          :type "string",
                                          :format "int64"}},
               :type "object"},
 :OrgUnitInfo {:properties {:orgUnitId {:type "string",
                                        :description "The name of the organizational unit to search, as provided by the [Admin SDK Directory API](https://developers.google.com/admin-sdk/directory/)."}},
               :description "The organizational unit to search",
               :type "object",
               :id "OrgUnitInfo"},
 :ReopenMatterResponse {:type "object",
                        :description "Response to a ReopenMatterRequest.",
                        :id "ReopenMatterResponse",
                        :properties {:matter {:$ref "Matter",
                                              :description "The updated matter, with state **OPEN**."}}},
 :ListHoldsResponse {:type "object",
                     :id "ListHoldsResponse",
                     :description "The holds for a matter.",
                     :properties {:holds {:description "The list of holds.",
                                          :items {:$ref "Hold"},
                                          :type "array"},
                                  :nextPageToken {:type "string",
                                                  :description "Page token to retrieve the next page of results in the list. If this is empty, then there are no more holds to list."}}},
 :DriveExportOptions {:id "DriveExportOptions",
                      :properties {:includeAccessInfo {:type "boolean",
                                                       :description "To include access level information for users with [indirect access](https://support.google.com/vault/answer/6099459#metadata) to files, set to **true**."}},
                      :description "Options for Drive exports.",
                      :type "object"},
 :ListOperationsResponse {:id "ListOperationsResponse",
                          :properties {:nextPageToken {:type "string",
                                                       :description "The standard List next-page token."},
                                       :operations {:description "A list of operations that matches the specified filter in the request.",
                                                    :items {:$ref "Operation"},
                                                    :type "array"}},
                          :type "object",
                          :description "The response message for Operations.ListOperations."},
 :AccountCountError {:id "AccountCountError",
                     :type "object",
                     :properties {:errorType {:enum ["ERROR_TYPE_UNSPECIFIED"
                                                     "WILDCARD_TOO_BROAD"
                                                     "TOO_MANY_TERMS"
                                                     "LOCATION_UNAVAILABLE"
                                                     "UNKNOWN"
                                                     "DEADLINE_EXCEEDED"],
                                              :description "Account query error.",
                                              :enumDescriptions ["Default."
                                                                 "Permanent - prefix terms expanded to too many query terms."
                                                                 "Permanent - query contains too many terms."
                                                                 "Transient - data in transit between storage replicas, temporarily unavailable."
                                                                 "Unrecognized error."
                                                                 "Deadline exceeded when querying the account."],
                                              :type "string"},
                                  :account {:$ref "UserInfo",
                                            :description "Account owner."}},
                     :description "An error that occurred when querying a specific account"},
 :CloudStorageSink {:id "CloudStorageSink",
                    :type "object",
                    :properties {:files {:description "Output only. The exported files in Cloud Storage.",
                                         :type "array",
                                         :items {:$ref "CloudStorageFile"}}},
                    :description "Export sink for Cloud Storage files."},
 :Status {:id "Status",
          :description "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
          :type "object",
          :properties {:message {:type "string",
                                 :description "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."},
                       :code {:type "integer",
                              :description "The status code, which should be an enum value of google.rpc.Code.",
                              :format "int32"},
                       :details {:description "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                                 :items {:type "object",
                                         :additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                                :type "any"}},
                                 :type "array"}}}}
