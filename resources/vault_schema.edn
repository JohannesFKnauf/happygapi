{:DriveOptions {:description "Drive search advanced options",
                :type "object",
                :properties {:versionDate {:type "string",
                                           :description "Search the versions of the Drive file\nas of the reference date. These timestamps are in GMT and\nrounded down to the given date.",
                                           :format "google-datetime"},
                             :includeTeamDrives {:description "Set to true to include Team Drive.",
                                                 :type "boolean"},
                             :includeSharedDrives {:description "Set to true to include shared drive.",
                                                   :type "boolean"}},
                :id "DriveOptions"},
 :ReopenMatterRequest {:type "object",
                       :properties {},
                       :id "ReopenMatterRequest",
                       :description "Reopen a matter by ID."},
 :CorpusQuery {:description "Corpus specific queries.",
               :type "object",
               :properties {:mailQuery {:$ref "HeldMailQuery",
                                        :description "Details pertaining to mail holds. If set, corpus must be mail."},
                            :groupsQuery {:$ref "HeldGroupsQuery",
                                          :description "Details pertaining to Groups holds. If set, corpus must be Groups."},
                            :hangoutsChatQuery {:$ref "HeldHangoutsChatQuery",
                                                :description "Details pertaining to Hangouts Chat holds. If set, corpus must be\nHangouts Chat."},
                            :driveQuery {:description "Details pertaining to Drive holds. If set, corpus must be Drive.",
                                         :$ref "HeldDriveQuery"}},
               :id "CorpusQuery"},
 :CloudStorageFile {:type "object",
                    :properties {:objectName {:type "string",
                                              :description "The cloud storage object name of this export file.\nCan be used in cloud storage JSON/XML API."},
                                 :bucketName {:description "The cloud storage bucket name of this export file.\nCan be used in cloud storage JSON/XML API.",
                                              :type "string"},
                                 :size {:description "The size of the export file.",
                                        :format "int64",
                                        :type "string"},
                                 :md5Hash {:description "The md5 hash of the file.",
                                           :type "string"}},
                    :id "CloudStorageFile",
                    :description "An export file on cloud storage"},
 :UndeleteMatterRequest {:description "Undelete a matter by ID.",
                         :type "object",
                         :properties {},
                         :id "UndeleteMatterRequest"},
 :AccountInfo {:type "object",
               :properties {:emails {:description "A set of accounts to search.",
                                     :type "array",
                                     :items {:type "string"}}},
               :id "AccountInfo",
               :description "Accounts to search"},
 :HeldAccount {:id "HeldAccount",
               :description "An account being held in a particular hold. This structure is immutable.\nThis can be either a single user or a google group, depending on the corpus.",
               :type "object",
               :properties {:lastName {:description "Output only. The last name of the account holder.",
                                       :type "string"},
                            :email {:description "The primary email address of the account. If used as an input, this takes\nprecedence over account ID.",
                                    :type "string"},
                            :accountId {:description "The account's ID as provided by the\n<a href=\"https://developers.google.com/admin-sdk/\">Admin SDK</a>.",
                                        :type "string"},
                            :firstName {:description "Output only. The first name of the account holder.",
                                        :type "string"},
                            :holdTime {:description "Output only. When the account was put on hold.",
                                       :format "google-datetime",
                                       :type "string"}}},
 :RemoveMatterPermissionsRequest {:id "RemoveMatterPermissionsRequest",
                                  :description "Remove an account as a matter collaborator.",
                                  :type "object",
                                  :properties {:accountId {:description "The account ID.",
                                                           :type "string"}}},
 :HangoutsChatInfo {:description "Accounts to search",
                    :type "object",
                    :properties {:roomId {:type "array",
                                          :items {:type "string"},
                                          :description "A set of rooms to search."}},
                    :id "HangoutsChatInfo"},
 :HeldHangoutsChatQuery {:description "Query options for hangouts chat holds.",
                         :type "object",
                         :properties {:includeRooms {:type "boolean",
                                                     :description "If true, include rooms the user has participated in."}},
                         :id "HeldHangoutsChatQuery"},
 :CloseMatterRequest {:id "CloseMatterRequest",
                      :description "Close a matter by ID.",
                      :type "object",
                      :properties {}},
 :ListMattersResponse {:description "Provides the list of matters.",
                       :type "object",
                       :properties {:nextPageToken {:description "Page token to retrieve the next page of results in the list.",
                                                    :type "string"},
                                    :matters {:description "List of matters.",
                                              :type "array",
                                              :items {:$ref "Matter"}}},
                       :id "ListMattersResponse"},
 :GroupsExportOptions {:description "The options for groups export.",
                       :type "object",
                       :properties {:exportFormat {:enum ["EXPORT_FORMAT_UNSPECIFIED"
                                                          "MBOX"
                                                          "PST"],
                                                   :description "The export format for groups export.",
                                                   :type "string",
                                                   :enumDescriptions ["No export format specified."
                                                                      "MBOX as export format."
                                                                      "PST as export format"]}},
                       :id "GroupsExportOptions"},
 :HeldGroupsQuery {:description "Query options for group holds.",
                   :type "object",
                   :properties {:endTime {:description "The end time range for the search query. These timestamps are in GMT and\nrounded down to the start of the given date.",
                                          :format "google-datetime",
                                          :type "string"},
                                :startTime {:description "The start time range for the search query. These timestamps are in GMT and\nrounded down to the start of the given date.",
                                            :format "google-datetime",
                                            :type "string"},
                                :terms {:description "The search terms for the hold.",
                                        :type "string"}},
                   :id "HeldGroupsQuery"},
 :AddMatterPermissionsRequest {:description "Add an account with the permission specified. The role cannot be owner.\nIf an account already has a role in the matter, it will be\noverwritten.",
                               :type "object",
                               :properties {:sendEmails {:description "True to send notification email to the added account.\nFalse to not send notification email.",
                                                         :type "boolean"},
                                            :matterPermission {:description "The MatterPermission to add.",
                                                               :$ref "MatterPermission"},
                                            :ccMe {:type "boolean",
                                                   :description "Only relevant if send_emails is true.\nTrue to CC requestor in the email message.\nFalse to not CC requestor."}},
                               :id "AddMatterPermissionsRequest"},
 :MailOptions {:id "MailOptions",
               :description "Mail search advanced options",
               :type "object",
               :properties {:excludeDrafts {:description "Set to true to exclude drafts.",
                                            :type "boolean"}}},
 :HangoutsChatExportOptions {:id "HangoutsChatExportOptions",
                             :description "The options for hangouts chat export.",
                             :type "object",
                             :properties {:exportFormat {:enum ["EXPORT_FORMAT_UNSPECIFIED"
                                                                "MBOX"
                                                                "PST"],
                                                         :description "The export format for hangouts chat export.",
                                                         :type "string",
                                                         :enumDescriptions ["No export format specified."
                                                                            "MBOX as export format."
                                                                            "PST as export format"]}}},
 :HeldMailQuery {:description "Query options for mail holds.",
                 :type "object",
                 :properties {:terms {:description "The search terms for the hold.",
                                      :type "string"},
                              :endTime {:description "The end time range for the search query. These timestamps are in GMT and\nrounded down to the start of the given date.",
                                        :format "google-datetime",
                                        :type "string"},
                              :startTime {:description "The start time range for the search query. These timestamps are in GMT and\nrounded down to the start of the given date.",
                                          :format "google-datetime",
                                          :type "string"}},
                 :id "HeldMailQuery"},
 :AddHeldAccountResult {:description "A status detailing the status of each account creation, and the\nHeldAccount, if successful.",
                        :type "object",
                        :properties {:account {:$ref "HeldAccount",
                                               :description "If present, this account was successfully created."},
                                     :status {:description "This represents the success status. If failed, check message.",
                                              :$ref "Status"}},
                        :id "AddHeldAccountResult"},
 :TeamDriveInfo {:description "Team Drives to search",
                 :type "object",
                 :properties {:teamDriveIds {:type "array",
                                             :items {:type "string"},
                                             :description "List of Team Drive ids, as provided by <a\nhref=\"https://developers.google.com/drive\">Drive API</a>."}},
                 :id "TeamDriveInfo"},
 :Matter {:description "Represents a matter.",
          :type "object",
          :properties {:matterId {:description "The matter ID which is generated by the server.\nShould be blank when creating a new matter.",
                                  :type "string"},
                       :state {:type "string",
                               :enumDescriptions ["The matter has no specified state."
                                                  "This matter is open."
                                                  "This matter is closed."
                                                  "This matter is deleted."],
                               :enum ["STATE_UNSPECIFIED"
                                      "OPEN"
                                      "CLOSED"
                                      "DELETED"],
                               :description "The state of the matter."},
                       :name {:description "The name of the matter.",
                              :type "string"},
                       :matterPermissions {:type "array",
                                           :items {:$ref "MatterPermission"},
                                           :description "List of users and access to the matter. Currently there is no programmer\ndefined limit on the number of permissions a matter can have."},
                       :description {:description "The description of the matter.",
                                     :type "string"}},
          :id "Matter"},
 :HeldDriveQuery {:description "Query options for Drive holds.",
                  :type "object",
                  :properties {:includeSharedDriveFiles {:type "boolean",
                                                         :description "If true, include files in shared drives in the hold."},
                               :includeTeamDriveFiles {:description "If true, include files in Team Drives in the hold.",
                                                       :type "boolean"}},
                  :id "HeldDriveQuery"},
 :ListHeldAccountsResponse {:type "object",
                            :properties {:accounts {:description "The held accounts on a hold.",
                                                    :type "array",
                                                    :items {:$ref "HeldAccount"}}},
                            :id "ListHeldAccountsResponse",
                            :description "Returns a list of held accounts for a hold."},
 :Export {:description "An export",
          :type "object",
          :properties {:name {:description "The export name.",
                              :type "string"},
                       :createTime {:description "Output only. The time when the export was created.",
                                    :format "google-datetime",
                                    :type "string"},
                       :requester {:$ref "UserInfo",
                                   :description "Output only. The requester of the export."},
                       :status {:enumDescriptions ["The status is unspecified."
                                                   "The export completed."
                                                   "The export failed."
                                                   "The export is still being executed."],
                                :enum ["EXPORT_STATUS_UNSPECIFIED"
                                       "COMPLETED"
                                       "FAILED"
                                       "IN_PROGRESS"],
                                :description "Output only. The export status.",
                                :type "string"},
                       :id {:description "Output only. The generated export ID.",
                            :type "string"},
                       :matterId {:description "Output only. The matter ID.",
                                  :type "string"},
                       :cloudStorageSink {:$ref "CloudStorageSink",
                                          :description "Output only. Export sink for cloud storage files."},
                       :query {:$ref "Query",
                               :description "The search query being exported."},
                       :stats {:description "Output only. Export statistics.",
                               :$ref "ExportStats"},
                       :exportOptions {:$ref "ExportOptions",
                                       :description "Advanced options of the export."}},
          :id "Export"},
 :RemoveHeldAccountsResponse {:description "Response for batch delete held accounts.",
                              :type "object",
                              :properties {:statuses {:description "A list of statuses for deleted accounts. Results have the\nsame order as the request.",
                                                      :type "array",
                                                      :items {:$ref "Status"}}},
                              :id "RemoveHeldAccountsResponse"},
 :AddHeldAccountsResponse {:description "Response for batch create held accounts.",
                           :type "object",
                           :properties {:responses {:description "The list of responses, in the same order as the batch request.",
                                                    :type "array",
                                                    :items {:$ref "AddHeldAccountResult"}}},
                           :id "AddHeldAccountsResponse"},
 :UserInfo {:description "User's information.",
            :type "object",
            :properties {:email {:description "The email address of the user.",
                                 :type "string"},
                         :displayName {:description "The displayed name of the user.",
                                       :type "string"}},
            :id "UserInfo"},
 :Hold {:description "Represents a hold within Vault. A hold restricts purging of\nartifacts based on the combination of the query and accounts restrictions.\nA hold can be configured to either apply to an explicitly configured set\nof accounts, or can be applied to all members of an organizational unit.",
        :type "object",
        :properties {:accounts {:type "array",
                                :items {:$ref "HeldAccount"},
                                :description "If set, the hold applies to the enumerated accounts and org_unit must be\nempty."},
                     :query {:$ref "CorpusQuery",
                             :description "The corpus-specific query. If set, the corpusQuery must match corpus\ntype."},
                     :orgUnit {:$ref "HeldOrgUnit",
                               :description "If set, the hold applies to all members of the organizational unit and\naccounts must be empty. This property is mutable. For groups holds,\nset the accounts field."},
                     :corpus {:enumDescriptions ["No corpus specified."
                                                 "Drive."
                                                 "Mail."
                                                 "Groups."
                                                 "Hangouts Chat."],
                              :enum ["CORPUS_TYPE_UNSPECIFIED"
                                     "DRIVE"
                                     "MAIL"
                                     "GROUPS"
                                     "HANGOUTS_CHAT"],
                              :description "The corpus to be searched.",
                              :type "string"},
                     :updateTime {:type "string",
                                  :description "The last time this hold was modified.",
                                  :format "google-datetime"},
                     :name {:description "The name of the hold.",
                            :type "string"},
                     :holdId {:description "The unique immutable ID of the hold. Assigned during creation.",
                              :type "string"}},
        :id "Hold"},
 :MailExportOptions {:description "The options for mail export.",
                     :type "object",
                     :properties {:showConfidentialModeContent {:description "Set to true to export confidential mode content.",
                                                                :type "boolean"},
                                  :exportFormat {:description "The export file format.",
                                                 :type "string",
                                                 :enumDescriptions ["No export format specified."
                                                                    "MBOX as export format."
                                                                    "PST as export format"],
                                                 :enum ["EXPORT_FORMAT_UNSPECIFIED"
                                                        "MBOX"
                                                        "PST"]}},
                     :id "MailExportOptions"},
 :Empty {:type "object",
         :properties {},
         :id "Empty",
         :description "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`."},
 :HeldOrgUnit {:type "object",
               :properties {:holdTime {:type "string",
                                       :description "When the org unit was put on hold. This property is immutable.",
                                       :format "google-datetime"},
                            :orgUnitId {:description "The org unit's immutable ID as provided by the Admin SDK.",
                                        :type "string"}},
               :id "HeldOrgUnit",
               :description "A organizational unit being held in a particular hold.\nThis structure is immutable."},
 :RemoveHeldAccountsRequest {:id "RemoveHeldAccountsRequest",
                             :description "Remove a list of accounts from a hold.",
                             :type "object",
                             :properties {:accountIds {:description "Account ids to identify HeldAccounts to remove.",
                                                       :type "array",
                                                       :items {:type "string"}}}},
 :MatterPermission {:description "Currently each matter only has one owner, and all others are collaborators.\nWhen an account is purged, its corresponding MatterPermission resources\ncease to exist.",
                    :type "object",
                    :properties {:role {:type "string",
                                        :enumDescriptions ["No role assigned."
                                                           "A collaborator to the matter."
                                                           "The owner of the matter."],
                                        :enum ["ROLE_UNSPECIFIED"
                                               "COLLABORATOR"
                                               "OWNER"],
                                        :description "The user's role in this matter."},
                                 :accountId {:description "The account id, as provided by <a\nhref=\"https://developers.google.com/admin-sdk/\">Admin SDK</a>.",
                                             :type "string"}},
                    :id "MatterPermission"},
 :CloseMatterResponse {:id "CloseMatterResponse",
                       :description "Response to a CloseMatterRequest.",
                       :type "object",
                       :properties {:matter {:description "The updated matter, with state CLOSED.",
                                             :$ref "Matter"}}},
 :AddHeldAccountsRequest {:type "object",
                          :properties {:emails {:type "array",
                                                :items {:type "string"},
                                                :description "Emails to identify which accounts to add. Only emails or only account_ids\nshould be specified, but not both."},
                                       :accountIds {:description "Account ids to identify which accounts to add. Only account_ids or only\nemails should be specified, but not both.",
                                                    :type "array",
                                                    :items {:type "string"}}},
                          :id "AddHeldAccountsRequest",
                          :description "Add a list of accounts to a hold."},
 :SavedQuery {:type "object",
              :properties {:query {:$ref "Query",
                                   :description "The underlying Query object which contains all the information of the saved\nquery."},
                           :matterId {:description "Output only. The matter id of the associated matter.\nThe server does not look at this field during create and always uses matter\nid in the URL.",
                                      :type "string"},
                           :createTime {:type "string",
                                        :description "Output only. The server generated timestamp at which saved query was\ncreated.",
                                        :format "google-datetime"},
                           :savedQueryId {:description "A unique identifier for the saved query.",
                                          :type "string"},
                           :displayName {:description "Name of the saved query.",
                                         :type "string"}},
              :id "SavedQuery",
              :description "Definition of the saved query."},
 :ListExportsResponse {:description "The holds for a matter.",
                       :type "object",
                       :properties {:nextPageToken {:description "Page token to retrieve the next page of results in the list.",
                                                    :type "string"},
                                    :exports {:description "The list of exports.",
                                              :type "array",
                                              :items {:$ref "Export"}}},
                       :id "ListExportsResponse"},
 :ExportOptions {:type "object",
                 :properties {:groupsOptions {:$ref "GroupsExportOptions",
                                              :description "Option available for groups export."},
                              :driveOptions {:$ref "DriveExportOptions",
                                             :description "Option available for Drive export."},
                              :mailOptions {:$ref "MailExportOptions",
                                            :description "Option available for mail export."},
                              :region {:description "The requested export location.",
                                       :type "string",
                                       :enumDescriptions ["The region is unspecified. Will be treated the same as ANY."
                                                          "Any region."
                                                          "US region."
                                                          "Europe region."],
                                       :enum ["EXPORT_REGION_UNSPECIFIED"
                                              "ANY"
                                              "US"
                                              "EUROPE"]},
                              :hangoutsChatOptions {:$ref "HangoutsChatExportOptions",
                                                    :description "Option available for hangouts chat export."}},
                 :id "ExportOptions",
                 :description "Export advanced options"},
 :SharedDriveInfo {:description "Shared drives to search",
                   :type "object",
                   :properties {:sharedDriveIds {:description "List of Shared drive ids, as provided by <a\nhref=\"https://developers.google.com/drive\">Drive API</a>.",
                                                 :type "array",
                                                 :items {:type "string"}}},
                   :id "SharedDriveInfo"},
 :ListSavedQueriesResponse {:type "object",
                            :properties {:savedQueries {:description "List of output saved queries.",
                                                        :type "array",
                                                        :items {:$ref "SavedQuery"}},
                                         :nextPageToken {:type "string",
                                                         :description "Page token to retrieve the next page of results in the list.\nIf this is empty, then there are no more saved queries to list."}},
                            :id "ListSavedQueriesResponse",
                            :description "Definition of the response for method ListSaveQuery."},
 :HangoutsChatOptions {:id "HangoutsChatOptions",
                       :description "Hangouts chat search advanced options",
                       :type "object",
                       :properties {:includeRooms {:description "Set to true to include rooms.",
                                                   :type "boolean"}}},
 :Query {:id "Query",
         :description "A query definition relevant for search & export.",
         :type "object",
         :properties {:hangoutsChatOptions {:$ref "HangoutsChatOptions",
                                            :description "For hangouts chat search, specify more options in this field. (read-only)"},
                      :orgUnitInfo {:description "When 'ORG_UNIT' is chosen as as search method, org_unit_info needs\nto be specified.",
                                    :$ref "OrgUnitInfo"},
                      :timeZone {:description "The time zone name.\nIt should be an IANA TZ name, such as \"America/Los_Angeles\".\nFor more information, see\n<a href=\"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\">Time\nZone</a>.",
                                 :type "string"},
                      :hangoutsChatInfo {:$ref "HangoutsChatInfo",
                                         :description "When 'ROOM' is chosen as search method, hangout_chats_info needs to be\nspecified. (read-only)"},
                      :startTime {:description "The start time range for the search query. These timestamps are in GMT and\nrounded down to the start of the given date.",
                                  :format "google-datetime",
                                  :type "string"},
                      :terms {:description "The corpus-specific\n<a href=\"https://support.google.com/vault/answer/2474474\">search\noperators</a> used to generate search results.",
                              :type "string"},
                      :searchMethod {:enum ["SEARCH_METHOD_UNSPECIFIED"
                                            "ACCOUNT"
                                            "ORG_UNIT"
                                            "TEAM_DRIVE"
                                            "ENTIRE_ORG"
                                            "ROOM"
                                            "SHARED_DRIVE"],
                                     :description "The search method to use.",
                                     :type "string",
                                     :enumDescriptions ["A search method must be specified. If a request does not specify a\nsearch method, it will be rejected."
                                                        "Will search all accounts provided in account_info."
                                                        "Will search all accounts in the OU specified in org_unit_info."
                                                        "Will search for all accounts in the Team Drive specified in\nteam_drive_info."
                                                        "Will search for all accounts in the organization.\nNo need to set account_info or org_unit_info."
                                                        "Will search in the Room specified in\nhangout_chats_info. (read-only)"
                                                        "Will search for all accounts in the shared drive specified in\nshared_drive_info."]},
                      :method {:enumDescriptions ["A search method must be specified. If a request does not specify a\nsearch method, it will be rejected."
                                                  "Will search all accounts provided in account_info."
                                                  "Will search all accounts in the OU specified in org_unit_info."
                                                  "Will search for all accounts in the Team Drive specified in\nteam_drive_info."
                                                  "Will search for all accounts in the organization.\nNo need to set account_info or org_unit_info."
                                                  "Will search in the Room specified in\nhangout_chats_info. (read-only)"
                                                  "Will search for all accounts in the shared drive specified in\nshared_drive_info."],
                               :enum ["SEARCH_METHOD_UNSPECIFIED"
                                      "ACCOUNT"
                                      "ORG_UNIT"
                                      "TEAM_DRIVE"
                                      "ENTIRE_ORG"
                                      "ROOM"
                                      "SHARED_DRIVE"],
                               :description "The search method to use. This field is similar to the search_method field\nbut is introduced to support shared drives. It supports all\nsearch method types. In case the search_method is TEAM_DRIVE the response\nof this field will be SHARED_DRIVE only.",
                               :type "string"},
                      :endTime {:description "The end time range for the search query. These timestamps are in GMT and\nrounded down to the start of the given date.",
                                :format "google-datetime",
                                :type "string"},
                      :sharedDriveInfo {:$ref "SharedDriveInfo",
                                        :description "When 'SHARED_DRIVE' is chosen as search method, shared_drive_info needs\nto be specified."},
                      :accountInfo {:$ref "AccountInfo",
                                    :description "When 'ACCOUNT' is chosen as search method,\naccount_info needs to be specified."},
                      :corpus {:description "The corpus to search.",
                               :type "string",
                               :enumDescriptions ["No corpus specified."
                                                  "Drive."
                                                  "Mail."
                                                  "Groups."
                                                  "Hangouts Chat."],
                               :enum ["CORPUS_TYPE_UNSPECIFIED"
                                      "DRIVE"
                                      "MAIL"
                                      "GROUPS"
                                      "HANGOUTS_CHAT"]},
                      :teamDriveInfo {:description "When 'TEAM_DRIVE' is chosen as search method, team_drive_info needs to be\nspecified.",
                                      :$ref "TeamDriveInfo"},
                      :mailOptions {:description "For mail search, specify more options in this field.",
                                    :$ref "MailOptions"},
                      :driveOptions {:$ref "DriveOptions",
                                     :description "For Drive search, specify more options in this field."},
                      :dataScope {:description "The data source to search from.",
                                  :type "string",
                                  :enumDescriptions ["No data scope specified."
                                                     "All available data."
                                                     "Data on hold."
                                                     "Data not processed."],
                                  :enum ["DATA_SCOPE_UNSPECIFIED"
                                         "ALL_DATA"
                                         "HELD_DATA"
                                         "UNPROCESSED_DATA"]}}},
 :ExportStats {:description "Stats of an export.",
               :type "object",
               :properties {:totalArtifactCount {:description "The number of documents to be exported.",
                                                 :format "int64",
                                                 :type "string"},
                            :sizeInBytes {:type "string",
                                          :description "The size of export in bytes.",
                                          :format "int64"},
                            :exportedArtifactCount {:type "string",
                                                    :description "The number of documents already processed by the export.",
                                                    :format "int64"}},
               :id "ExportStats"},
 :OrgUnitInfo {:description "Org Unit to search",
               :type "object",
               :properties {:orgUnitId {:description "Org unit to search, as provided by the\n<a href=\"https://developers.google.com/admin-sdk/directory/\">Admin SDK\nDirectory API</a>.",
                                        :type "string"}},
               :id "OrgUnitInfo"},
 :ReopenMatterResponse {:id "ReopenMatterResponse",
                        :description "Response to a ReopenMatterRequest.",
                        :type "object",
                        :properties {:matter {:description "The updated matter, with state OPEN.",
                                              :$ref "Matter"}}},
 :ListHoldsResponse {:id "ListHoldsResponse",
                     :description "The holds for a matter.",
                     :type "object",
                     :properties {:holds {:description "The list of holds.",
                                          :type "array",
                                          :items {:$ref "Hold"}},
                                  :nextPageToken {:description "Page token to retrieve the next page of results in the list.\nIf this is empty, then there are no more holds to list.",
                                                  :type "string"}}},
 :DriveExportOptions {:type "object",
                      :properties {:includeAccessInfo {:description "Set to true to include access level information for users\nwith <a\nhref=\"https://support.google.com/vault/answer/6099459#metadata\">indirect\naccess</a> to files.",
                                                       :type "boolean"}},
                      :id "DriveExportOptions",
                      :description "The options for Drive export."},
 :CloudStorageSink {:type "object",
                    :properties {:files {:type "array",
                                         :items {:$ref "CloudStorageFile"},
                                         :description "Output only. The exported files on cloud storage."}},
                    :id "CloudStorageSink",
                    :description "Export sink for cloud storage files."},
 :Status {:description "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors).",
          :type "object",
          :properties {:details {:type "array",
                                 :items {:type "object",
                                         :additionalProperties {:type "any",
                                                                :description "Properties of the object. Contains field @type with type URL."}},
                                 :description "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use."},
                       :code {:description "The status code, which should be an enum value of google.rpc.Code.",
                              :format "int32",
                              :type "integer"},
                       :message {:description "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
                                 :type "string"}},
          :id "Status"}}
