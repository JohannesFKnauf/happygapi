{:DriveOptions {:properties {:versionDate {:format "google-datetime",
                                           :type "string",
                                           :description "Search the versions of the Drive file as of the reference date. These timestamps are in GMT and rounded down to the given date."},
                             :includeSharedDrives {:type "boolean",
                                                   :description "Set to true to include shared drive."},
                             :includeTeamDrives {:description "Set to true to include Team Drive.",
                                                 :type "boolean"}},
                :type "object",
                :id "DriveOptions",
                :description "Drive search advanced options"},
 :ReopenMatterRequest {:properties {},
                       :description "Reopen a matter by ID.",
                       :type "object",
                       :id "ReopenMatterRequest"},
 :CorpusQuery {:description "Corpus specific queries.",
               :id "CorpusQuery",
               :type "object",
               :properties {:groupsQuery {:description "Details pertaining to Groups holds. If set, corpus must be Groups.",
                                          :$ref "HeldGroupsQuery"},
                            :mailQuery {:$ref "HeldMailQuery",
                                        :description "Details pertaining to mail holds. If set, corpus must be mail."},
                            :hangoutsChatQuery {:description "Details pertaining to Hangouts Chat holds. If set, corpus must be Hangouts Chat.",
                                                :$ref "HeldHangoutsChatQuery"},
                            :driveQuery {:$ref "HeldDriveQuery",
                                         :description "Details pertaining to Drive holds. If set, corpus must be Drive."}}},
 :CloudStorageFile {:properties {:objectName {:type "string",
                                              :description "The cloud storage object name of this export file. Can be used in cloud storage JSON/XML API."},
                                 :size {:description "The size of the export file.",
                                        :type "string",
                                        :format "int64"},
                                 :bucketName {:type "string",
                                              :description "The cloud storage bucket name of this export file. Can be used in cloud storage JSON/XML API, but not to list the bucket contents. Instead, you can get individual export files by object name."},
                                 :md5Hash {:description "The md5 hash of the file.",
                                           :type "string"}},
                    :id "CloudStorageFile",
                    :type "object",
                    :description "An export file on cloud storage"},
 :UndeleteMatterRequest {:id "UndeleteMatterRequest",
                         :type "object",
                         :description "Undelete a matter by ID.",
                         :properties {}},
 :AccountInfo {:description "Accounts to search",
               :properties {:emails {:description "A set of accounts to search.",
                                     :items {:type "string"},
                                     :type "array"}},
               :type "object",
               :id "AccountInfo"},
 :HeldAccount {:type "object",
               :properties {:holdTime {:type "string",
                                       :format "google-datetime",
                                       :description "Output only. When the account was put on hold."},
                            :lastName {:description "Output only. The last name of the account holder.",
                                       :type "string"},
                            :firstName {:description "Output only. The first name of the account holder.",
                                        :type "string"},
                            :accountId {:type "string",
                                        :description "The account's ID as provided by the Admin SDK."},
                            :email {:type "string",
                                    :description "The primary email address of the account. If used as an input, this takes precedence over account ID."}},
               :description "An account being held in a particular hold. This structure is immutable. This can be either a single user or a google group, depending on the corpus.",
               :id "HeldAccount"},
 :RemoveMatterPermissionsRequest {:id "RemoveMatterPermissionsRequest",
                                  :description "Remove an account as a matter collaborator.",
                                  :properties {:accountId {:type "string",
                                                           :description "The account ID."}},
                                  :type "object"},
 :HangoutsChatInfo {:properties {:roomId {:items {:type "string"},
                                          :description "A set of rooms to search.",
                                          :type "array"}},
                    :id "HangoutsChatInfo",
                    :description "Accounts to search",
                    :type "object"},
 :HeldHangoutsChatQuery {:description "Query options for hangouts chat holds.",
                         :id "HeldHangoutsChatQuery",
                         :properties {:includeRooms {:description "If true, include rooms the user has participated in.",
                                                     :type "boolean"}},
                         :type "object"},
 :CloseMatterRequest {:properties {},
                      :type "object",
                      :id "CloseMatterRequest",
                      :description "Close a matter by ID."},
 :ListMattersResponse {:description "Provides the list of matters.",
                       :id "ListMattersResponse",
                       :properties {:matters {:description "List of matters.",
                                              :type "array",
                                              :items {:$ref "Matter"}},
                                    :nextPageToken {:description "Page token to retrieve the next page of results in the list.",
                                                    :type "string"}},
                       :type "object"},
 :Operation {:type "object",
             :description "This resource represents a long-running operation that is the result of a network API call.",
             :properties {:done {:description "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                                 :type "boolean"},
                          :response {:description "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                                     :type "object",
                                     :additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                            :type "any"}},
                          :metadata {:additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                            :type "any"},
                                     :type "object",
                                     :description "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."},
                          :error {:description "The error result of the operation in case of failure or cancellation.",
                                  :$ref "Status"},
                          :name {:description "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                                 :type "string"}},
             :id "Operation"},
 :GroupsExportOptions {:type "object",
                       :description "The options for groups export.",
                       :id "GroupsExportOptions",
                       :properties {:exportFormat {:type "string",
                                                   :enumDescriptions ["No export format specified."
                                                                      "MBOX as export format."
                                                                      "PST as export format"],
                                                   :description "The export format for groups export.",
                                                   :enum ["EXPORT_FORMAT_UNSPECIFIED"
                                                          "MBOX"
                                                          "PST"]}}},
 :HeldGroupsQuery {:id "HeldGroupsQuery",
                   :properties {:startTime {:description "The start time range for the search query. These timestamps are in GMT and rounded down to the start of the given date.",
                                            :type "string",
                                            :format "google-datetime"},
                                :endTime {:description "The end time range for the search query. These timestamps are in GMT and rounded down to the start of the given date.",
                                          :type "string",
                                          :format "google-datetime"},
                                :terms {:description "The search terms for the hold.",
                                        :type "string"}},
                   :type "object",
                   :description "Query options for group holds."},
 :AddMatterPermissionsRequest {:id "AddMatterPermissionsRequest",
                               :properties {:matterPermission {:description "The MatterPermission to add.",
                                                               :$ref "MatterPermission"},
                                            :sendEmails {:description "True to send notification email to the added account. False to not send notification email.",
                                                         :type "boolean"},
                                            :ccMe {:type "boolean",
                                                   :description "Only relevant if send_emails is true. True to CC requestor in the email message. False to not CC requestor."}},
                               :description "Add an account with the permission specified. The role cannot be owner. If an account already has a role in the matter, it will be overwritten.",
                               :type "object"},
 :MailOptions {:id "MailOptions",
               :description "Mail search advanced options",
               :type "object",
               :properties {:excludeDrafts {:description "Set to true to exclude drafts.",
                                            :type "boolean"}}},
 :HangoutsChatExportOptions {:id "HangoutsChatExportOptions",
                             :properties {:exportFormat {:type "string",
                                                         :enum ["EXPORT_FORMAT_UNSPECIFIED"
                                                                "MBOX"
                                                                "PST"],
                                                         :description "The export format for hangouts chat export.",
                                                         :enumDescriptions ["No export format specified."
                                                                            "MBOX as export format."
                                                                            "PST as export format"]}},
                             :type "object",
                             :description "The options for hangouts chat export."},
 :HeldMailQuery {:properties {:startTime {:type "string",
                                          :description "The start time range for the search query. These timestamps are in GMT and rounded down to the start of the given date.",
                                          :format "google-datetime"},
                              :terms {:type "string",
                                      :description "The search terms for the hold."},
                              :endTime {:description "The end time range for the search query. These timestamps are in GMT and rounded down to the start of the given date.",
                                        :format "google-datetime",
                                        :type "string"}},
                 :id "HeldMailQuery",
                 :type "object",
                 :description "Query options for mail holds."},
 :AddHeldAccountResult {:id "AddHeldAccountResult",
                        :description "A status detailing the status of each account creation, and the HeldAccount, if successful.",
                        :type "object",
                        :properties {:account {:$ref "HeldAccount",
                                               :description "If present, this account was successfully created."},
                                     :status {:$ref "Status",
                                              :description "This represents the success status. If failed, check message."}}},
 :CancelOperationRequest {:id "CancelOperationRequest",
                          :properties {},
                          :type "object",
                          :description "The request message for Operations.CancelOperation."},
 :TeamDriveInfo {:id "TeamDriveInfo",
                 :type "object",
                 :properties {:teamDriveIds {:type "array",
                                             :description "List of Team Drive IDs, as provided by Drive API.",
                                             :items {:type "string"}}},
                 :description "Team Drives to search"},
 :MailCountResult {:type "object",
                   :description "Mail specific count metrics.",
                   :properties {:queriedAccountsCount {:type "string",
                                                       :format "int64",
                                                       :description "Total number of accounts involved in this count operation."},
                                :nonQueryableAccounts {:description "When data scope is HELD_DATA in the request Query, these accounts in the request are not queried because they are not on hold. For other data scope, this field is not set.",
                                                       :type "array",
                                                       :items {:type "string"}},
                                :matchingAccountsCount {:type "string",
                                                        :format "int64",
                                                        :description "Total number of accounts that can be queried and have more than zero messages."},
                                :accountCounts {:items {:$ref "AccountCount"},
                                                :type "array",
                                                :description "Subtotal count per matching account that have more than zero messages."},
                                :accountCountErrors {:description "Error occurred when querying these accounts.",
                                                     :type "array",
                                                     :items {:$ref "AccountCountError"}}},
                   :id "MailCountResult"},
 :Matter {:description "Represents a matter.",
          :properties {:description {:type "string",
                                     :description "The description of the matter."},
                       :matterPermissions {:description "List of users and access to the matter. Currently there is no programmer defined limit on the number of permissions a matter can have.",
                                           :items {:$ref "MatterPermission"},
                                           :type "array"},
                       :state {:enumDescriptions ["The matter has no specified state."
                                                  "This matter is open."
                                                  "This matter is closed."
                                                  "This matter is deleted."],
                               :type "string",
                               :description "The state of the matter.",
                               :enum ["STATE_UNSPECIFIED"
                                      "OPEN"
                                      "CLOSED"
                                      "DELETED"]},
                       :name {:description "The name of the matter.",
                              :type "string"},
                       :matterId {:description "The matter ID which is generated by the server. Should be blank when creating a new matter.",
                                  :type "string"}},
          :id "Matter",
          :type "object"},
 :HeldDriveQuery {:properties {:includeTeamDriveFiles {:description "If true, include files in Team Drives in the hold.",
                                                       :type "boolean"},
                               :includeSharedDriveFiles {:type "boolean",
                                                         :description "If true, include files in shared drives in the hold."}},
                  :id "HeldDriveQuery",
                  :description "Query options for Drive holds.",
                  :type "object"},
 :ListHeldAccountsResponse {:properties {:accounts {:items {:$ref "HeldAccount"},
                                                    :type "array",
                                                    :description "The held accounts on a hold."}},
                            :description "Returns a list of held accounts for a hold.",
                            :type "object",
                            :id "ListHeldAccountsResponse"},
 :Export {:description "An export",
          :type "object",
          :properties {:name {:type "string",
                              :description "The export name."},
                       :createTime {:description "Output only. The time when the export was created.",
                                    :format "google-datetime",
                                    :type "string"},
                       :requester {:description "Output only. The requester of the export.",
                                   :$ref "UserInfo"},
                       :status {:type "string",
                                :enumDescriptions ["The status is unspecified."
                                                   "The export completed."
                                                   "The export failed."
                                                   "The export is still being executed."],
                                :enum ["EXPORT_STATUS_UNSPECIFIED"
                                       "COMPLETED"
                                       "FAILED"
                                       "IN_PROGRESS"],
                                :description "Output only. The export status."},
                       :id {:type "string",
                            :description "Output only. The generated export ID."},
                       :matterId {:description "Output only. The matter ID.",
                                  :type "string"},
                       :cloudStorageSink {:$ref "CloudStorageSink",
                                          :description "Output only. Export sink for cloud storage files."},
                       :query {:description "The search query being exported.",
                               :$ref "Query"},
                       :stats {:description "Output only. Export statistics.",
                               :$ref "ExportStats"},
                       :exportOptions {:$ref "ExportOptions",
                                       :description "Advanced options of the export."}},
          :id "Export"},
 :RemoveHeldAccountsResponse {:description "Response for batch delete held accounts.",
                              :id "RemoveHeldAccountsResponse",
                              :type "object",
                              :properties {:statuses {:type "array",
                                                      :description "A list of statuses for deleted accounts. Results have the same order as the request.",
                                                      :items {:$ref "Status"}}}},
 :AddHeldAccountsResponse {:id "AddHeldAccountsResponse",
                           :description "Response for batch create held accounts.",
                           :properties {:responses {:items {:$ref "AddHeldAccountResult"},
                                                    :type "array",
                                                    :description "The list of responses, in the same order as the batch request."}},
                           :type "object"},
 :UserInfo {:properties {:email {:type "string",
                                 :description "The email address of the user."},
                         :displayName {:type "string",
                                       :description "The displayed name of the user."}},
            :description "User's information.",
            :id "UserInfo",
            :type "object"},
 :Hold {:id "Hold",
        :description "Represents a hold within Vault. A hold restricts purging of artifacts based on the combination of the query and accounts restrictions. A hold can be configured to either apply to an explicitly configured set of accounts, or can be applied to all members of an organizational unit.",
        :properties {:orgUnit {:description "If set, the hold applies to all members of the organizational unit and accounts must be empty. This property is mutable. For groups holds, set the accounts field.",
                               :$ref "HeldOrgUnit"},
                     :name {:type "string",
                            :description "The name of the hold."},
                     :accounts {:description "If set, the hold applies to the enumerated accounts and org_unit must be empty.",
                                :type "array",
                                :items {:$ref "HeldAccount"}},
                     :query {:$ref "CorpusQuery",
                             :description "The corpus-specific query. If set, the corpusQuery must match corpus type."},
                     :corpus {:type "string",
                              :enum ["CORPUS_TYPE_UNSPECIFIED"
                                     "DRIVE"
                                     "MAIL"
                                     "GROUPS"
                                     "HANGOUTS_CHAT"],
                              :enumDescriptions ["No corpus specified."
                                                 "Drive."
                                                 "Mail."
                                                 "Groups."
                                                 "Hangouts Chat."],
                              :description "The corpus to be searched."},
                     :updateTime {:format "google-datetime",
                                  :type "string",
                                  :description "The last time this hold was modified."},
                     :holdId {:description "The unique immutable ID of the hold. Assigned during creation.",
                              :type "string"}},
        :type "object"},
 :MailExportOptions {:properties {:exportFormat {:description "The export file format.",
                                                 :type "string",
                                                 :enum ["EXPORT_FORMAT_UNSPECIFIED"
                                                        "MBOX"
                                                        "PST"],
                                                 :enumDescriptions ["No export format specified."
                                                                    "MBOX as export format."
                                                                    "PST as export format"]},
                                  :showConfidentialModeContent {:type "boolean",
                                                                :description "Set to true to export confidential mode content."}},
                     :id "MailExportOptions",
                     :description "The options for mail export.",
                     :type "object"},
 :Empty {:id "Empty",
         :properties {},
         :description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
         :type "object"},
 :HeldOrgUnit {:description "A organizational unit being held in a particular hold. This structure is immutable.",
               :id "HeldOrgUnit",
               :properties {:holdTime {:type "string",
                                       :format "google-datetime",
                                       :description "When the org unit was put on hold. This property is immutable."},
                            :orgUnitId {:type "string",
                                        :description "The org unit's immutable ID as provided by the Admin SDK."}},
               :type "object"},
 :RemoveHeldAccountsRequest {:description "Remove a list of accounts from a hold.",
                             :properties {:accountIds {:description "Account IDs to identify HeldAccounts to remove.",
                                                       :items {:type "string"},
                                                       :type "array"}},
                             :id "RemoveHeldAccountsRequest",
                             :type "object"},
 :MatterPermission {:description "Currently each matter only has one owner, and all others are collaborators. When an account is purged, its corresponding MatterPermission resources cease to exist.",
                    :id "MatterPermission",
                    :type "object",
                    :properties {:role {:description "The user's role in this matter.",
                                        :type "string",
                                        :enum ["ROLE_UNSPECIFIED"
                                               "COLLABORATOR"
                                               "OWNER"],
                                        :enumDescriptions ["No role assigned."
                                                           "A collaborator to the matter."
                                                           "The owner of the matter."]},
                                 :accountId {:description "The account ID, as provided by Admin SDK.",
                                             :type "string"}}},
 :CloseMatterResponse {:description "Response to a CloseMatterRequest.",
                       :type "object",
                       :properties {:matter {:$ref "Matter",
                                             :description "The updated matter, with state CLOSED."}},
                       :id "CloseMatterResponse"},
 :AddHeldAccountsRequest {:description "Add a list of accounts to a hold.",
                          :type "object",
                          :id "AddHeldAccountsRequest",
                          :properties {:emails {:items {:type "string"},
                                                :description "Emails to identify which accounts to add. Only emails or only account_ids should be specified, but not both.",
                                                :type "array"},
                                       :accountIds {:description "Account IDs to identify which accounts to add. Only account_ids or only emails should be specified, but not both.",
                                                    :items {:type "string"},
                                                    :type "array"}}},
 :CountArtifactsResponse {:id "CountArtifactsResponse",
                          :properties {:totalCount {:format "int64",
                                                    :description "Total count of artifacts. For mail and groups, artifacts refers to messages.",
                                                    :type "string"},
                                       :groupsCountResult {:description "Count metrics of Groups.",
                                                           :$ref "GroupsCountResult"},
                                       :mailCountResult {:$ref "MailCountResult",
                                                         :description "Count metrics of Mail."}},
                          :type "object",
                          :description "Definition of the response for method CountArtifacts."},
 :SavedQuery {:type "object",
              :properties {:matterId {:description "Output only. The matter ID of the associated matter. The server does not look at this field during create and always uses matter id in the URL.",
                                      :type "string"},
                           :query {:$ref "Query",
                                   :description "The underlying Query object which contains all the information of the saved query."},
                           :displayName {:type "string",
                                         :description "Name of the saved query."},
                           :createTime {:format "google-datetime",
                                        :description "Output only. The server generated timestamp at which saved query was created.",
                                        :type "string"},
                           :savedQueryId {:type "string",
                                          :description "A unique identifier for the saved query."}},
              :id "SavedQuery",
              :description "Definition of the saved query."},
 :ListExportsResponse {:type "object",
                       :id "ListExportsResponse",
                       :description "The holds for a matter.",
                       :properties {:nextPageToken {:description "Page token to retrieve the next page of results in the list.",
                                                    :type "string"},
                                    :exports {:type "array",
                                              :description "The list of exports.",
                                              :items {:$ref "Export"}}}},
 :ExportOptions {:id "ExportOptions",
                 :description "Export advanced options",
                 :properties {:driveOptions {:description "Option available for Drive export.",
                                             :$ref "DriveExportOptions"},
                              :mailOptions {:description "Option available for mail export.",
                                            :$ref "MailExportOptions"},
                              :region {:enumDescriptions ["The region is unspecified. Will be treated the same as ANY."
                                                          "Any region."
                                                          "US region."
                                                          "Europe region."],
                                       :enum ["EXPORT_REGION_UNSPECIFIED"
                                              "ANY"
                                              "US"
                                              "EUROPE"],
                                       :description "The requested export location.",
                                       :type "string"},
                              :groupsOptions {:$ref "GroupsExportOptions",
                                              :description "Option available for groups export."},
                              :hangoutsChatOptions {:$ref "HangoutsChatExportOptions",
                                                    :description "Option available for hangouts chat export."}},
                 :type "object"},
 :GroupsCountResult {:properties {:matchingAccountsCount {:format "int64",
                                                          :description "Total number of accounts that can be queried and have more than zero messages.",
                                                          :type "string"},
                                  :queriedAccountsCount {:type "string",
                                                         :description "Total number of accounts involved in this count operation.",
                                                         :format "int64"},
                                  :accountCountErrors {:items {:$ref "AccountCountError"},
                                                       :description "Error occurred when querying these accounts.",
                                                       :type "array"},
                                  :accountCounts {:type "array",
                                                  :items {:$ref "AccountCount"},
                                                  :description "Subtotal count per matching account that have more than zero messages."},
                                  :nonQueryableAccounts {:type "array",
                                                         :items {:type "string"},
                                                         :description "When data scope is HELD_DATA in the request Query, these accounts in the request are not queried because they are not on hold. For other data scope, this field is not set."}},
                     :description "Groups specific count metrics.",
                     :id "GroupsCountResult",
                     :type "object"},
 :SharedDriveInfo {:properties {:sharedDriveIds {:type "array",
                                                 :items {:type "string"},
                                                 :description "List of Shared drive IDs, as provided by Drive API."}},
                   :id "SharedDriveInfo",
                   :type "object",
                   :description "Shared drives to search"},
 :ListSavedQueriesResponse {:type "object",
                            :properties {:nextPageToken {:type "string",
                                                         :description "Page token to retrieve the next page of results in the list. If this is empty, then there are no more saved queries to list."},
                                         :savedQueries {:description "List of output saved queries.",
                                                        :items {:$ref "SavedQuery"},
                                                        :type "array"}},
                            :description "Definition of the response for method ListSaveQuery.",
                            :id "ListSavedQueriesResponse"},
 :HangoutsChatOptions {:type "object",
                       :id "HangoutsChatOptions",
                       :description "Hangouts chat search advanced options",
                       :properties {:includeRooms {:type "boolean",
                                                   :description "Set to true to include rooms."}}},
 :CountArtifactsMetadata {:type "object",
                          :description "Long running operation metadata for CountArtifacts.",
                          :id "CountArtifactsMetadata",
                          :properties {:endTime {:type "string",
                                                 :description "End time of count operation. Available when operation is done.",
                                                 :format "google-datetime"},
                                       :query {:$ref "Query",
                                               :description "The search query from the request."},
                                       :startTime {:description "Creation time of count operation.",
                                                   :format "google-datetime",
                                                   :type "string"},
                                       :matterId {:description "The matter ID of the associated matter.",
                                                  :type "string"}}},
 :AccountCount {:id "AccountCount",
                :type "object",
                :description "Count number for each account.",
                :properties {:count {:type "string",
                                     :description "The number of artifacts found for this account.",
                                     :format "int64"},
                             :account {:description "Account owner.",
                                       :$ref "UserInfo"}}},
 :Query {:type "object",
         :properties {:hangoutsChatOptions {:description "For hangouts chat search, specify more options in this field. (read-only)",
                                            :$ref "HangoutsChatOptions"},
                      :orgUnitInfo {:$ref "OrgUnitInfo",
                                    :description "When 'ORG_UNIT' is chosen as as search method, org_unit_info needs to be specified."},
                      :timeZone {:type "string",
                                 :description "The time zone name. It should be an IANA TZ name, such as \"America/Los_Angeles\". For more information, see Time Zone."},
                      :hangoutsChatInfo {:description "When 'ROOM' is chosen as search method, hangout_chats_info needs to be specified. (read-only)",
                                         :$ref "HangoutsChatInfo"},
                      :startTime {:format "google-datetime",
                                  :description "The start time range for the search query. These timestamps are in GMT and rounded down to the start of the given date.",
                                  :type "string"},
                      :terms {:description "The corpus-specific search operators used to generate search results.",
                              :type "string"},
                      :searchMethod {:type "string",
                                     :description "The search method to use.",
                                     :enumDescriptions ["A search method must be specified. If a request does not specify a search method, it will be rejected."
                                                        "Will search all accounts provided in account_info."
                                                        "Will search all accounts in the OU specified in org_unit_info."
                                                        "Will search for all accounts in the Team Drive specified in team_drive_info."
                                                        "Will search for all accounts in the organization. No need to set account_info or org_unit_info."
                                                        "Will search in the Room specified in hangout_chats_info. (read-only)"
                                                        "Will search for all accounts in the shared drive specified in shared_drive_info."],
                                     :enum ["SEARCH_METHOD_UNSPECIFIED"
                                            "ACCOUNT"
                                            "ORG_UNIT"
                                            "TEAM_DRIVE"
                                            "ENTIRE_ORG"
                                            "ROOM"
                                            "SHARED_DRIVE"]},
                      :method {:description "The search method to use. This field is similar to the search_method field but is introduced to support shared drives. It supports all search method types. In case the search_method is TEAM_DRIVE the response of this field will be SHARED_DRIVE only.",
                               :type "string",
                               :enum ["SEARCH_METHOD_UNSPECIFIED"
                                      "ACCOUNT"
                                      "ORG_UNIT"
                                      "TEAM_DRIVE"
                                      "ENTIRE_ORG"
                                      "ROOM"
                                      "SHARED_DRIVE"],
                               :enumDescriptions ["A search method must be specified. If a request does not specify a search method, it will be rejected."
                                                  "Will search all accounts provided in account_info."
                                                  "Will search all accounts in the OU specified in org_unit_info."
                                                  "Will search for all accounts in the Team Drive specified in team_drive_info."
                                                  "Will search for all accounts in the organization. No need to set account_info or org_unit_info."
                                                  "Will search in the Room specified in hangout_chats_info. (read-only)"
                                                  "Will search for all accounts in the shared drive specified in shared_drive_info."]},
                      :endTime {:format "google-datetime",
                                :description "The end time range for the search query. These timestamps are in GMT and rounded down to the start of the given date.",
                                :type "string"},
                      :sharedDriveInfo {:description "When 'SHARED_DRIVE' is chosen as search method, shared_drive_info needs to be specified.",
                                        :$ref "SharedDriveInfo"},
                      :accountInfo {:$ref "AccountInfo",
                                    :description "When 'ACCOUNT' is chosen as search method, account_info needs to be specified."},
                      :corpus {:enumDescriptions ["No corpus specified."
                                                  "Drive."
                                                  "Mail."
                                                  "Groups."
                                                  "Hangouts Chat."],
                               :enum ["CORPUS_TYPE_UNSPECIFIED"
                                      "DRIVE"
                                      "MAIL"
                                      "GROUPS"
                                      "HANGOUTS_CHAT"],
                               :description "The corpus to search.",
                               :type "string"},
                      :teamDriveInfo {:description "When 'TEAM_DRIVE' is chosen as search method, team_drive_info needs to be specified.",
                                      :$ref "TeamDriveInfo"},
                      :mailOptions {:description "For mail search, specify more options in this field.",
                                    :$ref "MailOptions"},
                      :driveOptions {:$ref "DriveOptions",
                                     :description "For Drive search, specify more options in this field."},
                      :dataScope {:description "The data source to search from.",
                                  :enum ["DATA_SCOPE_UNSPECIFIED"
                                         "ALL_DATA"
                                         "HELD_DATA"
                                         "UNPROCESSED_DATA"],
                                  :enumDescriptions ["No data scope specified."
                                                     "All available data."
                                                     "Data on hold."
                                                     "Data not processed."],
                                  :type "string"}},
         :id "Query",
         :description "A query definition relevant for search & export."},
 :CountArtifactsRequest {:properties {:query {:description "The search query.",
                                              :$ref "Query"},
                                      :view {:enumDescriptions ["Default. It works the same as TOTAL_COUNT."
                                                                "Response includes: total count, queried accounts count, matching accounts count, non-queryable accounts, queried account errors."
                                                                "Response includes additional breakdown of account count."],
                                             :description "Specifies the granularity of the count result returned in response.",
                                             :type "string",
                                             :enum ["COUNT_RESULT_VIEW_UNSPECIFIED"
                                                    "TOTAL_COUNT"
                                                    "ALL"]}},
                         :id "CountArtifactsRequest",
                         :description "Count artifacts request.",
                         :type "object"},
 :ExportStats {:type "object",
               :description "Stats of an export.",
               :id "ExportStats",
               :properties {:exportedArtifactCount {:type "string",
                                                    :description "The number of documents already processed by the export.",
                                                    :format "int64"},
                            :totalArtifactCount {:type "string",
                                                 :format "int64",
                                                 :description "The number of documents to be exported."},
                            :sizeInBytes {:description "The size of export in bytes.",
                                          :format "int64",
                                          :type "string"}}},
 :OrgUnitInfo {:type "object",
               :properties {:orgUnitId {:description "Org unit to search, as provided by the Admin SDK Directory API.",
                                        :type "string"}},
               :description "Org Unit to search",
               :id "OrgUnitInfo"},
 :ReopenMatterResponse {:id "ReopenMatterResponse",
                        :type "object",
                        :properties {:matter {:$ref "Matter",
                                              :description "The updated matter, with state OPEN."}},
                        :description "Response to a ReopenMatterRequest."},
 :ListHoldsResponse {:description "The holds for a matter.",
                     :id "ListHoldsResponse",
                     :type "object",
                     :properties {:holds {:type "array",
                                          :description "The list of holds.",
                                          :items {:$ref "Hold"}},
                                  :nextPageToken {:type "string",
                                                  :description "Page token to retrieve the next page of results in the list. If this is empty, then there are no more holds to list."}}},
 :DriveExportOptions {:id "DriveExportOptions",
                      :properties {:includeAccessInfo {:type "boolean",
                                                       :description "Set to true to include access level information for users with indirect access to files."}},
                      :description "The options for Drive export.",
                      :type "object"},
 :ListOperationsResponse {:id "ListOperationsResponse",
                          :type "object",
                          :description "The response message for Operations.ListOperations.",
                          :properties {:nextPageToken {:description "The standard List next-page token.",
                                                       :type "string"},
                                       :operations {:description "A list of operations that matches the specified filter in the request.",
                                                    :items {:$ref "Operation"},
                                                    :type "array"}}},
 :AccountCountError {:properties {:account {:description "Account owner.",
                                            :$ref "UserInfo"},
                                  :errorType {:type "string",
                                              :enumDescriptions ["Default."
                                                                 "Permanent - prefix terms expanded to too many query terms."
                                                                 "Permanent - query contains too many terms."
                                                                 "Transient - data in transit between storage replicas, temporarily unavailable."
                                                                 "Unrecognized error."
                                                                 "Deadline exceeded when querying the account."],
                                              :description "Account query error.",
                                              :enum ["ERROR_TYPE_UNSPECIFIED"
                                                     "WILDCARD_TOO_BROAD"
                                                     "TOO_MANY_TERMS"
                                                     "LOCATION_UNAVAILABLE"
                                                     "UNKNOWN"
                                                     "DEADLINE_EXCEEDED"]}},
                     :description "An error that occurred when querying a specific account",
                     :id "AccountCountError",
                     :type "object"},
 :CloudStorageSink {:description "Export sink for cloud storage files.",
                    :type "object",
                    :properties {:files {:items {:$ref "CloudStorageFile"},
                                         :description "Output only. The exported files on cloud storage.",
                                         :type "array"}},
                    :id "CloudStorageSink"},
 :Status {:description "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
          :id "Status",
          :properties {:message {:type "string",
                                 :description "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."},
                       :code {:description "The status code, which should be an enum value of google.rpc.Code.",
                              :format "int32",
                              :type "integer"},
                       :details {:items {:type "object",
                                         :additionalProperties {:type "any",
                                                                :description "Properties of the object. Contains field @type with type URL."}},
                                 :type "array",
                                 :description "A list of messages that carry the error details. There is a common set of message types for APIs to use."}},
          :type "object"}}
