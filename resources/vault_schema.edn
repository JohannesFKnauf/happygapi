{:DriveOptions {:description "Drive search advanced options",
                :properties {:includeTeamDrives {:description "Set to true to include Team Drive.",
                                                 :type "boolean"},
                             :includeSharedDrives {:type "boolean",
                                                   :description "Set to true to include shared drive."},
                             :versionDate {:type "string",
                                           :description "Search the versions of the Drive file as of the reference date. These timestamps are in GMT and rounded down to the given date.",
                                           :format "google-datetime"}},
                :id "DriveOptions",
                :type "object"},
 :ReopenMatterRequest {:description "Reopen a matter by ID.",
                       :id "ReopenMatterRequest",
                       :type "object",
                       :properties {}},
 :CorpusQuery {:type "object",
               :properties {:groupsQuery {:$ref "HeldGroupsQuery",
                                          :description "Details pertaining to Groups holds. If set, corpus must be Groups."},
                            :driveQuery {:description "Details pertaining to Drive holds. If set, corpus must be Drive.",
                                         :$ref "HeldDriveQuery"},
                            :voiceQuery {:description "Details pertaining to Voice holds. If set, corpus must be Voice.",
                                         :$ref "HeldVoiceQuery"},
                            :mailQuery {:$ref "HeldMailQuery",
                                        :description "Details pertaining to mail holds. If set, corpus must be mail."},
                            :hangoutsChatQuery {:description "Details pertaining to Hangouts Chat holds. If set, corpus must be Hangouts Chat.",
                                                :$ref "HeldHangoutsChatQuery"}},
               :id "CorpusQuery",
               :description "Corpus specific queries."},
 :CloudStorageFile {:properties {:bucketName {:type "string",
                                              :description "The cloud storage bucket name of this export file. Can be used in cloud storage JSON/XML API, but not to list the bucket contents. Instead, you can get individual export files by object name."},
                                 :objectName {:type "string",
                                              :description "The cloud storage object name of this export file. Can be used in cloud storage JSON/XML API."},
                                 :size {:description "The size of the export file.",
                                        :format "int64",
                                        :type "string"},
                                 :md5Hash {:type "string",
                                           :description "The md5 hash of the file."}},
                    :id "CloudStorageFile",
                    :description "An export file on cloud storage",
                    :type "object"},
 :VoiceExportOptions {:type "object",
                      :id "VoiceExportOptions",
                      :properties {:exportFormat {:type "string",
                                                  :enumDescriptions ["No export format specified."
                                                                     "MBOX as export format."
                                                                     "PST as export format"],
                                                  :enum ["EXPORT_FORMAT_UNSPECIFIED"
                                                         "MBOX"
                                                         "PST"],
                                                  :description "The export format for voice export."}},
                      :description "The options for voice export."},
 :UndeleteMatterRequest {:id "UndeleteMatterRequest",
                         :properties {},
                         :description "Undelete a matter by ID.",
                         :type "object"},
 :AccountInfo {:properties {:emails {:description "A set of accounts to search.",
                                     :type "array",
                                     :items {:type "string"}}},
               :id "AccountInfo",
               :type "object",
               :description "Accounts to search"},
 :HeldAccount {:properties {:holdTime {:format "google-datetime",
                                       :description "Output only. When the account was put on hold.",
                                       :type "string"},
                            :accountId {:type "string",
                                        :description "The account's ID as provided by the Admin SDK."},
                            :firstName {:description "Output only. The first name of the account holder.",
                                        :type "string"},
                            :lastName {:description "Output only. The last name of the account holder.",
                                       :type "string"},
                            :email {:type "string",
                                    :description "The primary email address of the account. If used as an input, this takes precedence over account ID."}},
               :id "HeldAccount",
               :type "object",
               :description "An account being held in a particular hold. This structure is immutable. This can be either a single user or a google group, depending on the corpus. To work with Vault resources, the account must have the [required Vault privileges] (https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege."},
 :RemoveMatterPermissionsRequest {:description "Remove an account as a matter collaborator.",
                                  :id "RemoveMatterPermissionsRequest",
                                  :type "object",
                                  :properties {:accountId {:description "The account ID.",
                                                           :type "string"}}},
 :HangoutsChatInfo {:type "object",
                    :description "Accounts to search",
                    :properties {:roomId {:type "array",
                                          :description "A set of rooms to search.",
                                          :items {:type "string"}}},
                    :id "HangoutsChatInfo"},
 :HeldHangoutsChatQuery {:properties {:includeRooms {:description "If true, include rooms the user has participated in.",
                                                     :type "boolean"}},
                         :description "Query options for hangouts chat holds.",
                         :id "HeldHangoutsChatQuery",
                         :type "object"},
 :CloseMatterRequest {:type "object",
                      :properties {},
                      :id "CloseMatterRequest",
                      :description "Close a matter by ID."},
 :ListMattersResponse {:id "ListMattersResponse",
                       :description "Provides the list of matters.",
                       :properties {:nextPageToken {:description "Page token to retrieve the next page of results in the list.",
                                                    :type "string"},
                                    :matters {:items {:$ref "Matter"},
                                              :type "array",
                                              :description "List of matters."}},
                       :type "object"},
 :Operation {:description "This resource represents a long-running operation that is the result of a network API call.",
             :type "object",
             :properties {:name {:type "string",
                                 :description "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."},
                          :response {:description "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                                     :type "object",
                                     :additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                            :type "any"}},
                          :error {:description "The error result of the operation in case of failure or cancellation.",
                                  :$ref "Status"},
                          :done {:type "boolean",
                                 :description "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."},
                          :metadata {:additionalProperties {:type "any",
                                                            :description "Properties of the object. Contains field @type with type URL."},
                                     :type "object",
                                     :description "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."}},
             :id "Operation"},
 :GroupsExportOptions {:properties {:exportFormat {:enum ["EXPORT_FORMAT_UNSPECIFIED"
                                                          "MBOX"
                                                          "PST"],
                                                   :type "string",
                                                   :description "The export format for groups export.",
                                                   :enumDescriptions ["No export format specified."
                                                                      "MBOX as export format."
                                                                      "PST as export format"]}},
                       :description "The options for groups export.",
                       :type "object",
                       :id "GroupsExportOptions"},
 :HeldGroupsQuery {:properties {:startTime {:description "The start time range for the search query. These timestamps are in GMT and rounded down to the start of the given date.",
                                            :type "string",
                                            :format "google-datetime"},
                                :endTime {:description "The end time range for the search query. These timestamps are in GMT and rounded down to the start of the given date.",
                                          :format "google-datetime",
                                          :type "string"},
                                :terms {:type "string",
                                        :description "The search terms for the hold."}},
                   :type "object",
                   :id "HeldGroupsQuery",
                   :description "Query options for group holds."},
 :AddMatterPermissionsRequest {:description "Add an account with the permission specified. The role cannot be owner. If an account already has a role in the matter, it will be overwritten.",
                               :properties {:sendEmails {:description "True to send notification email to the added account. False to not send notification email.",
                                                         :type "boolean"},
                                            :matterPermission {:$ref "MatterPermission",
                                                               :description "The MatterPermission to add."},
                                            :ccMe {:type "boolean",
                                                   :description "Only relevant if send_emails is true. True to CC requestor in the email message. False to not CC requestor."}},
                               :id "AddMatterPermissionsRequest",
                               :type "object"},
 :MailOptions {:description "Mail search advanced options",
               :id "MailOptions",
               :type "object",
               :properties {:excludeDrafts {:description "Set to true to exclude drafts.",
                                            :type "boolean"}}},
 :HangoutsChatExportOptions {:description "The options for hangouts chat export.",
                             :properties {:exportFormat {:type "string",
                                                         :enumDescriptions ["No export format specified."
                                                                            "MBOX as export format."
                                                                            "PST as export format"],
                                                         :enum ["EXPORT_FORMAT_UNSPECIFIED"
                                                                "MBOX"
                                                                "PST"],
                                                         :description "The export format for hangouts chat export."}},
                             :id "HangoutsChatExportOptions",
                             :type "object"},
 :HeldMailQuery {:type "object",
                 :properties {:startTime {:format "google-datetime",
                                          :description "The start time range for the search query. These timestamps are in GMT and rounded down to the start of the given date.",
                                          :type "string"},
                              :terms {:description "The search terms for the hold.",
                                      :type "string"},
                              :endTime {:format "google-datetime",
                                        :type "string",
                                        :description "The end time range for the search query. These timestamps are in GMT and rounded down to the start of the given date."}},
                 :description "Query options for mail holds.",
                 :id "HeldMailQuery"},
 :AddHeldAccountResult {:properties {:status {:description "This represents the success status. If failed, check message.",
                                              :$ref "Status"},
                                     :account {:$ref "HeldAccount",
                                               :description "If present, this account was successfully created."}},
                        :type "object",
                        :description "A status detailing the status of each account creation, and the HeldAccount, if successful.",
                        :id "AddHeldAccountResult"},
 :CancelOperationRequest {:type "object",
                          :id "CancelOperationRequest",
                          :description "The request message for Operations.CancelOperation.",
                          :properties {}},
 :TeamDriveInfo {:id "TeamDriveInfo",
                 :description "Team Drives to search",
                 :type "object",
                 :properties {:teamDriveIds {:type "array",
                                             :items {:type "string"},
                                             :description "List of Team Drive IDs, as provided by Drive API."}}},
 :VoiceOptions {:description "Voice search options",
                :properties {:coveredData {:items {:enum ["COVERED_DATA_UNSPECIFIED"
                                                          "TEXT_MESSAGES"
                                                          "VOICEMAILS"
                                                          "CALL_LOGS"],
                                                   :enumDescriptions ["Covered data unspecified."
                                                                      "Voice text message will be covered."
                                                                      "Voicemail will be covered."
                                                                      "Call logs will be covered."],
                                                   :type "string"},
                                           :description "Datatypes to search",
                                           :type "array"}},
                :type "object",
                :id "VoiceOptions"},
 :MailCountResult {:description "Mail specific count metrics.",
                   :properties {:matchingAccountsCount {:format "int64",
                                                        :type "string",
                                                        :description "Total number of accounts that can be queried and have more than zero messages."},
                                :accountCounts {:items {:$ref "AccountCount"},
                                                :description "Subtotal count per matching account that have more than zero messages.",
                                                :type "array"},
                                :nonQueryableAccounts {:type "array",
                                                       :description "When data scope is HELD_DATA in the request Query, these accounts in the request are not queried because they are not on hold. For other data scope, this field is not set.",
                                                       :items {:type "string"}},
                                :queriedAccountsCount {:type "string",
                                                       :description "Total number of accounts involved in this count operation.",
                                                       :format "int64"},
                                :accountCountErrors {:description "Error occurred when querying these accounts.",
                                                     :type "array",
                                                     :items {:$ref "AccountCountError"}}},
                   :id "MailCountResult",
                   :type "object"},
 :Matter {:description "Represents a matter. To work with Vault resources, the account must have the [required Vault privileges] (https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege.",
          :id "Matter",
          :properties {:description {:description "The description of the matter.",
                                     :type "string"},
                       :matterId {:description "The matter ID which is generated by the server. Should be blank when creating a new matter.",
                                  :type "string"},
                       :matterPermissions {:description "List of users and access to the matter. Currently there is no programmer defined limit on the number of permissions a matter can have.",
                                           :type "array",
                                           :items {:$ref "MatterPermission"}},
                       :state {:enum ["STATE_UNSPECIFIED"
                                      "OPEN"
                                      "CLOSED"
                                      "DELETED"],
                               :type "string",
                               :enumDescriptions ["The matter has no specified state."
                                                  "This matter is open."
                                                  "This matter is closed."
                                                  "This matter is deleted."],
                               :description "The state of the matter."},
                       :name {:description "The name of the matter.",
                              :type "string"}},
          :type "object"},
 :HeldDriveQuery {:id "HeldDriveQuery",
                  :type "object",
                  :properties {:includeSharedDriveFiles {:type "boolean",
                                                         :description "If true, include files in shared drives in the hold."},
                               :includeTeamDriveFiles {:description "If true, include files in Team Drives in the hold.",
                                                       :type "boolean"}},
                  :description "Query options for Drive holds."},
 :ListHeldAccountsResponse {:type "object",
                            :properties {:accounts {:description "The held accounts on a hold.",
                                                    :items {:$ref "HeldAccount"},
                                                    :type "array"}},
                            :description "Returns a list of held accounts for a hold.",
                            :id "ListHeldAccountsResponse"},
 :Export {:description "An export To work with Vault resources, the account must have the [required Vault privileges] (https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege.",
          :properties {:name {:type "string",
                              :description "The export name."},
                       :createTime {:format "google-datetime",
                                    :description "Output only. The time when the export was created.",
                                    :type "string"},
                       :requester {:$ref "UserInfo",
                                   :description "Output only. The requester of the export."},
                       :status {:enum ["EXPORT_STATUS_UNSPECIFIED"
                                       "COMPLETED"
                                       "FAILED"
                                       "IN_PROGRESS"],
                                :enumDescriptions ["The status is unspecified."
                                                   "The export completed."
                                                   "The export failed."
                                                   "The export is still being executed."],
                                :description "Output only. The export status.",
                                :type "string"},
                       :id {:type "string",
                            :description "Output only. The generated export ID."},
                       :matterId {:description "Output only. The matter ID.",
                                  :type "string"},
                       :cloudStorageSink {:$ref "CloudStorageSink",
                                          :description "Output only. Export sink for cloud storage files."},
                       :query {:description "The search query being exported.",
                               :$ref "Query"},
                       :stats {:description "Output only. Export statistics.",
                               :$ref "ExportStats"},
                       :exportOptions {:description "Advanced options of the export.",
                                       :$ref "ExportOptions"}},
          :type "object",
          :id "Export"},
 :RemoveHeldAccountsResponse {:id "RemoveHeldAccountsResponse",
                              :type "object",
                              :description "Response for batch delete held accounts.",
                              :properties {:statuses {:items {:$ref "Status"},
                                                      :type "array",
                                                      :description "A list of statuses for deleted accounts. Results have the same order as the request."}}},
 :AddHeldAccountsResponse {:properties {:responses {:items {:$ref "AddHeldAccountResult"},
                                                    :description "The list of responses, in the same order as the batch request.",
                                                    :type "array"}},
                           :description "Response for batch create held accounts.",
                           :type "object",
                           :id "AddHeldAccountsResponse"},
 :UserInfo {:description "User's information.",
            :id "UserInfo",
            :properties {:email {:description "The email address of the user.",
                                 :type "string"},
                         :displayName {:type "string",
                                       :description "The displayed name of the user."}},
            :type "object"},
 :Hold {:properties {:query {:$ref "CorpusQuery",
                             :description "The corpus-specific query. If set, the corpusQuery must match corpus type."},
                     :holdId {:description "The unique immutable ID of the hold. Assigned during creation.",
                              :type "string"},
                     :name {:description "The name of the hold.",
                            :type "string"},
                     :accounts {:description "If set, the hold applies to the enumerated accounts and org_unit must be empty.",
                                :items {:$ref "HeldAccount"},
                                :type "array"},
                     :corpus {:enumDescriptions ["No corpus specified."
                                                 "Drive."
                                                 "Mail."
                                                 "Groups."
                                                 "Hangouts Chat."
                                                 "Google Voice."],
                              :type "string",
                              :description "The corpus to be searched.",
                              :enum ["CORPUS_TYPE_UNSPECIFIED"
                                     "DRIVE"
                                     "MAIL"
                                     "GROUPS"
                                     "HANGOUTS_CHAT"
                                     "VOICE"]},
                     :orgUnit {:$ref "HeldOrgUnit",
                               :description "If set, the hold applies to all members of the organizational unit and accounts must be empty. This property is mutable. For groups holds, set the accounts field."},
                     :updateTime {:type "string",
                                  :format "google-datetime",
                                  :description "The last time this hold was modified."}},
        :id "Hold",
        :type "object",
        :description "Represents a hold within Vault. A hold restricts purging of artifacts based on the combination of the query and accounts restrictions. A hold can be configured to either apply to an explicitly configured set of accounts, or can be applied to all members of an organizational unit. To work with Vault resources, the account must have the [required Vault privileges] (https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege."},
 :MailExportOptions {:id "MailExportOptions",
                     :type "object",
                     :description "The options for mail export.",
                     :properties {:showConfidentialModeContent {:description "Set to true to export confidential mode content.",
                                                                :type "boolean"},
                                  :exportFormat {:enumDescriptions ["No export format specified."
                                                                    "MBOX as export format."
                                                                    "PST as export format"],
                                                 :description "The export file format.",
                                                 :enum ["EXPORT_FORMAT_UNSPECIFIED"
                                                        "MBOX"
                                                        "PST"],
                                                 :type "string"}}},
 :Empty {:id "Empty",
         :description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
         :type "object",
         :properties {}},
 :HeldOrgUnit {:description "A organizational unit being held in a particular hold. This structure is immutable.",
               :type "object",
               :id "HeldOrgUnit",
               :properties {:holdTime {:description "When the org unit was put on hold. This property is immutable.",
                                       :type "string",
                                       :format "google-datetime"},
                            :orgUnitId {:description "The org unit's immutable ID as provided by the Admin SDK.",
                                        :type "string"}}},
 :RemoveHeldAccountsRequest {:properties {:accountIds {:description "Account IDs to identify HeldAccounts to remove.",
                                                       :type "array",
                                                       :items {:type "string"}}},
                             :id "RemoveHeldAccountsRequest",
                             :type "object",
                             :description "Remove a list of accounts from a hold."},
 :MatterPermission {:properties {:accountId {:description "The account ID, as provided by Admin SDK.",
                                             :type "string"},
                                 :role {:type "string",
                                        :enumDescriptions ["No role assigned."
                                                           "A collaborator to the matter."
                                                           "The owner of the matter."],
                                        :enum ["ROLE_UNSPECIFIED"
                                               "COLLABORATOR"
                                               "OWNER"],
                                        :description "The user's role in this matter."}},
                    :type "object",
                    :id "MatterPermission",
                    :description "Currently each matter only has one owner, and all others are collaborators. When an account is purged, its corresponding MatterPermission resources cease to exist."},
 :CloseMatterResponse {:id "CloseMatterResponse",
                       :type "object",
                       :properties {:matter {:$ref "Matter",
                                             :description "The updated matter, with state CLOSED."}},
                       :description "Response to a CloseMatterRequest."},
 :AddHeldAccountsRequest {:type "object",
                          :properties {:accountIds {:type "array",
                                                    :description "Account IDs to identify which accounts to add. Only account_ids or only emails should be specified, but not both.",
                                                    :items {:type "string"}},
                                       :emails {:description "Emails to identify which accounts to add. Only emails or only account_ids should be specified, but not both.",
                                                :type "array",
                                                :items {:type "string"}}},
                          :description "Add a list of accounts to a hold.",
                          :id "AddHeldAccountsRequest"},
 :CountArtifactsResponse {:id "CountArtifactsResponse",
                          :type "object",
                          :properties {:totalCount {:format "int64",
                                                    :description "Total count of artifacts. For mail and groups, artifacts refers to messages.",
                                                    :type "string"},
                                       :mailCountResult {:$ref "MailCountResult",
                                                         :description "Count metrics of Mail."},
                                       :groupsCountResult {:$ref "GroupsCountResult",
                                                           :description "Count metrics of Groups."}},
                          :description "Definition of the response for method CountArtifacts."},
 :SavedQuery {:description "Definition of the saved query. To work with Vault resources, the account must have the [required Vault privileges] (https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege.",
              :id "SavedQuery",
              :properties {:createTime {:description "Output only. The server generated timestamp at which saved query was created.",
                                        :type "string",
                                        :format "google-datetime"},
                           :displayName {:type "string",
                                         :description "Name of the saved query."},
                           :matterId {:type "string",
                                      :description "Output only. The matter ID of the associated matter. The server does not look at this field during create and always uses matter id in the URL."},
                           :savedQueryId {:description "A unique identifier for the saved query.",
                                          :type "string"},
                           :query {:$ref "Query",
                                   :description "The underlying Query object which contains all the information of the saved query."}},
              :type "object"},
 :ListExportsResponse {:type "object",
                       :description "The holds for a matter.",
                       :id "ListExportsResponse",
                       :properties {:exports {:type "array",
                                              :items {:$ref "Export"},
                                              :description "The list of exports."},
                                    :nextPageToken {:type "string",
                                                    :description "Page token to retrieve the next page of results in the list."}}},
 :ExportOptions {:properties {:driveOptions {:description "Option available for Drive export.",
                                             :$ref "DriveExportOptions"},
                              :region {:enumDescriptions ["The region is unspecified. Will be treated the same as ANY."
                                                          "Any region."
                                                          "US region."
                                                          "Europe region."],
                                       :description "The requested export location.",
                                       :enum ["EXPORT_REGION_UNSPECIFIED"
                                              "ANY"
                                              "US"
                                              "EUROPE"],
                                       :type "string"},
                              :groupsOptions {:$ref "GroupsExportOptions",
                                              :description "Option available for groups export."},
                              :hangoutsChatOptions {:$ref "HangoutsChatExportOptions",
                                                    :description "Option available for hangouts chat export."},
                              :voiceOptions {:$ref "VoiceExportOptions",
                                             :description "Option available for voice export."},
                              :mailOptions {:$ref "MailExportOptions",
                                            :description "Option available for mail export."}},
                 :type "object",
                 :id "ExportOptions",
                 :description "Export advanced options"},
 :GroupsCountResult {:description "Groups specific count metrics.",
                     :id "GroupsCountResult",
                     :type "object",
                     :properties {:queriedAccountsCount {:description "Total number of accounts involved in this count operation.",
                                                         :format "int64",
                                                         :type "string"},
                                  :nonQueryableAccounts {:description "When data scope is HELD_DATA in the request Query, these accounts in the request are not queried because they are not on hold. For other data scope, this field is not set.",
                                                         :items {:type "string"},
                                                         :type "array"},
                                  :accountCountErrors {:items {:$ref "AccountCountError"},
                                                       :description "Error occurred when querying these accounts.",
                                                       :type "array"},
                                  :matchingAccountsCount {:description "Total number of accounts that can be queried and have more than zero messages.",
                                                          :format "int64",
                                                          :type "string"},
                                  :accountCounts {:description "Subtotal count per matching account that have more than zero messages.",
                                                  :type "array",
                                                  :items {:$ref "AccountCount"}}}},
 :SharedDriveInfo {:id "SharedDriveInfo",
                   :properties {:sharedDriveIds {:description "List of Shared drive IDs, as provided by Drive API.",
                                                 :type "array",
                                                 :items {:type "string"}}},
                   :type "object",
                   :description "Shared drives to search"},
 :ListSavedQueriesResponse {:description "Definition of the response for method ListSaveQuery.",
                            :id "ListSavedQueriesResponse",
                            :type "object",
                            :properties {:nextPageToken {:description "Page token to retrieve the next page of results in the list. If this is empty, then there are no more saved queries to list.",
                                                         :type "string"},
                                         :savedQueries {:type "array",
                                                        :description "List of output saved queries.",
                                                        :items {:$ref "SavedQuery"}}}},
 :HangoutsChatOptions {:description "Hangouts chat search advanced options",
                       :properties {:includeRooms {:description "Set to true to include rooms.",
                                                   :type "boolean"}},
                       :type "object",
                       :id "HangoutsChatOptions"},
 :CountArtifactsMetadata {:type "object",
                          :properties {:matterId {:description "The matter ID of the associated matter.",
                                                  :type "string"},
                                       :startTime {:type "string",
                                                   :description "Creation time of count operation.",
                                                   :format "google-datetime"},
                                       :query {:description "The search query from the request.",
                                               :$ref "Query"},
                                       :endTime {:type "string",
                                                 :description "End time of count operation. Available when operation is done.",
                                                 :format "google-datetime"}},
                          :description "Long running operation metadata for CountArtifacts.",
                          :id "CountArtifactsMetadata"},
 :AccountCount {:properties {:count {:format "int64",
                                     :type "string",
                                     :description "The number of artifacts found for this account."},
                             :account {:description "Account owner.",
                                       :$ref "UserInfo"}},
                :type "object",
                :id "AccountCount",
                :description "Count number for each account."},
 :Query {:properties {:hangoutsChatOptions {:$ref "HangoutsChatOptions",
                                            :description "For hangouts chat search, specify more options in this field. (read-only)"},
                      :orgUnitInfo {:description "When 'ORG_UNIT' is chosen as as search method, org_unit_info needs to be specified.",
                                    :$ref "OrgUnitInfo"},
                      :timeZone {:description "The time zone name. It should be an IANA TZ name, such as \"America/Los_Angeles\". For more information, see Time Zone.",
                                 :type "string"},
                      :hangoutsChatInfo {:description "When 'ROOM' is chosen as search method, hangout_chats_info needs to be specified. (read-only)",
                                         :$ref "HangoutsChatInfo"},
                      :startTime {:description "The start time range for the search query. These timestamps are in GMT and rounded down to the start of the given date.",
                                  :format "google-datetime",
                                  :type "string"},
                      :terms {:type "string",
                              :description "The corpus-specific search operators used to generate search results."},
                      :searchMethod {:enumDescriptions ["A search method must be specified. If a request does not specify a search method, it will be rejected."
                                                        "Will search all accounts provided in account_info."
                                                        "Will search all accounts in the OU specified in org_unit_info."
                                                        "Will search for all accounts in the Team Drive specified in team_drive_info."
                                                        "Will search for all accounts in the organization. No need to set account_info or org_unit_info. Not all CORPUS_TYPE support this scope. Supported by MAIL."
                                                        "Will search in the Room specified in hangout_chats_info. (read-only)"
                                                        "Will search for all accounts in the shared drive specified in shared_drive_info."],
                                     :type "string",
                                     :description "The search method to use.",
                                     :enum ["SEARCH_METHOD_UNSPECIFIED"
                                            "ACCOUNT"
                                            "ORG_UNIT"
                                            "TEAM_DRIVE"
                                            "ENTIRE_ORG"
                                            "ROOM"
                                            "SHARED_DRIVE"]},
                      :method {:enumDescriptions ["A search method must be specified. If a request does not specify a search method, it will be rejected."
                                                  "Will search all accounts provided in account_info."
                                                  "Will search all accounts in the OU specified in org_unit_info."
                                                  "Will search for all accounts in the Team Drive specified in team_drive_info."
                                                  "Will search for all accounts in the organization. No need to set account_info or org_unit_info. Not all CORPUS_TYPE support this scope. Supported by MAIL."
                                                  "Will search in the Room specified in hangout_chats_info. (read-only)"
                                                  "Will search for all accounts in the shared drive specified in shared_drive_info."],
                               :enum ["SEARCH_METHOD_UNSPECIFIED"
                                      "ACCOUNT"
                                      "ORG_UNIT"
                                      "TEAM_DRIVE"
                                      "ENTIRE_ORG"
                                      "ROOM"
                                      "SHARED_DRIVE"],
                               :description "The search method to use. This field is similar to the search_method field but is introduced to support shared drives. It supports all search method types. In case the search_method is TEAM_DRIVE the response of this field will be SHARED_DRIVE only.",
                               :type "string"},
                      :voiceOptions {:description "For voice search, specify more options in this field.",
                                     :$ref "VoiceOptions"},
                      :endTime {:description "The end time range for the search query. These timestamps are in GMT and rounded down to the start of the given date.",
                                :type "string",
                                :format "google-datetime"},
                      :sharedDriveInfo {:$ref "SharedDriveInfo",
                                        :description "When 'SHARED_DRIVE' is chosen as search method, shared_drive_info needs to be specified."},
                      :accountInfo {:description "When 'ACCOUNT' is chosen as search method, account_info needs to be specified.",
                                    :$ref "AccountInfo"},
                      :corpus {:type "string",
                               :enumDescriptions ["No corpus specified."
                                                  "Drive."
                                                  "Mail."
                                                  "Groups."
                                                  "Hangouts Chat."
                                                  "Google Voice."],
                               :description "The corpus to search.",
                               :enum ["CORPUS_TYPE_UNSPECIFIED"
                                      "DRIVE"
                                      "MAIL"
                                      "GROUPS"
                                      "HANGOUTS_CHAT"
                                      "VOICE"]},
                      :teamDriveInfo {:$ref "TeamDriveInfo",
                                      :description "When 'TEAM_DRIVE' is chosen as search method, team_drive_info needs to be specified."},
                      :mailOptions {:description "For mail search, specify more options in this field.",
                                    :$ref "MailOptions"},
                      :driveOptions {:description "For Drive search, specify more options in this field.",
                                     :$ref "DriveOptions"},
                      :dataScope {:type "string",
                                  :enum ["DATA_SCOPE_UNSPECIFIED"
                                         "ALL_DATA"
                                         "HELD_DATA"
                                         "UNPROCESSED_DATA"],
                                  :description "The data source to search from.",
                                  :enumDescriptions ["No data scope specified."
                                                     "All available data."
                                                     "Data on hold."
                                                     "Data not processed."]}},
         :description "A query definition relevant for search & export.",
         :type "object",
         :id "Query"},
 :CountArtifactsRequest {:id "CountArtifactsRequest",
                         :type "object",
                         :properties {:view {:enum ["COUNT_RESULT_VIEW_UNSPECIFIED"
                                                    "TOTAL_COUNT"
                                                    "ALL"],
                                             :type "string",
                                             :description "Specifies the granularity of the count result returned in response.",
                                             :enumDescriptions ["Default. It works the same as TOTAL_COUNT."
                                                                "Response includes: total count, queried accounts count, matching accounts count, non-queryable accounts, queried account errors."
                                                                "Response includes additional breakdown of account count."]},
                                      :query {:description "The search query.",
                                              :$ref "Query"}},
                         :description "Count artifacts request."},
 :HeldVoiceQuery {:properties {:coveredData {:items {:enumDescriptions ["Covered data unspecified."
                                                                        "Voice text message will be covered."
                                                                        "Voicemail will be covered."
                                                                        "Call logs will be covered."],
                                                     :enum ["COVERED_DATA_UNSPECIFIED"
                                                            "TEXT_MESSAGES"
                                                            "VOICEMAILS"
                                                            "CALL_LOGS"],
                                                     :type "string"},
                                             :description "Data covered by this rule. Should be non-empty. Order does not matter and duplicates will be ignored.",
                                             :type "array"}},
                  :id "HeldVoiceQuery",
                  :type "object",
                  :description "Query options for Voice holds."},
 :ExportStats {:type "object",
               :properties {:sizeInBytes {:type "string",
                                          :format "int64",
                                          :description "The size of export in bytes."},
                            :totalArtifactCount {:type "string",
                                                 :description "The number of documents to be exported.",
                                                 :format "int64"},
                            :exportedArtifactCount {:format "int64",
                                                    :description "The number of documents already processed by the export.",
                                                    :type "string"}},
               :description "Stats of an export.",
               :id "ExportStats"},
 :OrgUnitInfo {:properties {:orgUnitId {:type "string",
                                        :description "Org unit to search, as provided by the Admin SDK Directory API."}},
               :description "Org Unit to search",
               :id "OrgUnitInfo",
               :type "object"},
 :ReopenMatterResponse {:id "ReopenMatterResponse",
                        :type "object",
                        :description "Response to a ReopenMatterRequest.",
                        :properties {:matter {:description "The updated matter, with state OPEN.",
                                              :$ref "Matter"}}},
 :ListHoldsResponse {:id "ListHoldsResponse",
                     :properties {:nextPageToken {:type "string",
                                                  :description "Page token to retrieve the next page of results in the list. If this is empty, then there are no more holds to list."},
                                  :holds {:type "array",
                                          :description "The list of holds.",
                                          :items {:$ref "Hold"}}},
                     :type "object",
                     :description "The holds for a matter."},
 :DriveExportOptions {:id "DriveExportOptions",
                      :properties {:includeAccessInfo {:description "Set to true to include access level information for users with indirect access to files.",
                                                       :type "boolean"}},
                      :description "The options for Drive export.",
                      :type "object"},
 :ListOperationsResponse {:type "object",
                          :description "The response message for Operations.ListOperations.",
                          :properties {:operations {:items {:$ref "Operation"},
                                                    :type "array",
                                                    :description "A list of operations that matches the specified filter in the request."},
                                       :nextPageToken {:description "The standard List next-page token.",
                                                       :type "string"}},
                          :id "ListOperationsResponse"},
 :AccountCountError {:description "An error that occurred when querying a specific account",
                     :id "AccountCountError",
                     :properties {:account {:description "Account owner.",
                                            :$ref "UserInfo"},
                                  :errorType {:enumDescriptions ["Default."
                                                                 "Permanent - prefix terms expanded to too many query terms."
                                                                 "Permanent - query contains too many terms."
                                                                 "Transient - data in transit between storage replicas, temporarily unavailable."
                                                                 "Unrecognized error."
                                                                 "Deadline exceeded when querying the account."],
                                              :description "Account query error.",
                                              :enum ["ERROR_TYPE_UNSPECIFIED"
                                                     "WILDCARD_TOO_BROAD"
                                                     "TOO_MANY_TERMS"
                                                     "LOCATION_UNAVAILABLE"
                                                     "UNKNOWN"
                                                     "DEADLINE_EXCEEDED"],
                                              :type "string"}},
                     :type "object"},
 :CloudStorageSink {:type "object",
                    :id "CloudStorageSink",
                    :description "Export sink for cloud storage files.",
                    :properties {:files {:items {:$ref "CloudStorageFile"},
                                         :description "Output only. The exported files on cloud storage.",
                                         :type "array"}}},
 :Status {:type "object",
          :description "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
          :properties {:message {:description "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
                                 :type "string"},
                       :details {:items {:type "object",
                                         :additionalProperties {:type "any",
                                                                :description "Properties of the object. Contains field @type with type URL."}},
                                 :type "array",
                                 :description "A list of messages that carry the error details. There is a common set of message types for APIs to use."},
                       :code {:type "integer",
                              :description "The status code, which should be an enum value of google.rpc.Code.",
                              :format "int32"}},
          :id "Status"}}
