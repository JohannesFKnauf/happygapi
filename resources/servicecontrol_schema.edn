{:RequestMetadata {:description "Metadata about the request.",
                   :id "RequestMetadata",
                   :type "object",
                   :properties {:callerSuppliedUserAgent {:type "string",
                                                          :description "The user agent of the caller. This information is not authenticated and should be treated accordingly. For example: + `google-api-python-client/1.4.0`: The request was made by the Google API client for Python. + `Cloud SDK Command Line Tool apitools-client/1.0 gcloud/0.9.62`: The request was made by the Google Cloud SDK CLI (gcloud). + `AppEngine-Google; (+http://code.google.com/appengine; appid: s~my-project`: The request was made from the `my-project` App Engine app. NOLINT"},
                                :requestAttributes {:description "Request attributes used in IAM condition evaluation. This field contains request attributes like request time and access levels associated with the request. To get the whole view of the attributes used in IAM condition evaluation, the user must also look into `AuditLog.authentication_info.resource_attributes`.",
                                                    :$ref "Request"},
                                :callerNetwork {:type "string",
                                                :description "The network of the caller. Set only if the network host project is part of the same GCP organization (or project) as the accessed resource. See https://cloud.google.com/compute/docs/vpc/ for more information. This is a scheme-less URI full resource name. For example: \"//compute.googleapis.com/projects/PROJECT_ID/global/networks/NETWORK_ID\""},
                                :callerIp {:type "string",
                                           :description "The IP address of the caller. For caller from internet, this will be public IPv4 or IPv6 address. For caller from a Compute Engine VM with external IP address, this will be the VM's external IP address. For caller from a Compute Engine VM without external IP address, if the VM is in the same organization (or project) as the accessed resource, `caller_ip` will be the VM's internal IPv4 address, otherwise the `caller_ip` will be redacted to \"gce-internal-ip\". See https://cloud.google.com/compute/docs/vpc/ for more information."},
                                :destinationAttributes {:$ref "Peer",
                                                        :description "The destination of a network activity, such as accepting a TCP connection. In a multi hop network activity, the destination represents the receiver of the last hop. Only two fields are used in this message, Peer.port and Peer.ip. These fields are optionally populated by those services utilizing the IAM condition feature."}}},
 :Api {:description "This message defines attributes associated with API operations, such as a network API request. The terminology is based on the conventions used by Google APIs, Istio, and OpenAPI.",
       :properties {:version {:type "string",
                              :description "The API version associated with the API operation above, such as \"v1\" or \"v1alpha1\"."},
                    :service {:description "The API service name. It is a logical identifier for a networked API, such as \"pubsub.googleapis.com\". The naming syntax depends on the API management system being used for handling the request.",
                              :type "string"},
                    :protocol {:description "The API protocol used for sending the request, such as \"http\", \"https\", \"grpc\", or \"internal\".",
                               :type "string"},
                    :operation {:description "The API operation name. For gRPC requests, it is the fully qualified API method name, such as \"google.pubsub.v1.Publisher.Publish\". For OpenAPI requests, it is the `operationId`, such as \"getPet\".",
                                :type "string"}},
       :id "Api",
       :type "object"},
 :AttributeContext {:type "object",
                    :id "AttributeContext",
                    :properties {:api {:$ref "Api",
                                       :description "Represents an API operation that is involved to a network activity."},
                                 :origin {:description "The origin of a network activity. In a multi hop network activity, the origin represents the sender of the first hop. For the first hop, the `source` and the `origin` must have the same content.",
                                          :$ref "Peer"},
                                 :response {:$ref "Response",
                                            :description "Represents a network response, such as an HTTP response."},
                                 :resource {:$ref "Resource",
                                            :description "Represents a target resource that is involved with a network activity. If multiple resources are involved with an activity, this must be the primary one."},
                                 :destination {:description "The destination of a network activity, such as accepting a TCP connection. In a multi hop network activity, the destination represents the receiver of the last hop.",
                                               :$ref "Peer"},
                                 :extensions {:items {:additionalProperties {:type "any",
                                                                             :description "Properties of the object. Contains field @type with type URL."},
                                                      :type "object"},
                                              :type "array",
                                              :description "Supports extensions for advanced use cases, such as logs and metrics."},
                                 :source {:description "The source of a network activity, such as starting a TCP connection. In a multi hop network activity, the source represents the sender of the last hop.",
                                          :$ref "Peer"},
                                 :request {:description "Represents a network request, such as an HTTP request.",
                                           :$ref "Request"}},
                    :description "This message defines the standard attribute vocabulary for Google APIs. An attribute is a piece of metadata that describes an activity on a network service. For example, the size of an HTTP request, or the status code of an HTTP response. Each attribute has a type and a name, which is logically defined as a proto message field in `AttributeContext`. The field type becomes the attribute type, and the field path becomes the attribute name. For example, the attribute `source.ip` maps to field `AttributeContext.source.ip`. This message definition is guaranteed not to have any wire breaking change. So you can use it directly for passing attributes across different systems. NOTE: Different system may generate different subset of attributes. Please verify the system specification before relying on an attribute generated a system."},
 :ServiceAccountDelegationInfo {:properties {:principalSubject {:description "A string representing the principal_subject associated with the identity. See go/3pical for more info on how principal_subject is formatted.",
                                                                :type "string"},
                                             :thirdPartyPrincipal {:description "Third party identity as the real authority.",
                                                                   :$ref "ThirdPartyPrincipal"},
                                             :firstPartyPrincipal {:$ref "FirstPartyPrincipal",
                                                                   :description "First party (Google) identity as the real authority."}},
                                :id "ServiceAccountDelegationInfo",
                                :type "object",
                                :description "Identity delegation history of an authenticated service account."},
 :ResourceInfo {:description "Describes a resource referenced in the request.",
                :id "ResourceInfo",
                :properties {:permission {:type "string",
                                          :description "The resource permission needed for this request. The format must be \"{service}/{plural}.{verb}\"."},
                             :name {:type "string",
                                    :description "The name of the resource referenced in the request."},
                             :type {:description "The resource type in the format of \"{service}/{kind}\".",
                                    :type "string"}},
                :type "object"},
 :Request {:type "object",
           :properties {:path {:type "string",
                               :description "The HTTP URL path."},
                        :protocol {:type "string",
                                   :description "The network protocol used with the request, such as \"http/1.1\", \"spdy/3\", \"h2\", \"h2c\", \"webrtc\", \"tcp\", \"udp\", \"quic\". See https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids for details."},
                        :method {:description "The HTTP request method, such as `GET`, `POST`.",
                                 :type "string"},
                        :time {:type "string",
                               :format "google-datetime",
                               :description "The timestamp when the `destination` service receives the first byte of the request."},
                        :auth {:$ref "Auth",
                               :description "The request authentication. May be absent for unauthenticated requests. Derived from the HTTP request `Authorization` header or equivalent."},
                        :size {:format "int64",
                               :description "The HTTP request size in bytes. If unknown, it must be -1.",
                               :type "string"},
                        :headers {:type "object",
                                  :additionalProperties {:type "string"},
                                  :description "The HTTP request headers. If multiple headers share the same key, they must be merged according to the HTTP spec. All header keys must be lowercased, because HTTP header keys are case-insensitive."},
                        :reason {:type "string",
                                 :description "A special parameter for request reason. It is used by security systems to associate auditing information with a request."},
                        :host {:description "The HTTP request `Host` header value.",
                               :type "string"},
                        :id {:type "string",
                             :description "The unique ID for a request, which can be propagated to downstream systems. The ID should have low probability of collision within a single day for a specific service."},
                        :query {:description "The HTTP URL query in the format of `name1=value1&name2=value2`, as it appears in the first line of the HTTP request. No decoding is performed.",
                                :type "string"},
                        :scheme {:description "The HTTP URL scheme, such as `http` and `https`.",
                                 :type "string"}},
           :id "Request",
           :description "This message defines attributes for an HTTP request. If the actual request is not an HTTP request, the runtime system should try to map the actual request to an equivalent HTTP request."},
 :CheckRequest {:type "object",
                :description "Request message for the Check method.",
                :properties {:serviceConfigId {:description "Specifies the version of the service configuration that should be used to process the request. Must not be empty. Set this field to 'latest' to specify using the latest configuration.",
                                               :type "string"},
                             :attributes {:description "Describes attributes about the operation being executed by the service.",
                                          :$ref "AttributeContext"},
                             :resources {:type "array",
                                         :description "Describes the resources and the policies applied to each resource.",
                                         :items {:$ref "ResourceInfo"}}},
                :id "CheckRequest"},
 :Peer {:description "This message defines attributes for a node that handles a network request. The node can be either a service or an application that sends, forwards, or receives the request. Service peers should fill in `principal` and `labels` as appropriate.",
        :id "Peer",
        :properties {:regionCode {:type "string",
                                  :description "The CLDR country/region code associated with the above IP address. If the IP address is private, the `region_code` should reflect the physical location where this peer is running."},
                     :principal {:description "The identity of this peer. Similar to `Request.auth.principal`, but relative to the peer instead of the request. For example, the idenity associated with a load balancer that forwared the request.",
                                 :type "string"},
                     :labels {:type "object",
                              :description "The labels associated with the peer.",
                              :additionalProperties {:type "string"}},
                     :port {:type "string",
                            :description "The network port of the peer.",
                            :format "int64"},
                     :ip {:description "The IP address of the peer.",
                          :type "string"}},
        :type "object"},
 :AuditLog {:type "object",
            :id "AuditLog",
            :properties {:response {:additionalProperties {:description "Properties of the object.",
                                                           :type "any"},
                                    :type "object",
                                    :description "The operation response. This may not include all response elements, such as those that are too large, privacy-sensitive, or duplicated elsewhere in the log record. It should never include user-generated data, such as file contents. When the JSON object represented here has a proto equivalent, the proto name will be indicated in the `@type` property."},
                         :request {:type "object",
                                   :description "The operation request. This may not include all request parameters, such as those that are too large, privacy-sensitive, or duplicated elsewhere in the log record. It should never include user-generated data, such as file contents. When the JSON object represented here has a proto equivalent, the proto name will be indicated in the `@type` property.",
                                   :additionalProperties {:type "any",
                                                          :description "Properties of the object."}},
                         :serviceData {:type "object",
                                       :additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                              :type "any"},
                                       :description "Deprecated. Use the `metadata` field instead. Other service-specific data about the request, response, and other activities."},
                         :authorizationInfo {:items {:$ref "AuthorizationInfo"},
                                             :type "array",
                                             :description "Authorization information. If there are multiple resources or permissions involved, then there is one AuthorizationInfo element for each {resource, permission} tuple."},
                         :resourceOriginalState {:additionalProperties {:description "Properties of the object.",
                                                                        :type "any"},
                                                 :type "object",
                                                 :description "The resource's original state before mutation. Present only for operations which have successfully modified the targeted resource(s). In general, this field should contain all changed fields, except those that are already been included in `request`, `response`, `metadata` or `service_data` fields. When the JSON object represented here has a proto equivalent, the proto name will be indicated in the `@type` property."},
                         :authenticationInfo {:$ref "AuthenticationInfo",
                                              :description "Authentication information."},
                         :requestMetadata {:description "Metadata about the operation.",
                                           :$ref "RequestMetadata"},
                         :resourceName {:type "string",
                                        :description "The resource or collection that is the target of the operation. The name is a scheme-less URI, not including the API service name. For example: \"projects/PROJECT_ID/zones/us-central1-a/instances\" \"projects/PROJECT_ID/datasets/DATASET_ID\""},
                         :resourceLocation {:$ref "ResourceLocation",
                                            :description "The resource location information."},
                         :status {:$ref "Status",
                                  :description "The status of the overall operation."},
                         :numResponseItems {:description "The number of items returned from a List or Query API method, if applicable.",
                                            :type "string",
                                            :format "int64"},
                         :serviceName {:type "string",
                                       :description "The name of the API service performing the operation. For example, `\"compute.googleapis.com\"`."},
                         :methodName {:description "The name of the service method or operation. For API calls, this should be the name of the API method. For example, \"google.cloud.bigquery.v2.TableService.InsertTable\" \"google.logging.v2.ConfigServiceV2.CreateSink\"",
                                      :type "string"},
                         :metadata {:additionalProperties {:description "Properties of the object.",
                                                           :type "any"},
                                    :description "Other service-specific data about the request, response, and other information associated with the current audited event.",
                                    :type "object"}},
            :description "Common audit log format for Google Cloud Platform API operations. "},
 :CheckResponse {:id "CheckResponse",
                 :properties {:status {:description "An 'OK' status allows the operation. Any other status indicates a denial; [google.rpc.Status.details]() would contain additional details about the denial.",
                                       :$ref "Status"},
                              :headers {:description "Returns a set of request contexts generated from the `CheckRequest`.",
                                        :additionalProperties {:type "string"},
                                        :type "object"}},
                 :type "object",
                 :description "Response message for the Check method."},
 :SpanContext {:id "SpanContext",
               :type "object",
               :description "The context of a span, attached to Exemplars in Distribution values during aggregation. It contains the name of a span with format: projects/[PROJECT_ID_OR_NUMBER]/traces/[TRACE_ID]/spans/[SPAN_ID]",
               :properties {:spanName {:description "The resource name of the span. The format is: projects/[PROJECT_ID_OR_NUMBER]/traces/[TRACE_ID]/spans/[SPAN_ID] `[TRACE_ID]` is a unique identifier for a trace within a project; it is a 32-character hexadecimal encoding of a 16-byte array. `[SPAN_ID]` is a unique identifier for a span within a trace; it is a 16-character hexadecimal encoding of an 8-byte array.",
                                       :type "string"}}},
 :Auth {:description "This message defines request authentication attributes. Terminology is based on the JSON Web Token (JWT) standard, but the terms also correlate to concepts in other standards.",
        :type "object",
        :id "Auth",
        :properties {:principal {:type "string",
                                 :description "The authenticated principal. Reflects the issuer (`iss`) and subject (`sub`) claims within a JWT. The issuer and subject should be `/` delimited, with `/` percent-encoded within the subject fragment. For Google accounts, the principal format is: \"https://accounts.google.com/{id}\""},
                     :accessLevels {:items {:type "string"},
                                    :type "array",
                                    :description "A list of access level resource names that allow resources to be accessed by authenticated requester. It is part of Secure GCP processing for the incoming request. An access level string has the format: \"//{api_service_name}/accessPolicies/{policy_id}/accessLevels/{short_name}\" Example: \"//accesscontextmanager.googleapis.com/accessPolicies/MY_POLICY_ID/accessLevels/MY_LEVEL\""},
                     :audiences {:description "The intended audience(s) for this authentication information. Reflects the audience (`aud`) claim within a JWT. The audience value(s) depends on the `issuer`, but typically include one or more of the following pieces of information: * The services intended to receive the credential. For example, [\"https://pubsub.googleapis.com/\", \"https://storage.googleapis.com/\"]. * A set of service-based scopes. For example, [\"https://www.googleapis.com/auth/cloud-platform\"]. * The client id of an app, such as the Firebase project id for JWTs from Firebase Auth. Consult the documentation for the credential issuer to determine the information provided.",
                                 :items {:type "string"},
                                 :type "array"},
                     :presenter {:description "The authorized presenter of the credential. Reflects the optional Authorized Presenter (`azp`) claim within a JWT or the OAuth client id. For example, a Google Cloud Platform client id looks as follows: \"123456789012.apps.googleusercontent.com\".",
                                 :type "string"},
                     :claims {:additionalProperties {:type "any",
                                                     :description "Properties of the object."},
                              :type "object",
                              :description "Structured claims presented with the credential. JWTs include `{key: value}` pairs for standard and private claims. The following is a subset of the standard required and optional claims that would typically be presented for a Google-based JWT: {'iss': 'accounts.google.com', 'sub': '113289723416554971153', 'aud': ['123456789012', 'pubsub.googleapis.com'], 'azp': '123456789012.apps.googleusercontent.com', 'email': 'jsmith@example.com', 'iat': 1353601026, 'exp': 1353604926} SAML assertions are similarly specified, but with an identity provider dependent structure."}}},
 :Resource {:type "object",
            :description "This message defines core attributes for a resource. A resource is an addressable (named) entity provided by the destination service. For example, a file stored on a network storage service.",
            :properties {:service {:description "The name of the service that this resource belongs to, such as `pubsub.googleapis.com`. The service may be different from the DNS hostname that actually serves the request.",
                                   :type "string"},
                         :uid {:type "string",
                               :description "The unique identifier of the resource. UID is unique in the time and space for this resource within the scope of the service. It is typically generated by the server on successful creation of a resource and must not be changed. UID is used to uniquely identify resources with resource name reuses. This should be a UUID4."},
                         :type {:description "The type of the resource. The syntax is platform-specific because different platforms define their resources differently. For Google APIs, the type format must be \"{service}/{kind}\".",
                                :type "string"},
                         :name {:type "string",
                                :description "The stable identifier (name) of a resource on the `service`. A resource can be logically identified as \"//{resource.service}/{resource.name}\". The differences between a resource name and a URI are: * Resource name is a logical identifier, independent of network protocol and API version. For example, `//pubsub.googleapis.com/projects/123/topics/news-feed`. * URI often includes protocol and version information, so it can be used directly by applications. For example, `https://pubsub.googleapis.com/v1/projects/123/topics/news-feed`. See https://cloud.google.com/apis/design/resource_names for details."},
                         :labels {:type "object",
                                  :description "The labels or tags on the resource, such as AWS resource tags and Kubernetes resource labels.",
                                  :additionalProperties {:type "string"}}},
            :id "Resource"},
 :Response {:properties {:code {:format "int64",
                                :type "string",
                                :description "The HTTP response status code, such as `200` and `404`."},
                         :time {:description "The timestamp when the `destination` service generates the first byte of the response.",
                                :type "string",
                                :format "google-datetime"},
                         :size {:description "The HTTP response size in bytes. If unknown, it must be -1.",
                                :type "string",
                                :format "int64"},
                         :headers {:type "object",
                                   :description "The HTTP response headers. If multiple headers share the same key, they must be merged according to HTTP spec. All header keys must be lowercased, because HTTP header keys are case-insensitive.",
                                   :additionalProperties {:type "string"}}},
            :id "Response",
            :description "This message defines attributes for a typical network response. It generally models semantics of an HTTP response.",
            :type "object"},
 :ThirdPartyPrincipal {:id "ThirdPartyPrincipal",
                       :description "Third party identity principal.",
                       :type "object",
                       :properties {:thirdPartyClaims {:additionalProperties {:description "Properties of the object.",
                                                                              :type "any"},
                                                       :type "object",
                                                       :description "Metadata about third party identity."}}},
 :AuthenticationInfo {:properties {:thirdPartyPrincipal {:description "The third party identification (if any) of the authenticated user making the request. When the JSON object represented here has a proto equivalent, the proto name will be indicated in the `@type` property.",
                                                         :additionalProperties {:type "any",
                                                                                :description "Properties of the object."},
                                                         :type "object"},
                                   :serviceAccountKeyName {:description "The name of the service account key used to create or exchange credentials for authenticating the service account making the request. This is a scheme-less URI full resource name. For example: \"//iam.googleapis.com/projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}\"",
                                                           :type "string"},
                                   :principalEmail {:description "The email address of the authenticated user (or service account on behalf of third party principal) making the request. For third party identity callers, the `principal_subject` field is populated instead of this field. For privacy reasons, the principal email address is sometimes redacted. For more information, see [Caller identities in audit logs](https://cloud.google.com/logging/docs/audit#user-id).",
                                                    :type "string"},
                                   :authoritySelector {:type "string",
                                                       :description "The authority selector specified by the requestor, if any. It is not guaranteed that the principal was allowed to use this authority."},
                                   :principalSubject {:description "String representation of identity of requesting party. Populated for both first and third party identities.",
                                                      :type "string"},
                                   :serviceAccountDelegationInfo {:type "array",
                                                                  :items {:$ref "ServiceAccountDelegationInfo"},
                                                                  :description "Identity delegation history of an authenticated service account that makes the request. It contains information on the real authorities that try to access GCP resources by delegating on a service account. When multiple authorities present, they are guaranteed to be sorted based on the original ordering of the identity delegation events."}},
                      :id "AuthenticationInfo",
                      :description "Authentication information for the operation.",
                      :type "object"},
 :ReportRequest {:description "Request message for the Report method.",
                 :properties {:operations {:description "Describes the list of operations to be reported. Each operation is represented as an AttributeContext, and contains all attributes around an API access.",
                                           :type "array",
                                           :items {:$ref "AttributeContext"}},
                              :serviceConfigId {:type "string",
                                                :description "Specifies the version of the service configuration that should be used to process the request. Must not be empty. Set this field to 'latest' to specify using the latest configuration."}},
                 :id "ReportRequest",
                 :type "object"},
 :AuthorizationInfo {:description "Authorization information for the operation.",
                     :type "object",
                     :id "AuthorizationInfo",
                     :properties {:resource {:type "string",
                                             :description "The resource being accessed, as a REST-style string. For example: bigquery.googleapis.com/projects/PROJECTID/datasets/DATASETID"},
                                  :resourceAttributes {:$ref "Resource",
                                                       :description "Resource attributes used in IAM condition evaluation. This field contains resource attributes like resource type and resource name. To get the whole view of the attributes used in IAM condition evaluation, the user must also look into `AuditLog.request_metadata.request_attributes`."},
                                  :permission {:type "string",
                                               :description "The required IAM permission."},
                                  :granted {:type "boolean",
                                            :description "Whether or not authorization for `resource` and `permission` was granted."}}},
 :FirstPartyPrincipal {:id "FirstPartyPrincipal",
                       :type "object",
                       :properties {:principalEmail {:description "The email address of a Google account. .",
                                                     :type "string"},
                                    :serviceMetadata {:type "object",
                                                      :additionalProperties {:type "any",
                                                                             :description "Properties of the object."},
                                                      :description "Metadata about the service that uses the service account. ."}},
                       :description "First party identity principal."},
 :ResourceLocation {:properties {:originalLocations {:description "The locations of a resource prior to the execution of the operation. Requests that mutate the resource's location must populate both the 'original_locations' as well as the 'current_locations' fields. For example: \"europe-west1-a\" \"us-east1\" \"nam3\"",
                                                     :items {:type "string"},
                                                     :type "array"},
                                 :currentLocations {:type "array",
                                                    :description "The locations of a resource after the execution of the operation. Requests to create or delete a location based resource must populate the 'current_locations' field and not the 'original_locations' field. For example: \"europe-west1-a\" \"us-east1\" \"nam3\"",
                                                    :items {:type "string"}}},
                    :id "ResourceLocation",
                    :type "object",
                    :description "Location information about a resource."},
 :ReportResponse {:properties {},
                  :id "ReportResponse",
                  :type "object",
                  :description "Response message for the Report method. If the request contains any invalid data, the server returns an RPC error."},
 :Status {:description "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
          :id "Status",
          :properties {:message {:type "string",
                                 :description "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."},
                       :code {:type "integer",
                              :format "int32",
                              :description "The status code, which should be an enum value of google.rpc.Code."},
                       :details {:items {:type "object",
                                         :additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                                :type "any"}},
                                 :type "array",
                                 :description "A list of messages that carry the error details. There is a common set of message types for APIs to use."}},
          :type "object"}}
