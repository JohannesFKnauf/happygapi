{:RelationshipDetails {:id "RelationshipDetails",
                       :type "object",
                       :description "Details about a relationship column.",
                       :properties {:linkedTable {:type "string",
                                                  :description "The name of the table this relationship is linked to."}}},
 :Workspace {:id "Workspace",
             :type "object",
             :properties {:createTime {:type "string",
                                       :format "google-datetime",
                                       :description "Time when the workspace was created."},
                          :name {:description "The resource name of the workspace. Workspace names have the form `workspaces/{workspace}`.",
                                 :type "string"},
                          :displayName {:description "The human readable title of the workspace.",
                                        :type "string"},
                          :updateTime {:description "Time when the workspace was last updated.",
                                       :type "string",
                                       :format "google-datetime"},
                          :tables {:description "The list of tables in the workspace.",
                                   :type "array",
                                   :items {:$ref "Table"}}},
             :description "A single workspace."},
 :Table {:description "A single table. NextId: 8",
         :type "object",
         :properties {:timeZone {:type "string",
                                 :description "The time zone of the table. IANA Time Zone Database time zone, e.g. \"America/New_York\"."},
                      :savedViews {:items {:$ref "SavedView"},
                                   :type "array",
                                   :description "Saved views for this table."},
                      :displayName {:description "The human readable title of the table.",
                                    :type "string"},
                      :name {:description "The resource name of the table. Table names have the form `tables/{table}`.",
                             :type "string"},
                      :columns {:description "List of columns in this table. Order of columns matches the display order.",
                                :items {:$ref "ColumnDescription"},
                                :type "array"},
                      :updateTime {:type "string",
                                   :description "Time when the table was last updated excluding updates to individual rows",
                                   :format "google-datetime"},
                      :createTime {:description "Time when the table was created.",
                                   :format "google-datetime",
                                   :type "string"}},
         :id "Table"},
 :CreateRowRequest {:type "object",
                    :description "Request message for TablesService.CreateRow.",
                    :properties {:parent {:description "Required. The parent table where this row will be created. Format: tables/{table}",
                                          :type "string"},
                                 :view {:type "string",
                                        :enumDescriptions ["Defaults to user entered text."
                                                           "Uses internally generated column id to identify values."],
                                        :description "Optional. Column key to use for values in the row. Defaults to user entered name.",
                                        :enum ["VIEW_UNSPECIFIED"
                                               "COLUMN_ID_VIEW"]},
                                 :row {:$ref "Row",
                                       :description "Required. The row to create."}},
                    :id "CreateRowRequest"},
 :ColumnDescription {:id "ColumnDescription",
                     :type "object",
                     :properties {:labels {:type "array",
                                           :description "Optional. Range of labeled values for the column. Some columns like tags and drop-downs limit the values to a set of possible values. We return the range of values in such cases to help clients implement better user data validation.",
                                           :items {:$ref "LabeledItem"}},
                                  :lookupDetails {:$ref "LookupDetails",
                                                  :description "Optional. Indicates that this is a lookup column whose value is derived from the relationship column specified in the details. Lookup columns can not be updated directly. To change the value you must update the associated relationship column."},
                                  :relationshipDetails {:$ref "RelationshipDetails",
                                                        :description "Optional. Additional details about a relationship column. Specified when data_type is relationship."},
                                  :multipleValuesDisallowed {:type "boolean",
                                                             :description "Optional. Indicates whether or not multiple values are allowed for array types where such a restriction is possible."},
                                  :name {:description "column name",
                                         :type "string"},
                                  :readonly {:description "Optional. Indicates that values for the column cannot be set by the user.",
                                             :type "boolean"},
                                  :dateDetails {:description "Optional. Additional details about a date column.",
                                                :$ref "DateDetails"},
                                  :dataType {:type "string",
                                             :description "Data type of the column Supported types are auto_id, boolean, boolean_list, creator, create_timestamp, date, dropdown, location, integer, integer_list, number, number_list, person, person_list, tags, check_list, text, text_list, update_timestamp, updater, relationship, file_attachment_list. These types directly map to the column types supported on Tables website."},
                                  :id {:type "string",
                                       :description "Internal id for a column."}},
                     :description "Details on a column in the table."},
 :ListTablesResponse {:id "ListTablesResponse",
                      :type "object",
                      :description "Response message for TablesService.ListTables.",
                      :properties {:nextPageToken {:description "A token, which can be sent as `page_token` to retrieve the next page. If this field is empty, there are no subsequent pages.",
                                                   :type "string"},
                                   :tables {:type "array",
                                            :items {:$ref "Table"},
                                            :description "The list of tables."}}},
 :ListWorkspacesResponse {:id "ListWorkspacesResponse",
                          :description "Response message for TablesService.ListWorkspaces.",
                          :type "object",
                          :properties {:workspaces {:description "The list of workspaces.",
                                                    :type "array",
                                                    :items {:$ref "Workspace"}},
                                       :nextPageToken {:description "A token, which can be sent as `page_token` to retrieve the next page. If this field is empty, there are no subsequent pages.",
                                                       :type "string"}}},
 :BatchDeleteRowsRequest {:id "BatchDeleteRowsRequest",
                          :type "object",
                          :properties {:names {:items {:type "string"},
                                               :type "array",
                                               :description "Required. The names of the rows to delete. All rows must belong to the parent table or else the entire batch will fail. A maximum of 500 rows can be deleted in a batch. Format: tables/{table}/rows/{row}"}},
                          :description "Request message for TablesService.BatchDeleteRows"},
 :Row {:properties {:values {:type "object",
                             :description "The values of the row. This is a map of column key to value. Key is user entered name(default) or the internal column id based on the view in the request.",
                             :additionalProperties {:type "any"}},
                    :createTime {:description "Time when the row was created.",
                                 :type "string",
                                 :format "google-datetime"},
                    :updateTime {:description "Time when the row was last updated.",
                                 :type "string",
                                 :format "google-datetime"},
                    :name {:type "string",
                           :description "The resource name of the row. Row names have the form `tables/{table}/rows/{row}`. The name is ignored when creating a row."}},
       :description "A single row in a table.",
       :type "object",
       :id "Row"},
 :BatchUpdateRowsResponse {:id "BatchUpdateRowsResponse",
                           :type "object",
                           :properties {:rows {:type "array",
                                               :description "The updated rows.",
                                               :items {:$ref "Row"}}},
                           :description "Response message for TablesService.BatchUpdateRows."},
 :Empty {:description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
         :properties {},
         :id "Empty",
         :type "object"},
 :BatchCreateRowsRequest {:properties {:requests {:items {:$ref "CreateRowRequest"},
                                                  :type "array",
                                                  :description "Required. The request message specifying the rows to create. A maximum of 500 rows can be created in a single batch."}},
                          :id "BatchCreateRowsRequest",
                          :type "object",
                          :description "Request message for TablesService.BatchCreateRows."},
 :ListRowsResponse {:type "object",
                    :properties {:rows {:description "The rows from the specified table.",
                                        :items {:$ref "Row"},
                                        :type "array"},
                                 :nextPageToken {:type "string",
                                                 :description "A token, which can be sent as `page_token` to retrieve the next page. If this field is empty, there are no subsequent pages."}},
                    :id "ListRowsResponse",
                    :description "Response message for TablesService.ListRows."},
 :LabeledItem {:properties {:id {:description "Internal id associated with the item.",
                                 :type "string"},
                            :name {:type "string",
                                   :description "Display string as entered by user."}},
               :description "A single item in a labeled column.",
               :type "object",
               :id "LabeledItem"},
 :BatchCreateRowsResponse {:type "object",
                           :properties {:rows {:type "array",
                                               :description "The created rows.",
                                               :items {:$ref "Row"}}},
                           :id "BatchCreateRowsResponse",
                           :description "Response message for TablesService.BatchCreateRows."},
 :BatchUpdateRowsRequest {:description "Request message for TablesService.BatchUpdateRows.",
                          :id "BatchUpdateRowsRequest",
                          :type "object",
                          :properties {:requests {:items {:$ref "UpdateRowRequest"},
                                                  :description "Required. The request messages specifying the rows to update. A maximum of 500 rows can be modified in a single batch.",
                                                  :type "array"}}},
 :SavedView {:description "A saved view of a table. NextId: 3",
             :properties {:name {:description "Display name of the saved view.",
                                 :type "string"},
                          :id {:description "Internal id associated with the saved view.",
                               :type "string"}},
             :id "SavedView",
             :type "object"},
 :UpdateRowRequest {:type "object",
                    :id "UpdateRowRequest",
                    :properties {:updateMask {:description "The list of fields to update.",
                                              :type "string",
                                              :format "google-fieldmask"},
                                 :row {:$ref "Row",
                                       :description "Required. The row to update."},
                                 :view {:enum ["VIEW_UNSPECIFIED"
                                               "COLUMN_ID_VIEW"],
                                        :description "Optional. Column key to use for values in the row. Defaults to user entered name.",
                                        :enumDescriptions ["Defaults to user entered text."
                                                           "Uses internally generated column id to identify values."],
                                        :type "string"}},
                    :description "Request message for TablesService.UpdateRow."},
 :DateDetails {:type "object",
               :properties {:hasTime {:description "Whether the date column includes time.",
                                      :type "boolean"}},
               :id "DateDetails",
               :description "Details about a date column."},
 :LookupDetails {:properties {:relationshipColumn {:type "string",
                                                   :description "The name of the relationship column associated with the lookup."},
                              :relationshipColumnId {:type "string",
                                                     :description "The id of the relationship column."}},
                 :id "LookupDetails",
                 :type "object",
                 :description "Details about a lookup column whose value comes from the associated relationship."}}
