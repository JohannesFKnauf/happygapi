{:RelationshipDetails {:type "object",
                       :description "Details about a relationship column.",
                       :properties {:linkedTable {:description "The name of the table this relationship is linked to.",
                                                  :type "string"}},
                       :id "RelationshipDetails"},
 :Table {:id "Table",
         :properties {:columns {:type "array",
                                :items {:$ref "ColumnDescription"},
                                :description "List of columns in this table. Order of columns matches the display order."},
                      :name {:type "string",
                             :description "The resource name of the table. Table names have the form `tables/{table}`."},
                      :displayName {:description "The human readable title of the table.",
                                    :type "string"}},
         :description "A single table.",
         :type "object"},
 :CreateRowRequest {:id "CreateRowRequest",
                    :type "object",
                    :description "Request message for TablesService.CreateRow.",
                    :properties {:view {:enum ["VIEW_UNSPECIFIED"
                                               "COLUMN_ID_VIEW"],
                                        :type "string",
                                        :description "Optional. Column key to use for values in the row. Defaults to user entered name.",
                                        :enumDescriptions ["Defaults to user entered text."
                                                           "Uses internally generated column id to identify values."]},
                                 :parent {:type "string",
                                          :description "Required. The parent table where this row will be created. Format: tables/{table}"},
                                 :row {:description "Required. The row to create.",
                                       :$ref "Row"}}},
 :ColumnDescription {:properties {:dataType {:description "Data type of the column Supported types are auto_id, boolean, boolean_list, creator, create_timestamp, date, dropdown, location, integer, integer_list, number, number_list, person, person_list, tags, check_list, text, text_list, update_timestamp, updater, relationship, file_attachment_list. These types directly map to the column types supported on Tables website.",
                                             :type "string"},
                                  :labels {:type "array",
                                           :description "Optional. Range of labeled values for the column. Some columns like tags and drop-downs limit the values to a set of possible values. We return the range of values in such cases to help clients implement better user data validation.",
                                           :items {:$ref "LabeledItem"}},
                                  :relationshipDetails {:description "Optional. Additional details about a relationship column. Specified when data_type is relationship.",
                                                        :$ref "RelationshipDetails"},
                                  :id {:description "Internal id for a column.",
                                       :type "string"},
                                  :lookupDetails {:description "Optional. Indicates that this is a lookup column whose value is derived from the relationship column specified in the details. Lookup columns can not be updated directly. To change the value you must update the associated relationship column.",
                                                  :$ref "LookupDetails"},
                                  :name {:type "string",
                                         :description "column name"}},
                     :type "object",
                     :id "ColumnDescription",
                     :description "Details on a column in the table."},
 :ListTablesResponse {:id "ListTablesResponse",
                      :properties {:nextPageToken {:description "A token, which can be sent as `page_token` to retrieve the next page. If this field is empty, there are no subsequent pages.",
                                                   :type "string"},
                                   :tables {:type "array",
                                            :description "The list of tables.",
                                            :items {:$ref "Table"}}},
                      :type "object",
                      :description "Response message for TablesService.ListTables."},
 :Row {:properties {:values {:type "object",
                             :additionalProperties {:type "any"},
                             :description "The values of the row. This is a map of column key to value. Key is user entered name(default) or the internal column id based on the view in the request."},
                    :name {:description "The resource name of the row. Row names have the form `tables/{table}/rows/{row}`. The name is ignored when creating a row.",
                           :type "string"}},
       :type "object",
       :description "A single row in a table.",
       :id "Row"},
 :BatchUpdateRowsResponse {:id "BatchUpdateRowsResponse",
                           :properties {:rows {:type "array",
                                               :description "The updated rows.",
                                               :items {:$ref "Row"}}},
                           :type "object",
                           :description "Response message for TablesService.BatchUpdateRows."},
 :Empty {:id "Empty",
         :description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
         :properties {},
         :type "object"},
 :BatchCreateRowsRequest {:properties {:requests {:type "array",
                                                  :items {:$ref "CreateRowRequest"},
                                                  :description "Required. The request message specifying the rows to create. A maximum of 500 rows can be created in a single batch."}},
                          :id "BatchCreateRowsRequest",
                          :description "Request message for TablesService.BatchCreateRows.",
                          :type "object"},
 :ListRowsResponse {:properties {:rows {:type "array",
                                        :description "The rows from the specified table.",
                                        :items {:$ref "Row"}},
                                 :nextPageToken {:description "A token, which can be sent as `page_token` to retrieve the next page. If this field is empty, there are no subsequent pages.",
                                                 :type "string"}},
                    :id "ListRowsResponse",
                    :description "Response message for TablesService.ListRows.",
                    :type "object"},
 :LabeledItem {:properties {:name {:type "string",
                                   :description "Display string as entered by user."},
                            :id {:type "string",
                                 :description "Internal id associated with the item."}},
               :description "A single item in a labeled column.",
               :id "LabeledItem",
               :type "object"},
 :BatchCreateRowsResponse {:type "object",
                           :description "Response message for TablesService.BatchCreateRows.",
                           :id "BatchCreateRowsResponse",
                           :properties {:rows {:type "array",
                                               :items {:$ref "Row"},
                                               :description "The created rows."}}},
 :BatchUpdateRowsRequest {:type "object",
                          :properties {:requests {:items {:$ref "UpdateRowRequest"},
                                                  :description "Required. The request messages specifying the rows to update. A maximum of 500 rows can be modified in a single batch.",
                                                  :type "array"}},
                          :id "BatchUpdateRowsRequest",
                          :description "Request message for TablesService.BatchUpdateRows."},
 :UpdateRowRequest {:type "object",
                    :properties {:view {:enum ["VIEW_UNSPECIFIED"
                                               "COLUMN_ID_VIEW"],
                                        :description "Optional. Column key to use for values in the row. Defaults to user entered name.",
                                        :type "string",
                                        :enumDescriptions ["Defaults to user entered text."
                                                           "Uses internally generated column id to identify values."]},
                                 :row {:description "Required. The row to update.",
                                       :$ref "Row"},
                                 :updateMask {:description "The list of fields to update.",
                                              :format "google-fieldmask",
                                              :type "string"}},
                    :description "Request message for TablesService.UpdateRow.",
                    :id "UpdateRowRequest"},
 :LookupDetails {:id "LookupDetails",
                 :description "Details about a lookup column whose value comes from the associated relationship.",
                 :type "object",
                 :properties {:relationshipColumn {:description "The name of the relationship column associated with the lookup.",
                                                   :type "string"},
                              :relationshipColumnId {:description "The id of the relationship column.",
                                                     :type "string"}}}}
