{:Environment {:description "An environment for running orchestration tasks.",
               :type "object",
               :properties {:labels {:additionalProperties {:type "string"},
                                     :description "Optional. User-defined labels for this environment.\nThe labels map can contain no more than 64 entries. Entries of the labels\nmap are UTF8 strings that comply with the following restrictions:\n\n* Keys must conform to regexp: \\p{Ll}\\p{Lo}{0,62}\n* Values must conform to regexp:  [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63}\n* Both keys and values are additionally constrained to be <= 128 bytes in\nsize.",
                                     :type "object"},
                            :createTime {:description "Output only. The time at which this environment was created.",
                                         :format "google-datetime",
                                         :type "string"},
                            :updateTime {:description "Output only. The time at which this environment was last modified.",
                                         :format "google-datetime",
                                         :type "string"},
                            :config {:$ref "EnvironmentConfig",
                                     :description "Configuration parameters for this environment."},
                            :state {:enum ["STATE_UNSPECIFIED"
                                           "CREATING"
                                           "RUNNING"
                                           "UPDATING"
                                           "DELETING"
                                           "ERROR"],
                                    :description "The current state of the environment.",
                                    :type "string",
                                    :enumDescriptions ["The state of the environment is unknown."
                                                       "The environment is in the process of being created."
                                                       "The environment is currently running and healthy. It is ready for use."
                                                       "The environment is being updated. It remains usable but cannot receive\nadditional update requests or be deleted at this time."
                                                       "The environment is undergoing deletion. It cannot be used."
                                                       "The environment has encountered an error and cannot be used."]},
                            :name {:description "The resource name of the environment, in the form:\n\"projects/{projectId}/locations/{locationId}/environments/{environmentId}\"\n\nEnvironmentId must start with a lowercase letter followed by up to 63\nlowercase letters, numbers, or hyphens, and cannot end with a hyphen.",
                                   :type "string"},
                            :uuid {:description "Output only. The UUID (Universally Unique IDentifier) associated with this environment.\nThis value is generated when the environment is created.",
                                   :type "string"}},
               :id "Environment"},
 :Operation {:id "Operation",
             :description "This resource represents a long-running operation that is the result of a\nnetwork API call.",
             :type "object",
             :properties {:done {:type "boolean",
                                 :description "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable."},
                          :response {:type "object",
                                     :additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                            :type "any"},
                                     :description "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`."},
                          :name {:type "string",
                                 :description "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should be a resource name ending with `operations/{unique_id}`."},
                          :error {:$ref "Status",
                                  :description "The error result of the operation in case of failure or cancellation."},
                          :metadata {:additionalProperties {:type "any",
                                                            :description "Properties of the object. Contains field @type with type URL."},
                                     :description "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
                                     :type "object"}}},
 :EnvironmentConfig {:description "Configuration information for an environment.",
                     :type "object",
                     :properties {:gkeCluster {:description "Output only. The Kubernetes Engine cluster used to run this environment.",
                                               :type "string"},
                                  :airflowUri {:description "Output only. The URI of the Apache Airflow Web UI hosted within this environment (see\n[Airflow web\ninterface](/composer/docs/how-to/accessing/airflow-web-interface)).",
                                               :type "string"},
                                  :softwareConfig {:$ref "SoftwareConfig",
                                                   :description "The configuration settings for software inside the environment."},
                                  :nodeConfig {:$ref "NodeConfig",
                                               :description "The configuration used for the Kubernetes Engine cluster."},
                                  :nodeCount {:description "The number of nodes in the Kubernetes Engine cluster that will be\nused to run this environment.",
                                              :format "int32",
                                              :type "integer"},
                                  :dagGcsPrefix {:description "Output only. The Cloud Storage prefix of the DAGs for this environment. Although Cloud\nStorage objects reside in a flat namespace, a hierarchical file tree\ncan be simulated using \"/\"-delimited object name prefixes. DAG objects for\nthis environment reside in a simulated directory with the given prefix.",
                                                 :type "string"}},
                     :id "EnvironmentConfig"},
 :ListImageVersionsResponse {:description "The ImageVersions in a project and location.",
                             :type "object",
                             :properties {:imageVersions {:description "The list of supported ImageVersions in a location.",
                                                          :type "array",
                                                          :items {:$ref "ImageVersion"}},
                                          :nextPageToken {:description "The page token used to query for the next page if one exists.",
                                                          :type "string"}},
                             :id "ListImageVersionsResponse"},
 :ListEnvironmentsResponse {:id "ListEnvironmentsResponse",
                            :description "The environments in a project and location.",
                            :type "object",
                            :properties {:nextPageToken {:description "The page token used to query for the next page if one exists.",
                                                         :type "string"},
                                         :environments {:description "The list of environments returned by a ListEnvironmentsRequest.",
                                                        :type "array",
                                                        :items {:$ref "Environment"}}}},
 :Empty {:description "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
         :type "object",
         :properties {},
         :id "Empty"},
 :SoftwareConfig {:description "Specifies the selection and configuration of software inside the environment.",
                  :type "object",
                  :properties {:airflowConfigOverrides {:additionalProperties {:type "string"},
                                                        :description "Optional. Apache Airflow configuration properties to override.\n\nProperty keys contain the section and property names, separated by a\nhyphen, for example \"core-dags_are_paused_at_creation\". Section names must\nnot contain hyphens (\"-\"), opening square brackets (\"[\"),  or closing\nsquare brackets (\"]\"). The property name must not be empty and must not\ncontain an equals sign (\"=\") or semicolon (\";\"). Section and property names\nmust not contain a period (\".\"). Apache Airflow configuration property\nnames must be written in\n[snake_case](https://en.wikipedia.org/wiki/Snake_case). Property values can\ncontain any character, and can be written in any lower/upper case format.\n\nCertain Apache Airflow configuration property values are\n[blacklisted](/composer/docs/how-to/managing/setting-airflow-configurations#airflow_configuration_blacklists),\nand cannot be overridden.",
                                                        :type "object"},
                               :envVariables {:type "object",
                                              :additionalProperties {:type "string"},
                                              :description "Optional. Additional environment variables to provide to the Apache Airflow\nscheduler, worker, and webserver processes.\n\nEnvironment variable names must match the regular expression\n`a-zA-Z_*`. They cannot specify Apache Airflow\nsoftware configuration overrides (they cannot match the regular expression\n`AIRFLOW__[A-Z0-9_]+__[A-Z0-9_]+`), and they cannot match any of the\nfollowing reserved names:\n\n* `AIRFLOW_HOME`\n* `C_FORCE_ROOT`\n* `CONTAINER_NAME`\n* `DAGS_FOLDER`\n* `GCP_PROJECT`\n* `GCS_BUCKET`\n* `GKE_CLUSTER_NAME`\n* `SQL_DATABASE`\n* `SQL_INSTANCE`\n* `SQL_PASSWORD`\n* `SQL_PROJECT`\n* `SQL_REGION`\n* `SQL_USER`"},
                               :pythonVersion {:description "Optional. The major version of Python used to run the Apache Airflow\nscheduler, worker, and webserver processes.\n\nCan be set to '2' or '3'. If not specified, the default is '2'. Cannot be\nupdated.",
                                               :type "string"},
                               :pypiPackages {:additionalProperties {:type "string"},
                                              :description "Optional. Custom Python Package Index (PyPI) packages to be installed in\nthe environment.\n\nKeys refer to the lowercase package name such as \"numpy\"\nand values are the lowercase extras and version specifier such as\n\"==1.12.0\", \"[devel,gcp_api]\", or \"[devel]>=1.8.2, <1.9.2\". To specify a\npackage without pinning it to a version specifier, use the empty string as\nthe value.",
                                              :type "object"},
                               :imageVersion {:type "string",
                                              :description "The version of the software running in the environment.\nThis encapsulates both the version of Cloud Composer functionality and the\nversion of Apache Airflow. It must match the regular expression\n`composer-([0-9]+\\.[0-9]+\\.[0-9]+|latest)-airflow-[0-9]+\\.[0-9]+(\\.[0-9]+.*)?`.\nWhen used as input, the server also checks if the provided version is\nsupported and denies the request for an unsupported version.\n\nThe Cloud Composer portion of the version is a\n[semantic version](https://semver.org) or `latest`. When the patch version\nis omitted, the current Cloud Composer patch version is selected.\nWhen `latest` is provided instead of an explicit version number,\nthe server replaces `latest` with the current Cloud Composer version\nand stores that version number in the same field.\n\nThe portion of the image version that follows <em>airflow-</em> is an\nofficial Apache Airflow repository\n[release name](https://github.com/apache/incubator-airflow/releases).\n\nSee also [Version\nList](/composer/docs/concepts/versioning/composer-versions)."}},
                  :id "SoftwareConfig"},
 :OperationMetadata {:id "OperationMetadata",
                     :description "Metadata describing an operation.",
                     :type "object",
                     :properties {:endTime {:description "Output only. The time when the operation terminated, regardless of its success.\nThis field is unset if the operation is still ongoing.",
                                            :format "google-datetime",
                                            :type "string"},
                                  :operationType {:type "string",
                                                  :enumDescriptions ["Unused."
                                                                     "A resource creation operation."
                                                                     "A resource deletion operation."
                                                                     "A resource update operation."],
                                                  :enum ["TYPE_UNSPECIFIED"
                                                         "CREATE"
                                                         "DELETE"
                                                         "UPDATE"],
                                                  :description "Output only. The type of operation being performed."},
                                  :createTime {:description "Output only. The time the operation was submitted to the server.",
                                               :format "google-datetime",
                                               :type "string"},
                                  :resource {:description "Output only. The resource being operated on, as a [relative resource name](\n/apis/design/resource_names#relative_resource_name).",
                                             :type "string"},
                                  :state {:enumDescriptions ["Unused."
                                                             "The operation has been created but is not yet started."
                                                             "The operation is underway."
                                                             "The operation completed successfully."
                                                             ""
                                                             "The operation is no longer running but did not succeed."],
                                          :enum ["STATE_UNSPECIFIED"
                                                 "PENDING"
                                                 "RUNNING"
                                                 "SUCCEEDED"
                                                 "SUCCESSFUL"
                                                 "FAILED"],
                                          :description "Output only. The current operation state.",
                                          :type "string"},
                                  :resourceUuid {:type "string",
                                                 :description "Output only. The UUID of the resource being operated on."}}},
 :ImageVersion {:description "ImageVersion information",
                :type "object",
                :properties {:supportedPythonVersions {:type "array",
                                                       :items {:type "string"},
                                                       :description "supported python versions"},
                             :isDefault {:description "Whether this is the default ImageVersion used by Composer during\nenvironment creation if no input ImageVersion is specified.",
                                         :type "boolean"},
                             :imageVersionId {:type "string",
                                              :description "The string identifier of the ImageVersion, in the form:\n\"composer-x.y.z-airflow-a.b(.c)\""}},
                :id "ImageVersion"},
 :ListOperationsResponse {:description "The response message for Operations.ListOperations.",
                          :type "object",
                          :properties {:nextPageToken {:description "The standard List next-page token.",
                                                       :type "string"},
                                       :operations {:description "A list of operations that matches the specified filter in the request.",
                                                    :type "array",
                                                    :items {:$ref "Operation"}}},
                          :id "ListOperationsResponse"},
 :NodeConfig {:description "The configuration information for the Kubernetes Engine nodes running\nthe Apache Airflow software.",
              :type "object",
              :properties {:diskSizeGb {:type "integer",
                                        :description "Optional. The disk size in GB used for node VMs. Minimum size is 20GB.\nIf unspecified, defaults to 100GB. Cannot be updated.",
                                        :format "int32"},
                           :tags {:type "array",
                                  :items {:type "string"},
                                  :description "Optional. The list of instance tags applied to all node VMs. Tags are used\nto identify valid sources or targets for network firewalls. Each tag within\nthe list must comply with [RFC1035](https://www.ietf.org/rfc/rfc1035.txt).\nCannot be updated."},
                           :serviceAccount {:description "Optional. The Google Cloud Platform Service Account to be used by the node\nVMs. If a service account is not specified, the \"default\" Compute Engine\nservice account is used. Cannot be updated.",
                                            :type "string"},
                           :location {:description "Optional. The Compute Engine [zone](/compute/docs/regions-zones) in which\nto deploy the VMs used to run the Apache Airflow software, specified as a\n[relative resource\nname](/apis/design/resource_names#relative_resource_name). For example:\n\"projects/{projectId}/zones/{zoneId}\".\n\nThis `location` must belong to the enclosing environment's project and\nlocation. If both this field and `nodeConfig.machineType` are specified,\n`nodeConfig.machineType` must belong to this `location`; if both are\nunspecified, the service will pick a zone in the Compute Engine region\ncorresponding to the Cloud Composer location, and propagate that choice to\nboth fields. If only one field (`location` or `nodeConfig.machineType`) is\nspecified, the location information from the specified field will be\npropagated to the unspecified field.",
                                      :type "string"},
                           :machineType {:description "Optional. The Compute Engine\n[machine type](/compute/docs/machine-types) used for cluster instances,\nspecified as a\n[relative resource\nname](/apis/design/resource_names#relative_resource_name). For example:\n\"projects/{projectId}/zones/{zoneId}/machineTypes/{machineTypeId}\".\n\nThe `machineType` must belong to the enclosing environment's project and\nlocation. If both this field and `nodeConfig.location` are specified,\nthis `machineType` must belong to the `nodeConfig.location`; if both are\nunspecified, the service will pick a zone in the Compute Engine region\ncorresponding to the Cloud Composer location, and propagate that choice to\nboth fields. If exactly one of this field and `nodeConfig.location` is\nspecified, the location information from the specified field will be\npropagated to the unspecified field.\n\nThe `machineTypeId` must not be a [shared-core machine\ntype](/compute/docs/machine-types#sharedcore).\n\nIf this field is unspecified, the `machineTypeId` defaults\nto \"n1-standard-1\".",
                                         :type "string"},
                           :network {:description "Optional. The Compute Engine network to be used for machine\ncommunications, specified as a\n[relative resource\nname](/apis/design/resource_names#relative_resource_name). For example:\n\"projects/{projectId}/global/networks/{networkId}\".\n\n[Shared VPC](/vpc/docs/shared-vpc) is not currently supported. The\nnetwork must belong to the environment's project. If unspecified, the\n\"default\" network ID in the environment's project is used.  If a\n[Custom Subnet Network](/vpc/docs/vpc#vpc_networks_and_subnets)\nis provided, `nodeConfig.subnetwork` must also be provided.",
                                     :type "string"},
                           :oauthScopes {:description "Optional. The set of Google API scopes to be made available on all\nnode VMs. If `oauth_scopes` is empty, defaults to\n[\"https://www.googleapis.com/auth/cloud-platform\"]. Cannot be updated.",
                                         :type "array",
                                         :items {:type "string"}},
                           :subnetwork {:description "Optional. The Compute Engine subnetwork to be used for machine\ncommunications, specified as a\n[relative resource\nname](/apis/design/resource_names#relative_resource_name). For example:\n\"projects/{projectId}/regions/{regionId}/subnetworks/{subnetworkId}\"\n\nIf a subnetwork is provided, `nodeConfig.network` must also be provided,\nand the subnetwork must belong to the enclosing environment's project and\nlocation.",
                                        :type "string"}},
              :id "NodeConfig"},
 :Status {:description "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors).",
          :type "object",
          :properties {:code {:type "integer",
                              :description "The status code, which should be an enum value of google.rpc.Code.",
                              :format "int32"},
                       :message {:type "string",
                                 :description "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client."},
                       :details {:description "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
                                 :type "array",
                                 :items {:additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                                :type "any"},
                                         :type "object"}}},
          :id "Status"}}
