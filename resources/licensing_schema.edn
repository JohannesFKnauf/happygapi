{:LicenseAssignment {:id "LicenseAssignment",
                     :type "object",
                     :description "Representation of a license assignment.",
                     :properties {:etags {:type "string",
                                          :description "ETag of the resource."},
                                  :kind {:type "string",
                                         :description "Identifies the resource as a LicenseAssignment.",
                                         :default "licensing#licenseAssignment"},
                                  :productId {:type "string",
                                              :description "A product's unique identifier. For more information about products in this version of the API, see Product and SKU IDs.",
                                              :annotations {:required ["licensing.licenseAssignments.update"]}},
                                  :productName {:type "string",
                                                :description "Display Name of the product."},
                                  :selfLink {:type "string",
                                             :description "Link to this page."},
                                  :skuId {:type "string",
                                          :description "A product SKU's unique identifier. For more information about available SKUs in this version of the API, see Products and SKUs.",
                                          :annotations {:required ["licensing.licenseAssignments.update"]}},
                                  :skuName {:type "string",
                                            :description "Display Name of the sku of the product."},
                                  :userId {:type "string",
                                           :description "The user's current primary email address. If the user's email address changes, use the new email address in your API requests. Since a userId is subject to change, do not use a userId value as a key for persistent data. This key could break if the current user's email address changes. If the userId is suspended, the license status changes.",
                                           :annotations {:required ["licensing.licenseAssignments.update"]}}}},
 :LicenseAssignmentInsert {:id "LicenseAssignmentInsert",
                           :type "object",
                           :description "Representation of a license assignment.",
                           :properties {:userId {:type "string",
                                                 :description "Email id of the user",
                                                 :annotations {:required ["licensing.licenseAssignments.insert"]}}}},
 :LicenseAssignmentList {:id "LicenseAssignmentList",
                         :type "object",
                         :description "LicesnseAssignment List for a given product/sku for a customer.",
                         :properties {:etag {:type "string",
                                             :description "ETag of the resource."},
                                      :items {:type "array",
                                              :description "The LicenseAssignments in this page of results.",
                                              :items {:$ref "LicenseAssignment"}},
                                      :kind {:type "string",
                                             :description "Identifies the resource as a collection of LicenseAssignments.",
                                             :default "licensing#licenseAssignmentList"},
                                      :nextPageToken {:type "string",
                                                      :description "The token that you must submit in a subsequent request to retrieve additional license results matching your query parameters. The maxResults query string is related to the nextPageToken since maxResults determines how many entries are returned on each next page."}}}}
