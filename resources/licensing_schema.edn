{:Empty {:description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
         :id "Empty",
         :properties {},
         :type "object"},
 :LicenseAssignmentList {:type "object",
                         :id "LicenseAssignmentList",
                         :properties {:etag {:type "string",
                                             :description "ETag of the resource."},
                                      :nextPageToken {:type "string",
                                                      :description "The token that you must submit in a subsequent request to retrieve additional license results matching your query parameters. The `maxResults` query string is related to the `nextPageToken` since `maxResults` determines how many entries are returned on each next page."},
                                      :kind {:description "Identifies the resource as a collection of LicenseAssignments.",
                                             :default "licensing#licenseAssignmentList",
                                             :type "string"},
                                      :items {:items {:$ref "LicenseAssignment"},
                                              :description "The LicenseAssignments in this page of results.",
                                              :type "array"}}},
 :LicenseAssignmentInsert {:type "object",
                           :description "Representation of a license assignment.",
                           :id "LicenseAssignmentInsert",
                           :properties {:userId {:description "Email id of the user",
                                                 :type "string",
                                                 :annotations {:required ["licensing.licenseAssignments.insert"]}}}},
 :LicenseAssignment {:type "object",
                     :description "Representation of a license assignment.",
                     :properties {:productName {:description "Display Name of the product.",
                                                :type "string"},
                                  :kind {:default "licensing#licenseAssignment",
                                         :type "string",
                                         :description "Identifies the resource as a LicenseAssignment, which is `licensing#licenseAssignment`."},
                                  :userId {:description "The user's current primary email address. If the user's email address changes, use the new email address in your API requests. Since a `userId` is subject to change, do not use a `userId` value as a key for persistent data. This key could break if the current user's email address changes. If the `userId` is suspended, the license status changes.",
                                           :annotations {:required ["licensing.licenseAssignments.update"]},
                                           :type "string"},
                                  :skuName {:type "string",
                                            :description "Display Name of the sku of the product."},
                                  :etags {:description "ETag of the resource.",
                                          :type "string"},
                                  :productId {:description "A product's unique identifier. For more information about products in this version of the API, see Product and SKU IDs.",
                                              :type "string",
                                              :annotations {:required ["licensing.licenseAssignments.update"]}},
                                  :skuId {:description "A product SKU's unique identifier. For more information about available SKUs in this version of the API, see Products and SKUs.",
                                          :annotations {:required ["licensing.licenseAssignments.update"]},
                                          :type "string"},
                                  :selfLink {:description "Link to this page.",
                                             :type "string"}},
                     :id "LicenseAssignment"}}
