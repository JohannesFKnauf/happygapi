{:ListCollectorsResponse {:id "ListCollectorsResponse",
                          :description "Message for response to listing Collectors.",
                          :type "object",
                          :properties {:collectors {:description "The list of Collectors.",
                                                    :type "array",
                                                    :items {:$ref "Collector"}},
                                       :nextPageToken {:description "A token identifying a page of results the server should return.",
                                                       :type "string"},
                                       :unreachable {:description "Locations that could not be reached.",
                                                     :type "array",
                                                     :items {:type "string"}}}},
 :Operation {:id "Operation",
             :description "This resource represents a long-running operation that is the result of a network API call.",
             :type "object",
             :properties {:name {:description "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                                 :type "string"},
                          :metadata {:description "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                                     :type "object",
                                     :additionalProperties {:type "any",
                                                            :description "Properties of the object. Contains field @type with type URL."}},
                          :done {:description "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                                 :type "boolean"},
                          :error {:description "The error result of the operation in case of failure or cancellation.",
                                  :$ref "Status"},
                          :response {:description "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                                     :type "object",
                                     :additionalProperties {:type "any",
                                                            :description "Properties of the object. Contains field @type with type URL."}}}},
 :CancelOperationRequest {:id "CancelOperationRequest",
                          :description "The request message for Operations.CancelOperation.",
                          :type "object",
                          :properties {}},
 :RegisterCollectorRequest {:id "RegisterCollectorRequest",
                            :description "Message for registering a Collector.",
                            :type "object",
                            :properties {:requestId {:description "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                                                     :type "string"}}},
 :ResumeCollectorRequest {:id "ResumeCollectorRequest",
                          :description "Message for resuming a Collector.",
                          :type "object",
                          :properties {:requestId {:description "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                                                   :type "string"}}},
 :Empty {:id "Empty",
         :description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
         :type "object",
         :properties {}},
 :ListLocationsResponse {:id "ListLocationsResponse",
                         :description "The response message for Locations.ListLocations.",
                         :type "object",
                         :properties {:locations {:description "A list of locations that matches the specified filter in the request.",
                                                  :type "array",
                                                  :items {:$ref "Location"}},
                                      :nextPageToken {:description "The standard List next-page token.",
                                                      :type "string"}}},
 :VSphereScan {:id "VSphereScan",
               :description "Message describing a MC Source of type VSphere Scan.",
               :type "object",
               :properties {:coreSource {:description "reference to the corresponding VSphere Scan in MC Source.",
                                         :type "string"}}},
 :GuestOsScan {:id "GuestOsScan",
               :description "Message describing a MC Source of type Guest OS Scan.",
               :type "object",
               :properties {:coreSource {:description "reference to the corresponding Guest OS Scan in MC Source.",
                                         :type "string"}}},
 :Collector {:id "Collector",
             :description "Message describing Collector object.",
             :type "object",
             :properties {:description {:description "User specified description of the Collector.",
                                        :type "string"},
                          :serviceAccount {:description "Service Account email used to ingest data to this Collector.",
                                           :type "string"},
                          :labels {:description "Labels as key value pairs.",
                                   :type "object",
                                   :additionalProperties {:type "string"}},
                          :displayName {:description "User specified name of the Collector.",
                                        :type "string"},
                          :name {:description "name of resource.",
                                 :type "string"},
                          :createTime {:description "Output only. Create time stamp.",
                                       :readOnly true,
                                       :type "string",
                                       :format "google-datetime"},
                          :eulaUri {:description "Uri for EULA (End User License Agreement) from customer.",
                                    :type "string"},
                          :state {:description "Output only. State of the Collector.",
                                  :readOnly true,
                                  :type "string",
                                  :enumDescriptions ["Collector state is not recognized."
                                                     "Collector started to create, but hasn't been completed MC source creation and db object creation."
                                                     "Collector has been created, MC source creation and db object creation completed."
                                                     "Collector client has been registered with client."
                                                     "Collector client is actively scanning."
                                                     "Collector is not actively scanning."
                                                     "Collector is starting background job for deletion."
                                                     "Collector completed all tasks for deletion."
                                                     "Collector is in error state."],
                                  :enum ["STATE_UNSPECIFIED"
                                         "STATE_INITIALIZING"
                                         "STATE_READY_TO_USE"
                                         "STATE_REGISTERED"
                                         "STATE_ACTIVE"
                                         "STATE_PAUSED"
                                         "STATE_DELETING"
                                         "STATE_DECOMMISSIONED"
                                         "STATE_ERROR"]},
                          :updateTime {:description "Output only. Update time stamp.",
                                       :readOnly true,
                                       :type "string",
                                       :format "google-datetime"},
                          :clientVersion {:description "Output only. Client version.",
                                          :readOnly true,
                                          :type "string"},
                          :guestOsScan {:description "Output only. Reference to MC Source Guest Os Scan.",
                                        :readOnly true,
                                        :$ref "GuestOsScan"},
                          :collectionDays {:description "How many days to collect data.",
                                           :type "integer",
                                           :format "int32"},
                          :expectedAssetCount {:description "User specified expected asset count.",
                                               :type "string",
                                               :format "int64"},
                          :vsphereScan {:description "Output only. Reference to MC Source vsphere_scan.",
                                        :readOnly true,
                                        :$ref "VSphereScan"},
                          :bucket {:description "Output only. Store cloud storage bucket name (which is a guid) created with this Collector.",
                                   :readOnly true,
                                   :type "string"}}},
 :OperationMetadata {:id "OperationMetadata",
                     :description "Represents the metadata of the long-running operation.",
                     :type "object",
                     :properties {:createTime {:description "Output only. The time the operation was created.",
                                               :readOnly true,
                                               :type "string",
                                               :format "google-datetime"},
                                  :endTime {:description "Output only. The time the operation finished running.",
                                            :readOnly true,
                                            :type "string",
                                            :format "google-datetime"},
                                  :target {:description "Output only. Server-defined resource path for the target of the operation.",
                                           :readOnly true,
                                           :type "string"},
                                  :verb {:description "Output only. Name of the verb executed by the operation.",
                                         :readOnly true,
                                         :type "string"},
                                  :statusMessage {:description "Output only. Human-readable status of the operation, if any.",
                                                  :readOnly true,
                                                  :type "string"},
                                  :requestedCancellation {:description "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                                                          :readOnly true,
                                                          :type "boolean"},
                                  :apiVersion {:description "Output only. API version used to start the operation.",
                                               :readOnly true,
                                               :type "string"}}},
 :ListOperationsResponse {:id "ListOperationsResponse",
                          :description "The response message for Operations.ListOperations.",
                          :type "object",
                          :properties {:operations {:description "A list of operations that matches the specified filter in the request.",
                                                    :type "array",
                                                    :items {:$ref "Operation"}},
                                       :nextPageToken {:description "The standard List next-page token.",
                                                       :type "string"}}},
 :Location {:id "Location",
            :description "A resource that represents a Google Cloud location.",
            :type "object",
            :properties {:name {:description "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
                                :type "string"},
                         :locationId {:description "The canonical id for this location. For example: `\"us-east1\"`.",
                                      :type "string"},
                         :displayName {:description "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
                                       :type "string"},
                         :labels {:description "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
                                  :type "object",
                                  :additionalProperties {:type "string"}},
                         :metadata {:description "Service-specific metadata. For example the available capacity at the given location.",
                                    :type "object",
                                    :additionalProperties {:type "any",
                                                           :description "Properties of the object. Contains field @type with type URL."}}}},
 :PauseCollectorRequest {:id "PauseCollectorRequest",
                         :description "Message for pausing a Collector.",
                         :type "object",
                         :properties {:requestId {:description "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                                                  :type "string"}}},
 :Annotation {:id "Annotation",
              :description "Message describing an Annotation",
              :type "object",
              :properties {:name {:description "name of resource.",
                                  :type "string"},
                           :createTime {:description "Output only. Create time stamp.",
                                        :readOnly true,
                                        :type "string",
                                        :format "google-datetime"},
                           :updateTime {:description "Output only. Update time stamp.",
                                        :readOnly true,
                                        :type "string",
                                        :format "google-datetime"},
                           :labels {:description "Labels as key value pairs.",
                                    :type "object",
                                    :additionalProperties {:type "string"}},
                           :type {:description "Type of an annotation.",
                                  :type "string",
                                  :enumDescriptions ["Unknown type"
                                                     "Indicates that this project has opted into StratoZone export."
                                                     "Indicates that this project is created by Qwiklab."],
                                  :enum ["TYPE_UNSPECIFIED"
                                         "TYPE_LEGACY_EXPORT_CONSENT"
                                         "TYPE_QWIKLAB"]}}},
 :Status {:id "Status",
          :description "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
          :type "object",
          :properties {:code {:description "The status code, which should be an enum value of google.rpc.Code.",
                              :type "integer",
                              :format "int32"},
                       :message {:description "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
                                 :type "string"},
                       :details {:description "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                                 :type "array",
                                 :items {:type "object",
                                         :additionalProperties {:type "any",
                                                                :description "Properties of the object. Contains field @type with type URL."}}}}}}
