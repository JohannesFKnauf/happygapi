{:Split {:id "Split",
         :description "An initial split point for a newly created table.",
         :properties {:key {:type "string",
                            :format "byte",
                            :description "Row key to use as an initial tablet boundary."}},
         :type "object"},
 :UpdateInstanceMetadata {:id "UpdateInstanceMetadata",
                          :type "object",
                          :description "The metadata for the Operation returned by UpdateInstance.",
                          :properties {:originalRequest {:description "The request that prompted the initiation of this UpdateInstance operation.",
                                                         :$ref "PartialUpdateInstanceRequest"},
                                       :finishTime {:type "string",
                                                    :format "google-datetime",
                                                    :description "The time at which the operation failed or was completed successfully."},
                                       :requestTime {:description "The time at which the original request was received.",
                                                     :format "google-datetime",
                                                     :type "string"}}},
 :GetPolicyOptions {:description "Encapsulates settings provided to GetIamPolicy.",
                    :id "GetPolicyOptions",
                    :properties {:requestedPolicyVersion {:type "integer",
                                                          :description "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                                                          :format "int32"}},
                    :type "object"},
 :Intersection {:type "object",
                :description "A GcRule which deletes cells matching all of the given rules.",
                :properties {:rules {:type "array",
                                     :description "Only delete cells which would be deleted by every element of `rules`.",
                                     :items {:$ref "GcRule"}}},
                :id "Intersection"},
 :UpdateClusterMetadata {:description "The metadata for the Operation returned by UpdateCluster.",
                         :id "UpdateClusterMetadata",
                         :properties {:requestTime {:description "The time at which the original request was received.",
                                                    :format "google-datetime",
                                                    :type "string"},
                                      :finishTime {:description "The time at which the operation failed or was completed successfully.",
                                                   :format "google-datetime",
                                                   :type "string"},
                                      :originalRequest {:$ref "Cluster",
                                                        :description "The request that prompted the initiation of this UpdateCluster operation."}},
                         :type "object"},
 :OperationProgress {:id "OperationProgress",
                     :description "Encapsulates progress related information for a Cloud Bigtable long running operation.",
                     :type "object",
                     :properties {:progressPercent {:description "Percent completion of the operation. Values are between 0 and 100 inclusive.",
                                                    :type "integer",
                                                    :format "int32"},
                                  :endTime {:description "If set, the time at which this operation failed or was completed successfully.",
                                            :type "string",
                                            :format "google-datetime"},
                                  :startTime {:format "google-datetime",
                                              :description "Time the request was received.",
                                              :type "string"}}},
 :ListClustersResponse {:id "ListClustersResponse",
                        :description "Response message for BigtableInstanceAdmin.ListClusters.",
                        :properties {:clusters {:type "array",
                                                :items {:$ref "Cluster"},
                                                :description "The list of requested clusters."},
                                     :failedLocations {:type "array",
                                                       :description "Locations from which Cluster information could not be retrieved, due to an outage or some other transient condition. Clusters from these locations may be missing from `clusters`, or may only have partial information returned. Values are of the form `projects//locations/`",
                                                       :items {:type "string"}},
                                     :nextPageToken {:description "DEPRECATED: This field is unused and ignored.",
                                                     :type "string"}},
                        :type "object"},
 :Table {:properties {:restoreInfo {:readOnly true,
                                    :$ref "RestoreInfo",
                                    :description "Output only. If this table was restored from another data source (e.g. a backup), this field will be populated with information about the restore."},
                      :columnFamilies {:description "The column families configured for this table, mapped by column family ID. Views: `SCHEMA_VIEW`, `FULL`",
                                       :type "object",
                                       :additionalProperties {:$ref "ColumnFamily"}},
                      :granularity {:enum ["TIMESTAMP_GRANULARITY_UNSPECIFIED"
                                           "MILLIS"],
                                    :enumDescriptions ["The user did not specify a granularity. Should not be returned. When specified during table creation, MILLIS will be used."
                                                       "The table keeps data versioned at a granularity of 1ms."],
                                    :type "string",
                                    :description "Immutable. The granularity (i.e. `MILLIS`) at which timestamps are stored in this table. Timestamps not matching the granularity will be rejected. If unspecified at creation time, the value will be set to `MILLIS`. Views: `SCHEMA_VIEW`, `FULL`."},
                      :clusterStates {:type "object",
                                      :readOnly true,
                                      :additionalProperties {:$ref "ClusterState"},
                                      :description "Output only. Map from cluster ID to per-cluster table state. If it could not be determined whether or not the table has data in a particular cluster (for example, if its zone is unavailable), then there will be an entry for the cluster with UNKNOWN `replication_status`. Views: `REPLICATION_VIEW`, `FULL`"},
                      :name {:type "string",
                             :description "The unique name of the table. Values are of the form `projects/{project}/instances/{instance}/tables/_a-zA-Z0-9*`. Views: `NAME_ONLY`, `SCHEMA_VIEW`, `REPLICATION_VIEW`, `FULL`"}},
         :description "A collection of user data indexed by row, column, and timestamp. Each table is served using the resources of its parent cluster.",
         :type "object",
         :id "Table"},
 :Operation {:properties {:done {:description "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                                 :type "boolean"},
                          :response {:additionalProperties {:type "any",
                                                            :description "Properties of the object. Contains field @type with type URL."},
                                     :description "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                                     :type "object"},
                          :name {:description "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                                 :type "string"},
                          :error {:description "The error result of the operation in case of failure or cancellation.",
                                  :$ref "Status"},
                          :metadata {:type "object",
                                     :additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                            :type "any"},
                                     :description "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."}},
             :id "Operation",
             :description "This resource represents a long-running operation that is the result of a network API call.",
             :type "object"},
 :RestoreTableMetadata {:id "RestoreTableMetadata",
                        :properties {:name {:description "Name of the table being created and restored to.",
                                            :type "string"},
                                     :sourceType {:type "string",
                                                  :enum ["RESTORE_SOURCE_TYPE_UNSPECIFIED"
                                                         "BACKUP"],
                                                  :enumDescriptions ["No restore associated."
                                                                     "A backup was used as the source of the restore."],
                                                  :description "The type of the restore source."},
                                     :optimizeTableOperationName {:description "If exists, the name of the long-running operation that will be used to track the post-restore optimization process to optimize the performance of the restored table. The metadata type of the long-running operation is OptimizeRestoreTableMetadata. The response type is Empty. This long-running operation may be automatically created by the system if applicable after the RestoreTable long-running operation completes successfully. This operation may not be created if the table is already optimized or the restore was not successful.",
                                                                  :type "string"},
                                     :progress {:description "The progress of the RestoreTable operation.",
                                                :$ref "OperationProgress"},
                                     :backupInfo {:$ref "BackupInfo"}},
                        :description "Metadata type for the long-running operation returned by RestoreTable.",
                        :type "object"},
 :SetIamPolicyRequest {:type "object",
                       :description "Request message for `SetIamPolicy` method.",
                       :properties {:updateMask {:format "google-fieldmask",
                                                 :description "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
                                                 :type "string"},
                                    :policy {:description "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.",
                                             :$ref "Policy"}},
                       :id "SetIamPolicyRequest"},
 :CheckConsistencyResponse {:type "object",
                            :properties {:consistent {:type "boolean",
                                                      :description "True only if the token is consistent. A token is consistent if replication has caught up with the restrictions specified in the request."}},
                            :description "Response message for google.bigtable.admin.v2.BigtableTableAdmin.CheckConsistency",
                            :id "CheckConsistencyResponse"},
 :AuditConfig {:description "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.",
               :properties {:service {:description "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.",
                                      :type "string"},
                            :auditLogConfigs {:description "The configuration for logging of each type of permission.",
                                              :type "array",
                                              :items {:$ref "AuditLogConfig"}}},
               :type "object",
               :id "AuditConfig"},
 :ListTablesResponse {:description "Response message for google.bigtable.admin.v2.BigtableTableAdmin.ListTables",
                      :id "ListTablesResponse",
                      :type "object",
                      :properties {:tables {:type "array",
                                            :description "The tables present in the requested instance.",
                                            :items {:$ref "Table"}},
                                   :nextPageToken {:type "string",
                                                   :description "Set if not all tables could be returned in a single response. Pass this value to `page_token` in another request to get the next page of results."}}},
 :DropRowRangeRequest {:description "Request message for google.bigtable.admin.v2.BigtableTableAdmin.DropRowRange",
                       :id "DropRowRangeRequest",
                       :properties {:deleteAllDataFromTable {:description "Delete all rows in the table. Setting this to false is a no-op.",
                                                             :type "boolean"},
                                    :rowKeyPrefix {:description "Delete all rows that start with this row key prefix. Prefix cannot be zero length.",
                                                   :format "byte",
                                                   :type "string"}},
                       :type "object"},
 :AuditLogConfig {:properties {:exemptedMembers {:items {:type "string"},
                                                 :type "array",
                                                 :description "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."},
                               :logType {:description "The log type that this config enables.",
                                         :type "string",
                                         :enumDescriptions ["Default case. Should never be this."
                                                            "Admin reads. Example: CloudIAM getIamPolicy"
                                                            "Data writes. Example: CloudSQL Users create"
                                                            "Data reads. Example: CloudSQL Users list"],
                                         :enum ["LOG_TYPE_UNSPECIFIED"
                                                "ADMIN_READ"
                                                "DATA_WRITE"
                                                "DATA_READ"]}},
                  :type "object",
                  :id "AuditLogConfig",
                  :description "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."},
 :TableProgress {:properties {:estimatedCopiedBytes {:type "string",
                                                     :format "int64",
                                                     :description "Estimate of the number of bytes copied so far for this table. This will eventually reach 'estimated_size_bytes' unless the table copy is CANCELLED."},
                              :state {:type "string",
                                      :enum ["STATE_UNSPECIFIED"
                                             "PENDING"
                                             "COPYING"
                                             "COMPLETED"
                                             "CANCELLED"],
                                      :enumDescriptions [""
                                                         "The table has not yet begun copying to the new cluster."
                                                         "The table is actively being copied to the new cluster."
                                                         "The table has been fully copied to the new cluster."
                                                         "The table was deleted before it finished copying to the new cluster. Note that tables deleted after completion will stay marked as COMPLETED, not CANCELLED."]},
                              :estimatedSizeBytes {:format "int64",
                                                   :description "Estimate of the size of the table to be copied.",
                                                   :type "string"}},
                 :description "Progress info for copying a table's data to the new cluster.",
                 :type "object",
                 :id "TableProgress"},
 :ListAppProfilesResponse {:properties {:appProfiles {:description "The list of requested app profiles.",
                                                      :items {:$ref "AppProfile"},
                                                      :type "array"},
                                        :failedLocations {:description "Locations from which AppProfile information could not be retrieved, due to an outage or some other transient condition. AppProfiles from these locations may be missing from `app_profiles`. Values are of the form `projects//locations/`",
                                                          :items {:type "string"},
                                                          :type "array"},
                                        :nextPageToken {:description "Set if not all app profiles could be returned in a single response. Pass this value to `page_token` in another request to get the next page of results.",
                                                        :type "string"}},
                           :type "object",
                           :id "ListAppProfilesResponse",
                           :description "Response message for BigtableInstanceAdmin.ListAppProfiles."},
 :CreateClusterRequest {:description "Request message for BigtableInstanceAdmin.CreateCluster.",
                        :id "CreateClusterRequest",
                        :type "object",
                        :properties {:cluster {:$ref "Cluster",
                                               :description "Required. The cluster to be created. Fields marked `OutputOnly` must be left blank."},
                                     :clusterId {:type "string",
                                                 :description "Required. The ID to be used when referring to the new cluster within its instance, e.g., just `mycluster` rather than `projects/myproject/instances/myinstance/clusters/mycluster`."},
                                     :parent {:type "string",
                                              :description "Required. The unique name of the instance in which to create the new cluster. Values are of the form `projects/{project}/instances/{instance}`."}}},
 :GenerateConsistencyTokenRequest {:properties {},
                                   :type "object",
                                   :id "GenerateConsistencyTokenRequest",
                                   :description "Request message for google.bigtable.admin.v2.BigtableTableAdmin.GenerateConsistencyToken"},
 :GetIamPolicyRequest {:id "GetIamPolicyRequest",
                       :type "object",
                       :properties {:options {:$ref "GetPolicyOptions",
                                              :description "OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`."}},
                       :description "Request message for `GetIamPolicy` method."},
 :Backup {:description "A backup of a Cloud Bigtable table.",
          :properties {:sizeBytes {:description "Output only. Size of the backup in bytes.",
                                   :readOnly true,
                                   :type "string",
                                   :format "int64"},
                       :startTime {:format "google-datetime",
                                   :type "string",
                                   :readOnly true,
                                   :description "Output only. `start_time` is the time that the backup was started (i.e. approximately the time the CreateBackup request is received). The row data in this backup will be no older than this timestamp."},
                       :state {:description "Output only. The current state of the backup.",
                               :readOnly true,
                               :enumDescriptions ["Not specified."
                                                  "The pending backup is still being created. Operations on the backup may fail with `FAILED_PRECONDITION` in this state."
                                                  "The backup is complete and ready for use."],
                               :enum ["STATE_UNSPECIFIED"
                                      "CREATING"
                                      "READY"],
                               :type "string"},
                       :endTime {:format "google-datetime",
                                 :description "Output only. `end_time` is the time that the backup was finished. The row data in the backup will be no newer than this timestamp.",
                                 :type "string",
                                 :readOnly true},
                       :name {:type "string",
                              :description "A globally unique identifier for the backup which cannot be changed. Values are of the form `projects/{project}/instances/{instance}/clusters/{cluster}/ backups/_a-zA-Z0-9*` The final segment of the name must be between 1 and 50 characters in length. The backup is stored in the cluster identified by the prefix of the backup name of the form `projects/{project}/instances/{instance}/clusters/{cluster}`."},
                       :sourceTable {:description "Required. Immutable. Name of the table from which this backup was created. This needs to be in the same instance as the backup. Values are of the form `projects/{project}/instances/{instance}/tables/{source_table}`.",
                                     :type "string"},
                       :expireTime {:format "google-datetime",
                                    :description "Required. The expiration time of the backup, with microseconds granularity that must be at least 6 hours and at most 30 days from the time the request is received. Once the `expire_time` has passed, Cloud Bigtable will delete the backup and free the resources used by the backup.",
                                    :type "string"}},
          :id "Backup",
          :type "object"},
 :ClusterState {:id "ClusterState",
                :type "object",
                :description "The state of a table's data in a particular cluster.",
                :properties {:replicationState {:enumDescriptions ["The replication state of the table is unknown in this cluster."
                                                                   "The cluster was recently created, and the table must finish copying over pre-existing data from other clusters before it can begin receiving live replication updates and serving Data API requests."
                                                                   "The table is temporarily unable to serve Data API requests from this cluster due to planned internal maintenance."
                                                                   "The table is temporarily unable to serve Data API requests from this cluster due to unplanned or emergency maintenance."
                                                                   "The table can serve Data API requests from this cluster. Depending on replication delay, reads may not immediately reflect the state of the table in other clusters."
                                                                   "The table is fully created and ready for use after a restore, and is being optimized for performance. When optimizations are complete, the table will transition to `READY` state."],
                                                :description "Output only. The state of replication for the table in this cluster.",
                                                :enum ["STATE_NOT_KNOWN"
                                                       "INITIALIZING"
                                                       "PLANNED_MAINTENANCE"
                                                       "UNPLANNED_MAINTENANCE"
                                                       "READY"
                                                       "READY_OPTIMIZING"],
                                                :readOnly true,
                                                :type "string"}}},
 :CreateInstanceRequest {:description "Request message for BigtableInstanceAdmin.CreateInstance.",
                         :type "object",
                         :id "CreateInstanceRequest",
                         :properties {:parent {:type "string",
                                               :description "Required. The unique name of the project in which to create the new instance. Values are of the form `projects/{project}`."},
                                      :instance {:$ref "Instance",
                                                 :description "Required. The instance to create. Fields marked `OutputOnly` must be left blank."},
                                      :instanceId {:description "Required. The ID to be used when referring to the new instance within its project, e.g., just `myinstance` rather than `projects/myproject/instances/myinstance`.",
                                                   :type "string"},
                                      :clusters {:additionalProperties {:$ref "Cluster"},
                                                 :description "Required. The clusters to be created within the instance, mapped by desired cluster ID, e.g., just `mycluster` rather than `projects/myproject/instances/myinstance/clusters/mycluster`. Fields marked `OutputOnly` must be left blank. Currently, at most four clusters can be specified.",
                                                 :type "object"}}},
 :BackupInfo {:type "object",
              :description "Information about a backup.",
              :properties {:sourceTable {:description "Output only. Name of the table the backup was created from.",
                                         :type "string",
                                         :readOnly true},
                           :endTime {:description "Output only. This time that the backup was finished. Row data in the backup will be no newer than this timestamp.",
                                     :type "string",
                                     :format "google-datetime",
                                     :readOnly true},
                           :backup {:type "string",
                                    :readOnly true,
                                    :description "Output only. Name of the backup."},
                           :startTime {:format "google-datetime",
                                       :description "Output only. The time that the backup was started. Row data in the backup will be no older than this timestamp.",
                                       :type "string",
                                       :readOnly true}},
              :id "BackupInfo"},
 :Binding {:properties {:members {:type "array",
                                  :items {:type "string"},
                                  :description "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "},
                        :role {:description "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
                               :type "string"},
                        :condition {:description "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                                    :$ref "Expr"}},
           :id "Binding",
           :type "object",
           :description "Associates `members` with a `role`."},
 :UpdateAppProfileMetadata {:description "The metadata for the Operation returned by UpdateAppProfile.",
                            :properties {},
                            :id "UpdateAppProfileMetadata",
                            :type "object"},
 :OptimizeRestoredTableMetadata {:properties {:name {:type "string",
                                                     :description "Name of the restored table being optimized."},
                                              :progress {:$ref "OperationProgress",
                                                         :description "The progress of the post-restore optimizations."}},
                                 :id "OptimizeRestoredTableMetadata",
                                 :type "object",
                                 :description "Metadata type for the long-running operation used to track the progress of optimizations performed on a newly restored table. This long-running operation is automatically created by the system after the successful completion of a table restore, and cannot be cancelled."},
 :GenerateConsistencyTokenResponse {:properties {:consistencyToken {:description "The generated consistency token.",
                                                                    :type "string"}},
                                    :type "object",
                                    :description "Response message for google.bigtable.admin.v2.BigtableTableAdmin.GenerateConsistencyToken",
                                    :id "GenerateConsistencyTokenResponse"},
 :CreateBackupMetadata {:type "object",
                        :description "Metadata type for the operation returned by CreateBackup.",
                        :id "CreateBackupMetadata",
                        :properties {:name {:type "string",
                                            :description "The name of the backup being created."},
                                     :endTime {:type "string",
                                               :description "If set, the time at which this operation finished or was cancelled.",
                                               :format "google-datetime"},
                                     :startTime {:description "The time at which this operation started.",
                                                 :format "google-datetime",
                                                 :type "string"},
                                     :sourceTable {:type "string",
                                                   :description "The name of the table the backup is created from."}}},
 :Empty {:description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
         :id "Empty",
         :type "object",
         :properties {}},
 :CreateClusterMetadata {:type "object",
                         :properties {:tables {:description "Keys: the full `name` of each table that existed in the instance when CreateCluster was first called, i.e. `projects//instances//tables/`. Any table added to the instance by a later API call will be created in the new cluster by that API call, not this one. Values: information on how much of a table's data has been copied to the newly-created cluster so far.",
                                               :additionalProperties {:$ref "TableProgress"},
                                               :type "object"},
                                      :requestTime {:format "google-datetime",
                                                    :type "string",
                                                    :description "The time at which the original request was received."},
                                      :finishTime {:format "google-datetime",
                                                   :type "string",
                                                   :description "The time at which the operation failed or was completed successfully."},
                                      :originalRequest {:description "The request that prompted the initiation of this CreateCluster operation.",
                                                        :$ref "CreateClusterRequest"}},
                         :description "The metadata for the Operation returned by CreateCluster.",
                         :id "CreateClusterMetadata"},
 :ListLocationsResponse {:properties {:nextPageToken {:type "string",
                                                      :description "The standard List next-page token."},
                                      :locations {:type "array",
                                                  :description "A list of locations that matches the specified filter in the request.",
                                                  :items {:$ref "Location"}}},
                         :id "ListLocationsResponse",
                         :type "object",
                         :description "The response message for Locations.ListLocations."},
 :TestIamPermissionsRequest {:type "object",
                             :id "TestIamPermissionsRequest",
                             :properties {:permissions {:description "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
                                                        :items {:type "string"},
                                                        :type "array"}},
                             :description "Request message for `TestIamPermissions` method."},
 :RestoreTableRequest {:id "RestoreTableRequest",
                       :type "object",
                       :description "The request for RestoreTable.",
                       :properties {:backup {:type "string",
                                             :description "Name of the backup from which to restore. Values are of the form `projects//instances//clusters//backups/`."},
                                    :tableId {:description "Required. The id of the table to create and restore to. This table must not already exist. The `table_id` appended to `parent` forms the full table name of the form `projects//instances//tables/`.",
                                              :type "string"}}},
 :CreateTableRequest {:id "CreateTableRequest",
                      :type "object",
                      :description "Request message for google.bigtable.admin.v2.BigtableTableAdmin.CreateTable",
                      :properties {:initialSplits {:type "array",
                                                   :items {:$ref "Split"},
                                                   :description "The optional list of row keys that will be used to initially split the table into several tablets (tablets are similar to HBase regions). Given two split keys, `s1` and `s2`, three tablets will be created, spanning the key ranges: `[, s1), [s1, s2), [s2, )`. Example: * Row keys := `[\"a\", \"apple\", \"custom\", \"customer_1\", \"customer_2\",` `\"other\", \"zz\"]` * initial_split_keys := `[\"apple\", \"customer_1\", \"customer_2\", \"other\"]` * Key assignment: - Tablet 1 `[, apple) => {\"a\"}.` - Tablet 2 `[apple, customer_1) => {\"apple\", \"custom\"}.` - Tablet 3 `[customer_1, customer_2) => {\"customer_1\"}.` - Tablet 4 `[customer_2, other) => {\"customer_2\"}.` - Tablet 5 `[other, ) => {\"other\", \"zz\"}.`"},
                                   :table {:description "Required. The Table to create.",
                                           :$ref "Table"},
                                   :tableId {:description "Required. The name by which the new table should be referred to within the parent instance, e.g., `foobar` rather than `{parent}/tables/foobar`. Maximum 50 characters.",
                                             :type "string"}}},
 :FailureTrace {:properties {:frames {:items {:$ref "Frame"},
                                      :type "array"}},
                :type "object",
                :id "FailureTrace",
                :description "Added to the error payload."},
 :Union {:type "object",
         :description "A GcRule which deletes cells matching any of the given rules.",
         :id "Union",
         :properties {:rules {:description "Delete cells which would be deleted by any element of `rules`.",
                              :items {:$ref "GcRule"},
                              :type "array"}}},
 :CheckConsistencyRequest {:properties {:consistencyToken {:type "string",
                                                           :description "Required. The token created using GenerateConsistencyToken for the Table."}},
                           :type "object",
                           :id "CheckConsistencyRequest",
                           :description "Request message for google.bigtable.admin.v2.BigtableTableAdmin.CheckConsistency"},
 :ColumnFamily {:description "A set of columns within a table which share a common configuration.",
                :type "object",
                :id "ColumnFamily",
                :properties {:gcRule {:description "Garbage collection rule specified as a protobuf. Must serialize to at most 500 bytes. NOTE: Garbage collection executes opportunistically in the background, and so it's possible for reads to return a cell even if it matches the active GC expression for its family.",
                                      :$ref "GcRule"}}},
 :Instance {:type "object",
            :properties {:labels {:description "Required. Labels are a flexible and lightweight mechanism for organizing cloud resources into groups that reflect a customer's organizational needs and deployment strategies. They can be used to filter resources and aggregate metrics. * Label keys must be between 1 and 63 characters long and must conform to the regular expression: `\\p{Ll}\\p{Lo}{0,62}`. * Label values must be between 0 and 63 characters long and must conform to the regular expression: `[\\p{Ll}\\p{Lo}\\p{N}_-]{0,63}`. * No more than 64 labels can be associated with a given resource. * Keys and values must both be under 128 bytes.",
                                  :type "object",
                                  :additionalProperties {:type "string"}},
                         :name {:description "The unique name of the instance. Values are of the form `projects/{project}/instances/a-z+[a-z0-9]`.",
                                :type "string"},
                         :displayName {:type "string",
                                       :description "Required. The descriptive name for this instance as it appears in UIs. Can be changed at any time, but should be kept globally unique to avoid confusion."},
                         :state {:readOnly true,
                                 :enumDescriptions ["The state of the instance could not be determined."
                                                    "The instance has been successfully created and can serve requests to its tables."
                                                    "The instance is currently being created, and may be destroyed if the creation process encounters an error."],
                                 :description "Output only. The current state of the instance.",
                                 :type "string",
                                 :enum ["STATE_NOT_KNOWN"
                                        "READY"
                                        "CREATING"]},
                         :type {:type "string",
                                :enum ["TYPE_UNSPECIFIED"
                                       "PRODUCTION"
                                       "DEVELOPMENT"],
                                :enumDescriptions ["The type of the instance is unspecified. If set when creating an instance, a `PRODUCTION` instance will be created. If set when updating an instance, the type will be left unchanged."
                                                   "An instance meant for production use. `serve_nodes` must be set on the cluster."
                                                   "DEPRECATED: Prefer PRODUCTION for all use cases, as it no longer enforces a higher minimum node count than DEVELOPMENT."],
                                :description "Required. The type of the instance. Defaults to `PRODUCTION`."}},
            :id "Instance",
            :description "A collection of Bigtable Tables and the resources that serve them. All tables in an instance are served from all Clusters in the instance."},
 :AppProfile {:description "A configuration object describing how Cloud Bigtable should treat traffic from a particular end user application.",
              :id "AppProfile",
              :properties {:singleClusterRouting {:$ref "SingleClusterRouting",
                                                  :description "Use a single-cluster routing policy."},
                           :description {:description "Long form description of the use case for this AppProfile.",
                                         :type "string"},
                           :name {:description "The unique name of the app profile. Values are of the form `projects/{project}/instances/{instance}/appProfiles/_a-zA-Z0-9*`.",
                                  :type "string"},
                           :multiClusterRoutingUseAny {:description "Use a multi-cluster routing policy.",
                                                       :$ref "MultiClusterRoutingUseAny"},
                           :etag {:type "string",
                                  :description "Strongly validated etag for optimistic concurrency control. Preserve the value returned from `GetAppProfile` when calling `UpdateAppProfile` to fail the request if there has been a modification in the mean time. The `update_mask` of the request need not include `etag` for this protection to apply. See [Wikipedia](https://en.wikipedia.org/wiki/HTTP_ETag) and [RFC 7232](https://tools.ietf.org/html/rfc7232#section-2.3) for more details."}},
              :type "object"},
 :Cluster {:id "Cluster",
           :description "A resizable group of nodes in a particular cloud location, capable of serving all Tables in the parent Instance.",
           :type "object",
           :properties {:defaultStorageType {:enumDescriptions ["The user did not specify a storage type."
                                                                "Flash (SSD) storage should be used."
                                                                "Magnetic drive (HDD) storage should be used."],
                                             :type "string",
                                             :enum ["STORAGE_TYPE_UNSPECIFIED"
                                                    "SSD"
                                                    "HDD"],
                                             :description "Immutable. The type of storage used by this cluster to serve its parent instance's tables, unless explicitly overridden."},
                        :serveNodes {:description "Required. The number of nodes allocated to this cluster. More nodes enable higher throughput and more consistent performance.",
                                     :format "int32",
                                     :type "integer"},
                        :location {:type "string",
                                   :description "Immutable. The location where this cluster's nodes and storage reside. For best performance, clients should be located as close as possible to this cluster. Currently only zones are supported, so values should be of the form `projects/{project}/locations/{zone}`."},
                        :state {:description "Output only. The current state of the cluster.",
                                :readOnly true,
                                :enum ["STATE_NOT_KNOWN"
                                       "READY"
                                       "CREATING"
                                       "RESIZING"
                                       "DISABLED"],
                                :type "string",
                                :enumDescriptions ["The state of the cluster could not be determined."
                                                   "The cluster has been successfully created and is ready to serve requests."
                                                   "The cluster is currently being created, and may be destroyed if the creation process encounters an error. A cluster may not be able to serve requests while being created."
                                                   "The cluster is currently being resized, and may revert to its previous node count if the process encounters an error. A cluster is still capable of serving requests while being resized, but may exhibit performance as if its number of allocated nodes is between the starting and requested states."
                                                   "The cluster has no backing nodes. The data (tables) still exist, but no operations can be performed on the cluster."]},
                        :name {:description "The unique name of the cluster. Values are of the form `projects/{project}/instances/{instance}/clusters/a-z*`.",
                               :type "string"}}},
 :Frame {:type "object",
         :id "Frame",
         :properties {:zoneId {:type "string"},
                      :workflowGuid {:type "string"},
                      :targetName {:type "string"}}},
 :TestIamPermissionsResponse {:id "TestIamPermissionsResponse",
                              :type "object",
                              :properties {:permissions {:items {:type "string"},
                                                         :description "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                                                         :type "array"}},
                              :description "Response message for `TestIamPermissions` method."},
 :ListBackupsResponse {:id "ListBackupsResponse",
                       :properties {:backups {:description "The list of matching backups.",
                                              :type "array",
                                              :items {:$ref "Backup"}},
                                    :nextPageToken {:description "`next_page_token` can be sent in a subsequent ListBackups call to fetch more of the matching backups.",
                                                    :type "string"}},
                       :type "object",
                       :description "The response for ListBackups."},
 :Modification {:properties {:update {:description "Update an existing column family to the specified schema, or fail if no column family exists with the given ID.",
                                      :$ref "ColumnFamily"},
                             :drop {:type "boolean",
                                    :description "Drop (delete) the column family with the given ID, or fail if no such family exists."},
                             :create {:description "Create a new column family with the specified schema, or fail if one already exists with the given ID.",
                                      :$ref "ColumnFamily"},
                             :id {:description "The ID of the column family to be modified.",
                                  :type "string"}},
                :type "object",
                :description "A create, update, or delete of a particular column family.",
                :id "Modification"},
 :MultiClusterRoutingUseAny {:type "object",
                             :id "MultiClusterRoutingUseAny",
                             :properties {},
                             :description "Read/write requests are routed to the nearest cluster in the instance, and will fail over to the nearest cluster that is available in the event of transient errors or delays. Clusters in a region are considered equidistant. Choosing this option sacrifices read-your-writes consistency to improve availability."},
 :Expr {:type "object",
        :id "Expr",
        :description "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
        :properties {:description {:type "string",
                                   :description "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."},
                     :expression {:description "Textual representation of an expression in Common Expression Language syntax.",
                                  :type "string"},
                     :location {:description "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
                                :type "string"},
                     :title {:description "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
                             :type "string"}}},
 :GcRule {:properties {:maxAge {:description "Delete cells in a column older than the given age. Values must be at least one millisecond, and will be truncated to microsecond granularity.",
                                :type "string",
                                :format "google-duration"},
                       :maxNumVersions {:format "int32",
                                        :description "Delete all cells in a column except the most recent N.",
                                        :type "integer"},
                       :intersection {:description "Delete cells that would be deleted by every nested rule.",
                                      :$ref "Intersection"},
                       :union {:description "Delete cells that would be deleted by any nested rule.",
                               :$ref "Union"}},
          :type "object",
          :description "Rule for determining which cells to delete during garbage collection.",
          :id "GcRule"},
 :SingleClusterRouting {:description "Unconditionally routes all read/write requests to a specific cluster. This option preserves read-your-writes consistency but does not improve availability.",
                        :properties {:clusterId {:description "The cluster to which read/write requests should be routed.",
                                                 :type "string"},
                                     :allowTransactionalWrites {:description "Whether or not `CheckAndMutateRow` and `ReadModifyWriteRow` requests are allowed by this app profile. It is unsafe to send these requests to the same table/row/column in multiple clusters.",
                                                                :type "boolean"}},
                        :type "object",
                        :id "SingleClusterRouting"},
 :ModifyColumnFamiliesRequest {:id "ModifyColumnFamiliesRequest",
                               :type "object",
                               :properties {:modifications {:items {:$ref "Modification"},
                                                            :description "Required. Modifications to be atomically applied to the specified table's families. Entries are applied in order, meaning that earlier modifications can be masked by later ones (in the case of repeated updates to the same family, for example).",
                                                            :type "array"}},
                               :description "Request message for google.bigtable.admin.v2.BigtableTableAdmin.ModifyColumnFamilies"},
 :ListOperationsResponse {:properties {:operations {:items {:$ref "Operation"},
                                                    :description "A list of operations that matches the specified filter in the request.",
                                                    :type "array"},
                                       :nextPageToken {:type "string",
                                                       :description "The standard List next-page token."}},
                          :id "ListOperationsResponse",
                          :type "object",
                          :description "The response message for Operations.ListOperations."},
 :Location {:description "A resource that represents Google Cloud Platform location.",
            :type "object",
            :properties {:displayName {:type "string",
                                       :description "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."},
                         :locationId {:type "string",
                                      :description "The canonical id for this location. For example: `\"us-east1\"`."},
                         :name {:type "string",
                                :description "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"},
                         :labels {:additionalProperties {:type "string"},
                                  :description "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
                                  :type "object"},
                         :metadata {:additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                           :type "any"},
                                    :description "Service-specific metadata. For example the available capacity at the given location.",
                                    :type "object"}},
            :id "Location"},
 :RestoreInfo {:properties {:backupInfo {:$ref "BackupInfo",
                                         :description "Information about the backup used to restore the table. The backup may no longer exist."},
                            :sourceType {:type "string",
                                         :enumDescriptions ["No restore associated."
                                                            "A backup was used as the source of the restore."],
                                         :enum ["RESTORE_SOURCE_TYPE_UNSPECIFIED"
                                                "BACKUP"],
                                         :description "The type of the restore source."}},
               :id "RestoreInfo",
               :description "Information about a table restore.",
               :type "object"},
 :ListInstancesResponse {:type "object",
                         :id "ListInstancesResponse",
                         :properties {:instances {:description "The list of requested instances.",
                                                  :items {:$ref "Instance"},
                                                  :type "array"},
                                      :failedLocations {:type "array",
                                                        :description "Locations from which Instance information could not be retrieved, due to an outage or some other transient condition. Instances whose Clusters are all in one of the failed locations may be missing from `instances`, and Instances with at least one Cluster in a failed location may only have partial information returned. Values are of the form `projects//locations/`",
                                                        :items {:type "string"}},
                                      :nextPageToken {:description "DEPRECATED: This field is unused and ignored.",
                                                      :type "string"}},
                         :description "Response message for BigtableInstanceAdmin.ListInstances."},
 :PartialUpdateInstanceRequest {:type "object",
                                :description "Request message for BigtableInstanceAdmin.PartialUpdateInstance.",
                                :properties {:instance {:description "Required. The Instance which will (partially) replace the current value.",
                                                        :$ref "Instance"},
                                             :updateMask {:type "string",
                                                          :description "Required. The subset of Instance fields which should be replaced. Must be explicitly set.",
                                                          :format "google-fieldmask"}},
                                :id "PartialUpdateInstanceRequest"},
 :Policy {:properties {:bindings {:items {:$ref "Binding"},
                                  :description "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member.",
                                  :type "array"},
                       :etag {:format "byte",
                              :type "string",
                              :description "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."},
                       :version {:description "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                                 :format "int32",
                                 :type "integer"},
                       :auditConfigs {:type "array",
                                      :items {:$ref "AuditConfig"},
                                      :description "Specifies cloud audit logging configuration for this policy."}},
          :id "Policy",
          :type "object",
          :description "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."},
 :CreateInstanceMetadata {:type "object",
                          :properties {:finishTime {:type "string",
                                                    :description "The time at which the operation failed or was completed successfully.",
                                                    :format "google-datetime"},
                                       :originalRequest {:description "The request that prompted the initiation of this CreateInstance operation.",
                                                         :$ref "CreateInstanceRequest"},
                                       :requestTime {:type "string",
                                                     :format "google-datetime",
                                                     :description "The time at which the original request was received."}},
                          :description "The metadata for the Operation returned by CreateInstance.",
                          :id "CreateInstanceMetadata"},
 :Status {:id "Status",
          :description "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
          :type "object",
          :properties {:message {:description "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
                                 :type "string"},
                       :code {:description "The status code, which should be an enum value of google.rpc.Code.",
                              :format "int32",
                              :type "integer"},
                       :details {:items {:type "object",
                                         :additionalProperties {:type "any",
                                                                :description "Properties of the object. Contains field @type with type URL."}},
                                 :type "array",
                                 :description "A list of messages that carry the error details. There is a common set of message types for APIs to use."}}}}
