{:BigQueryIODetails {:description "Metadata for a BigQuery connector used by the job.",
                     :type "object",
                     :properties {:query {:description "Query used to access data in the connection.",
                                          :type "string"},
                                  :projectId {:type "string",
                                              :description "Project accessed in the connection."},
                                  :dataset {:description "Dataset accessed in the connection.",
                                            :type "string"},
                                  :table {:type "string",
                                          :description "Table accessed in the connection."}},
                     :id "BigQueryIODetails"},
 :WorkerMessageCode {:description "A message code is used to report status and error messages to the service. The message codes are intended to be machine readable. The service will take care of translating these into user understandable messages if necessary. Example use cases: 1. Worker processes reporting successful startup. 2. Worker processes reporting specific errors (e.g. package staging failure).",
                     :id "WorkerMessageCode",
                     :type "object",
                     :properties {:code {:type "string",
                                         :description "The code is a string intended for consumption by a machine that identifies the type of message being sent. Examples: 1. \"HARNESS_STARTED\" might be used to indicate the worker harness has started. 2. \"GCS_DOWNLOAD_ERROR\" might be used to indicate an error downloading a GCS file as part of the boot process of one of the worker containers. This is a string and not an enum to make it easy to add new codes without waiting for an API change."},
                                  :parameters {:additionalProperties {:description "Properties of the object.",
                                                                      :type "any"},
                                               :type "object",
                                               :description "Parameters contains specific information about the code. This is a struct to allow parameters of different types. Examples: 1. For a \"HARNESS_STARTED\" message parameters might provide the name of the worker and additional data like timing information. 2. For a \"GCS_DOWNLOAD_ERROR\" parameters might contain fields listing the GCS objects being downloaded and fields containing errors. In general complex data structures should be avoided. If a worker needs to send a specific and complicated data structure then please consider defining a new proto and adding it to the data oneof in WorkerMessageResponse. Conventions: Parameters should only be used for information that isn't typically passed as a label. hostname and other worker identifiers should almost always be passed as labels since they will be included on most messages."}}},
 :ValidateResponse {:type "object",
                    :id "ValidateResponse",
                    :description "Response to the validation request.",
                    :properties {:errorMessage {:description "Will be empty if validation succeeds.",
                                                :type "string"},
                                 :queryInfo {:description "Information about the validated query. Not defined if validation fails.",
                                             :$ref "QueryInfo"}}},
 :SourceMetadata {:type "object",
                  :id "SourceMetadata",
                  :description "Metadata about a Source useful for automatically optimizing and tuning the pipeline, etc.",
                  :properties {:producesSortedKeys {:description "Whether this source is known to produce key/value pairs with the (encoded) keys in lexicographically sorted order.",
                                                    :type "boolean"},
                               :infinite {:description "Specifies that the size of this source is known to be infinite (this is a streaming source).",
                                          :type "boolean"},
                               :estimatedSizeBytes {:type "string",
                                                    :format "int64",
                                                    :description "An estimate of the total size (in bytes) of the data that would be read from this source. This estimate is in terms of external storage size, before any decompression or other processing done by the reader."}}},
 :CommitTemplateVersionRequest {:description "Commit will add a new TemplateVersion to an existing template.",
                                :properties {:templateVersion {:$ref "TemplateVersion",
                                                               :description "TemplateVersion obejct to create."}},
                                :id "CommitTemplateVersionRequest",
                                :type "object"},
 :ExecutionStageState {:description "A message describing the state of a particular execution stage.",
                       :properties {:executionStageState {:description "Executions stage states allow the same set of values as JobState.",
                                                          :type "string",
                                                          :enum ["JOB_STATE_UNKNOWN"
                                                                 "JOB_STATE_STOPPED"
                                                                 "JOB_STATE_RUNNING"
                                                                 "JOB_STATE_DONE"
                                                                 "JOB_STATE_FAILED"
                                                                 "JOB_STATE_CANCELLED"
                                                                 "JOB_STATE_UPDATED"
                                                                 "JOB_STATE_DRAINING"
                                                                 "JOB_STATE_DRAINED"
                                                                 "JOB_STATE_PENDING"
                                                                 "JOB_STATE_CANCELLING"
                                                                 "JOB_STATE_QUEUED"],
                                                          :enumDescriptions ["The job's run state isn't specified."
                                                                             "`JOB_STATE_STOPPED` indicates that the job has not yet started to run."
                                                                             "`JOB_STATE_RUNNING` indicates that the job is currently running."
                                                                             "`JOB_STATE_DONE` indicates that the job has successfully completed. This is a terminal job state. This state may be set by the Cloud Dataflow service, as a transition from `JOB_STATE_RUNNING`. It may also be set via a Cloud Dataflow `UpdateJob` call, if the job has not yet reached a terminal state."
                                                                             "`JOB_STATE_FAILED` indicates that the job has failed. This is a terminal job state. This state may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_RUNNING`."
                                                                             "`JOB_STATE_CANCELLED` indicates that the job has been explicitly cancelled. This is a terminal job state. This state may only be set via a Cloud Dataflow `UpdateJob` call, and only if the job has not yet reached another terminal state."
                                                                             "`JOB_STATE_UPDATED` indicates that the job was successfully updated, meaning that this job was stopped and another job was started, inheriting state from this one. This is a terminal job state. This state may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_RUNNING`."
                                                                             "`JOB_STATE_DRAINING` indicates that the job is in the process of draining. A draining job has stopped pulling from its input sources and is processing any data that remains in-flight. This state may be set via a Cloud Dataflow `UpdateJob` call, but only as a transition from `JOB_STATE_RUNNING`. Jobs that are draining may only transition to `JOB_STATE_DRAINED`, `JOB_STATE_CANCELLED`, or `JOB_STATE_FAILED`."
                                                                             "`JOB_STATE_DRAINED` indicates that the job has been drained. A drained job terminated by stopping pulling from its input sources and processing any data that remained in-flight when draining was requested. This state is a terminal state, may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_DRAINING`."
                                                                             "`JOB_STATE_PENDING` indicates that the job has been created but is not yet running. Jobs that are pending may only transition to `JOB_STATE_RUNNING`, or `JOB_STATE_FAILED`."
                                                                             "`JOB_STATE_CANCELLING` indicates that the job has been explicitly cancelled and is in the process of stopping. Jobs that are cancelling may only transition to `JOB_STATE_CANCELLED` or `JOB_STATE_FAILED`."
                                                                             "`JOB_STATE_QUEUED` indicates that the job has been created but is being delayed until launch. Jobs that are queued may only transition to `JOB_STATE_PENDING` or `JOB_STATE_CANCELLED`."]},
                                    :executionStageName {:type "string",
                                                         :description "The name of the execution stage."},
                                    :currentStateTime {:type "string",
                                                       :format "google-datetime",
                                                       :description "The time at which the stage transitioned to this state."}},
                       :id "ExecutionStageState",
                       :type "object"},
 :ResourceUtilizationReportResponse {:id "ResourceUtilizationReportResponse",
                                     :description "Service-side response to WorkerMessage reporting resource utilization.",
                                     :type "object",
                                     :properties {}},
 :ReportWorkItemStatusRequest {:type "object",
                               :properties {:currentWorkerTime {:format "google-datetime",
                                                                :type "string",
                                                                :description "The current timestamp at the worker."},
                                            :location {:description "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the WorkItem's job.",
                                                       :type "string"},
                                            :workerId {:type "string",
                                                       :description "The ID of the worker reporting the WorkItem status. If this does not match the ID of the worker which the Dataflow service believes currently has the lease on the WorkItem, the report will be dropped (with an error response)."},
                                            :unifiedWorkerRequest {:type "object",
                                                                   :additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                                                          :type "any"},
                                                                   :description "Untranslated bag-of-bytes WorkProgressUpdateRequest from UnifiedWorker."},
                                            :workItemStatuses {:type "array",
                                                               :items {:$ref "WorkItemStatus"},
                                                               :description "The order is unimportant, except that the order of the WorkItemServiceState messages in the ReportWorkItemStatusResponse corresponds to the order of WorkItemStatus messages here."}},
                               :id "ReportWorkItemStatusRequest",
                               :description "Request to report the status of WorkItems."},
 :ReportWorkItemStatusResponse {:properties {:unifiedWorkerResponse {:additionalProperties {:type "any",
                                                                                            :description "Properties of the object. Contains field @type with type URL."},
                                                                     :description "Untranslated bag-of-bytes WorkProgressUpdateResponse for UnifiedWorker.",
                                                                     :type "object"},
                                             :workItemServiceStates {:type "array",
                                                                     :items {:$ref "WorkItemServiceState"},
                                                                     :description "A set of messages indicating the service-side state for each WorkItem whose status was reported, in the same order as the WorkItemStatus messages in the ReportWorkItemStatusRequest which resulting in this response."}},
                                :type "object",
                                :id "ReportWorkItemStatusResponse",
                                :description "Response from a request to report the status of WorkItems."},
 :Environment {:type "object",
               :description "Describes the environment in which a Dataflow Job runs.",
               :properties {:flexResourceSchedulingGoal {:type "string",
                                                         :description "Which Flexible Resource Scheduling mode to run in.",
                                                         :enumDescriptions ["Run in the default mode."
                                                                            "Optimize for lower execution time."
                                                                            "Optimize for lower cost."],
                                                         :enum ["FLEXRS_UNSPECIFIED"
                                                                "FLEXRS_SPEED_OPTIMIZED"
                                                                "FLEXRS_COST_OPTIMIZED"]},
                            :internalExperiments {:type "object",
                                                  :additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                                         :type "any"},
                                                  :description "Experimental settings."},
                            :experiments {:type "array",
                                          :items {:type "string"},
                                          :description "The list of experiments to enable."},
                            :workerRegion {:description "The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. \"us-west1\". Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, default to the control plane's region.",
                                           :type "string"},
                            :sdkPipelineOptions {:description "The Cloud Dataflow SDK pipeline options specified by the user. These options are passed through the service and are used to recreate the SDK pipeline options on the worker in a language agnostic and platform independent way.",
                                                 :type "object",
                                                 :additionalProperties {:type "any",
                                                                        :description "Properties of the object."}},
                            :serviceKmsKeyName {:type "string",
                                                :description "If set, contains the Cloud KMS key identifier used to encrypt data at rest, AKA a Customer Managed Encryption Key (CMEK). Format: projects/PROJECT_ID/locations/LOCATION/keyRings/KEY_RING/cryptoKeys/KEY"},
                            :tempStoragePrefix {:description "The prefix of the resources the system should use for temporary storage. The system will append the suffix \"/temp-{JOBNAME} to this resource prefix, where {JOBNAME} is the value of the job_name field. The resulting bucket and object prefix is used as the prefix of the resources used to store temporary data needed during the job execution. NOTE: This will override the value in taskrunner_settings. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}",
                                                :type "string"},
                            :serviceAccountEmail {:description "Identity to run virtual machines as. Defaults to the default account.",
                                                  :type "string"},
                            :clusterManagerApiService {:description "The type of cluster manager API to use. If unknown or unspecified, the service will attempt to choose a reasonable default. This should be in the form of the API service name, e.g. \"compute.googleapis.com\".",
                                                       :type "string"},
                            :userAgent {:description "A description of the process that generated the request.",
                                        :type "object",
                                        :additionalProperties {:description "Properties of the object.",
                                                               :type "any"}},
                            :workerZone {:type "string",
                                         :description "The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. \"us-west1-a\". Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane's region is chosen based on available capacity."},
                            :version {:additionalProperties {:type "any",
                                                             :description "Properties of the object."},
                                      :type "object",
                                      :description "A structure describing which components and their versions of the service are required in order to run the job."},
                            :workerPools {:type "array",
                                          :items {:$ref "WorkerPool"},
                                          :description "The worker pools. At least one \"harness\" worker pool must be specified in order for the job to have workers."},
                            :dataset {:description "The dataset for the current project where various workflow related tables are stored. The supported resource type is: Google BigQuery: bigquery.googleapis.com/{dataset}",
                                      :type "string"}},
               :id "Environment"},
 :StateFamilyConfig {:description "State family configuration.",
                     :type "object",
                     :id "StateFamilyConfig",
                     :properties {:isRead {:description "If true, this family corresponds to a read operation.",
                                           :type "boolean"},
                                  :stateFamily {:description "The state family value.",
                                                :type "string"}}},
 :SeqMapTask {:properties {:outputInfos {:items {:$ref "SeqMapTaskOutputInfo"},
                                         :type "array",
                                         :description "Information about each of the outputs."},
                           :name {:type "string",
                                  :description "The user-provided name of the SeqDo operation."},
                           :inputs {:items {:$ref "SideInputInfo"},
                                    :description "Information about each of the inputs.",
                                    :type "array"},
                           :stageName {:type "string",
                                       :description "System-defined name of the stage containing the SeqDo operation. Unique across the workflow."},
                           :systemName {:type "string",
                                        :description "System-defined name of the SeqDo operation. Unique across the workflow."},
                           :userFn {:description "The user function to invoke.",
                                    :additionalProperties {:description "Properties of the object.",
                                                           :type "any"},
                                    :type "object"}},
              :description "Describes a particular function to invoke.",
              :type "object",
              :id "SeqMapTask"},
 :TopologyConfig {:description "Global topology of the streaming Dataflow job, including all computations and their sharded locations.",
                  :type "object",
                  :id "TopologyConfig",
                  :properties {:dataDiskAssignments {:type "array",
                                                     :items {:$ref "DataDiskAssignment"},
                                                     :description "The disks assigned to a streaming Dataflow job."},
                               :forwardingKeyBits {:description "The size (in bits) of keys that will be assigned to source messages.",
                                                   :type "integer",
                                                   :format "int32"},
                               :userStageToComputationNameMap {:description "Maps user stage names to stable computation names.",
                                                               :additionalProperties {:type "string"},
                                                               :type "object"},
                               :persistentStateVersion {:type "integer",
                                                        :description "Version number for persistent state.",
                                                        :format "int32"},
                               :computations {:description "The computations associated with a streaming Dataflow job.",
                                              :type "array",
                                              :items {:$ref "ComputationTopology"}}}},
 :AutoscalingSettings {:type "object",
                       :description "Settings for WorkerPool autoscaling.",
                       :properties {:maxNumWorkers {:format "int32",
                                                    :type "integer",
                                                    :description "The maximum number of workers to cap scaling at."},
                                    :algorithm {:enum ["AUTOSCALING_ALGORITHM_UNKNOWN"
                                                       "AUTOSCALING_ALGORITHM_NONE"
                                                       "AUTOSCALING_ALGORITHM_BASIC"],
                                                :type "string",
                                                :enumDescriptions ["The algorithm is unknown, or unspecified."
                                                                   "Disable autoscaling."
                                                                   "Increase worker count over time to reduce job execution time."],
                                                :description "The algorithm to use for autoscaling."}},
                       :id "AutoscalingSettings"},
 :Step {:type "object",
        :id "Step",
        :description "Defines a particular step within a Cloud Dataflow job. A job consists of multiple steps, each of which performs some specific operation as part of the overall job. Data is typically passed from one step to another as part of the job. Here's an example of a sequence of steps which together implement a Map-Reduce job: * Read a collection of data from some source, parsing the collection's elements. * Validate the elements. * Apply a user-defined function to map each element to some value and extract an element-specific key value. * Group elements with the same key into a single element with that key, transforming a multiply-keyed collection into a uniquely-keyed collection. * Write the elements out to some data sink. Note that the Cloud Dataflow service may be used to run many different types of jobs, not just Map-Reduce.",
        :properties {:kind {:type "string",
                            :description "The kind of step in the Cloud Dataflow job."},
                     :properties {:additionalProperties {:type "any",
                                                         :description "Properties of the object."},
                                  :description "Named properties associated with the step. Each kind of predefined step has its own required set of properties. Must be provided on Create. Only retrieved with JOB_VIEW_ALL.",
                                  :type "object"},
                     :name {:type "string",
                            :description "The name that identifies the step. This must be unique for each step with respect to all other steps in the Cloud Dataflow job."}}},
 :SourceOperationRequest {:properties {:split {:$ref "SourceSplitRequest",
                                               :description "Information about a request to split a source."},
                                       :originalName {:type "string",
                                                      :description "System-defined name for the Read instruction for this source in the original workflow graph."},
                                       :systemName {:type "string",
                                                    :description "System-defined name of the Read instruction for this source. Unique across the workflow."},
                                       :stageName {:description "System-defined name of the stage containing the source operation. Unique across the workflow.",
                                                   :type "string"},
                                       :name {:description "User-provided name of the Read instruction for this source.",
                                              :type "string"},
                                       :getMetadata {:$ref "SourceGetMetadataRequest",
                                                     :description "Information about a request to get metadata about a source."}},
                          :type "object",
                          :description "A work item that represents the different operations that can be performed on a user-defined Source specification.",
                          :id "SourceOperationRequest"},
 :MetricUpdate {:type "object",
                :description "Describes the state of a metric.",
                :id "MetricUpdate",
                :properties {:cumulative {:description "True if this metric is reported as the total cumulative aggregate value accumulated since the worker started working on this WorkItem. By default this is false, indicating that this metric is reported as a delta that is not associated with any WorkItem.",
                                          :type "boolean"},
                             :gauge {:type "any",
                                     :description "A struct value describing properties of a Gauge. Metrics of gauge type show the value of a metric across time, and is aggregated based on the newest value."},
                             :name {:$ref "MetricStructuredName",
                                    :description "Name of the metric."},
                             :internal {:type "any",
                                        :description "Worker-computed aggregate value for internal use by the Dataflow service."},
                             :updateTime {:format "google-datetime",
                                          :description "Timestamp associated with the metric value. Optional when workers are reporting work progress; it will be filled in responses from the metrics API.",
                                          :type "string"},
                             :scalar {:type "any",
                                      :description "Worker-computed aggregate value for aggregation kinds \"Sum\", \"Max\", \"Min\", \"And\", and \"Or\". The possible value types are Long, Double, and Boolean."},
                             :kind {:type "string",
                                    :description "Metric aggregation kind. The possible metric aggregation kinds are \"Sum\", \"Max\", \"Min\", \"Mean\", \"Set\", \"And\", \"Or\", and \"Distribution\". The specified aggregation kind is case-insensitive. If omitted, this is not an aggregated value but instead a single metric sample value."},
                             :distribution {:type "any",
                                            :description "A struct value describing properties of a distribution of numeric values."},
                             :set {:description "Worker-computed aggregate value for the \"Set\" aggregation kind. The only possible value type is a list of Values whose type can be Long, Double, or String, according to the metric's type. All Values in the list must be of the same type.",
                                   :type "any"},
                             :meanSum {:type "any",
                                       :description "Worker-computed aggregate value for the \"Mean\" aggregation kind. This holds the sum of the aggregated values and is used in combination with mean_count below to obtain the actual mean aggregate value. The only possible value types are Long and Double."},
                             :meanCount {:description "Worker-computed aggregate value for the \"Mean\" aggregation kind. This holds the count of the aggregated values and is used in combination with mean_sum above to obtain the actual mean aggregate value. The only possible value type is Long.",
                                         :type "any"}}},
 :WorkItemServiceState {:description "The Dataflow service's idea of the current state of a WorkItem being processed by a worker.",
                        :type "object",
                        :properties {:reportStatusInterval {:type "string",
                                                            :format "google-duration",
                                                            :description "New recommended reporting interval."},
                                     :nextReportIndex {:format "int64",
                                                       :description "The index value to use for the next report sent by the worker. Note: If the report call fails for whatever reason, the worker should reuse this index for subsequent report attempts.",
                                                       :type "string"},
                                     :harnessData {:additionalProperties {:description "Properties of the object.",
                                                                          :type "any"},
                                                   :type "object",
                                                   :description "Other data returned by the service, specific to the particular worker harness."},
                                     :hotKeyDetection {:description "A hot key is a symptom of poor data distribution in which there are enough elements mapped to a single key to impact pipeline performance. When present, this field includes metadata associated with any hot key.",
                                                       :$ref "HotKeyDetection"},
                                     :suggestedStopPosition {:$ref "Position",
                                                             :description "Obsolete, always empty."},
                                     :splitRequest {:$ref "ApproximateSplitRequest",
                                                    :description "The progress point in the WorkItem where the Dataflow service suggests that the worker truncate the task."},
                                     :suggestedStopPoint {:description "DEPRECATED in favor of split_request.",
                                                          :$ref "ApproximateProgress"},
                                     :completeWorkStatus {:$ref "Status",
                                                          :description "If set, a request to complete the work item with the given status. This will not be set to OK, unless supported by the specific kind of WorkItem. It can be used for the backend to indicate a WorkItem must terminate, e.g., for aborting work."},
                                     :metricShortId {:type "array",
                                                     :items {:$ref "MetricShortId"},
                                                     :description "The short ids that workers should use in subsequent metric updates. Workers should strive to use short ids whenever possible, but it is ok to request the short_id again if a worker lost track of it (e.g. if the worker is recovering from a crash). NOTE: it is possible that the response may have short ids for a subset of the metrics."},
                                     :leaseExpireTime {:type "string",
                                                       :format "google-datetime",
                                                       :description "Time at which the current lease will expire."}},
                        :id "WorkItemServiceState"},
 :SnapshotJobRequest {:id "SnapshotJobRequest",
                      :properties {:location {:description "The location that contains this job.",
                                              :type "string"},
                                   :description {:description "User specified description of the snapshot. Maybe empty.",
                                                 :type "string"},
                                   :ttl {:type "string",
                                         :description "TTL for the snapshot.",
                                         :format "google-duration"},
                                   :snapshotSources {:description "If true, perform snapshots for sources which support this.",
                                                     :type "boolean"}},
                      :description "Request to create a snapshot of a job.",
                      :type "object"},
 :ListJobsResponse {:type "object",
                    :properties {:nextPageToken {:type "string",
                                                 :description "Set if there may be more results than fit in this response."},
                                 :jobs {:items {:$ref "Job"},
                                        :description "A subset of the requested job information.",
                                        :type "array"},
                                 :failedLocation {:type "array",
                                                  :items {:$ref "FailedLocation"},
                                                  :description "Zero or more messages describing the [regional endpoints] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that failed to respond."}},
                    :id "ListJobsResponse",
                    :description "Response to a request to list Cloud Dataflow jobs in a project. This might be a partial response, depending on the page size in the ListJobsRequest. However, if the project does not have any jobs, an instance of ListJobsResponse is not returned and the requests's response body is empty {}."},
 :KeyRangeDataDiskAssignment {:type "object",
                              :id "KeyRangeDataDiskAssignment",
                              :properties {:start {:description "The start (inclusive) of the key range.",
                                                   :type "string"},
                                           :dataDisk {:type "string",
                                                      :description "The name of the data disk where data for this range is stored. This name is local to the Google Cloud Platform project and uniquely identifies the disk within that project, for example \"myproject-1014-104817-4c2-harness-0-disk-1\"."},
                                           :end {:description "The end (exclusive) of the key range.",
                                                 :type "string"}},
                              :description "Data disk assignment information for a specific key-range of a sharded computation. Currently we only support UTF-8 character splits to simplify encoding into JSON."},
 :ComponentSource {:type "object",
                   :properties {:name {:description "Dataflow service generated name for this source.",
                                       :type "string"},
                                :userName {:type "string",
                                           :description "Human-readable name for this transform; may be user or system generated."},
                                :originalTransformOrCollection {:type "string",
                                                                :description "User name for the original user transform or collection with which this source is most closely associated."}},
                   :id "ComponentSource",
                   :description "Description of an interstitial value between transforms in an execution stage."},
 :LaunchTemplateResponse {:type "object",
                          :id "LaunchTemplateResponse",
                          :properties {:job {:description "The job that was launched, if the request was not a dry run and the job was successfully launched.",
                                             :$ref "Job"}},
                          :description "Response to the request to launch a template."},
 :StreamLocation {:type "object",
                  :properties {:streamingStageLocation {:description "The stream is part of another computation within the current streaming Dataflow job.",
                                                        :$ref "StreamingStageLocation"},
                               :pubsubLocation {:$ref "PubsubLocation",
                                                :description "The stream is a pubsub stream."},
                               :sideInputLocation {:$ref "StreamingSideInputLocation",
                                                   :description "The stream is a streaming side input."},
                               :customSourceLocation {:description "The stream is a custom source.",
                                                      :$ref "CustomSourceLocation"}},
                  :description "Describes a stream of data, either as input to be processed or as output of a streaming Dataflow job.",
                  :id "StreamLocation"},
 :WorkItem {:properties {:seqMapTask {:$ref "SeqMapTask",
                                      :description "Additional information for SeqMapTask WorkItems."},
                         :sourceOperationTask {:description "Additional information for source operation WorkItems.",
                                               :$ref "SourceOperationRequest"},
                         :reportStatusInterval {:format "google-duration",
                                                :description "Recommended reporting interval.",
                                                :type "string"},
                         :shellTask {:$ref "ShellTask",
                                     :description "Additional information for ShellTask WorkItems."},
                         :id {:type "string",
                              :description "Identifies this WorkItem.",
                              :format "int64"},
                         :initialReportIndex {:type "string",
                                              :format "int64",
                                              :description "The initial index to use when reporting the status of the WorkItem."},
                         :packages {:type "array",
                                    :items {:$ref "Package"},
                                    :description "Any required packages that need to be fetched in order to execute this WorkItem."},
                         :configuration {:type "string",
                                         :description "Work item-specific configuration as an opaque blob."},
                         :projectId {:description "Identifies the cloud project this WorkItem belongs to.",
                                     :type "string"},
                         :mapTask {:$ref "MapTask",
                                   :description "Additional information for MapTask WorkItems."},
                         :streamingConfigTask {:$ref "StreamingConfigTask",
                                               :description "Additional information for StreamingConfigTask WorkItems."},
                         :jobId {:type "string",
                                 :description "Identifies the workflow job this WorkItem belongs to."},
                         :streamingSetupTask {:description "Additional information for StreamingSetupTask WorkItems.",
                                              :$ref "StreamingSetupTask"},
                         :streamingComputationTask {:description "Additional information for StreamingComputationTask WorkItems.",
                                                    :$ref "StreamingComputationTask"},
                         :leaseExpireTime {:format "google-datetime",
                                           :description "Time when the lease on this Work will expire.",
                                           :type "string"}},
            :type "object",
            :description "WorkItem represents basic information about a WorkItem to be executed in the cloud.",
            :id "WorkItem"},
 :DatastoreIODetails {:description "Metadata for a Datastore connector used by the job.",
                      :properties {:projectId {:type "string",
                                               :description "ProjectId accessed in the connection."},
                                   :namespace {:description "Namespace used in the connection.",
                                               :type "string"}},
                      :type "object",
                      :id "DatastoreIODetails"},
 :ModifyTemplateVersionLabelResponse {:description "Respond the labels in the TemplateVersion.",
                                      :id "ModifyTemplateVersionLabelResponse",
                                      :type "object",
                                      :properties {:labels {:type "object",
                                                            :description "All the label in the TemplateVersion.",
                                                            :additionalProperties {:type "string"}}}},
 :SeqMapTaskOutputInfo {:description "Information about an output of a SeqMapTask.",
                        :properties {:tag {:type "string",
                                           :description "The id of the TupleTag the user code will tag the output value by."},
                                     :sink {:$ref "Sink",
                                            :description "The sink to write the output value to."}},
                        :id "SeqMapTaskOutputInfo",
                        :type "object"},
 :ConcatPosition {:properties {:index {:description "Index of the inner source.",
                                       :type "integer",
                                       :format "int32"},
                               :position {:$ref "Position",
                                          :description "Position within the inner source."}},
                  :description "A position that encapsulates an inner position and an index for the inner position. A ConcatPosition can be used by a reader of a source that encapsulates a set of other sources.",
                  :id "ConcatPosition",
                  :type "object"},
 :LaunchTemplateParameters {:id "LaunchTemplateParameters",
                            :type "object",
                            :description "Parameters to provide to the template being launched.",
                            :properties {:jobName {:type "string",
                                                   :description "Required. The job name to use for the created job."},
                                         :parameters {:additionalProperties {:type "string"},
                                                      :description "The runtime parameters to pass to the job.",
                                                      :type "object"},
                                         :transformNameMapping {:type "object",
                                                                :description "Only applicable when updating a pipeline. Map of transform name prefixes of the job to be replaced to the corresponding name prefixes of the new job.",
                                                                :additionalProperties {:type "string"}},
                                         :update {:description "If set, replace the existing pipeline with the name specified by jobName with this pipeline, preserving state.",
                                                  :type "boolean"},
                                         :environment {:$ref "RuntimeEnvironment",
                                                       :description "The runtime environment for the job."}}},
 :ListJobMessagesResponse {:id "ListJobMessagesResponse",
                           :description "Response to a request to list job messages.",
                           :properties {:nextPageToken {:description "The token to obtain the next page of results if there are more.",
                                                        :type "string"},
                                        :jobMessages {:type "array",
                                                      :description "Messages in ascending timestamp order.",
                                                      :items {:$ref "JobMessage"}},
                                        :autoscalingEvents {:items {:$ref "AutoscalingEvent"},
                                                            :description "Autoscaling events in ascending timestamp order.",
                                                            :type "array"}},
                           :type "object"},
 :QueryInfo {:id "QueryInfo",
             :type "object",
             :description "Information about a validated query.",
             :properties {:queryProperty {:items {:enum ["QUERY_PROPERTY_UNSPECIFIED"
                                                         "HAS_UNBOUNDED_SOURCE"],
                                                  :type "string",
                                                  :enumDescriptions ["The query property is unknown or unspecified."
                                                                     "Indicates this query reads from >= 1 unbounded source."]},
                                          :type "array",
                                          :description "Includes an entry for each satisfied QueryProperty."}}},
 :InstructionInput {:description "An input of an instruction, as a reference to an output of a producer instruction.",
                    :properties {:outputNum {:format "int32",
                                             :type "integer",
                                             :description "The output index (origin zero) within the producer."},
                                 :producerInstructionIndex {:type "integer",
                                                            :format "int32",
                                                            :description "The index (origin zero) of the parallel instruction that produces the output to be consumed by this input. This index is relative to the list of instructions in this input's instruction's containing MapTask."}},
                    :id "InstructionInput",
                    :type "object"},
 :StageSummary {:properties {:endTime {:description "End time of this stage. If the work item is completed, this is the actual end time of the stage. Otherwise, it is the predicted end time.",
                                       :format "google-datetime",
                                       :type "string"},
                             :state {:enum ["EXECUTION_STATE_UNKNOWN"
                                            "EXECUTION_STATE_NOT_STARTED"
                                            "EXECUTION_STATE_RUNNING"
                                            "EXECUTION_STATE_SUCCEEDED"
                                            "EXECUTION_STATE_FAILED"
                                            "EXECUTION_STATE_CANCELLED"],
                                     :description "State of this stage.",
                                     :enumDescriptions ["The component state is unknown or unspecified."
                                                        "The component is not yet running."
                                                        "The component is currently running."
                                                        "The component succeeded."
                                                        "The component failed."
                                                        "Execution of the component was cancelled."],
                                     :type "string"},
                             :startTime {:type "string",
                                         :description "Start time of this stage.",
                                         :format "google-datetime"},
                             :stageId {:type "string",
                                       :description "ID of this stage"},
                             :metrics {:type "array",
                                       :items {:$ref "MetricUpdate"},
                                       :description "Metrics for this stage."},
                             :progress {:$ref "ProgressTimeseries",
                                        :description "Progress for this stage. Only applicable to Batch jobs."}},
                :description "Information about a particular execution stage of a job.",
                :type "object",
                :id "StageSummary"},
 :MetricStructuredName {:type "object",
                        :description "Identifies a metric, by describing the source which generated the metric.",
                        :properties {:origin {:description "Origin (namespace) of metric name. May be blank for user-define metrics; will be \"dataflow\" for metrics defined by the Dataflow service or SDK.",
                                              :type "string"},
                                     :context {:type "object",
                                               :additionalProperties {:type "string"},
                                               :description "Zero or more labeled fields which identify the part of the job this metric is associated with, such as the name of a step or collection. For example, built-in counters associated with steps will have context['step'] = . Counters associated with PCollections in the SDK will have context['pcollection'] = ."},
                                     :name {:type "string",
                                            :description "Worker-defined metric name."}},
                        :id "MetricStructuredName"},
 :CreateJobFromTemplateRequest {:type "object",
                                :id "CreateJobFromTemplateRequest",
                                :properties {:jobName {:type "string",
                                                       :description "Required. The job name to use for the created job."},
                                             :parameters {:additionalProperties {:type "string"},
                                                          :description "The runtime parameters to pass to the job.",
                                                          :type "object"},
                                             :environment {:$ref "RuntimeEnvironment",
                                                           :description "The runtime environment for the job."},
                                             :location {:description "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to which to direct the request.",
                                                        :type "string"},
                                             :gcsPath {:description "Required. A Cloud Storage path to the template from which to create the job. Must be a valid Cloud Storage URL, beginning with `gs://`.",
                                                       :type "string"}},
                                :description "A request to create a Cloud Dataflow job from a template."},
 :FileIODetails {:id "FileIODetails",
                 :description "Metadata for a File connector used by the job.",
                 :properties {:filePattern {:description "File Pattern used to access files by the connector.",
                                            :type "string"}},
                 :type "object"},
 :CounterUpdate {:properties {:integerMean {:$ref "IntegerMean",
                                            :description "Integer mean aggregation value for Mean."},
                              :nameAndKind {:description "Counter name and aggregation type.",
                                            :$ref "NameAndKind"},
                              :floatingPoint {:format "double",
                                              :type "number",
                                              :description "Floating point value for Sum, Max, Min."},
                              :cumulative {:type "boolean",
                                           :description "True if this counter is reported as the total cumulative aggregate value accumulated since the worker started working on this WorkItem. By default this is false, indicating that this counter is reported as a delta."},
                              :structuredNameAndMetadata {:$ref "CounterStructuredNameAndMetadata",
                                                          :description "Counter structured name and metadata."},
                              :integerGauge {:description "Gauge data",
                                             :$ref "IntegerGauge"},
                              :shortId {:description "The service-generated short identifier for this counter. The short_id -> (name, metadata) mapping is constant for the lifetime of a job.",
                                        :format "int64",
                                        :type "string"},
                              :floatingPointList {:description "List of floating point numbers, for Set.",
                                                  :$ref "FloatingPointList"},
                              :internal {:description "Value for internally-defined counters used by the Dataflow service.",
                                         :type "any"},
                              :integer {:$ref "SplitInt64",
                                        :description "Integer value for Sum, Max, Min."},
                              :stringList {:$ref "StringList",
                                           :description "List of strings, for Set."},
                              :integerList {:$ref "IntegerList",
                                            :description "List of integers, for Set."},
                              :distribution {:$ref "DistributionUpdate",
                                             :description "Distribution data"},
                              :floatingPointMean {:description "Floating point mean aggregation value for Mean.",
                                                  :$ref "FloatingPointMean"},
                              :boolean {:description "Boolean value for And, Or.",
                                        :type "boolean"}},
                 :id "CounterUpdate",
                 :type "object",
                 :description "An update to a Counter sent from a worker."},
 :StageExecutionDetails {:properties {:workers {:type "array",
                                                :description "Workers that have done work on the stage.",
                                                :items {:$ref "WorkerDetails"}},
                                      :nextPageToken {:description "If present, this response does not contain all requested tasks. To obtain the next page of results, repeat the request with page_token set to this value.",
                                                      :type "string"}},
                         :description "Information about the workers and work items within a stage.",
                         :id "StageExecutionDetails",
                         :type "object"},
 :BigTableIODetails {:type "object",
                     :description "Metadata for a BigTable connector used by the job.",
                     :id "BigTableIODetails",
                     :properties {:instanceId {:description "InstanceId accessed in the connection.",
                                               :type "string"},
                                  :tableId {:type "string",
                                            :description "TableId accessed in the connection."},
                                  :projectId {:description "ProjectId accessed in the connection.",
                                              :type "string"}}},
 :ModifyTemplateVersionTagRequest {:type "object",
                                   :description "Add a tag to the current TemplateVersion. If tag exist in another TemplateVersion in the Template, remove the tag before add it to the current TemplateVersion. If remove_only set, remove the tag from the current TemplateVersion.",
                                   :properties {:tag {:type "string",
                                                      :description "The tag for update."},
                                                :removeOnly {:type "boolean",
                                                             :description "The flag that indicates if the request is only for remove tag from TemplateVersion."}},
                                   :id "ModifyTemplateVersionTagRequest"},
 :ParameterMetadata {:properties {:label {:description "Required. The label to display for the parameter.",
                                          :type "string"},
                                  :regexes {:description "Optional. Regexes that the parameter must match.",
                                            :type "array",
                                            :items {:type "string"}},
                                  :helpText {:type "string",
                                             :description "Required. The help text to display for the parameter."},
                                  :name {:type "string",
                                         :description "Required. The name of the parameter."},
                                  :paramType {:enumDescriptions ["Default input type."
                                                                 "The parameter specifies generic text input."
                                                                 "The parameter specifies a GCS Bucket to read from."
                                                                 "The parameter specifies a GCS Bucket to write to."
                                                                 "The parameter specifies a GCS file path to read from."
                                                                 "The parameter specifies a GCS file path to write to."
                                                                 "The parameter specifies a GCS folder path to read from."
                                                                 "The parameter specifies a GCS folder to write to."
                                                                 "The parameter specifies a Pub/Sub Topic."
                                                                 "The parameter specifies a Pub/Sub Subscription."],
                                              :type "string",
                                              :description "Optional. The type of the parameter. Used for selecting input picker.",
                                              :enum ["DEFAULT"
                                                     "TEXT"
                                                     "GCS_READ_BUCKET"
                                                     "GCS_WRITE_BUCKET"
                                                     "GCS_READ_FILE"
                                                     "GCS_WRITE_FILE"
                                                     "GCS_READ_FOLDER"
                                                     "GCS_WRITE_FOLDER"
                                                     "PUBSUB_TOPIC"
                                                     "PUBSUB_SUBSCRIPTION"]},
                                  :isOptional {:type "boolean",
                                               :description "Optional. Whether the parameter is optional. Defaults to false."}},
                     :description "Metadata for a specific parameter.",
                     :type "object",
                     :id "ParameterMetadata"},
 :Sink {:properties {:codec {:description "The codec to use to encode data written to the sink.",
                             :type "object",
                             :additionalProperties {:description "Properties of the object.",
                                                    :type "any"}},
                     :spec {:additionalProperties {:description "Properties of the object.",
                                                   :type "any"},
                            :description "The sink to write to, plus its parameters.",
                            :type "object"}},
        :type "object",
        :description "A sink that records can be encoded and written to.",
        :id "Sink"},
 :PubSubIODetails {:id "PubSubIODetails",
                   :properties {:subscription {:type "string",
                                               :description "Subscription used in the connection."},
                                :topic {:description "Topic accessed in the connection.",
                                        :type "string"}},
                   :description "Metadata for a PubSub connector used by the job.",
                   :type "object"},
 :ExecutionStageSummary {:type "object",
                         :id "ExecutionStageSummary",
                         :properties {:inputSource {:description "Input sources for this stage.",
                                                    :items {:$ref "StageSource"},
                                                    :type "array"},
                                      :outputSource {:items {:$ref "StageSource"},
                                                     :type "array",
                                                     :description "Output sources for this stage."},
                                      :prerequisiteStage {:type "array",
                                                          :description "Other stages that must complete before this stage can run.",
                                                          :items {:type "string"}},
                                      :kind {:type "string",
                                             :enumDescriptions ["Unrecognized transform type."
                                                                "ParDo transform."
                                                                "Group By Key transform."
                                                                "Flatten transform."
                                                                "Read transform."
                                                                "Write transform."
                                                                "Constructs from a constant value, such as with Create.of."
                                                                "Creates a Singleton view of a collection."
                                                                "Opening or closing a shuffle session, often as part of a GroupByKey."],
                                             :description "Type of tranform this stage is executing.",
                                             :enum ["UNKNOWN_KIND"
                                                    "PAR_DO_KIND"
                                                    "GROUP_BY_KEY_KIND"
                                                    "FLATTEN_KIND"
                                                    "READ_KIND"
                                                    "WRITE_KIND"
                                                    "CONSTANT_KIND"
                                                    "SINGLETON_KIND"
                                                    "SHUFFLE_KIND"]},
                                      :id {:type "string",
                                           :description "Dataflow service generated id for this stage."},
                                      :componentSource {:type "array",
                                                        :description "Collections produced and consumed by component transforms of this stage.",
                                                        :items {:$ref "ComponentSource"}},
                                      :name {:type "string",
                                             :description "Dataflow service generated name for this stage."},
                                      :componentTransform {:items {:$ref "ComponentTransform"},
                                                           :description "Transforms that comprise this execution stage.",
                                                           :type "array"}},
                         :description "Description of the composing transforms, names/ids, and input/outputs of a stage of execution. Some composing transforms and sources may have been generated by the Dataflow service during execution planning."},
 :AutoscalingEvent {:properties {:workerPool {:type "string",
                                              :description "A short and friendly name for the worker pool this event refers to, populated from the value of PoolStageRelation::user_pool_name."},
                                 :currentNumWorkers {:format "int64",
                                                     :type "string",
                                                     :description "The current number of workers the job has."},
                                 :time {:type "string",
                                        :description "The time this event was emitted to indicate a new target or current num_workers value.",
                                        :format "google-datetime"},
                                 :targetNumWorkers {:type "string",
                                                    :description "The target number of workers the worker pool wants to resize to use.",
                                                    :format "int64"},
                                 :eventType {:type "string",
                                             :enum ["TYPE_UNKNOWN"
                                                    "TARGET_NUM_WORKERS_CHANGED"
                                                    "CURRENT_NUM_WORKERS_CHANGED"
                                                    "ACTUATION_FAILURE"
                                                    "NO_CHANGE"],
                                             :enumDescriptions ["Default type for the enum. Value should never be returned."
                                                                "The TARGET_NUM_WORKERS_CHANGED type should be used when the target worker pool size has changed at the start of an actuation. An event should always be specified as TARGET_NUM_WORKERS_CHANGED if it reflects a change in the target_num_workers."
                                                                "The CURRENT_NUM_WORKERS_CHANGED type should be used when actual worker pool size has been changed, but the target_num_workers has not changed."
                                                                "The ACTUATION_FAILURE type should be used when we want to report an error to the user indicating why the current number of workers in the pool could not be changed. Displayed in the current status and history widgets."
                                                                "Used when we want to report to the user a reason why we are not currently adjusting the number of workers. Should specify both target_num_workers, current_num_workers and a decision_message."],
                                             :description "The type of autoscaling event to report."},
                                 :description {:description "A message describing why the system decided to adjust the current number of workers, why it failed, or why the system decided to not make any changes to the number of workers.",
                                               :$ref "StructuredMessage"}},
                    :description "A structured message reporting an autoscaling decision made by the Dataflow service.",
                    :type "object",
                    :id "AutoscalingEvent"},
 :DisplayData {:properties {:durationValue {:format "google-duration",
                                            :description "Contains value if the data is of duration type.",
                                            :type "string"},
                            :key {:description "The key identifying the display data. This is intended to be used as a label for the display data when viewed in a dax monitoring system.",
                                  :type "string"},
                            :int64Value {:description "Contains value if the data is of int64 type.",
                                         :type "string",
                                         :format "int64"},
                            :strValue {:type "string",
                                       :description "Contains value if the data is of string type."},
                            :javaClassValue {:type "string",
                                             :description "Contains value if the data is of java class type."},
                            :label {:type "string",
                                    :description "An optional label to display in a dax UI for the element."},
                            :floatValue {:format "float",
                                         :type "number",
                                         :description "Contains value if the data is of float type."},
                            :timestampValue {:type "string",
                                             :format "google-datetime",
                                             :description "Contains value if the data is of timestamp type."},
                            :url {:type "string",
                                  :description "An optional full URL."},
                            :shortStrValue {:type "string",
                                            :description "A possible additional shorter value to display. For example a java_class_name_value of com.mypackage.MyDoFn will be stored with MyDoFn as the short_str_value and com.mypackage.MyDoFn as the java_class_name value. short_str_value can be displayed and java_class_name_value will be displayed as a tooltip."},
                            :namespace {:type "string",
                                        :description "The namespace for the key. This is usually a class name or programming language namespace (i.e. python module) which defines the display data. This allows a dax monitoring system to specially handle the data and perform custom rendering."},
                            :boolValue {:type "boolean",
                                        :description "Contains value if the data is of a boolean type."}},
               :type "object",
               :id "DisplayData",
               :description "Data provided with a pipeline or transform to provide descriptive info."},
 :ApproximateReportedProgress {:id "ApproximateReportedProgress",
                               :properties {:fractionConsumed {:description "Completion as fraction of the input consumed, from 0.0 (beginning, nothing consumed), to 1.0 (end of the input, entire input consumed).",
                                                               :type "number",
                                                               :format "double"},
                                            :consumedParallelism {:$ref "ReportedParallelism",
                                                                  :description "Total amount of parallelism in the portion of input of this task that has already been consumed and is no longer active. In the first two examples above (see remaining_parallelism), the value should be 29 or 2 respectively. The sum of remaining_parallelism and consumed_parallelism should equal the total amount of parallelism in this work item. If specified, must be finite."},
                                            :remainingParallelism {:description "Total amount of parallelism in the input of this task that remains, (i.e. can be delegated to this task and any new tasks via dynamic splitting). Always at least 1 for non-finished work items and 0 for finished. \"Amount of parallelism\" refers to how many non-empty parts of the input can be read in parallel. This does not necessarily equal number of records. An input that can be read in parallel down to the individual records is called \"perfectly splittable\". An example of non-perfectly parallelizable input is a block-compressed file format where a block of records has to be read as a whole, but different blocks can be read in parallel. Examples: * If we are processing record #30 (starting at 1) out of 50 in a perfectly splittable 50-record input, this value should be 21 (20 remaining + 1 current). * If we are reading through block 3 in a block-compressed file consisting of 5 blocks, this value should be 3 (since blocks 4 and 5 can be processed in parallel by new tasks via dynamic splitting and the current task remains processing block 3). * If we are reading through the last block in a block-compressed file, or reading or processing the last record in a perfectly splittable input, this value should be 1, because apart from the current task, no additional remainder can be split off.",
                                                                   :$ref "ReportedParallelism"},
                                            :position {:description "A Position within the work to represent a progress.",
                                                       :$ref "Position"}},
                               :description "A progress measurement of a WorkItem by a worker.",
                               :type "object"},
 :SourceFork {:id "SourceFork",
              :properties {:residualSource {:description "DEPRECATED",
                                            :$ref "DerivedSource"},
                           :primary {:description "DEPRECATED",
                                     :$ref "SourceSplitShard"},
                           :residual {:$ref "SourceSplitShard",
                                      :description "DEPRECATED"},
                           :primarySource {:description "DEPRECATED",
                                           :$ref "DerivedSource"}},
              :type "object",
              :description "DEPRECATED in favor of DynamicSourceSplit."},
 :ListTemplateVersionsResponse {:id "ListTemplateVersionsResponse",
                                :description "Respond a list of TemplateVersions.",
                                :properties {:nextPageToken {:type "string",
                                                             :description "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."},
                                             :templateVersions {:description "A list of TemplateVersions.",
                                                                :items {:$ref "TemplateVersion"},
                                                                :type "array"}},
                                :type "object"},
 :TaskRunnerSettings {:type "object",
                      :properties {:logToSerialconsole {:type "boolean",
                                                        :description "Whether to send taskrunner log info to Google Compute Engine VM serial console."},
                                   :continueOnException {:type "boolean",
                                                         :description "Whether to continue taskrunner if an exception is hit."},
                                   :logDir {:type "string",
                                            :description "The directory on the VM to store logs."},
                                   :commandlinesFileName {:type "string",
                                                          :description "The file to store preprocessing commands in."},
                                   :alsologtostderr {:description "Whether to also send taskrunner log info to stderr.",
                                                     :type "boolean"},
                                   :streamingWorkerMainClass {:type "string",
                                                              :description "The streaming worker main class name."},
                                   :taskGroup {:type "string",
                                               :description "The UNIX group ID on the worker VM to use for tasks launched by taskrunner; e.g. \"wheel\"."},
                                   :baseUrl {:description "The base URL for the taskrunner to use when accessing Google Cloud APIs. When workers access Google Cloud APIs, they logically do so via relative URLs. If this field is specified, it supplies the base URL to use for resolving these relative URLs. The normative algorithm used is defined by RFC 1808, \"Relative Uniform Resource Locators\". If not specified, the default value is \"http://www.googleapis.com/\"",
                                             :type "string"},
                                   :tempStoragePrefix {:description "The prefix of the resources the taskrunner should use for temporary storage. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}",
                                                       :type "string"},
                                   :vmId {:description "The ID string of the VM.",
                                          :type "string"},
                                   :baseTaskDir {:description "The location on the worker for task-specific subdirectories.",
                                                 :type "string"},
                                   :oauthScopes {:description "The OAuth2 scopes to be requested by the taskrunner in order to access the Cloud Dataflow API.",
                                                 :items {:type "string"},
                                                 :type "array"},
                                   :logUploadLocation {:description "Indicates where to put logs. If this is not specified, the logs will not be uploaded. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}",
                                                       :type "string"},
                                   :taskUser {:type "string",
                                              :description "The UNIX user ID on the worker VM to use for tasks launched by taskrunner; e.g. \"root\"."},
                                   :languageHint {:description "The suggested backend language.",
                                                  :type "string"},
                                   :parallelWorkerSettings {:description "The settings to pass to the parallel worker harness.",
                                                            :$ref "WorkerSettings"},
                                   :dataflowApiVersion {:type "string",
                                                        :description "The API version of endpoint, e.g. \"v1b3\""},
                                   :harnessCommand {:type "string",
                                                    :description "The command to launch the worker harness."},
                                   :workflowFileName {:description "The file to store the workflow in.",
                                                      :type "string"}},
                      :id "TaskRunnerSettings",
                      :description "Taskrunner configuration settings."},
 :ReportedParallelism {:properties {:isInfinite {:type "boolean",
                                                 :description "Specifies whether the parallelism is infinite. If true, \"value\" is ignored. Infinite parallelism means the service will assume that the work item can always be split into more non-empty work items by dynamic splitting. This is a work-around for lack of support for infinity by the current JSON-based Java RPC stack."},
                                    :value {:type "number",
                                            :description "Specifies the level of parallelism in case it is finite.",
                                            :format "double"}},
                       :id "ReportedParallelism",
                       :description "Represents the level of parallelism in a WorkItem's input, reported by the worker.",
                       :type "object"},
 :MetricShortId {:properties {:metricIndex {:type "integer",
                                            :format "int32",
                                            :description "The index of the corresponding metric in the ReportWorkItemStatusRequest. Required."},
                              :shortId {:type "string",
                                        :description "The service-generated short identifier for the metric.",
                                        :format "int64"}},
                 :description "The metric short id is returned to the user alongside an offset into ReportWorkItemStatusRequest",
                 :id "MetricShortId",
                 :type "object"},
 :Package {:description "The packages that must be installed in order for a worker to run the steps of the Cloud Dataflow job that will be assigned to its worker pool. This is the mechanism by which the Cloud Dataflow SDK causes code to be loaded onto the workers. For example, the Cloud Dataflow Java SDK might use this to install jars containing the user's code and all of the various dependencies (libraries, data files, etc.) required in order for that code to run.",
           :id "Package",
           :properties {:location {:type "string",
                                   :description "The resource to read the package from. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket} bucket.storage.googleapis.com/"},
                        :name {:type "string",
                               :description "The name of the package."}},
           :type "object"},
 :ShellTask {:description "A task which consists of a shell command for the worker to execute.",
             :id "ShellTask",
             :properties {:command {:type "string",
                                    :description "The shell command to run."},
                          :exitCode {:format "int32",
                                     :description "Exit code for the task.",
                                     :type "integer"}},
             :type "object"},
 :Snapshot {:type "object",
            :id "Snapshot",
            :description "Represents a snapshot of a job.",
            :properties {:creationTime {:description "The time this snapshot was created.",
                                        :format "google-datetime",
                                        :type "string"},
                         :description {:description "User specified description of the snapshot. Maybe empty.",
                                       :type "string"},
                         :diskSizeBytes {:type "string",
                                         :format "int64",
                                         :description "The disk byte size of the snapshot. Only available for snapshots in READY state."},
                         :state {:description "State of the snapshot.",
                                 :enumDescriptions ["Unknown state."
                                                    "Snapshot intent to create has been persisted, snapshotting of state has not yet started."
                                                    "Snapshotting is being performed."
                                                    "Snapshot has been created and is ready to be used."
                                                    "Snapshot failed to be created."
                                                    "Snapshot has been deleted."],
                                 :type "string",
                                 :enum ["UNKNOWN_SNAPSHOT_STATE"
                                        "PENDING"
                                        "RUNNING"
                                        "READY"
                                        "FAILED"
                                        "DELETED"]},
                         :sourceJobId {:description "The job this snapshot was created from.",
                                       :type "string"},
                         :ttl {:format "google-duration",
                               :type "string",
                               :description "The time after which this snapshot will be automatically deleted."},
                         :id {:description "The unique ID of this snapshot.",
                              :type "string"},
                         :pubsubMetadata {:description "PubSub snapshot metadata.",
                                          :items {:$ref "PubsubSnapshotMetadata"},
                                          :type "array"},
                         :projectId {:description "The project this snapshot belongs to.",
                                     :type "string"}}},
 :WorkerHealthReportResponse {:properties {:reportInterval {:format "google-duration",
                                                            :type "string",
                                                            :description "A positive value indicates the worker should change its reporting interval to the specified value. The default value of zero means no change in report rate is requested by the server."}},
                              :description "WorkerHealthReportResponse contains information returned to the worker in response to a health ping.",
                              :id "WorkerHealthReportResponse",
                              :type "object"},
 :Artifact {:properties {:jobGraphGcsPath {:description "job_graph_gcs_path set for legacy Template.",
                                           :type "string"},
                         :containerSpec {:$ref "ContainerSpec",
                                         :description "Container image path set for flex Template."},
                         :metadata {:description "Metadata set for legacy Template.",
                                    :$ref "TemplateMetadata"}},
            :description "Job information for templates.",
            :type "object",
            :id "Artifact"},
 :LeaseWorkItemResponse {:properties {:workItems {:description "A list of the leased WorkItems.",
                                                  :items {:$ref "WorkItem"},
                                                  :type "array"},
                                      :unifiedWorkerResponse {:description "Untranslated bag-of-bytes WorkResponse for UnifiedWorker.",
                                                              :additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                                                     :type "any"},
                                                              :type "object"}},
                         :type "object",
                         :id "LeaseWorkItemResponse",
                         :description "Response to a request to lease WorkItems."},
 :StreamingApplianceSnapshotConfig {:description "Streaming appliance snapshot configuration.",
                                    :properties {:snapshotId {:description "If set, indicates the snapshot id for the snapshot being performed.",
                                                              :type "string"},
                                                 :importStateEndpoint {:description "Indicates which endpoint is used to import appliance state.",
                                                                       :type "string"}},
                                    :type "object",
                                    :id "StreamingApplianceSnapshotConfig"},
 :SourceSplitOptions {:description "Hints for splitting a Source into bundles (parts for parallel processing) using SourceSplitRequest.",
                      :properties {:desiredBundleSizeBytes {:type "string",
                                                            :format "int64",
                                                            :description "The source should be split into a set of bundles where the estimated size of each is approximately this many bytes."},
                                   :desiredShardSizeBytes {:type "string",
                                                           :description "DEPRECATED in favor of desired_bundle_size_bytes.",
                                                           :format "int64"}},
                      :id "SourceSplitOptions",
                      :type "object"},
 :ModifyTemplateVersionTagResponse {:id "ModifyTemplateVersionTagResponse",
                                    :description "Respond the current tags in the TemplateVersion.",
                                    :properties {:tags {:type "array",
                                                        :description "All the tags in the TemplateVersion.",
                                                        :items {:type "string"}}},
                                    :type "object"},
 :ApproximateSplitRequest {:description "A suggestion by the service to the worker to dynamically split the WorkItem.",
                           :type "object",
                           :id "ApproximateSplitRequest",
                           :properties {:fractionConsumed {:type "number",
                                                           :description "A fraction at which to split the work item, from 0.0 (beginning of the input) to 1.0 (end of the input).",
                                                           :format "double"},
                                        :position {:description "A Position at which to split the work item.",
                                                   :$ref "Position"},
                                        :fractionOfRemainder {:type "number",
                                                              :description "The fraction of the remainder of work to split the work item at, from 0.0 (split at the current position) to 1.0 (end of the input).",
                                                              :format "double"}}},
 :TransformSummary {:id "TransformSummary",
                    :properties {:inputCollectionName {:type "array",
                                                       :description "User names for all collection inputs to this transform.",
                                                       :items {:type "string"}},
                                 :id {:description "SDK generated id of this transform instance.",
                                      :type "string"},
                                 :kind {:type "string",
                                        :enum ["UNKNOWN_KIND"
                                               "PAR_DO_KIND"
                                               "GROUP_BY_KEY_KIND"
                                               "FLATTEN_KIND"
                                               "READ_KIND"
                                               "WRITE_KIND"
                                               "CONSTANT_KIND"
                                               "SINGLETON_KIND"
                                               "SHUFFLE_KIND"],
                                        :description "Type of transform.",
                                        :enumDescriptions ["Unrecognized transform type."
                                                           "ParDo transform."
                                                           "Group By Key transform."
                                                           "Flatten transform."
                                                           "Read transform."
                                                           "Write transform."
                                                           "Constructs from a constant value, such as with Create.of."
                                                           "Creates a Singleton view of a collection."
                                                           "Opening or closing a shuffle session, often as part of a GroupByKey."]},
                                 :displayData {:items {:$ref "DisplayData"},
                                               :description "Transform-specific display data.",
                                               :type "array"},
                                 :name {:description "User provided name for this transform instance.",
                                        :type "string"},
                                 :outputCollectionName {:description "User names for all collection outputs to this transform.",
                                                        :type "array",
                                                        :items {:type "string"}}},
                    :type "object",
                    :description "Description of the type, names/ids, and input/outputs for a transform."},
 :ProgressTimeseries {:description "Information about the progress of some component of job execution.",
                      :id "ProgressTimeseries",
                      :type "object",
                      :properties {:dataPoints {:type "array",
                                                :description "History of progress for the component. Points are sorted by time.",
                                                :items {:$ref "Point"}},
                                   :currentProgress {:description "The current progress of the component, in the range [0,1].",
                                                     :type "number",
                                                     :format "double"}}},
 :IntegerGauge {:description "A metric value representing temporal values of a variable.",
                :id "IntegerGauge",
                :type "object",
                :properties {:value {:$ref "SplitInt64",
                                     :description "The value of the variable represented by this gauge."},
                             :timestamp {:format "google-datetime",
                                         :type "string",
                                         :description "The time at which this value was measured. Measured as msecs from epoch."}}},
 :DynamicSourceSplit {:id "DynamicSourceSplit",
                      :properties {:primary {:description "Primary part (continued to be processed by worker). Specified relative to the previously-current source. Becomes current.",
                                             :$ref "DerivedSource"},
                                   :residual {:$ref "DerivedSource",
                                              :description "Residual part (returned to the pool of work). Specified relative to the previously-current source."}},
                      :description "When a task splits using WorkItemStatus.dynamic_source_split, this message describes the two parts of the split relative to the description of the current task's input.",
                      :type "object"},
 :StreamingComputationConfig {:type "object",
                              :id "StreamingComputationConfig",
                              :description "Configuration information for a single streaming computation.",
                              :properties {:stageName {:type "string",
                                                       :description "Stage name of this computation."},
                                           :systemName {:type "string",
                                                        :description "System defined name for this computation."},
                                           :transformUserNameToStateFamily {:description "Map from user name of stateful transforms in this stage to their state family.",
                                                                            :type "object",
                                                                            :additionalProperties {:type "string"}},
                                           :computationId {:type "string",
                                                           :description "Unique identifier for this computation."},
                                           :instructions {:description "Instructions that comprise the computation.",
                                                          :items {:$ref "ParallelInstruction"},
                                                          :type "array"}}},
 :ModifyTemplateVersionLabelRequest {:type "object",
                                     :properties {:value {:type "string",
                                                          :description "The label value for update."},
                                                  :op {:description "Requests for add label to TemplateVersion or remove label from TemplateVersion.",
                                                       :enum ["OPERATION_UNSPECIFIED"
                                                              "ADD"
                                                              "REMOVE"],
                                                       :enumDescriptions ["Default value."
                                                                          "Add the label to the TemplateVersion object."
                                                                          "Remove the label from the TemplateVersion object."],
                                                       :type "string"},
                                                  :key {:description "The label key for update.",
                                                        :type "string"}},
                                     :id "ModifyTemplateVersionLabelRequest",
                                     :description "Either add the label to TemplateVersion or remove it from the TemplateVersion."},
 :SourceGetMetadataResponse {:id "SourceGetMetadataResponse",
                             :type "object",
                             :properties {:metadata {:$ref "SourceMetadata",
                                                     :description "The computed metadata."}},
                             :description "The result of a SourceGetMetadataOperation."},
 :StreamingSetupTask {:id "StreamingSetupTask",
                      :properties {:streamingComputationTopology {:$ref "TopologyConfig",
                                                                  :description "The global topology of the streaming Dataflow job."},
                                   :drain {:description "The user has requested drain.",
                                           :type "boolean"},
                                   :receiveWorkPort {:description "The TCP port on which the worker should listen for messages from other streaming computation workers.",
                                                     :format "int32",
                                                     :type "integer"},
                                   :snapshotConfig {:$ref "StreamingApplianceSnapshotConfig",
                                                    :description "Configures streaming appliance snapshot."},
                                   :workerHarnessPort {:format "int32",
                                                       :description "The TCP port used by the worker to communicate with the Dataflow worker harness.",
                                                       :type "integer"}},
                      :type "object",
                      :description "A task which initializes part of a streaming Dataflow job."},
 :Empty {:description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
         :type "object",
         :properties {},
         :id "Empty"},
 :PartialGroupByKeyInstruction {:id "PartialGroupByKeyInstruction",
                                :description "An instruction that does a partial group-by-key. One input and one output.",
                                :properties {:input {:description "Describes the input to the partial group-by-key instruction.",
                                                     :$ref "InstructionInput"},
                                             :valueCombiningFn {:description "The value combining function to invoke.",
                                                                :additionalProperties {:description "Properties of the object.",
                                                                                       :type "any"},
                                                                :type "object"},
                                             :inputElementCodec {:type "object",
                                                                 :additionalProperties {:description "Properties of the object.",
                                                                                        :type "any"},
                                                                 :description "The codec to use for interpreting an element in the input PTable."},
                                             :sideInputs {:type "array",
                                                          :items {:$ref "SideInputInfo"},
                                                          :description "Zero or more side inputs."},
                                             :originalCombineValuesInputStoreName {:type "string",
                                                                                   :description "If this instruction includes a combining function this is the name of the intermediate store between the GBK and the CombineValues."},
                                             :originalCombineValuesStepName {:type "string",
                                                                             :description "If this instruction includes a combining function, this is the name of the CombineValues instruction lifted into this instruction."}},
                                :type "object"},
 :NameAndKind {:properties {:kind {:description "Counter aggregation kind.",
                                   :enum ["INVALID"
                                          "SUM"
                                          "MAX"
                                          "MIN"
                                          "MEAN"
                                          "OR"
                                          "AND"
                                          "SET"
                                          "DISTRIBUTION"
                                          "LATEST_VALUE"],
                                   :enumDescriptions ["Counter aggregation kind was not set."
                                                      "Aggregated value is the sum of all contributed values."
                                                      "Aggregated value is the max of all contributed values."
                                                      "Aggregated value is the min of all contributed values."
                                                      "Aggregated value is the mean of all contributed values."
                                                      "Aggregated value represents the logical 'or' of all contributed values."
                                                      "Aggregated value represents the logical 'and' of all contributed values."
                                                      "Aggregated value is a set of unique contributed values."
                                                      "Aggregated value captures statistics about a distribution."
                                                      "Aggregated value tracks the latest value of a variable."],
                                   :type "string"},
                            :name {:type "string",
                                   :description "Name of the counter."}},
               :type "object",
               :id "NameAndKind",
               :description "Basic metadata about a counter."},
 :ApproximateProgress {:description "Obsolete in favor of ApproximateReportedProgress and ApproximateSplitRequest.",
                       :id "ApproximateProgress",
                       :properties {:remainingTime {:type "string",
                                                    :format "google-duration",
                                                    :description "Obsolete."},
                                    :percentComplete {:format "float",
                                                      :type "number",
                                                      :description "Obsolete."},
                                    :position {:description "Obsolete.",
                                               :$ref "Position"}},
                       :type "object"},
 :Point {:id "Point",
         :description "A point in the timeseries.",
         :properties {:value {:type "number",
                              :description "The value of the point.",
                              :format "double"},
                      :time {:description "The timestamp of the point.",
                             :type "string",
                             :format "google-datetime"}},
         :type "object"},
 :PipelineDescription {:description "A descriptive representation of submitted pipeline as well as the executed form. This data is provided by the Dataflow service for ease of visualizing the pipeline and interpreting Dataflow provided metrics.",
                       :id "PipelineDescription",
                       :properties {:displayData {:items {:$ref "DisplayData"},
                                                  :description "Pipeline level display data.",
                                                  :type "array"},
                                    :originalPipelineTransform {:items {:$ref "TransformSummary"},
                                                                :type "array",
                                                                :description "Description of each transform in the pipeline and collections between them."},
                                    :executionPipelineStage {:description "Description of each stage of execution of the pipeline.",
                                                             :items {:$ref "ExecutionStageSummary"},
                                                             :type "array"}},
                       :type "object"},
 :GetTemplateResponse {:type "object",
                       :properties {:runtimeMetadata {:$ref "RuntimeMetadata",
                                                      :description "Describes the runtime metadata with SDKInfo and available parameters."},
                                    :metadata {:$ref "TemplateMetadata",
                                               :description "The template metadata describing the template name, available parameters, etc."},
                                    :status {:$ref "Status",
                                             :description "The status of the get template request. Any problems with the request will be indicated in the error_details."},
                                    :templateType {:description "Template Type.",
                                                   :enum ["UNKNOWN"
                                                          "LEGACY"
                                                          "FLEX"],
                                                   :enumDescriptions ["Unknown Template Type."
                                                                      "Legacy Template."
                                                                      "Flex Template."],
                                                   :type "string"}},
                       :id "GetTemplateResponse",
                       :description "The response to a GetTemplate request."},
 :SendWorkerMessagesRequest {:id "SendWorkerMessagesRequest",
                             :description "A request for sending worker messages to the service.",
                             :properties {:location {:type "string",
                                                     :description "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the job."},
                                          :workerMessages {:description "The WorkerMessages to send.",
                                                           :type "array",
                                                           :items {:$ref "WorkerMessage"}}},
                             :type "object"},
 :IntegerMean {:type "object",
               :id "IntegerMean",
               :description "A representation of an integer mean metric contribution.",
               :properties {:count {:description "The number of values being aggregated.",
                                    :$ref "SplitInt64"},
                            :sum {:$ref "SplitInt64",
                                  :description "The sum of all values being aggregated."}}},
 :SendWorkerMessagesResponse {:type "object",
                              :id "SendWorkerMessagesResponse",
                              :description "The response to the worker messages.",
                              :properties {:workerMessageResponses {:items {:$ref "WorkerMessageResponse"},
                                                                    :description "The servers response to the worker messages.",
                                                                    :type "array"}}},
 :HotKeyDetection {:type "object",
                   :properties {:systemName {:description "System-defined name of the step containing this hot key. Unique across the workflow.",
                                             :type "string"},
                                :hotKeyAge {:description "The age of the hot key measured from when it was first detected.",
                                            :type "string",
                                            :format "google-duration"},
                                :userStepName {:type "string",
                                               :description "User-provided name of the step that contains this hot key."}},
                   :description "Proto describing a hot key detected on a given WorkItem.",
                   :id "HotKeyDetection"},
 :Job {:properties {:labels {:type "object",
                             :additionalProperties {:type "string"},
                             :description "User-defined labels for this job. The labels map can contain no more than 64 entries. Entries of the labels map are UTF8 strings that comply with the following restrictions: * Keys must conform to regexp: \\p{Ll}\\p{Lo}{0,62} * Values must conform to regexp: [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63} * Both keys and values are additionally constrained to be <= 128 bytes in size."},
                    :stepsLocation {:type "string",
                                    :description "The GCS location where the steps are stored."},
                    :executionInfo {:$ref "JobExecutionInfo",
                                    :description "Deprecated."},
                    :jobMetadata {:$ref "JobMetadata",
                                  :description "This field is populated by the Dataflow service to support filtering jobs by the metadata values provided here. Populated for ListJobs and all GetJob views SUMMARY and higher."},
                    :clientRequestId {:type "string",
                                      :description "The client's unique identifier of the job, re-used across retried attempts. If this field is set, the service will ensure its uniqueness. The request to create a job will fail if the service has knowledge of a previously submitted job with the same client's ID and job name. The caller may use this field to ensure idempotence of job creation across retried attempts to create a job. By default, the field is empty and, in that case, the service ignores it."},
                    :startTime {:description "The timestamp when the job was started (transitioned to JOB_STATE_PENDING). Flexible resource scheduling jobs are started with some delay after job creation, so start_time is unset before start and is updated when the job is started by the Cloud Dataflow service. For other jobs, start_time always equals to create_time and is immutable and set by the Cloud Dataflow service.",
                                :type "string",
                                :format "google-datetime"},
                    :stageStates {:description "This field may be mutated by the Cloud Dataflow service; callers cannot mutate it.",
                                  :items {:$ref "ExecutionStageState"},
                                  :type "array"},
                    :name {:description "The user-specified Cloud Dataflow job name. Only one Job with a given name may exist in a project at any given time. If a caller attempts to create a Job with the same name as an already-existing Job, the attempt returns the existing Job. The name must match the regular expression `[a-z]([-a-z0-9]{0,38}[a-z0-9])?`",
                           :type "string"},
                    :steps {:items {:$ref "Step"},
                            :type "array",
                            :description "Exactly one of step or steps_location should be specified. The top-level steps that constitute the entire job. Only retrieved with JOB_VIEW_ALL."},
                    :createTime {:description "The timestamp when the job was initially created. Immutable and set by the Cloud Dataflow service.",
                                 :format "google-datetime",
                                 :type "string"},
                    :currentStateTime {:description "The timestamp associated with the current state.",
                                       :format "google-datetime",
                                       :type "string"},
                    :type {:type "string",
                           :enumDescriptions ["The type of the job is unspecified, or unknown."
                                              "A batch job with a well-defined end point: data is read, data is processed, data is written, and the job is done."
                                              "A continuously streaming job with no end: data is read, processed, and written continuously."],
                           :enum ["JOB_TYPE_UNKNOWN"
                                  "JOB_TYPE_BATCH"
                                  "JOB_TYPE_STREAMING"],
                           :description "The type of Cloud Dataflow job."},
                    :transformNameMapping {:type "object",
                                           :description "The map of transform name prefixes of the job to be replaced to the corresponding name prefixes of the new job.",
                                           :additionalProperties {:type "string"}},
                    :replaceJobId {:type "string",
                                   :description "If this job is an update of an existing job, this field is the job ID of the job it replaced. When sending a `CreateJobRequest`, you can update a job by specifying it here. The job named here is stopped, and its intermediate state is transferred to this job."},
                    :pipelineDescription {:description "Preliminary field: The format of this data may change at any time. A description of the user pipeline and stages through which it is executed. Created by Cloud Dataflow service. Only retrieved with JOB_VIEW_DESCRIPTION or JOB_VIEW_ALL.",
                                          :$ref "PipelineDescription"},
                    :replacedByJobId {:type "string",
                                      :description "If another job is an update of this job (and thus, this job is in `JOB_STATE_UPDATED`), this field contains the ID of that job."},
                    :currentState {:enumDescriptions ["The job's run state isn't specified."
                                                      "`JOB_STATE_STOPPED` indicates that the job has not yet started to run."
                                                      "`JOB_STATE_RUNNING` indicates that the job is currently running."
                                                      "`JOB_STATE_DONE` indicates that the job has successfully completed. This is a terminal job state. This state may be set by the Cloud Dataflow service, as a transition from `JOB_STATE_RUNNING`. It may also be set via a Cloud Dataflow `UpdateJob` call, if the job has not yet reached a terminal state."
                                                      "`JOB_STATE_FAILED` indicates that the job has failed. This is a terminal job state. This state may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_RUNNING`."
                                                      "`JOB_STATE_CANCELLED` indicates that the job has been explicitly cancelled. This is a terminal job state. This state may only be set via a Cloud Dataflow `UpdateJob` call, and only if the job has not yet reached another terminal state."
                                                      "`JOB_STATE_UPDATED` indicates that the job was successfully updated, meaning that this job was stopped and another job was started, inheriting state from this one. This is a terminal job state. This state may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_RUNNING`."
                                                      "`JOB_STATE_DRAINING` indicates that the job is in the process of draining. A draining job has stopped pulling from its input sources and is processing any data that remains in-flight. This state may be set via a Cloud Dataflow `UpdateJob` call, but only as a transition from `JOB_STATE_RUNNING`. Jobs that are draining may only transition to `JOB_STATE_DRAINED`, `JOB_STATE_CANCELLED`, or `JOB_STATE_FAILED`."
                                                      "`JOB_STATE_DRAINED` indicates that the job has been drained. A drained job terminated by stopping pulling from its input sources and processing any data that remained in-flight when draining was requested. This state is a terminal state, may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_DRAINING`."
                                                      "`JOB_STATE_PENDING` indicates that the job has been created but is not yet running. Jobs that are pending may only transition to `JOB_STATE_RUNNING`, or `JOB_STATE_FAILED`."
                                                      "`JOB_STATE_CANCELLING` indicates that the job has been explicitly cancelled and is in the process of stopping. Jobs that are cancelling may only transition to `JOB_STATE_CANCELLED` or `JOB_STATE_FAILED`."
                                                      "`JOB_STATE_QUEUED` indicates that the job has been created but is being delayed until launch. Jobs that are queued may only transition to `JOB_STATE_PENDING` or `JOB_STATE_CANCELLED`."],
                                   :description "The current state of the job. Jobs are created in the `JOB_STATE_STOPPED` state unless otherwise specified. A job in the `JOB_STATE_RUNNING` state may asynchronously enter a terminal state. After a job has reached a terminal state, no further state updates may be made. This field may be mutated by the Cloud Dataflow service; callers cannot mutate it.",
                                   :type "string",
                                   :enum ["JOB_STATE_UNKNOWN"
                                          "JOB_STATE_STOPPED"
                                          "JOB_STATE_RUNNING"
                                          "JOB_STATE_DONE"
                                          "JOB_STATE_FAILED"
                                          "JOB_STATE_CANCELLED"
                                          "JOB_STATE_UPDATED"
                                          "JOB_STATE_DRAINING"
                                          "JOB_STATE_DRAINED"
                                          "JOB_STATE_PENDING"
                                          "JOB_STATE_CANCELLING"
                                          "JOB_STATE_QUEUED"]},
                    :tempFiles {:items {:type "string"},
                                :type "array",
                                :description "A set of files the system should be aware of that are used for temporary storage. These temporary files will be removed on job completion. No duplicates are allowed. No file patterns are supported. The supported files are: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}"},
                    :id {:description "The unique ID of this job. This field is set by the Cloud Dataflow service when the Job is created, and is immutable for the life of the job.",
                         :type "string"},
                    :createdFromSnapshotId {:description "If this is specified, the job's initial state is populated from the given snapshot.",
                                            :type "string"},
                    :environment {:description "The environment for the job.",
                                  :$ref "Environment"},
                    :projectId {:type "string",
                                :description "The ID of the Cloud Platform project that the job belongs to."},
                    :requestedState {:type "string",
                                     :description "The job's requested state. `UpdateJob` may be used to switch between the `JOB_STATE_STOPPED` and `JOB_STATE_RUNNING` states, by setting requested_state. `UpdateJob` may also be used to directly set a job's requested state to `JOB_STATE_CANCELLED` or `JOB_STATE_DONE`, irrevocably terminating the job if it has not already reached a terminal state.",
                                     :enum ["JOB_STATE_UNKNOWN"
                                            "JOB_STATE_STOPPED"
                                            "JOB_STATE_RUNNING"
                                            "JOB_STATE_DONE"
                                            "JOB_STATE_FAILED"
                                            "JOB_STATE_CANCELLED"
                                            "JOB_STATE_UPDATED"
                                            "JOB_STATE_DRAINING"
                                            "JOB_STATE_DRAINED"
                                            "JOB_STATE_PENDING"
                                            "JOB_STATE_CANCELLING"
                                            "JOB_STATE_QUEUED"],
                                     :enumDescriptions ["The job's run state isn't specified."
                                                        "`JOB_STATE_STOPPED` indicates that the job has not yet started to run."
                                                        "`JOB_STATE_RUNNING` indicates that the job is currently running."
                                                        "`JOB_STATE_DONE` indicates that the job has successfully completed. This is a terminal job state. This state may be set by the Cloud Dataflow service, as a transition from `JOB_STATE_RUNNING`. It may also be set via a Cloud Dataflow `UpdateJob` call, if the job has not yet reached a terminal state."
                                                        "`JOB_STATE_FAILED` indicates that the job has failed. This is a terminal job state. This state may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_RUNNING`."
                                                        "`JOB_STATE_CANCELLED` indicates that the job has been explicitly cancelled. This is a terminal job state. This state may only be set via a Cloud Dataflow `UpdateJob` call, and only if the job has not yet reached another terminal state."
                                                        "`JOB_STATE_UPDATED` indicates that the job was successfully updated, meaning that this job was stopped and another job was started, inheriting state from this one. This is a terminal job state. This state may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_RUNNING`."
                                                        "`JOB_STATE_DRAINING` indicates that the job is in the process of draining. A draining job has stopped pulling from its input sources and is processing any data that remains in-flight. This state may be set via a Cloud Dataflow `UpdateJob` call, but only as a transition from `JOB_STATE_RUNNING`. Jobs that are draining may only transition to `JOB_STATE_DRAINED`, `JOB_STATE_CANCELLED`, or `JOB_STATE_FAILED`."
                                                        "`JOB_STATE_DRAINED` indicates that the job has been drained. A drained job terminated by stopping pulling from its input sources and processing any data that remained in-flight when draining was requested. This state is a terminal state, may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_DRAINING`."
                                                        "`JOB_STATE_PENDING` indicates that the job has been created but is not yet running. Jobs that are pending may only transition to `JOB_STATE_RUNNING`, or `JOB_STATE_FAILED`."
                                                        "`JOB_STATE_CANCELLING` indicates that the job has been explicitly cancelled and is in the process of stopping. Jobs that are cancelling may only transition to `JOB_STATE_CANCELLED` or `JOB_STATE_FAILED`."
                                                        "`JOB_STATE_QUEUED` indicates that the job has been created but is being delayed until launch. Jobs that are queued may only transition to `JOB_STATE_PENDING` or `JOB_STATE_CANCELLED`."]},
                    :location {:description "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains this job.",
                               :type "string"}},
       :type "object",
       :id "Job",
       :description "Defines a job to be run by the Cloud Dataflow service."},
 :CPUTime {:properties {:rate {:type "number",
                               :format "double",
                               :description "Average CPU utilization rate (% non-idle cpu / second) since previous sample."},
                        :timestamp {:description "Timestamp of the measurement.",
                                    :type "string",
                                    :format "google-datetime"},
                        :totalMs {:description "Total active CPU time across all cores (ie., non-idle) in milliseconds since start-up.",
                                  :type "string",
                                  :format "uint64"}},
           :id "CPUTime",
           :type "object",
           :description "Modeled after information exposed by /proc/stat."},
 :StreamingComputationTask {:id "StreamingComputationTask",
                            :description "A task which describes what action should be performed for the specified streaming computation ranges.",
                            :type "object",
                            :properties {:dataDisks {:items {:$ref "MountedDataDisk"},
                                                     :type "array",
                                                     :description "Describes the set of data disks this task should apply to."},
                                         :computationRanges {:description "Contains ranges of a streaming computation this task should apply to.",
                                                             :type "array",
                                                             :items {:$ref "StreamingComputationRanges"}},
                                         :taskType {:enumDescriptions ["The streaming computation task is unknown, or unspecified."
                                                                       "Stop processing specified streaming computation range(s)."
                                                                       "Start processing specified streaming computation range(s)."],
                                                    :enum ["STREAMING_COMPUTATION_TASK_UNKNOWN"
                                                           "STREAMING_COMPUTATION_TASK_STOP"
                                                           "STREAMING_COMPUTATION_TASK_START"],
                                                    :description "A type of streaming computation task.",
                                                    :type "string"}}},
 :WorkerShutdownNotice {:id "WorkerShutdownNotice",
                        :description "Shutdown notification from workers. This is to be sent by the shutdown script of the worker VM so that the backend knows that the VM is being shut down.",
                        :properties {:reason {:type "string",
                                              :description "The reason for the worker shutdown. Current possible values are: \"UNKNOWN\": shutdown reason is unknown. \"PREEMPTION\": shutdown reason is preemption. Other possible reasons may be added in the future."}},
                        :type "object"},
 :CustomSourceLocation {:type "object",
                        :properties {:stateful {:description "Whether this source is stateful.",
                                                :type "boolean"}},
                        :description "Identifies the location of a custom souce.",
                        :id "CustomSourceLocation"},
 :SplitInt64 {:description "A representation of an int64, n, that is immune to precision loss when encoded in JSON.",
              :id "SplitInt64",
              :type "object",
              :properties {:highBits {:type "integer",
                                      :format "int32",
                                      :description "The high order bits, including the sign: n >> 32."},
                           :lowBits {:type "integer",
                                     :description "The low order bits: n & 0xffffffff.",
                                     :format "uint32"}}},
 :Histogram {:id "Histogram",
             :properties {:bucketCounts {:items {:format "int64",
                                                 :type "string"},
                                         :type "array",
                                         :description "Counts of values in each bucket. For efficiency, prefix and trailing buckets with count = 0 are elided. Buckets can store the full range of values of an unsigned long, with ULLONG_MAX falling into the 59th bucket with range [1e19, 2e19)."},
                          :firstBucketOffset {:description "Starting index of first stored bucket. The non-inclusive upper-bound of the ith bucket is given by: pow(10,(i-first_bucket_offset)/3) * (1,2,5)[(i-first_bucket_offset)%3]",
                                              :format "int32",
                                              :type "integer"}},
             :description "Histogram of value counts for a distribution. Buckets have an inclusive lower bound and exclusive upper bound and use \"1,2,5 bucketing\": The first bucket range is from [0,1) and all subsequent bucket boundaries are powers of ten multiplied by 1, 2, or 5. Thus, bucket boundaries are 0, 1, 2, 5, 10, 20, 50, 100, 200, 500, 1000, ... Negative values are not supported.",
             :type "object"},
 :InstructionOutput {:properties {:systemName {:type "string",
                                               :description "System-defined name of this output. Unique across the workflow."},
                                  :name {:description "The user-provided name of this output.",
                                         :type "string"},
                                  :onlyCountValueBytes {:type "boolean",
                                                        :description "For system-generated byte and mean byte metrics, certain instructions should only report the value size."},
                                  :originalName {:description "System-defined name for this output in the original workflow graph. Outputs that do not contribute to an original instruction do not set this.",
                                                 :type "string"},
                                  :onlyCountKeyBytes {:type "boolean",
                                                      :description "For system-generated byte and mean byte metrics, certain instructions should only report the key size."},
                                  :codec {:type "object",
                                          :description "The codec to use to encode data being written via this output.",
                                          :additionalProperties {:description "Properties of the object.",
                                                                 :type "any"}}},
                     :description "An output of an instruction.",
                     :type "object",
                     :id "InstructionOutput"},
 :CounterStructuredNameAndMetadata {:properties {:name {:description "Structured name of the counter.",
                                                        :$ref "CounterStructuredName"},
                                                 :metadata {:description "Metadata associated with a counter",
                                                            :$ref "CounterMetadata"}},
                                    :description "A single message which encapsulates structured name and metadata for a given counter.",
                                    :id "CounterStructuredNameAndMetadata",
                                    :type "object"},
 :JobExecutionDetails {:type "object",
                       :properties {:stages {:items {:$ref "StageSummary"},
                                             :type "array",
                                             :description "The stages of the job execution."},
                                    :nextPageToken {:type "string",
                                                    :description "If present, this response does not contain all requested tasks. To obtain the next page of results, repeat the request with page_token set to this value."}},
                       :description "Information about the execution of a job.",
                       :id "JobExecutionDetails"},
 :SideInputInfo {:id "SideInputInfo",
                 :properties {:tag {:description "The id of the tag the user code will access this side input by; this should correspond to the tag of some MultiOutputInfo.",
                                    :type "string"},
                              :kind {:additionalProperties {:type "any",
                                                            :description "Properties of the object."},
                                     :type "object",
                                     :description "How to interpret the source element(s) as a side input value."},
                              :sources {:items {:$ref "Source"},
                                        :type "array",
                                        :description "The source(s) to read element(s) from to get the value of this side input. If more than one source, then the elements are taken from the sources, in the specified order if order matters. At least one source is required."}},
                 :type "object",
                 :description "Information about a side input of a DoFn or an input of a SeqDoFn."},
 :DerivedSource {:description "Specification of one of the bundles produced as a result of splitting a Source (e.g. when executing a SourceSplitRequest, or when splitting an active task using WorkItemStatus.dynamic_source_split), relative to the source being split.",
                 :type "object",
                 :properties {:source {:description "Specification of the source.",
                                       :$ref "Source"},
                              :derivationMode {:enum ["SOURCE_DERIVATION_MODE_UNKNOWN"
                                                      "SOURCE_DERIVATION_MODE_INDEPENDENT"
                                                      "SOURCE_DERIVATION_MODE_CHILD_OF_CURRENT"
                                                      "SOURCE_DERIVATION_MODE_SIBLING_OF_CURRENT"],
                                               :type "string",
                                               :enumDescriptions ["The source derivation is unknown, or unspecified."
                                                                  "Produce a completely independent Source with no base."
                                                                  "Produce a Source based on the Source being split."
                                                                  "Produce a Source based on the base of the Source being split."],
                                               :description "What source to base the produced source on (if any)."}},
                 :id "DerivedSource"},
 :WorkerDetails {:description "Information about a worker",
                 :properties {:workItems {:items {:$ref "WorkItemDetails"},
                                          :type "array",
                                          :description "Work items processed by this worker, sorted by time."},
                              :workerName {:description "Name of this worker",
                                           :type "string"}},
                 :type "object",
                 :id "WorkerDetails"},
 :JobMetrics {:description "JobMetrics contains a collection of metrics describing the detailed progress of a Dataflow job. Metrics correspond to user-defined and system-defined metrics in the job. This resource captures only the most recent values of each metric; time-series data can be queried for them (under the same metric names) from Cloud Monitoring.",
              :properties {:metrics {:items {:$ref "MetricUpdate"},
                                     :description "All metrics for this job.",
                                     :type "array"},
                           :metricTime {:description "Timestamp as of which metric values are current.",
                                        :type "string",
                                        :format "google-datetime"}},
              :type "object",
              :id "JobMetrics"},
 :StructuredMessage {:description "A rich message format, including a human readable string, a key for identifying the message, and structured data associated with the message for programmatic consumption.",
                     :type "object",
                     :id "StructuredMessage",
                     :properties {:parameters {:items {:$ref "Parameter"},
                                               :type "array",
                                               :description "The structured data associated with this message."},
                                  :messageKey {:description "Identifier for this message type. Used by external systems to internationalize or personalize message.",
                                               :type "string"},
                                  :messageText {:type "string",
                                                :description "Human-readable version of message."}}},
 :GetDebugConfigRequest {:type "object",
                         :id "GetDebugConfigRequest",
                         :properties {:componentId {:type "string",
                                                    :description "The internal component id for which debug configuration is requested."},
                                      :workerId {:description "The worker id, i.e., VM hostname.",
                                                 :type "string"},
                                      :location {:type "string",
                                                 :description "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the job specified by job_id."}},
                         :description "Request to get updated debug configuration for component."},
 :LaunchFlexTemplateParameter {:properties {:jobName {:description "Required. The job name to use for the created job.",
                                                      :type "string"},
                                            :containerSpecGcsPath {:description "Gcs path to a file with json serialized ContainerSpec as content.",
                                                                   :type "string"},
                                            :parameters {:type "object",
                                                         :additionalProperties {:type "string"},
                                                         :description "The parameters for FlexTemplate. Ex. {\"num_workers\":\"5\"}"},
                                            :containerSpec {:$ref "ContainerSpec",
                                                            :description "Spec about the container image to launch."},
                                            :environment {:$ref "FlexTemplateRuntimeEnvironment",
                                                          :description "The runtime environment for the FlexTemplate job"},
                                            :launchOptions {:type "object",
                                                            :description "Launch options for this flex template job. This is a common set of options across languages and templates. This should not be used to pass job parameters.",
                                                            :additionalProperties {:type "string"}}},
                               :description "Launch FlexTemplate Parameter.",
                               :id "LaunchFlexTemplateParameter",
                               :type "object"},
 :CounterStructuredName {:properties {:originalRequestingStepName {:type "string",
                                                                   :description "The step name requesting an operation, such as GBK. I.e. the ParDo causing a read/write from shuffle to occur, or a read from side inputs."},
                                      :inputIndex {:type "integer",
                                                   :format "int32",
                                                   :description "Index of an input collection that's being read from/written to as a side input. The index identifies a step's side inputs starting by 1 (e.g. the first side input has input_index 1, the third has input_index 3). Side inputs are identified by a pair of (original_step_name, input_index). This field helps uniquely identify them."},
                                      :name {:description "Counter name. Not necessarily globally-unique, but unique within the context of the other fields. Required.",
                                             :type "string"},
                                      :executionStepName {:description "Name of the stage. An execution step contains multiple component steps.",
                                                          :type "string"},
                                      :workerId {:description "ID of a particular worker.",
                                                 :type "string"},
                                      :origin {:type "string",
                                               :enumDescriptions ["Counter was created by the Dataflow system."
                                                                  "Counter was created by the user."],
                                               :description "One of the standard Origins defined above.",
                                               :enum ["SYSTEM" "USER"]},
                                      :originNamespace {:description "A string containing a more specific namespace of the counter's origin.",
                                                        :type "string"},
                                      :componentStepName {:description "Name of the optimized step being executed by the workers.",
                                                          :type "string"},
                                      :portion {:enumDescriptions ["Counter portion has not been set."
                                                                   "Counter reports a key."
                                                                   "Counter reports a value."],
                                                :description "Portion of this counter, either key or value.",
                                                :type "string",
                                                :enum ["ALL"
                                                       "KEY"
                                                       "VALUE"]},
                                      :originalStepName {:description "System generated name of the original step in the user's graph, before optimization.",
                                                         :type "string"}},
                         :description "Identifies a counter within a per-job namespace. Counters whose structured names are the same get merged into a single value for the job.",
                         :id "CounterStructuredName",
                         :type "object"},
 :CounterMetadata {:properties {:standardUnits {:description "System defined Units, see above enum.",
                                                :type "string",
                                                :enum ["BYTES"
                                                       "BYTES_PER_SEC"
                                                       "MILLISECONDS"
                                                       "MICROSECONDS"
                                                       "NANOSECONDS"
                                                       "TIMESTAMP_MSEC"
                                                       "TIMESTAMP_USEC"
                                                       "TIMESTAMP_NSEC"],
                                                :enumDescriptions ["Counter returns a value in bytes."
                                                                   "Counter returns a value in bytes per second."
                                                                   "Counter returns a value in milliseconds."
                                                                   "Counter returns a value in microseconds."
                                                                   "Counter returns a value in nanoseconds."
                                                                   "Counter returns a timestamp in milliseconds."
                                                                   "Counter returns a timestamp in microseconds."
                                                                   "Counter returns a timestamp in nanoseconds."]},
                                :kind {:description "Counter aggregation kind.",
                                       :type "string",
                                       :enum ["INVALID"
                                              "SUM"
                                              "MAX"
                                              "MIN"
                                              "MEAN"
                                              "OR"
                                              "AND"
                                              "SET"
                                              "DISTRIBUTION"
                                              "LATEST_VALUE"],
                                       :enumDescriptions ["Counter aggregation kind was not set."
                                                          "Aggregated value is the sum of all contributed values."
                                                          "Aggregated value is the max of all contributed values."
                                                          "Aggregated value is the min of all contributed values."
                                                          "Aggregated value is the mean of all contributed values."
                                                          "Aggregated value represents the logical 'or' of all contributed values."
                                                          "Aggregated value represents the logical 'and' of all contributed values."
                                                          "Aggregated value is a set of unique contributed values."
                                                          "Aggregated value captures statistics about a distribution."
                                                          "Aggregated value tracks the latest value of a variable."]},
                                :description {:description "Human-readable description of the counter semantics.",
                                              :type "string"},
                                :otherUnits {:type "string",
                                             :description "A string referring to the unit type."}},
                   :id "CounterMetadata",
                   :description "CounterMetadata includes all static non-name non-value counter attributes.",
                   :type "object"},
 :StreamingStageLocation {:id "StreamingStageLocation",
                          :description "Identifies the location of a streaming computation stage, for stage-to-stage communication.",
                          :properties {:streamId {:type "string",
                                                  :description "Identifies the particular stream within the streaming Dataflow job."}},
                          :type "object"},
 :WorkerHealthReport {:type "object",
                      :properties {:pods {:description "The pods running on the worker. See: http://kubernetes.io/v1.1/docs/api-reference/v1/definitions.html#_v1_pod This field is used by the worker to send the status of the indvidual containers running on each worker.",
                                          :type "array",
                                          :items {:additionalProperties {:type "any",
                                                                         :description "Properties of the object."},
                                                  :type "object"}},
                                   :vmIsHealthy {:type "boolean",
                                                 :description "Whether the VM is currently healthy."},
                                   :vmIsBroken {:description "Whether the VM is in a permanently broken state. Broken VMs should be abandoned or deleted ASAP to avoid assigning or completing any work.",
                                                :type "boolean"},
                                   :reportInterval {:description "The interval at which the worker is sending health reports. The default value of 0 should be interpreted as the field is not being explicitly set by the worker.",
                                                    :type "string",
                                                    :format "google-duration"},
                                   :vmStartupTime {:format "google-datetime",
                                                   :type "string",
                                                   :description "The time the VM was booted."},
                                   :msg {:type "string",
                                         :description "A message describing any unusual health reports."}},
                      :description "WorkerHealthReport contains information about the health of a worker. The VM should be identified by the labels attached to the WorkerMessage that this health ping belongs to.",
                      :id "WorkerHealthReport"},
 :WorkItemStatus {:id "WorkItemStatus",
                  :properties {:stopPosition {:description "A worker may split an active map task in two parts, \"primary\" and \"residual\", continuing to process the primary part and returning the residual part into the pool of available work. This event is called a \"dynamic split\" and is critical to the dynamic work rebalancing feature. The two obtained sub-tasks are called \"parts\" of the split. The parts, if concatenated, must represent the same input as would be read by the current task if the split did not happen. The exact way in which the original task is decomposed into the two parts is specified either as a position demarcating them (stop_position), or explicitly as two DerivedSources, if this task consumes a user-defined source type (dynamic_source_split). The \"current\" task is adjusted as a result of the split: after a task with range [A, B) sends a stop_position update at C, its range is considered to be [A, C), e.g.: * Progress should be interpreted relative to the new range, e.g. \"75% completed\" means \"75% of [A, C) completed\" * The worker should interpret proposed_stop_position relative to the new range, e.g. \"split at 68%\" should be interpreted as \"split at 68% of [A, C)\". * If the worker chooses to split again using stop_position, only stop_positions in [A, C) will be accepted. * Etc. dynamic_source_split has similar semantics: e.g., if a task with source S splits using dynamic_source_split into {P, R} (where P and R must be together equivalent to S), then subsequent progress and proposed_stop_position should be interpreted relative to P, and in a potential subsequent dynamic_source_split into {P', R'}, P' and R' must be together equivalent to P, etc.",
                                              :$ref "Position"},
                               :sourceFork {:description "DEPRECATED in favor of dynamic_source_split.",
                                            :$ref "SourceFork"},
                               :sourceOperationResponse {:description "If the work item represented a SourceOperationRequest, and the work is completed, contains the result of the operation.",
                                                         :$ref "SourceOperationResponse"},
                               :errors {:items {:$ref "Status"},
                                        :description "Specifies errors which occurred during processing. If errors are provided, and completed = true, then the WorkItem is considered to have failed.",
                                        :type "array"},
                               :reportedProgress {:description "The worker's progress through this WorkItem.",
                                                  :$ref "ApproximateReportedProgress"},
                               :completed {:description "True if the WorkItem was completed (successfully or unsuccessfully).",
                                           :type "boolean"},
                               :workItemId {:type "string",
                                            :description "Identifies the WorkItem."},
                               :reportIndex {:description "The report index. When a WorkItem is leased, the lease will contain an initial report index. When a WorkItem's status is reported to the system, the report should be sent with that report index, and the response will contain the index the worker should use for the next report. Reports received with unexpected index values will be rejected by the service. In order to preserve idempotency, the worker should not alter the contents of a report, even if the worker must submit the same report multiple times before getting back a response. The worker should not submit a subsequent report until the response for the previous report had been received from the service.",
                                             :format "int64",
                                             :type "string"},
                               :totalThrottlerWaitTimeSeconds {:description "Total time the worker spent being throttled by external systems.",
                                                               :type "number",
                                                               :format "double"},
                               :metricUpdates {:type "array",
                                               :items {:$ref "MetricUpdate"},
                                               :description "DEPRECATED in favor of counter_updates."},
                               :progress {:$ref "ApproximateProgress",
                                          :description "DEPRECATED in favor of reported_progress."},
                               :dynamicSourceSplit {:$ref "DynamicSourceSplit",
                                                    :description "See documentation of stop_position."},
                               :counterUpdates {:description "Worker output counters for this WorkItem.",
                                                :items {:$ref "CounterUpdate"},
                                                :type "array"},
                               :requestedLeaseDuration {:format "google-duration",
                                                        :type "string",
                                                        :description "Amount of time the worker requests for its lease."}},
                  :description "Conveys a worker's progress through the work described by a WorkItem.",
                  :type "object"},
 :ComponentTransform {:type "object",
                      :description "Description of a transform executed as part of an execution stage.",
                      :id "ComponentTransform",
                      :properties {:name {:description "Dataflow service generated name for this source.",
                                          :type "string"},
                                   :userName {:type "string",
                                              :description "Human-readable name for this transform; may be user or system generated."},
                                   :originalTransform {:type "string",
                                                       :description "User name for the original user transform with which this transform is most closely associated."}}},
 :WorkItemDetails {:properties {:attemptId {:description "Attempt ID of this work item",
                                            :type "string"},
                                :taskId {:type "string",
                                         :description "Name of this work item."},
                                :state {:enumDescriptions ["The component state is unknown or unspecified."
                                                           "The component is not yet running."
                                                           "The component is currently running."
                                                           "The component succeeded."
                                                           "The component failed."
                                                           "Execution of the component was cancelled."],
                                        :type "string",
                                        :enum ["EXECUTION_STATE_UNKNOWN"
                                               "EXECUTION_STATE_NOT_STARTED"
                                               "EXECUTION_STATE_RUNNING"
                                               "EXECUTION_STATE_SUCCEEDED"
                                               "EXECUTION_STATE_FAILED"
                                               "EXECUTION_STATE_CANCELLED"],
                                        :description "State of this work item."},
                                :endTime {:format "google-datetime",
                                          :description "End time of this work item attempt. If the work item is completed, this is the actual end time of the work item. Otherwise, it is the predicted end time.",
                                          :type "string"},
                                :progress {:$ref "ProgressTimeseries",
                                           :description "Progress of this work item."},
                                :metrics {:description "Metrics for this work item.",
                                          :type "array",
                                          :items {:$ref "MetricUpdate"}},
                                :startTime {:format "google-datetime",
                                            :description "Start time of this work item attempt.",
                                            :type "string"}},
                   :description "Information about an individual work item execution.",
                   :id "WorkItemDetails",
                   :type "object"},
 :LaunchFlexTemplateRequest {:id "LaunchFlexTemplateRequest",
                             :properties {:launchParameter {:$ref "LaunchFlexTemplateParameter",
                                                            :description "Required. Parameter to launch a job form Flex Template."},
                                          :validateOnly {:description "If true, the request is validated but not actually executed. Defaults to false.",
                                                         :type "boolean"}},
                             :description "A request to launch a Cloud Dataflow job from a FlexTemplate.",
                             :type "object"},
 :ReadInstruction {:type "object",
                   :description "An instruction that reads records. Takes no inputs, produces one output.",
                   :properties {:source {:description "The source to read from.",
                                         :$ref "Source"}},
                   :id "ReadInstruction"},
 :Disk {:properties {:sizeGb {:format "int32",
                              :description "Size of disk in GB. If zero or unspecified, the service will attempt to choose a reasonable default.",
                              :type "integer"},
                     :mountPoint {:description "Directory in a VM where disk is mounted.",
                                  :type "string"},
                     :diskType {:type "string",
                                :description "Disk storage type, as defined by Google Compute Engine. This must be a disk type appropriate to the project and zone in which the workers will run. If unknown or unspecified, the service will attempt to choose a reasonable default. For example, the standard persistent disk type is a resource name typically ending in \"pd-standard\". If SSD persistent disks are available, the resource name typically ends with \"pd-ssd\". The actual valid values are defined the Google Compute Engine API, not by the Cloud Dataflow API; consult the Google Compute Engine documentation for more information about determining the set of available disk types for a particular project and zone. Google Compute Engine Disk types are local to a particular project in a particular zone, and so the resource name will typically look something like this: compute.googleapis.com/projects/project-id/zones/zone/diskTypes/pd-standard"}},
        :type "object",
        :id "Disk",
        :description "Describes the data disk used by a workflow job."},
 :WorkerMessageResponse {:id "WorkerMessageResponse",
                         :properties {:workerHealthReportResponse {:$ref "WorkerHealthReportResponse",
                                                                   :description "The service's response to a worker's health report."},
                                      :workerShutdownNoticeResponse {:$ref "WorkerShutdownNoticeResponse",
                                                                     :description "Service's response to shutdown notice (currently empty)."},
                                      :workerMetricsResponse {:$ref "ResourceUtilizationReportResponse",
                                                              :description "Service's response to reporting worker metrics (currently empty)."}},
                         :type "object",
                         :description "A worker_message response allows the server to pass information to the sender."},
 :ParDoInstruction {:properties {:userFn {:type "object",
                                          :additionalProperties {:type "any",
                                                                 :description "Properties of the object."},
                                          :description "The user function to invoke."},
                                 :sideInputs {:type "array",
                                              :items {:$ref "SideInputInfo"},
                                              :description "Zero or more side inputs."},
                                 :multiOutputInfos {:description "Information about each of the outputs, if user_fn is a MultiDoFn.",
                                                    :items {:$ref "MultiOutputInfo"},
                                                    :type "array"},
                                 :numOutputs {:description "The number of outputs.",
                                              :type "integer",
                                              :format "int32"},
                                 :input {:description "The input.",
                                         :$ref "InstructionInput"}},
                    :description "An instruction that does a ParDo operation. Takes one main input and zero or more side inputs, and produces zero or more outputs. Runs user code.",
                    :id "ParDoInstruction",
                    :type "object"},
 :PubsubLocation {:description "Identifies a pubsub location to use for transferring data into or out of a streaming Dataflow job.",
                  :properties {:dropLateData {:type "boolean",
                                              :description "Indicates whether the pipeline allows late-arriving data."},
                               :withAttributes {:type "boolean",
                                                :description "If true, then the client has requested to get pubsub attributes."},
                               :idLabel {:description "If set, contains a pubsub label from which to extract record ids. If left empty, record deduplication will be strictly best effort.",
                                         :type "string"},
                               :timestampLabel {:description "If set, contains a pubsub label from which to extract record timestamps. If left empty, record timestamps will be generated upon arrival.",
                                                :type "string"},
                               :trackingSubscription {:description "If set, specifies the pubsub subscription that will be used for tracking custom time timestamps for watermark estimation.",
                                                      :type "string"},
                               :topic {:type "string",
                                       :description "A pubsub topic, in the form of \"pubsub.googleapis.com/topics//\""},
                               :subscription {:description "A pubsub subscription, in the form of \"pubsub.googleapis.com/subscriptions//\"",
                                              :type "string"}},
                  :type "object",
                  :id "PubsubLocation"},
 :SendDebugCaptureResponse {:properties {},
                            :description "Response to a send capture request. nothing",
                            :type "object",
                            :id "SendDebugCaptureResponse"},
 :RuntimeEnvironment {:type "object",
                      :id "RuntimeEnvironment",
                      :properties {:maxWorkers {:type "integer",
                                                :description "The maximum number of Google Compute Engine instances to be made available to your pipeline during execution, from 1 to 1000.",
                                                :format "int32"},
                                   :workerRegion {:type "string",
                                                  :description "The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. \"us-west1\". Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, default to the control plane's region."},
                                   :additionalExperiments {:description "Additional experiment flags for the job.",
                                                           :type "array",
                                                           :items {:type "string"}},
                                   :zone {:description "The Compute Engine [availability zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones) for launching worker instances to run your pipeline. In the future, worker_zone will take precedence.",
                                          :type "string"},
                                   :machineType {:type "string",
                                                 :description "The machine type to use for the job. Defaults to the value from the template if not specified."},
                                   :tempLocation {:description "The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with `gs://`.",
                                                  :type "string"},
                                   :numWorkers {:type "integer",
                                                :description "The initial number of Google Compute Engine instnaces for the job.",
                                                :format "int32"},
                                   :serviceAccountEmail {:type "string",
                                                         :description "The email address of the service account to run the job as."},
                                   :bypassTempDirValidation {:description "Whether to bypass the safety checks for the job's temporary directory. Use with caution.",
                                                             :type "boolean"},
                                   :ipConfiguration {:enumDescriptions ["The configuration is unknown, or unspecified."
                                                                        "Workers should have public IP addresses."
                                                                        "Workers should have private IP addresses."],
                                                     :enum ["WORKER_IP_UNSPECIFIED"
                                                            "WORKER_IP_PUBLIC"
                                                            "WORKER_IP_PRIVATE"],
                                                     :type "string",
                                                     :description "Configuration for VM IPs."},
                                   :kmsKeyName {:type "string",
                                                :description "Name for the Cloud KMS key for the job. Key format is: projects//locations//keyRings//cryptoKeys/"},
                                   :enableStreamingEngine {:type "boolean",
                                                           :description "Whether to enable Streaming Engine for the job."},
                                   :network {:description "Network to which VMs will be assigned. If empty or unspecified, the service will use the network \"default\".",
                                             :type "string"},
                                   :workerZone {:description "The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. \"us-west1-a\". Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane's region is chosen based on available capacity. If both `worker_zone` and `zone` are set, `worker_zone` takes precedence.",
                                                :type "string"},
                                   :additionalUserLabels {:description "Additional user labels to be specified for the job. Keys and values should follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions) page. An object containing a list of \"key\": value pairs. Example: { \"name\": \"wrench\", \"mass\": \"1kg\", \"count\": \"3\" }.",
                                                          :additionalProperties {:type "string"},
                                                          :type "object"},
                                   :subnetwork {:description "Subnetwork to which VMs will be assigned, if desired. You can specify a subnetwork using either a complete URL or an abbreviated path. Expected to be of the form \"https://www.googleapis.com/compute/v1/projects/HOST_PROJECT_ID/regions/REGION/subnetworks/SUBNETWORK\" or \"regions/REGION/subnetworks/SUBNETWORK\". If the subnetwork is located in a Shared VPC network, you must use the complete URL.",
                                                :type "string"}},
                      :description "The environment values to set at runtime."},
 :DataDiskAssignment {:description "Data disk assignment for a given VM instance.",
                      :properties {:vmInstance {:type "string",
                                                :description "VM instance name the data disks mounted to, for example \"myproject-1014-104817-4c2-harness-0\"."},
                                   :dataDisks {:items {:type "string"},
                                               :description "Mounted data disks. The order is important a data disk's 0-based index in this list defines which persistent directory the disk is mounted to, for example the list of { \"myproject-1014-104817-4c2-harness-0-disk-0\" }, { \"myproject-1014-104817-4c2-harness-0-disk-1\" }.",
                                               :type "array"}},
                      :id "DataDiskAssignment",
                      :type "object"},
 :StageSource {:type "object",
               :id "StageSource",
               :description "Description of an input or output of an execution stage.",
               :properties {:sizeBytes {:description "Size of the source, if measurable.",
                                        :format "int64",
                                        :type "string"},
                            :name {:type "string",
                                   :description "Dataflow service generated name for this source."},
                            :userName {:type "string",
                                       :description "Human-readable name for this source; may be user or system generated."},
                            :originalTransformOrCollection {:description "User name for the original user transform or collection with which this source is most closely associated.",
                                                            :type "string"}}},
 :RuntimeMetadata {:properties {:sdkInfo {:$ref "SDKInfo",
                                          :description "SDK Info for the template."},
                                :parameters {:items {:$ref "ParameterMetadata"},
                                             :type "array",
                                             :description "The parameters for the template."}},
                   :id "RuntimeMetadata",
                   :type "object",
                   :description "RuntimeMetadata describing a runtime environment."},
 :WorkerSettings {:type "object",
                  :properties {:tempStoragePrefix {:type "string",
                                                   :description "The prefix of the resources the system should use for temporary storage. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}"},
                               :baseUrl {:type "string",
                                         :description "The base URL for accessing Google Cloud APIs. When workers access Google Cloud APIs, they logically do so via relative URLs. If this field is specified, it supplies the base URL to use for resolving these relative URLs. The normative algorithm used is defined by RFC 1808, \"Relative Uniform Resource Locators\". If not specified, the default value is \"http://www.googleapis.com/\""},
                               :reportingEnabled {:type "boolean",
                                                  :description "Whether to send work progress updates to the service."},
                               :shuffleServicePath {:type "string",
                                                    :description "The Shuffle service path relative to the root URL, for example, \"shuffle/v1beta1\"."},
                               :servicePath {:description "The Cloud Dataflow service path relative to the root URL, for example, \"dataflow/v1b3/projects\".",
                                             :type "string"},
                               :workerId {:type "string",
                                          :description "The ID of the worker running this pipeline."}},
                  :id "WorkerSettings",
                  :description "Provides data to pass through to the worker harness."},
 :GetDebugConfigResponse {:description "Response to a get debug configuration request.",
                          :properties {:config {:description "The encoded debug configuration for the requested component.",
                                                :type "string"}},
                          :type "object",
                          :id "GetDebugConfigResponse"},
 :LeaseWorkItemRequest {:properties {:location {:type "string",
                                                :description "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the WorkItem's job."},
                                     :workItemTypes {:type "array",
                                                     :description "Filter for WorkItem type.",
                                                     :items {:type "string"}},
                                     :requestedLeaseDuration {:type "string",
                                                              :description "The initial lease period.",
                                                              :format "google-duration"},
                                     :workerCapabilities {:items {:type "string"},
                                                          :description "Worker capabilities. WorkItems might be limited to workers with specific capabilities.",
                                                          :type "array"},
                                     :unifiedWorkerRequest {:type "object",
                                                            :description "Untranslated bag-of-bytes WorkRequest from UnifiedWorker.",
                                                            :additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                                                   :type "any"}},
                                     :workerId {:type "string",
                                                :description "Identifies the worker leasing work -- typically the ID of the virtual machine running the worker."},
                                     :currentWorkerTime {:type "string",
                                                         :format "google-datetime",
                                                         :description "The current timestamp at the worker."}},
                        :description "Request to lease WorkItems.",
                        :type "object",
                        :id "LeaseWorkItemRequest"},
 :TemplateMetadata {:properties {:name {:type "string",
                                        :description "Required. The name of the template."},
                                 :description {:type "string",
                                               :description "Optional. A description of the template."},
                                 :parameters {:description "The parameters for the template.",
                                              :items {:$ref "ParameterMetadata"},
                                              :type "array"}},
                    :type "object",
                    :id "TemplateMetadata",
                    :description "Metadata describing a template."},
 :MemInfo {:description "Information about the memory usage of a worker or a container within a worker.",
           :type "object",
           :properties {:totalGbMs {:format "uint64",
                                    :description "Total memory (RSS) usage since start up in GB * ms.",
                                    :type "string"},
                        :currentLimitBytes {:format "uint64",
                                            :type "string",
                                            :description "Instantenous memory limit in bytes."},
                        :timestamp {:description "Timestamp of the measurement.",
                                    :type "string",
                                    :format "google-datetime"},
                        :currentRssBytes {:type "string",
                                          :description "Instantenous memory (RSS) size in bytes.",
                                          :format "uint64"}},
           :id "MemInfo"},
 :Parameter {:description "Structured data associated with this message.",
             :properties {:key {:type "string",
                                :description "Key or name for this parameter."},
                          :value {:type "any",
                                  :description "Value for this parameter."}},
             :type "object",
             :id "Parameter"},
 :MultiOutputInfo {:properties {:tag {:description "The id of the tag the user code will emit to this output by; this should correspond to the tag of some SideInputInfo.",
                                      :type "string"}},
                   :description "Information about an output of a multi-output DoFn.",
                   :type "object",
                   :id "MultiOutputInfo"},
 :SourceOperationResponse {:id "SourceOperationResponse",
                           :description "The result of a SourceOperationRequest, specified in ReportWorkItemStatusRequest.source_operation when the work item is completed.",
                           :properties {:split {:$ref "SourceSplitResponse",
                                                :description "A response to a request to split a source."},
                                        :getMetadata {:$ref "SourceGetMetadataResponse",
                                                      :description "A response to a request to get metadata about a source."}},
                           :type "object"},
 :TemplateVersion {:description "///////////////////////////////////////////////////////////////////////////// //// Template Catalog is used to organize user TemplateVersions. //// TemplateVersions that have the same project_id and display_name are //// belong to the same Template. //// Templates with the same project_id belong to the same Project. //// TemplateVersion may have labels and multiple labels are allowed. //// Duplicated labels in the same `TemplateVersion` are not allowed. //// TemplateVersion may have tags and multiple tags are allowed. Duplicated //// tags in the same `Template` are not allowed!",
                   :properties {:description {:description "Template description from the user.",
                                              :type "string"},
                                :tags {:items {:type "string"},
                                       :type "array",
                                       :description "Alias for version_id, helps locate a TemplateVersion."},
                                :labels {:description "Labels for the Template Version. Labels can be duplicate within Template.",
                                         :type "object",
                                         :additionalProperties {:type "string"}},
                                :versionId {:description "An auto generated version_id for TemplateVersion.",
                                            :type "string"},
                                :displayName {:description "A customized name for Template. Multiple TemplateVersions per Template.",
                                              :type "string"},
                                :createTime {:type "string",
                                             :format "google-datetime",
                                             :description "Creation time of this TemplateVersion."},
                                :type {:enum ["TEMPLATE_TYPE_UNSPECIFIED"
                                              "LEGACY"
                                              "FLEX"],
                                       :enumDescriptions ["Default value. Not a useful zero case."
                                                          "Legacy Template."
                                                          "Flex Template."],
                                       :description "Either LEGACY or FLEX. This should match with the type of artifact.",
                                       :type "string"},
                                :projectId {:type "string",
                                            :description "A unique project_id. Multiple Templates per Project."},
                                :artifact {:$ref "Artifact",
                                           :description "Job graph and metadata if it is a legacy Template. Container image path and metadata if it is flex Template."}},
                   :type "object",
                   :id "TemplateVersion"},
 :WorkerPool {:description "Describes one particular pool of Cloud Dataflow workers to be instantiated by the Cloud Dataflow service in order to perform the computations required by a job. Note that a workflow job may use multiple pools, in order to match the various computational requirements of the various stages of the job.",
              :type "object",
              :id "WorkerPool",
              :properties {:sdkHarnessContainerImages {:items {:$ref "SdkHarnessContainerImage"},
                                                       :description "Set of SDK harness containers needed to execute this pipeline. This will only be set in the Fn API path. For non-cross-language pipelines this should have only one entry. Cross-language pipelines will have two or more entries.",
                                                       :type "array"},
                           :diskSourceImage {:description "Fully qualified source image for disks.",
                                             :type "string"},
                           :zone {:description "Zone to run the worker pools in. If empty or unspecified, the service will attempt to choose a reasonable default.",
                                  :type "string"},
                           :workerHarnessContainerImage {:description "Required. Docker container image that executes the Cloud Dataflow worker harness, residing in Google Container Registry. Deprecated for the Fn API path. Use sdk_harness_container_images instead.",
                                                         :type "string"},
                           :poolArgs {:additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                             :type "any"},
                                      :description "Extra arguments for this worker pool.",
                                      :type "object"},
                           :machineType {:type "string",
                                         :description "Machine type (e.g. \"n1-standard-1\"). If empty or unspecified, the service will attempt to choose a reasonable default."},
                           :defaultPackageSet {:enumDescriptions ["The default set of packages to stage is unknown, or unspecified."
                                                                  "Indicates that no packages should be staged at the worker unless explicitly specified by the job."
                                                                  "Stage packages typically useful to workers written in Java."
                                                                  "Stage pacakges typically useful to workers written in Python."],
                                               :type "string",
                                               :description "The default package set to install. This allows the service to select a default set of packages which are useful to worker harnesses written in a particular language.",
                                               :enum ["DEFAULT_PACKAGE_SET_UNKNOWN"
                                                      "DEFAULT_PACKAGE_SET_NONE"
                                                      "DEFAULT_PACKAGE_SET_JAVA"
                                                      "DEFAULT_PACKAGE_SET_PYTHON"]},
                           :onHostMaintenance {:type "string",
                                               :description "The action to take on host maintenance, as defined by the Google Compute Engine API."},
                           :dataDisks {:type "array",
                                       :items {:$ref "Disk"},
                                       :description "Data disks that are used by a VM in this workflow."},
                           :numWorkers {:description "Number of Google Compute Engine workers in this pool needed to execute the job. If zero or unspecified, the service will attempt to choose a reasonable default.",
                                        :format "int32",
                                        :type "integer"},
                           :numThreadsPerWorker {:description "The number of threads per worker harness. If empty or unspecified, the service will choose a number of threads (according to the number of cores on the selected machine type for batch, or 1 by convention for streaming).",
                                                 :format "int32",
                                                 :type "integer"},
                           :diskType {:type "string",
                                      :description "Type of root disk for VMs. If empty or unspecified, the service will attempt to choose a reasonable default."},
                           :ipConfiguration {:description "Configuration for VM IPs.",
                                             :type "string",
                                             :enumDescriptions ["The configuration is unknown, or unspecified."
                                                                "Workers should have public IP addresses."
                                                                "Workers should have private IP addresses."],
                                             :enum ["WORKER_IP_UNSPECIFIED"
                                                    "WORKER_IP_PUBLIC"
                                                    "WORKER_IP_PRIVATE"]},
                           :kind {:description "The kind of the worker pool; currently only `harness` and `shuffle` are supported.",
                                  :type "string"},
                           :taskrunnerSettings {:description "Settings passed through to Google Compute Engine workers when using the standard Dataflow task runner. Users should ignore this field.",
                                                :$ref "TaskRunnerSettings"},
                           :packages {:type "array",
                                      :description "Packages to be installed on workers.",
                                      :items {:$ref "Package"}},
                           :diskSizeGb {:type "integer",
                                        :description "Size of root disk for VMs, in GB. If zero or unspecified, the service will attempt to choose a reasonable default.",
                                        :format "int32"},
                           :network {:type "string",
                                     :description "Network to which VMs will be assigned. If empty or unspecified, the service will use the network \"default\"."},
                           :teardownPolicy {:enumDescriptions ["The teardown policy isn't specified, or is unknown."
                                                               "Always teardown the resource."
                                                               "Teardown the resource on success. This is useful for debugging failures."
                                                               "Never teardown the resource. This is useful for debugging and development."],
                                            :type "string",
                                            :description "Sets the policy for determining when to turndown worker pool. Allowed values are: `TEARDOWN_ALWAYS`, `TEARDOWN_ON_SUCCESS`, and `TEARDOWN_NEVER`. `TEARDOWN_ALWAYS` means workers are always torn down regardless of whether the job succeeds. `TEARDOWN_ON_SUCCESS` means workers are torn down if the job succeeds. `TEARDOWN_NEVER` means the workers are never torn down. If the workers are not torn down by the service, they will continue to run and use Google Compute Engine VM resources in the user's project until they are explicitly terminated by the user. Because of this, Google recommends using the `TEARDOWN_ALWAYS` policy except for small, manually supervised test jobs. If unknown or unspecified, the service will attempt to choose a reasonable default.",
                                            :enum ["TEARDOWN_POLICY_UNKNOWN"
                                                   "TEARDOWN_ALWAYS"
                                                   "TEARDOWN_ON_SUCCESS"
                                                   "TEARDOWN_NEVER"]},
                           :autoscalingSettings {:description "Settings for autoscaling of this WorkerPool.",
                                                 :$ref "AutoscalingSettings"},
                           :metadata {:type "object",
                                      :description "Metadata to set on the Google Compute Engine VMs.",
                                      :additionalProperties {:type "string"}},
                           :subnetwork {:type "string",
                                        :description "Subnetwork to which VMs will be assigned, if desired. Expected to be of the form \"regions/REGION/subnetworks/SUBNETWORK\"."}}},
 :JobExecutionStageInfo {:id "JobExecutionStageInfo",
                         :description "Contains information about how a particular google.dataflow.v1beta3.Step will be executed.",
                         :properties {:stepName {:items {:type "string"},
                                                 :type "array",
                                                 :description "The steps associated with the execution stage. Note that stages may have several steps, and that a given step might be run by more than one stage."}},
                         :type "object"},
 :LaunchFlexTemplateResponse {:description "Response to the request to launch a job from Flex Template.",
                              :type "object",
                              :properties {:job {:$ref "Job",
                                                 :description "The job that was launched, if the request was not a dry run and the job was successfully launched."}},
                              :id "LaunchFlexTemplateResponse"},
 :SourceGetMetadataRequest {:description "A request to compute the SourceMetadata of a Source.",
                            :properties {:source {:description "Specification of the source whose metadata should be computed.",
                                                  :$ref "Source"}},
                            :type "object",
                            :id "SourceGetMetadataRequest"},
 :FloatingPointMean {:type "object",
                     :description "A representation of a floating point mean metric contribution.",
                     :id "FloatingPointMean",
                     :properties {:sum {:format "double",
                                        :type "number",
                                        :description "The sum of all values being aggregated."},
                                  :count {:$ref "SplitInt64",
                                          :description "The number of values being aggregated."}}},
 :StreamingSideInputLocation {:type "object",
                              :properties {:tag {:description "Identifies the particular side input within the streaming Dataflow job.",
                                                 :type "string"},
                                           :stateFamily {:type "string",
                                                         :description "Identifies the state family where this side input is stored."}},
                              :id "StreamingSideInputLocation",
                              :description "Identifies the location of a streaming side input."},
 :DeleteSnapshotResponse {:description "Response from deleting a snapshot.",
                          :id "DeleteSnapshotResponse",
                          :type "object",
                          :properties {}},
 :StreamingConfigTask {:id "StreamingConfigTask",
                       :properties {:windmillServicePort {:description "If present, the worker must use this port to communicate with Windmill Service dispatchers. Only applicable when windmill_service_endpoint is specified.",
                                                          :type "string",
                                                          :format "int64"},
                                    :userStepToStateFamilyNameMap {:description "Map from user step names to state families.",
                                                                   :type "object",
                                                                   :additionalProperties {:type "string"}},
                                    :getDataStreamChunkSizeBytes {:format "int64",
                                                                  :type "string",
                                                                  :description "Chunk size for get data streams from the harness to windmill."},
                                    :streamingComputationConfigs {:type "array",
                                                                  :items {:$ref "StreamingComputationConfig"},
                                                                  :description "Set of computation configuration information."},
                                    :maxWorkItemCommitBytes {:format "int64",
                                                             :description "Maximum size for work item commit supported windmill storage layer.",
                                                             :type "string"},
                                    :commitStreamChunkSizeBytes {:description "Chunk size for commit streams from the harness to windmill.",
                                                                 :format "int64",
                                                                 :type "string"},
                                    :windmillServiceEndpoint {:description "If present, the worker must use this endpoint to communicate with Windmill Service dispatchers, otherwise the worker must continue to use whatever endpoint it had been using.",
                                                              :type "string"}},
                       :type "object",
                       :description "A task that carries configuration information for streaming computations."},
 :ListSnapshotsResponse {:description "List of snapshots.",
                         :id "ListSnapshotsResponse",
                         :properties {:snapshots {:type "array",
                                                  :description "Returned snapshots.",
                                                  :items {:$ref "Snapshot"}}},
                         :type "object"},
 :ComputationTopology {:properties {:systemStageName {:description "The system stage name.",
                                                      :type "string"},
                                    :keyRanges {:type "array",
                                                :description "The key ranges processed by the computation.",
                                                :items {:$ref "KeyRangeLocation"}},
                                    :stateFamilies {:items {:$ref "StateFamilyConfig"},
                                                    :description "The state family values.",
                                                    :type "array"},
                                    :computationId {:description "The ID of the computation.",
                                                    :type "string"},
                                    :outputs {:type "array",
                                              :items {:$ref "StreamLocation"},
                                              :description "The outputs from the computation."},
                                    :inputs {:description "The inputs to the computation.",
                                             :items {:$ref "StreamLocation"},
                                             :type "array"}},
                       :type "object",
                       :description "All configuration data for a particular Computation.",
                       :id "ComputationTopology"},
 :MapTask {:description "MapTask consists of an ordered set of instructions, each of which describes one particular low-level operation for the worker to perform in order to accomplish the MapTask's WorkItem. Each instruction must appear in the list before any instructions which depends on its output.",
           :type "object",
           :id "MapTask",
           :properties {:systemName {:type "string",
                                     :description "System-defined name of this MapTask. Unique across the workflow."},
                        :instructions {:type "array",
                                       :description "The instructions in the MapTask.",
                                       :items {:$ref "ParallelInstruction"}},
                        :counterPrefix {:description "Counter prefix that can be used to prefix counters. Not currently used in Dataflow.",
                                        :type "string"},
                        :stageName {:description "System-defined name of the stage containing this MapTask. Unique across the workflow.",
                                    :type "string"}}},
 :KeyRangeLocation {:properties {:deprecatedPersistentDirectory {:description "DEPRECATED. The location of the persistent state for this range, as a persistent directory in the worker local filesystem.",
                                                                 :type "string"},
                                 :deliveryEndpoint {:description "The physical location of this range assignment to be used for streaming computation cross-worker message delivery.",
                                                    :type "string"},
                                 :dataDisk {:description "The name of the data disk where data for this range is stored. This name is local to the Google Cloud Platform project and uniquely identifies the disk within that project, for example \"myproject-1014-104817-4c2-harness-0-disk-1\".",
                                            :type "string"},
                                 :start {:type "string",
                                         :description "The start (inclusive) of the key range."},
                                 :end {:description "The end (exclusive) of the key range.",
                                       :type "string"}},
                    :description "Location information for a specific key-range of a sharded computation. Currently we only support UTF-8 character splits to simplify encoding into JSON.",
                    :id "KeyRangeLocation",
                    :type "object"},
 :StringList {:id "StringList",
              :type "object",
              :description "A metric value representing a list of strings.",
              :properties {:elements {:items {:type "string"},
                                      :type "array",
                                      :description "Elements of the list."}}},
 :Source {:id "Source",
          :description "A source that records can be read and decoded from.",
          :properties {:codec {:description "The codec to use to decode data read from the source.",
                               :additionalProperties {:type "any",
                                                      :description "Properties of the object."},
                               :type "object"},
                       :doesNotNeedSplitting {:description "Setting this value to true hints to the framework that the source doesn't need splitting, and using SourceSplitRequest on it would yield SOURCE_SPLIT_OUTCOME_USE_CURRENT. E.g. a file splitter may set this to true when splitting a single file into a set of byte ranges of appropriate size, and set this to false when splitting a filepattern into individual files. However, for efficiency, a file splitter may decide to produce file subranges directly from the filepattern to avoid a splitting round-trip. See SourceSplitRequest for an overview of the splitting process. This field is meaningful only in the Source objects populated by the user (e.g. when filling in a DerivedSource). Source objects supplied by the framework to the user don't have this field populated.",
                                              :type "boolean"},
                       :baseSpecs {:items {:additionalProperties {:type "any",
                                                                  :description "Properties of the object."},
                                           :type "object"},
                                   :type "array",
                                   :description "While splitting, sources may specify the produced bundles as differences against another source, in order to save backend-side memory and allow bigger jobs. For details, see SourceSplitRequest. To support this use case, the full set of parameters of the source is logically obtained by taking the latest explicitly specified value of each parameter in the order: base_specs (later items win), spec (overrides anything in base_specs)."},
                       :spec {:description "The source to read from, plus its parameters.",
                              :additionalProperties {:type "any",
                                                     :description "Properties of the object."},
                              :type "object"},
                       :metadata {:$ref "SourceMetadata",
                                  :description "Optionally, metadata for this source can be supplied right away, avoiding a SourceGetMetadataOperation roundtrip (see SourceOperationRequest). This field is meaningful only in the Source objects populated by the user (e.g. when filling in a DerivedSource). Source objects supplied by the framework to the user don't have this field populated."}},
          :type "object"},
 :SDKInfo {:properties {:language {:enumDescriptions ["UNKNOWN Language."
                                                      "Java."
                                                      "Python."],
                                   :type "string",
                                   :enum ["UNKNOWN" "JAVA" "PYTHON"],
                                   :description "Required. The SDK Language."},
                        :version {:type "string",
                                  :description "Optional. The SDK version."}},
           :type "object",
           :description "SDK Information.",
           :id "SDKInfo"},
 :WorkerShutdownNoticeResponse {:description "Service-side response to WorkerMessage issuing shutdown notice.",
                                :properties {},
                                :type "object",
                                :id "WorkerShutdownNoticeResponse"},
 :ResourceUtilizationReport {:id "ResourceUtilizationReport",
                             :type "object",
                             :description "Worker metrics exported from workers. This contains resource utilization metrics accumulated from a variety of sources. For more information, see go/df-resource-signals.",
                             :properties {:cpuTime {:items {:$ref "CPUTime"},
                                                    :description "CPU utilization samples.",
                                                    :type "array"},
                                          :containers {:description "Per container information. Key: container name.",
                                                       :type "object",
                                                       :additionalProperties {:$ref "ResourceUtilizationReport"}},
                                          :memoryInfo {:items {:$ref "MemInfo"},
                                                       :description "Memory utilization samples.",
                                                       :type "array"}}},
 :WriteInstruction {:id "WriteInstruction",
                    :type "object",
                    :description "An instruction that writes records. Takes one input, produces no outputs.",
                    :properties {:sink {:$ref "Sink",
                                        :description "The sink to write to."},
                                 :input {:description "The input.",
                                         :$ref "InstructionInput"}}},
 :JobMessage {:type "object",
              :id "JobMessage",
              :description "A particular message pertaining to a Dataflow job.",
              :properties {:id {:description "Deprecated.",
                                :type "string"},
                           :messageImportance {:enumDescriptions ["The message importance isn't specified, or is unknown."
                                                                  "The message is at the 'debug' level: typically only useful for software engineers working on the code the job is running. Typically, Dataflow pipeline runners do not display log messages at this level by default."
                                                                  "The message is at the 'detailed' level: somewhat verbose, but potentially useful to users. Typically, Dataflow pipeline runners do not display log messages at this level by default. These messages are displayed by default in the Dataflow monitoring UI."
                                                                  "The message is at the 'basic' level: useful for keeping track of the execution of a Dataflow pipeline. Typically, Dataflow pipeline runners display log messages at this level by default, and these messages are displayed by default in the Dataflow monitoring UI."
                                                                  "The message is at the 'warning' level: indicating a condition pertaining to a job which may require human intervention. Typically, Dataflow pipeline runners display log messages at this level by default, and these messages are displayed by default in the Dataflow monitoring UI."
                                                                  "The message is at the 'error' level: indicating a condition preventing a job from succeeding. Typically, Dataflow pipeline runners display log messages at this level by default, and these messages are displayed by default in the Dataflow monitoring UI."],
                                               :type "string",
                                               :enum ["JOB_MESSAGE_IMPORTANCE_UNKNOWN"
                                                      "JOB_MESSAGE_DEBUG"
                                                      "JOB_MESSAGE_DETAILED"
                                                      "JOB_MESSAGE_BASIC"
                                                      "JOB_MESSAGE_WARNING"
                                                      "JOB_MESSAGE_ERROR"],
                                               :description "Importance level of the message."},
                           :messageText {:description "The text of the message.",
                                         :type "string"},
                           :time {:type "string",
                                  :description "The timestamp of the message.",
                                  :format "google-datetime"}}},
 :SourceSplitResponse {:id "SourceSplitResponse",
                       :properties {:outcome {:description "Indicates whether splitting happened and produced a list of bundles. If this is USE_CURRENT_SOURCE_AS_IS, the current source should be processed \"as is\" without splitting. \"bundles\" is ignored in this case. If this is SPLITTING_HAPPENED, then \"bundles\" contains a list of bundles into which the source was split.",
                                              :type "string",
                                              :enumDescriptions ["The source split outcome is unknown, or unspecified."
                                                                 "The current source should be processed \"as is\" without splitting."
                                                                 "Splitting produced a list of bundles."],
                                              :enum ["SOURCE_SPLIT_OUTCOME_UNKNOWN"
                                                     "SOURCE_SPLIT_OUTCOME_USE_CURRENT"
                                                     "SOURCE_SPLIT_OUTCOME_SPLITTING_HAPPENED"]},
                                    :bundles {:type "array",
                                              :description "If outcome is SPLITTING_HAPPENED, then this is a list of bundles into which the source was split. Otherwise this field is ignored. This list can be empty, which means the source represents an empty input.",
                                              :items {:$ref "DerivedSource"}},
                                    :shards {:type "array",
                                             :items {:$ref "SourceSplitShard"},
                                             :description "DEPRECATED in favor of bundles."}},
                       :description "The response to a SourceSplitRequest.",
                       :type "object"},
 :SourceSplitShard {:description "DEPRECATED in favor of DerivedSource.",
                    :id "SourceSplitShard",
                    :properties {:derivationMode {:type "string",
                                                  :description "DEPRECATED",
                                                  :enumDescriptions ["The source derivation is unknown, or unspecified."
                                                                     "Produce a completely independent Source with no base."
                                                                     "Produce a Source based on the Source being split."
                                                                     "Produce a Source based on the base of the Source being split."],
                                                  :enum ["SOURCE_DERIVATION_MODE_UNKNOWN"
                                                         "SOURCE_DERIVATION_MODE_INDEPENDENT"
                                                         "SOURCE_DERIVATION_MODE_CHILD_OF_CURRENT"
                                                         "SOURCE_DERIVATION_MODE_SIBLING_OF_CURRENT"]},
                                 :source {:$ref "Source",
                                          :description "DEPRECATED"}},
                    :type "object"},
 :IntegerList {:properties {:elements {:description "Elements of the list.",
                                       :items {:$ref "SplitInt64"},
                                       :type "array"}},
               :type "object",
               :id "IntegerList",
               :description "A metric value representing a list of integers."},
 :Position {:type "object",
            :description "Position defines a position within a collection of data. The value can be either the end position, a key (used with ordered collections), a byte offset, or a record index.",
            :properties {:key {:description "Position is a string key, ordered lexicographically.",
                               :type "string"},
                         :recordIndex {:format "int64",
                                       :description "Position is a record index.",
                                       :type "string"},
                         :concatPosition {:description "CloudPosition is a concat position.",
                                          :$ref "ConcatPosition"},
                         :byteOffset {:format "int64",
                                      :type "string",
                                      :description "Position is a byte offset."},
                         :shufflePosition {:description "CloudPosition is a base64 encoded BatchShufflePosition (with FIXED sharding).",
                                           :type "string"},
                         :end {:type "boolean",
                               :description "Position is past all other positions. Also useful for the end position of an unbounded range."}},
            :id "Position"},
 :PubsubSnapshotMetadata {:id "PubsubSnapshotMetadata",
                          :properties {:topicName {:description "The name of the Pubsub topic.",
                                                   :type "string"},
                                       :snapshotName {:type "string",
                                                      :description "The name of the Pubsub snapshot."},
                                       :expireTime {:type "string",
                                                    :description "The expire time of the Pubsub snapshot.",
                                                    :format "google-datetime"}},
                          :type "object",
                          :description "Represents a Pubsub snapshot."},
 :SdkHarnessContainerImage {:properties {:containerImage {:type "string",
                                                          :description "A docker container image that resides in Google Container Registry."},
                                         :useSingleCorePerContainer {:description "If true, recommends the Dataflow service to use only one core per SDK container instance with this image. If false (or unset) recommends using more than one core per SDK container instance with this image for efficiency. Note that Dataflow service may choose to override this property if needed.",
                                                                     :type "boolean"}},
                            :id "SdkHarnessContainerImage",
                            :type "object",
                            :description "Defines a SDK harness container for executing Dataflow pipelines."},
 :DistributionUpdate {:type "object",
                      :id "DistributionUpdate",
                      :description "A metric value representing a distribution.",
                      :properties {:count {:$ref "SplitInt64",
                                           :description "The count of the number of elements present in the distribution."},
                                   :min {:description "The minimum value present in the distribution.",
                                         :$ref "SplitInt64"},
                                   :sum {:description "Use an int64 since we'd prefer the added precision. If overflow is a common problem we can detect it and use an additional int64 or a double.",
                                         :$ref "SplitInt64"},
                                   :sumOfSquares {:format "double",
                                                  :description "Use a double since the sum of squares is likely to overflow int64.",
                                                  :type "number"},
                                   :max {:description "The maximum value present in the distribution.",
                                         :$ref "SplitInt64"},
                                   :histogram {:$ref "Histogram",
                                               :description "(Optional) Histogram of value counts for the distribution."}}},
 :StreamingComputationRanges {:id "StreamingComputationRanges",
                              :properties {:computationId {:type "string",
                                                           :description "The ID of the computation."},
                                           :rangeAssignments {:description "Data disk assignments for ranges from this computation.",
                                                              :items {:$ref "KeyRangeDataDiskAssignment"},
                                                              :type "array"}},
                              :type "object",
                              :description "Describes full or partial data disk assignment information of the computation ranges."},
 :CreateTemplateVersionRequest {:type "object",
                                :properties {:templateVersion {:description "The TemplateVersion object to create.",
                                                               :$ref "TemplateVersion"}},
                                :id "CreateTemplateVersionRequest",
                                :description "Creates a new Template with TemplateVersions."},
 :WorkerMessage {:type "object",
                 :description "WorkerMessage provides information to the backend about a worker.",
                 :id "WorkerMessage",
                 :properties {:workerHealthReport {:$ref "WorkerHealthReport",
                                                   :description "The health of a worker."},
                              :labels {:type "object",
                                       :description "Labels are used to group WorkerMessages. For example, a worker_message about a particular container might have the labels: { \"JOB_ID\": \"2015-04-22\", \"WORKER_ID\": \"wordcount-vm-2015…\" \"CONTAINER_TYPE\": \"worker\", \"CONTAINER_ID\": \"ac1234def\"} Label tags typically correspond to Label enum values. However, for ease of development other strings can be used as tags. LABEL_UNSPECIFIED should not be used here.",
                                       :additionalProperties {:type "string"}},
                              :workerLifecycleEvent {:$ref "WorkerLifecycleEvent",
                                                     :description "Record of worker lifecycle events."},
                              :time {:description "The timestamp of the worker_message.",
                                     :format "google-datetime",
                                     :type "string"},
                              :workerShutdownNotice {:$ref "WorkerShutdownNotice",
                                                     :description "Shutdown notice by workers."},
                              :workerMessageCode {:description "A worker message code.",
                                                  :$ref "WorkerMessageCode"},
                              :workerMetrics {:description "Resource metrics reported by workers.",
                                              :$ref "ResourceUtilizationReport"}}},
 :JobExecutionInfo {:type "object",
                    :description "Additional information about how a Cloud Dataflow job will be executed that isn't contained in the submitted job.",
                    :properties {:stages {:additionalProperties {:$ref "JobExecutionStageInfo"},
                                          :type "object",
                                          :description "A mapping from each stage to the information about that stage."}},
                    :id "JobExecutionInfo"},
 :FlattenInstruction {:type "object",
                      :properties {:inputs {:items {:$ref "InstructionInput"},
                                            :description "Describes the inputs to the flatten instruction.",
                                            :type "array"}},
                      :id "FlattenInstruction",
                      :description "An instruction that copies its inputs (zero or more) to its (single) output."},
 :ContainerSpec {:description "Container Spec.",
                 :properties {:metadata {:description "Metadata describing a template including description and validation rules.",
                                         :$ref "TemplateMetadata"},
                              :defaultEnvironment {:$ref "FlexTemplateRuntimeEnvironment",
                                                   :description "Default runtime environment for the job."},
                              :image {:description "Name of the docker container image. E.g., gcr.io/project/some-image",
                                      :type "string"},
                              :sdkInfo {:$ref "SDKInfo",
                                        :description "Required. SDK info of the Flex Template."}},
                 :type "object",
                 :id "ContainerSpec"},
 :WorkerLifecycleEvent {:type "object",
                        :id "WorkerLifecycleEvent",
                        :description "A report of an event in a worker's lifecycle. The proto contains one event, because the worker is expected to asynchronously send each message immediately after the event. Due to this asynchrony, messages may arrive out of order (or missing), and it is up to the consumer to interpret. The timestamp of the event is in the enclosing WorkerMessage proto.",
                        :properties {:event {:type "string",
                                             :enumDescriptions ["Invalid event."
                                                                "The time the VM started."
                                                                "Our container code starts running. Multiple containers could be distinguished with WorkerMessage.labels if desired."
                                                                "The worker has a functional external network connection."
                                                                "Started downloading staging files."
                                                                "Finished downloading all staging files."
                                                                "For applicable SDKs, started installation of SDK and worker packages."
                                                                "Finished installing SDK."],
                                             :enum ["UNKNOWN_EVENT"
                                                    "OS_START"
                                                    "CONTAINER_START"
                                                    "NETWORK_UP"
                                                    "STAGING_FILES_DOWNLOAD_START"
                                                    "STAGING_FILES_DOWNLOAD_FINISH"
                                                    "SDK_INSTALL_START"
                                                    "SDK_INSTALL_FINISH"],
                                             :description "The event being reported."},
                                     :containerStartTime {:description "The start time of this container. All events will report this so that events can be grouped together across container/VM restarts.",
                                                          :type "string",
                                                          :format "google-datetime"},
                                     :metadata {:description "Other stats that can accompany an event. E.g. { \"downloaded_bytes\" : \"123456\" }",
                                                :type "object",
                                                :additionalProperties {:type "string"}}}},
 :JobMetadata {:type "object",
               :description "Metadata available primarily for filtering jobs. Will be included in the ListJob response and Job SUMMARY view.",
               :id "JobMetadata",
               :properties {:spannerDetails {:type "array",
                                             :description "Identification of a Spanner source used in the Dataflow job.",
                                             :items {:$ref "SpannerIODetails"}},
                            :pubsubDetails {:description "Identification of a PubSub source used in the Dataflow job.",
                                            :type "array",
                                            :items {:$ref "PubSubIODetails"}},
                            :fileDetails {:description "Identification of a File source used in the Dataflow job.",
                                          :type "array",
                                          :items {:$ref "FileIODetails"}},
                            :sdkVersion {:description "The SDK version used to run the job.",
                                         :$ref "SdkVersion"},
                            :bigqueryDetails {:type "array",
                                              :items {:$ref "BigQueryIODetails"},
                                              :description "Identification of a BigQuery source used in the Dataflow job."},
                            :bigTableDetails {:description "Identification of a BigTable source used in the Dataflow job.",
                                              :items {:$ref "BigTableIODetails"},
                                              :type "array"},
                            :datastoreDetails {:type "array",
                                               :items {:$ref "DatastoreIODetails"},
                                               :description "Identification of a Datastore source used in the Dataflow job."}}},
 :FailedLocation {:type "object",
                  :properties {:name {:description "The name of the [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that failed to respond.",
                                      :type "string"}},
                  :description "Indicates which [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) failed to respond to a request for data.",
                  :id "FailedLocation"},
 :MountedDataDisk {:description "Describes mounted data disk.",
                   :type "object",
                   :id "MountedDataDisk",
                   :properties {:dataDisk {:description "The name of the data disk. This name is local to the Google Cloud Platform project and uniquely identifies the disk within that project, for example \"myproject-1014-104817-4c2-harness-0-disk-1\".",
                                           :type "string"}}},
 :ParallelInstruction {:id "ParallelInstruction",
                       :properties {:read {:description "Additional information for Read instructions.",
                                           :$ref "ReadInstruction"},
                                    :originalName {:description "System-defined name for the operation in the original workflow graph.",
                                                   :type "string"},
                                    :name {:description "User-provided name of this operation.",
                                           :type "string"},
                                    :parDo {:$ref "ParDoInstruction",
                                            :description "Additional information for ParDo instructions."},
                                    :flatten {:description "Additional information for Flatten instructions.",
                                              :$ref "FlattenInstruction"},
                                    :write {:$ref "WriteInstruction",
                                            :description "Additional information for Write instructions."},
                                    :partialGroupByKey {:$ref "PartialGroupByKeyInstruction",
                                                        :description "Additional information for PartialGroupByKey instructions."},
                                    :outputs {:type "array",
                                              :description "Describes the outputs of the instruction.",
                                              :items {:$ref "InstructionOutput"}},
                                    :systemName {:description "System-defined name of this operation. Unique across the workflow.",
                                                 :type "string"}},
                       :description "Describes a particular operation comprising a MapTask.",
                       :type "object"},
 :FlexTemplateRuntimeEnvironment {:type "object",
                                  :description "The environment values to be set at runtime for flex template.",
                                  :properties {:maxWorkers {:format "int32",
                                                            :description "The maximum number of Google Compute Engine instances to be made available to your pipeline during execution, from 1 to 1000.",
                                                            :type "integer"},
                                               :workerRegion {:type "string",
                                                              :description "The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. \"us-west1\". Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, default to the control plane's region."},
                                               :additionalExperiments {:description "Additional experiment flags for the job.",
                                                                       :items {:type "string"},
                                                                       :type "array"},
                                               :zone {:type "string",
                                                      :description "The Compute Engine [availability zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones) for launching worker instances to run your pipeline. In the future, worker_zone will take precedence."},
                                               :machineType {:type "string",
                                                             :description "The machine type to use for the job. Defaults to the value from the template if not specified."},
                                               :tempLocation {:type "string",
                                                              :description "The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with `gs://`."},
                                               :numWorkers {:description "The initial number of Google Compute Engine instances for the job.",
                                                            :format "int32",
                                                            :type "integer"},
                                               :serviceAccountEmail {:description "The email address of the service account to run the job as.",
                                                                     :type "string"},
                                               :ipConfiguration {:description "Configuration for VM IPs.",
                                                                 :type "string",
                                                                 :enum ["WORKER_IP_UNSPECIFIED"
                                                                        "WORKER_IP_PUBLIC"
                                                                        "WORKER_IP_PRIVATE"],
                                                                 :enumDescriptions ["The configuration is unknown, or unspecified."
                                                                                    "Workers should have public IP addresses."
                                                                                    "Workers should have private IP addresses."]},
                                               :kmsKeyName {:description "Name for the Cloud KMS key for the job. Key format is: projects//locations//keyRings//cryptoKeys/",
                                                            :type "string"},
                                               :enableStreamingEngine {:type "boolean",
                                                                       :description "Whether to enable Streaming Engine for the job."},
                                               :network {:type "string",
                                                         :description "Network to which VMs will be assigned. If empty or unspecified, the service will use the network \"default\"."},
                                               :workerZone {:type "string",
                                                            :description "The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. \"us-west1-a\". Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane's region is chosen based on available capacity. If both `worker_zone` and `zone` are set, `worker_zone` takes precedence."},
                                               :additionalUserLabels {:additionalProperties {:type "string"},
                                                                      :type "object",
                                                                      :description "Additional user labels to be specified for the job. Keys and values must follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions) page. An object containing a list of \"key\": value pairs. Example: { \"name\": \"wrench\", \"mass\": \"1kg\", \"count\": \"3\" }."},
                                               :subnetwork {:type "string",
                                                            :description "Subnetwork to which VMs will be assigned, if desired. You can specify a subnetwork using either a complete URL or an abbreviated path. Expected to be of the form \"https://www.googleapis.com/compute/v1/projects/HOST_PROJECT_ID/regions/REGION/subnetworks/SUBNETWORK\" or \"regions/REGION/subnetworks/SUBNETWORK\". If the subnetwork is located in a Shared VPC network, you must use the complete URL."}},
                                  :id "FlexTemplateRuntimeEnvironment"},
 :SpannerIODetails {:description "Metadata for a Spanner connector used by the job.",
                    :id "SpannerIODetails",
                    :type "object",
                    :properties {:databaseId {:type "string",
                                              :description "DatabaseId accessed in the connection."},
                                 :instanceId {:description "InstanceId accessed in the connection.",
                                              :type "string"},
                                 :projectId {:type "string",
                                             :description "ProjectId accessed in the connection."}}},
 :SendDebugCaptureRequest {:id "SendDebugCaptureRequest",
                           :type "object",
                           :description "Request to send encoded debug information.",
                           :properties {:componentId {:description "The internal component id for which debug information is sent.",
                                                      :type "string"},
                                        :workerId {:type "string",
                                                   :description "The worker id, i.e., VM hostname."},
                                        :data {:description "The encoded debug information.",
                                               :type "string"},
                                        :location {:description "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the job specified by job_id.",
                                                   :type "string"}}},
 :SdkVersion {:description "The version of the SDK used to run the job.",
              :properties {:versionDisplayName {:description "A readable string describing the version of the SDK.",
                                                :type "string"},
                           :version {:type "string",
                                     :description "The version of the SDK used to run the job."},
                           :sdkSupportStatus {:enumDescriptions ["Cloud Dataflow is unaware of this version."
                                                                 "This is a known version of an SDK, and is supported."
                                                                 "A newer version of the SDK family exists, and an update is recommended."
                                                                 "This version of the SDK is deprecated and will eventually be no longer supported."
                                                                 "Support for this SDK version has ended and it should no longer be used."],
                                              :enum ["UNKNOWN"
                                                     "SUPPORTED"
                                                     "STALE"
                                                     "DEPRECATED"
                                                     "UNSUPPORTED"],
                                              :description "The support status for this SDK version.",
                                              :type "string"}},
              :type "object",
              :id "SdkVersion"},
 :SourceSplitRequest {:properties {:source {:description "Specification of the source to be split.",
                                            :$ref "Source"},
                                   :options {:$ref "SourceSplitOptions",
                                             :description "Hints for tuning the splitting process."}},
                      :id "SourceSplitRequest",
                      :type "object",
                      :description "Represents the operation to split a high-level Source specification into bundles (parts for parallel processing). At a high level, splitting of a source into bundles happens as follows: SourceSplitRequest is applied to the source. If it returns SOURCE_SPLIT_OUTCOME_USE_CURRENT, no further splitting happens and the source is used \"as is\". Otherwise, splitting is applied recursively to each produced DerivedSource. As an optimization, for any Source, if its does_not_need_splitting is true, the framework assumes that splitting this source would return SOURCE_SPLIT_OUTCOME_USE_CURRENT, and doesn't initiate a SourceSplitRequest. This applies both to the initial source being split and to bundles produced from it."},
 :FloatingPointList {:id "FloatingPointList",
                     :properties {:elements {:type "array",
                                             :description "Elements of the list.",
                                             :items {:type "number",
                                                     :format "double"}}},
                     :description "A metric value representing a list of floating point numbers.",
                     :type "object"},
 :Status {:description "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
          :type "object",
          :id "Status",
          :properties {:message {:type "string",
                                 :description "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."},
                       :details {:type "array",
                                 :items {:type "object",
                                         :additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                                :type "any"}},
                                 :description "A list of messages that carry the error details. There is a common set of message types for APIs to use."},
                       :code {:type "integer",
                              :description "The status code, which should be an enum value of google.rpc.Code.",
                              :format "int32"}}}}
