{:CustomField {:properties {:value {:description "Value is the field value. It is important that in contrast to the CounterOptions.field, the value here is a constant that is not derived from the IAMContext.",
                                    :type "string"},
                            :name {:type "string",
                                   :description "Name is the field name."}},
               :type "object",
               :id "CustomField",
               :description "Custom fields. These can be used to create a counter with arbitrary field/value pairs. See: go/rpcsp-custom-fields."},
 :PreviewCreateGameServerClusterResponse {:type "object",
                                          :description "Response message for GameServerClustersService.PreviewCreateGameServerCluster.",
                                          :id "PreviewCreateGameServerClusterResponse",
                                          :properties {:targetState {:$ref "TargetState",
                                                                     :description "The target state."},
                                                       :etag {:type "string",
                                                              :description "The ETag of the game server cluster."}}},
 :DeployedClusterState {:type "object",
                        :id "DeployedClusterState",
                        :properties {:fleetDetails {:description "The details about the Agones fleets and autoscalers created in the game server cluster.",
                                                    :items {:$ref "DeployedFleetDetails"},
                                                    :type "array"},
                                     :cluster {:description "The name of the cluster.",
                                               :type "string"}},
                        :description "The game server cluster changes made by the game server deployment."},
 :CloudAuditOptions {:id "CloudAuditOptions",
                     :description "Write a Cloud Audit log",
                     :properties {:logName {:description "The log_name to populate in the Cloud Audit Record.",
                                            :enum ["UNSPECIFIED_LOG_NAME"
                                                   "ADMIN_ACTIVITY"
                                                   "DATA_ACCESS"],
                                            :type "string",
                                            :enumDescriptions ["Default. Should not be used."
                                                               "Corresponds to \"cloudaudit.googleapis.com/activity\""
                                                               "Corresponds to \"cloudaudit.googleapis.com/data_access\""]},
                                  :authorizationLoggingOptions {:description "Information used by the Cloud Audit Logging pipeline.",
                                                                :$ref "AuthorizationLoggingOptions"}},
                     :type "object"},
 :Rule {:type "object",
        :id "Rule",
        :description "A rule to be applied in a Policy.",
        :properties {:permissions {:description "A permission is a string of form '..' (e.g., 'storage.buckets.list'). A value of '*' matches all permissions, and a verb part of '*' (e.g., 'storage.buckets.*') matches all verbs.",
                                   :items {:type "string"},
                                   :type "array"},
                     :in {:items {:type "string"},
                          :description "If one or more 'in' clauses are specified, the rule matches if the PRINCIPAL/AUTHORITY_SELECTOR is in at least one of these entries.",
                          :type "array"},
                     :description {:description "Human-readable description of the rule.",
                                   :type "string"},
                     :notIn {:description "If one or more 'not_in' clauses are specified, the rule matches if the PRINCIPAL/AUTHORITY_SELECTOR is in none of the entries. The format for in and not_in entries can be found at in the Local IAM documentation (see go/local-iam#features).",
                             :type "array",
                             :items {:type "string"}},
                     :action {:type "string",
                              :description "Required",
                              :enumDescriptions ["Default no action."
                                                 "Matching 'Entries' grant access."
                                                 "Matching 'Entries' grant access and the caller promises to log the request per the returned log_configs."
                                                 "Matching 'Entries' deny access."
                                                 "Matching 'Entries' deny access and the caller promises to log the request per the returned log_configs."
                                                 "Matching 'Entries' tell IAM.Check callers to generate logs."],
                              :enum ["NO_ACTION"
                                     "ALLOW"
                                     "ALLOW_WITH_LOG"
                                     "DENY"
                                     "DENY_WITH_LOG"
                                     "LOG"]},
                     :conditions {:items {:$ref "Condition"},
                                  :description "Additional restrictions that must be met. All conditions must pass for the rule to match.",
                                  :type "array"},
                     :logConfig {:description "The config returned to callers of tech.iam.IAM.CheckPolicy for any entries that match the LOG action.",
                                 :type "array",
                                 :items {:$ref "LogConfig"}}}},
 :FetchDeploymentStateRequest {:description "Request message for GameServerDeploymentsService.FetchDeploymentState.",
                               :properties {},
                               :type "object",
                               :id "FetchDeploymentStateRequest"},
 :DeployedFleet {:description "Agones fleet specification and details.",
                 :id "DeployedFleet",
                 :properties {:specSource {:$ref "SpecSource",
                                           :description "The source spec that is used to create the Agones fleet. The GameServerConfig resource may no longer exist in the system."},
                              :status {:$ref "DeployedFleetStatus",
                                       :description "The current status of the Agones fleet. Includes count of game servers in various states."},
                              :fleetSpec {:description "The fleet spec retrieved from the Agones fleet.",
                                          :type "string"},
                              :fleet {:type "string",
                                      :description "The name of the Agones fleet."}},
                 :type "object"},
 :GameServerDeploymentRollout {:description "The game server deployment rollout which represents the desired rollout state.",
                               :type "object",
                               :id "GameServerDeploymentRollout",
                               :properties {:etag {:type "string",
                                                   :description "ETag of the resource."},
                                            :gameServerConfigOverrides {:items {:$ref "GameServerConfigOverride"},
                                                                        :description "Contains the game server config rollout overrides. Overrides are processed in the order they are listed. Once a match is found for a realm, the rest of the list is not processed.",
                                                                        :type "array"},
                                            :defaultGameServerConfig {:description "The default game server config is applied to all realms unless overridden in the rollout. For example, `projects/my-project/locations/global/gameServerDeployments/my-game/configs/my-config`.",
                                                                      :type "string"},
                                            :createTime {:description "Output only. The creation time.",
                                                         :format "google-datetime",
                                                         :type "string",
                                                         :readOnly true},
                                            :name {:description "The resource name of the game server deployment rollout, in the following form: `projects/{project}/locations/{location}/gameServerDeployments/{deployment}/rollout`. For example, `projects/my-project/locations/global/gameServerDeployments/my-deployment/rollout`.",
                                                   :type "string"},
                                            :updateTime {:type "string",
                                                         :format "google-datetime",
                                                         :description "Output only. The last-modified time.",
                                                         :readOnly true}}},
 :Operation {:properties {:name {:type "string",
                                 :description "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."},
                          :metadata {:description "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                                     :type "object",
                                     :additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                            :type "any"}},
                          :error {:description "The error result of the operation in case of failure or cancellation.",
                                  :$ref "Status"},
                          :done {:description "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                                 :type "boolean"},
                          :response {:additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                            :type "any"},
                                     :type "object",
                                     :description "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."}},
             :id "Operation",
             :type "object",
             :description "This resource represents a long-running operation that is the result of a network API call."},
 :SetIamPolicyRequest {:properties {:policy {:description "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.",
                                             :$ref "Policy"},
                                    :updateMask {:description "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
                                                 :format "google-fieldmask",
                                                 :type "string"}},
                       :id "SetIamPolicyRequest",
                       :type "object",
                       :description "Request message for `SetIamPolicy` method."},
 :AuditConfig {:id "AuditConfig",
               :properties {:auditLogConfigs {:type "array",
                                              :description "The configuration for logging of each type of permission.",
                                              :items {:$ref "AuditLogConfig"}},
                            :service {:description "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.",
                                      :type "string"},
                            :exemptedMembers {:type "array",
                                              :items {:type "string"}}},
               :description "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.",
               :type "object"},
 :Schedule {:properties {:endTime {:format "google-datetime",
                                   :description "The end time of the event.",
                                   :type "string"},
                         :cronSpec {:description "The cron definition of the scheduled event. See https://en.wikipedia.org/wiki/Cron. Cron spec specifies the local time as defined by the realm.",
                                    :type "string"},
                         :startTime {:type "string",
                                     :format "google-datetime",
                                     :description "The start time of the event."},
                         :cronJobDuration {:type "string",
                                           :description "The duration for the cron job event. The duration of the event is effective after the cron job's start time.",
                                           :format "google-duration"}},
            :id "Schedule",
            :type "object",
            :description "The schedule of a recurring or one time event. The event's time span is specified by start_time and end_time. If the scheduled event's timespan is larger than the cron_spec + cron_job_duration, the event will be recurring. If only cron_spec + cron_job_duration are specified, the event is effective starting at the local time specified by cron_spec, and is recurring. start_time|-------[cron job]-------[cron job]-------[cron job]---|end_time cron job: cron spec start time + duration"},
 :GameServerClusterConnectionInfo {:description "The game server cluster connection information.",
                                   :type "object",
                                   :id "GameServerClusterConnectionInfo",
                                   :properties {:gkeClusterReference {:description "Reference to the GKE cluster where the game servers are installed.",
                                                                      :$ref "GkeClusterReference"},
                                                :namespace {:description "Namespace designated on the game server cluster where the Agones game server instances will be created. Existence of the namespace will be validated during creation.",
                                                            :type "string"}}},
 :AuditLogConfig {:description "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
                  :properties {:logType {:enumDescriptions ["Default case. Should never be this."
                                                            "Admin reads. Example: CloudIAM getIamPolicy"
                                                            "Data writes. Example: CloudSQL Users create"
                                                            "Data reads. Example: CloudSQL Users list"],
                                         :type "string",
                                         :enum ["LOG_TYPE_UNSPECIFIED"
                                                "ADMIN_READ"
                                                "DATA_WRITE"
                                                "DATA_READ"],
                                         :description "The log type that this config enables."},
                               :ignoreChildExemptions {:type "boolean"},
                               :exemptedMembers {:type "array",
                                                 :items {:type "string"},
                                                 :description "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."}},
                  :id "AuditLogConfig",
                  :type "object"},
 :FleetConfig {:type "object",
               :properties {:fleetSpec {:description "Agones fleet spec. Example spec: `https://agones.dev/site/docs/reference/fleet/`.",
                                        :type "string"},
                            :name {:description "The name of the FleetConfig.",
                                   :type "string"}},
               :description "Fleet configs for Agones.",
               :id "FleetConfig"},
 :ListGameServerConfigsResponse {:description "Response message for GameServerConfigsService.ListGameServerConfigs.",
                                 :properties {:nextPageToken {:description "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                                                              :type "string"},
                                              :unreachable {:type "array",
                                                            :description "List of locations that could not be reached.",
                                                            :items {:type "string"}},
                                              :gameServerConfigs {:items {:$ref "GameServerConfig"},
                                                                  :type "array",
                                                                  :description "The list of game server configs."}},
                                 :type "object",
                                 :id "ListGameServerConfigsResponse"},
 :DeployedFleetStatus {:description "DeployedFleetStatus has details about the Agones fleets such as how many are running, how many allocated, and so on.",
                       :properties {:reservedReplicas {:description "The number of GameServer replicas in the RESERVED state in this fleet. Reserved instances won't be deleted on scale down, but won't cause an autoscaler to scale up.",
                                                       :type "string",
                                                       :format "int64"},
                                    :readyReplicas {:format "int64",
                                                    :description "The number of GameServer replicas in the READY state in this fleet.",
                                                    :type "string"},
                                    :allocatedReplicas {:type "string",
                                                        :format "int64",
                                                        :description "The number of GameServer replicas in the ALLOCATED state in this fleet."},
                                    :replicas {:description "The total number of current GameServer replicas in this fleet.",
                                               :format "int64",
                                               :type "string"}},
                       :type "object",
                       :id "DeployedFleetStatus"},
 :CancelOperationRequest {:type "object",
                          :description "The request message for Operations.CancelOperation.",
                          :properties {},
                          :id "CancelOperationRequest"},
 :ListGameServerDeploymentsResponse {:description "Response message for GameServerDeploymentsService.ListGameServerDeployments.",
                                     :id "ListGameServerDeploymentsResponse",
                                     :type "object",
                                     :properties {:unreachable {:items {:type "string"},
                                                                :type "array",
                                                                :description "List of locations that could not be reached."},
                                                  :nextPageToken {:type "string",
                                                                  :description "Token to retrieve the next page of results, or empty if there are no more results in the list."},
                                                  :gameServerDeployments {:items {:$ref "GameServerDeployment"},
                                                                          :description "The list of game server deployments.",
                                                                          :type "array"}}},
 :GkeClusterReference {:properties {:cluster {:type "string",
                                              :description "The full or partial name of a GKE cluster, using one of the following forms: * `projects/{project}/locations/{location}/clusters/{cluster}` * `locations/{location}/clusters/{cluster}` * `{cluster}` If project and location are not specified, the project and location of the GameServerCluster resource are used to generate the full name of the GKE cluster."}},
                       :description "A reference to a GKE cluster.",
                       :id "GkeClusterReference",
                       :type "object"},
 :RealmSelector {:properties {:realms {:type "array",
                                       :description "List of realms to match.",
                                       :items {:type "string"}}},
                 :type "object",
                 :description "The realm selector, used to match realm resources.",
                 :id "RealmSelector"},
 :PreviewGameServerDeploymentRolloutResponse {:description "Response message for PreviewGameServerDeploymentRollout. This has details about the Agones fleet and autoscaler to be actuated.",
                                              :id "PreviewGameServerDeploymentRolloutResponse",
                                              :type "object",
                                              :properties {:targetState {:description "The target state.",
                                                                         :$ref "TargetState"},
                                                           :etag {:description "ETag of the game server deployment.",
                                                                  :type "string"},
                                                           :unavailable {:type "array",
                                                                         :items {:type "string"},
                                                                         :description "Locations that could not be reached on this request."}}},
 :DeployedFleetDetails {:properties {:deployedFleet {:$ref "DeployedFleet",
                                                     :description "Information about the Agones fleet."},
                                     :deployedAutoscaler {:$ref "DeployedFleetAutoscaler",
                                                          :description "Information about the Agones autoscaler for that fleet."}},
                        :description "Details of the deployed Agones fleet.",
                        :id "DeployedFleetDetails",
                        :type "object"},
 :FetchDeploymentStateResponse {:description "Response message for GameServerDeploymentsService.FetchDeploymentState.",
                                :properties {:clusterState {:items {:$ref "DeployedClusterState"},
                                                            :type "array",
                                                            :description "The state of the game server deployment in each game server cluster."},
                                             :unavailable {:type "array",
                                                           :items {:type "string"},
                                                           :description "List of locations that could not be reached."}},
                                :type "object",
                                :id "FetchDeploymentStateResponse"},
 :TargetFleetAutoscaler {:id "TargetFleetAutoscaler",
                         :description "Target Agones autoscaler policy reference.",
                         :type "object",
                         :properties {:specSource {:$ref "SpecSource",
                                                   :description "Encapsulates the source of the Agones fleet spec. Details about the Agones autoscaler spec."},
                                      :name {:description "The name of the Agones autoscaler.",
                                             :type "string"}}},
 :LogConfig {:id "LogConfig",
             :type "object",
             :description "Specifies what kind of log the caller must write",
             :properties {:counter {:description "Counter options.",
                                    :$ref "CounterOptions"},
                          :dataAccess {:$ref "DataAccessOptions",
                                       :description "Data access options."},
                          :cloudAudit {:$ref "CloudAuditOptions",
                                       :description "Cloud audit options."}}},
 :Binding {:description "Associates `members` with a `role`.",
           :type "object",
           :id "Binding",
           :properties {:bindingId {:type "string"},
                        :role {:type "string",
                               :description "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."},
                        :condition {:description "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                                    :$ref "Expr"},
                        :members {:items {:type "string"},
                                  :type "array",
                                  :description "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "}}},
 :DataAccessOptions {:id "DataAccessOptions",
                     :description "Write a Data Access (Gin) log",
                     :type "object",
                     :properties {:logMode {:type "string",
                                            :enum ["LOG_MODE_UNSPECIFIED"
                                                   "LOG_FAIL_CLOSED"],
                                            :enumDescriptions ["Client is not required to write a partial Gin log immediately after the authorization check. If client chooses to write one and it fails, client may either fail open (allow the operation to continue) or fail closed (handle as a DENY outcome)."
                                                               "The application's operation in the context of which this authorization check is being made may only be performed if it is successfully logged to Gin. For instance, the authorization library may satisfy this obligation by emitting a partial log entry at authorization check time and only returning ALLOW to the application if it succeeds. If a matching Rule has this directive, but the client has not indicated that it will honor such requirements, then the IAM check will result in authorization failure by setting CheckPolicyResponse.success=false."]}}},
 :PreviewRealmUpdateResponse {:type "object",
                              :properties {:targetState {:$ref "TargetState",
                                                         :description "The target state."},
                                           :etag {:description "ETag of the realm.",
                                                  :type "string"}},
                              :id "PreviewRealmUpdateResponse",
                              :description "Response message for RealmsService.PreviewRealmUpdate."},
 :Empty {:id "Empty",
         :description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
         :properties {},
         :type "object"},
 :TargetDetails {:type "object",
                 :properties {:fleetDetails {:items {:$ref "TargetFleetDetails"},
                                             :description "Agones fleet details for game server clusters and game server deployments.",
                                             :type "array"},
                              :gameServerDeploymentName {:description "The game server deployment name. Uses the form: `projects/{project}/locations/{location}/gameServerDeployments/{deployment_id}`.",
                                                         :type "string"},
                              :gameServerClusterName {:description "The game server cluster name. Uses the form: `projects/{project}/locations/{location}/realms/{realm}/gameServerClusters/{cluster}`.",
                                                      :type "string"}},
                 :id "TargetDetails",
                 :description "Details about the Agones resources."},
 :GameServerConfigOverride {:id "GameServerConfigOverride",
                            :properties {:configVersion {:type "string",
                                                         :description "The game server config for this override."},
                                         :realmsSelector {:$ref "RealmSelector",
                                                          :description "Selector for choosing applicable realms."}},
                            :description "A game server config override.",
                            :type "object"},
 :DeployedFleetAutoscaler {:properties {:fleetAutoscalerSpec {:type "string",
                                                              :description "The autoscaler spec retrieved from Agones."},
                                        :specSource {:$ref "SpecSource",
                                                     :description "The source spec that is used to create the autoscaler. The GameServerConfig resource may no longer exist in the system."},
                                        :autoscaler {:type "string",
                                                     :description "The name of the Agones autoscaler."}},
                           :description "Details about the Agones autoscaler.",
                           :id "DeployedFleetAutoscaler",
                           :type "object"},
 :PreviewDeleteGameServerClusterResponse {:id "PreviewDeleteGameServerClusterResponse",
                                          :properties {:etag {:description "The ETag of the game server cluster.",
                                                              :type "string"},
                                                       :targetState {:description "The target state.",
                                                                     :$ref "TargetState"}},
                                          :description "Response message for GameServerClustersService.PreviewDeleteGameServerCluster.",
                                          :type "object"},
 :ListLocationsResponse {:id "ListLocationsResponse",
                         :properties {:locations {:type "array",
                                                  :description "A list of locations that matches the specified filter in the request.",
                                                  :items {:$ref "Location"}},
                                      :nextPageToken {:description "The standard List next-page token.",
                                                      :type "string"}},
                         :description "The response message for Locations.ListLocations.",
                         :type "object"},
 :TargetFleet {:type "object",
               :description "Target Agones fleet specification.",
               :id "TargetFleet",
               :properties {:specSource {:$ref "SpecSource",
                                         :description "Encapsulates the source of the Agones fleet spec. The Agones fleet spec source."},
                            :name {:description "The name of the Agones fleet.",
                                   :type "string"}}},
 :ListRealmsResponse {:type "object",
                      :id "ListRealmsResponse",
                      :properties {:nextPageToken {:description "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                                                   :type "string"},
                                   :unreachable {:type "array",
                                                 :description "List of locations that could not be reached.",
                                                 :items {:type "string"}},
                                   :realms {:items {:$ref "Realm"},
                                            :description "The list of realms.",
                                            :type "array"}},
                      :description "Response message for RealmsService.ListRealms."},
 :TestIamPermissionsRequest {:properties {:permissions {:description "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
                                                        :items {:type "string"},
                                                        :type "array"}},
                             :description "Request message for `TestIamPermissions` method.",
                             :type "object",
                             :id "TestIamPermissionsRequest"},
 :AuthorizationLoggingOptions {:id "AuthorizationLoggingOptions",
                               :type "object",
                               :properties {:permissionType {:enumDescriptions ["Default. Should not be used."
                                                                                "A read of admin (meta) data."
                                                                                "A write of admin (meta) data."
                                                                                "A read of standard data."
                                                                                "A write of standard data."],
                                                             :type "string",
                                                             :description "The type of the permission that was checked.",
                                                             :enum ["PERMISSION_TYPE_UNSPECIFIED"
                                                                    "ADMIN_READ"
                                                                    "ADMIN_WRITE"
                                                                    "DATA_READ"
                                                                    "DATA_WRITE"]}},
                               :description "Authorization-related information used by Cloud Audit Logging."},
 :GameServerCluster {:type "object",
                     :description "A game server cluster resource.",
                     :id "GameServerCluster",
                     :properties {:updateTime {:type "string",
                                               :format "google-datetime",
                                               :readOnly true,
                                               :description "Output only. The last-modified time."},
                                  :name {:description "Required. The resource name of the game server cluster, in the following form: `projects/{project}/locations/{location}/realms/{realm}/gameServerClusters/{cluster}`. For example, `projects/my-project/locations/{location}/realms/zanzibar/gameServerClusters/my-onprem-cluster`.",
                                         :type "string"},
                                  :labels {:type "object",
                                           :description "The labels associated with this game server cluster. Each label is a key-value pair.",
                                           :additionalProperties {:type "string"}},
                                  :etag {:type "string",
                                         :description "ETag of the resource."},
                                  :connectionInfo {:description "The game server cluster connection information. This information is used to manage game server clusters.",
                                                   :$ref "GameServerClusterConnectionInfo"},
                                  :createTime {:format "google-datetime",
                                               :readOnly true,
                                               :description "Output only. The creation time.",
                                               :type "string"},
                                  :description {:type "string",
                                                :description "Human readable description of the cluster."}}},
 :OperationStatus {:type "object",
                   :properties {:errorMessage {:description "The human-readable error message.",
                                               :type "string"},
                                :done {:readOnly true,
                                       :type "boolean",
                                       :description "Output only. Whether the operation is done or still in progress."},
                                :errorCode {:enum ["ERROR_CODE_UNSPECIFIED"
                                                   "INTERNAL_ERROR"
                                                   "PERMISSION_DENIED"
                                                   "CLUSTER_CONNECTION"],
                                            :description "The error code in case of failures.",
                                            :enumDescriptions [""
                                                               ""
                                                               ""
                                                               ""],
                                            :type "string"}},
                   :id "OperationStatus"},
 :GameServerDeployment {:properties {:etag {:type "string",
                                            :description "ETag of the resource."},
                                     :labels {:description "The labels associated with this game server deployment. Each label is a key-value pair.",
                                              :type "object",
                                              :additionalProperties {:type "string"}},
                                     :createTime {:type "string",
                                                  :format "google-datetime",
                                                  :description "Output only. The creation time.",
                                                  :readOnly true},
                                     :updateTime {:readOnly true,
                                                  :type "string",
                                                  :description "Output only. The last-modified time.",
                                                  :format "google-datetime"},
                                     :description {:description "Human readable description of the game server delpoyment.",
                                                   :type "string"},
                                     :name {:description "The resource name of the game server deployment, in the following form: `projects/{project}/locations/{location}/gameServerDeployments/{deployment}`. For example, `projects/my-project/locations/global/gameServerDeployments/my-deployment`.",
                                            :type "string"}},
                        :description "A game server deployment resource.",
                        :id "GameServerDeployment",
                        :type "object"},
 :TestIamPermissionsResponse {:id "TestIamPermissionsResponse",
                              :type "object",
                              :properties {:permissions {:description "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                                                         :items {:type "string"},
                                                         :type "array"}},
                              :description "Response message for `TestIamPermissions` method."},
 :OperationMetadata {:id "OperationMetadata",
                     :description "Represents the metadata of the long-running operation.",
                     :type "object",
                     :properties {:verb {:description "Output only. Name of the verb executed by the operation.",
                                         :readOnly true,
                                         :type "string"},
                                  :operationStatus {:readOnly true,
                                                    :type "object",
                                                    :description "Output only. Operation status for Game Services API operations. Operation status is in the form of key-value pairs where keys are resource IDs and the values show the status of the operation. In case of failures, the value includes an error code and error message.",
                                                    :additionalProperties {:$ref "OperationStatus"}},
                                  :endTime {:readOnly true,
                                            :type "string",
                                            :format "google-datetime",
                                            :description "Output only. The time the operation finished running."},
                                  :statusMessage {:readOnly true,
                                                  :type "string",
                                                  :description "Output only. Human-readable status of the operation, if any."},
                                  :createTime {:format "google-datetime",
                                               :type "string",
                                               :description "Output only. The time the operation was created.",
                                               :readOnly true},
                                  :unreachable {:readOnly true,
                                                :items {:type "string"},
                                                :description "Output only. List of Locations that could not be reached.",
                                                :type "array"},
                                  :requestedCancellation {:description "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                                                          :type "boolean",
                                                          :readOnly true},
                                  :apiVersion {:readOnly true,
                                               :type "string",
                                               :description "Output only. API version used to start the operation."},
                                  :target {:description "Output only. Server-defined resource path for the target of the operation.",
                                           :type "string",
                                           :readOnly true}}},
 :Expr {:properties {:location {:type "string",
                                :description "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."},
                     :description {:description "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
                                   :type "string"},
                     :expression {:type "string",
                                  :description "Textual representation of an expression in Common Expression Language syntax."},
                     :title {:type "string",
                             :description "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."}},
        :type "object",
        :description "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
        :id "Expr"},
 :Realm {:description "A realm resource.",
         :type "object",
         :id "Realm",
         :properties {:etag {:description "ETag of the resource.",
                             :type "string"},
                      :updateTime {:type "string",
                                   :format "google-datetime",
                                   :readOnly true,
                                   :description "Output only. The last-modified time."},
                      :labels {:description "The labels associated with this realm. Each label is a key-value pair.",
                               :type "object",
                               :additionalProperties {:type "string"}},
                      :createTime {:format "google-datetime",
                                   :readOnly true,
                                   :type "string",
                                   :description "Output only. The creation time."},
                      :name {:type "string",
                             :description "The resource name of the realm, in the following form: `projects/{project}/locations/{location}/realms/{realm}`. For example, `projects/my-project/locations/{location}/realms/my-realm`."},
                      :description {:type "string",
                                    :description "Human readable description of the realm."},
                      :timeZone {:type "string",
                                 :description "Required. Time zone where all policies targeting this realm are evaluated. The value of this field must be from the IANA time zone database: https://www.iana.org/time-zones."}}},
 :SpecSource {:id "SpecSource",
              :description "Encapsulates Agones fleet spec and Agones autoscaler spec sources.",
              :type "object",
              :properties {:gameServerConfigName {:description "The game server config resource. Uses the form: `projects/{project}/locations/{location}/gameServerDeployments/{deployment_id}/configs/{config_id}`.",
                                                  :type "string"},
                           :name {:type "string",
                                  :description "The name of the Agones leet config or Agones scaling config used to derive the Agones fleet or Agones autoscaler spec."}}},
 :Condition {:description "A condition to be met.",
             :properties {:values {:type "array",
                                   :description "The objects of the condition.",
                                   :items {:type "string"}},
                          :svc {:description "Trusted attributes discharged by the service.",
                                :type "string"},
                          :iam {:type "string",
                                :enum ["NO_ATTR"
                                       "AUTHORITY"
                                       "ATTRIBUTION"
                                       "SECURITY_REALM"
                                       "APPROVER"
                                       "JUSTIFICATION_TYPE"
                                       "CREDENTIALS_TYPE"
                                       "CREDS_ASSERTION"],
                                :description "Trusted attributes supplied by the IAM system.",
                                :enumDescriptions ["Default non-attribute."
                                                   "Either principal or (if present) authority selector."
                                                   "The principal (even if an authority selector is present), which must only be used for attribution, not authorization."
                                                   "Any of the security realms in the IAMContext (go/security-realms). When used with IN, the condition indicates \"any of the request's realms match one of the given values; with NOT_IN, \"none of the realms match any of the given values\". Note that a value can be: - 'self' (i.e., allow connections from clients that are in the same security realm, which is currently but not guaranteed to be campus-sized) - 'self:metro' (i.e., clients that are in the same metro) - 'self:cloud-region' (i.e., allow connections from clients that are in the same cloud region) - 'guardians' (i.e., allow connections from its guardian realms. See go/security-realms-glossary#guardian for more information.) - a realm (e.g., 'campus-abc') - a realm group (e.g., 'realms-for-borg-cell-xx', see: go/realm-groups) A match is determined by a realm group membership check performed by a RealmAclRep object (go/realm-acl-howto). It is not permitted to grant access based on the *absence* of a realm, so realm conditions can only be used in a \"positive\" context (e.g., ALLOW/IN or DENY/NOT_IN)."
                                                   "An approver (distinct from the requester) that has authorized this request. When used with IN, the condition indicates that one of the approvers associated with the request matches the specified principal, or is a member of the specified group. Approvers can only grant additional access, and are thus only used in a strictly positive context (e.g. ALLOW/IN or DENY/NOT_IN)."
                                                   "What types of justifications have been supplied with this request. String values should match enum names from security.credentials.JustificationType, e.g. \"MANUAL_STRING\". It is not permitted to grant access based on the *absence* of a justification, so justification conditions can only be used in a \"positive\" context (e.g., ALLOW/IN or DENY/NOT_IN). Multiple justifications, e.g., a Buganizer ID and a manually-entered reason, are normal and supported."
                                                   "What type of credentials have been supplied with this request. String values should match enum names from security_loas_l2.CredentialsType - currently, only CREDS_TYPE_EMERGENCY is supported. It is not permitted to grant access based on the *absence* of a credentials type, so the conditions can only be used in a \"positive\" context (e.g., ALLOW/IN or DENY/NOT_IN)."
                                                   "EXPERIMENTAL -- DO NOT USE. The conditions can only be used in a \"positive\" context (e.g., ALLOW/IN or DENY/NOT_IN)."]},
                          :op {:type "string",
                               :description "An operator to apply the subject with.",
                               :enum ["NO_OP"
                                      "EQUALS"
                                      "NOT_EQUALS"
                                      "IN"
                                      "NOT_IN"
                                      "DISCHARGED"],
                               :enumDescriptions ["Default no-op."
                                                  "DEPRECATED. Use IN instead."
                                                  "DEPRECATED. Use NOT_IN instead."
                                                  "The condition is true if the subject (or any element of it if it is a set) matches any of the supplied values."
                                                  "The condition is true if the subject (or every element of it if it is a set) matches none of the supplied values."
                                                  "Subject is discharged"]},
                          :sys {:enumDescriptions ["Default non-attribute type"
                                                   "Region of the resource"
                                                   "Service name"
                                                   "Resource name"
                                                   "IP address of the caller"],
                                :type "string",
                                :description "Trusted attributes supplied by any service that owns resources and uses the IAM system for access control.",
                                :enum ["NO_ATTR"
                                       "REGION"
                                       "SERVICE"
                                       "NAME"
                                       "IP"]}},
             :id "Condition",
             :type "object"},
 :GameServerConfig {:properties {:name {:type "string",
                                        :description "The resource name of the game server config, in the following form: `projects/{project}/locations/{location}/gameServerDeployments/{deployment}/configs/{config}`. For example, `projects/my-project/locations/global/gameServerDeployments/my-game/configs/my-config`."},
                                 :createTime {:readOnly true,
                                              :type "string",
                                              :description "Output only. The creation time.",
                                              :format "google-datetime"},
                                 :updateTime {:description "Output only. The last-modified time.",
                                              :type "string",
                                              :format "google-datetime",
                                              :readOnly true},
                                 :fleetConfigs {:items {:$ref "FleetConfig"},
                                                :type "array",
                                                :description "FleetConfig contains a list of Agones fleet specs. Only one FleetConfig is allowed."},
                                 :description {:type "string",
                                               :description "The description of the game server config."},
                                 :scalingConfigs {:description "The autoscaling settings.",
                                                  :type "array",
                                                  :items {:$ref "ScalingConfig"}},
                                 :labels {:additionalProperties {:type "string"},
                                          :description "The labels associated with this game server config. Each label is a key-value pair.",
                                          :type "object"}},
                    :description "A game server config resource.",
                    :id "GameServerConfig",
                    :type "object"},
 :PreviewUpdateGameServerClusterResponse {:properties {:targetState {:description "The target state.",
                                                                     :$ref "TargetState"},
                                                       :etag {:type "string",
                                                              :description "The ETag of the game server cluster."}},
                                          :id "PreviewUpdateGameServerClusterResponse",
                                          :type "object",
                                          :description "Response message for GameServerClustersService.PreviewUpdateGameServerCluster"},
 :TargetState {:type "object",
               :description "Encapsulates the Target state.",
               :id "TargetState",
               :properties {:details {:items {:$ref "TargetDetails"},
                                      :type "array",
                                      :description "Details about Agones fleets."}}},
 :ListOperationsResponse {:id "ListOperationsResponse",
                          :description "The response message for Operations.ListOperations.",
                          :type "object",
                          :properties {:operations {:items {:$ref "Operation"},
                                                    :type "array",
                                                    :description "A list of operations that matches the specified filter in the request."},
                                       :nextPageToken {:type "string",
                                                       :description "The standard List next-page token."}}},
 :Location {:id "Location",
            :description "A resource that represents Google Cloud Platform location.",
            :properties {:displayName {:type "string",
                                       :description "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."},
                         :name {:type "string",
                                :description "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"},
                         :labels {:description "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
                                  :additionalProperties {:type "string"},
                                  :type "object"},
                         :locationId {:type "string",
                                      :description "The canonical id for this location. For example: `\"us-east1\"`."},
                         :metadata {:additionalProperties {:type "any",
                                                           :description "Properties of the object. Contains field @type with type URL."},
                                    :description "Service-specific metadata. For example the available capacity at the given location.",
                                    :type "object"}},
            :type "object"},
 :CounterOptions {:type "object",
                  :properties {:field {:type "string",
                                       :description "The field value to attribute."},
                               :metric {:description "The metric to update.",
                                        :type "string"},
                               :customFields {:items {:$ref "CustomField"},
                                              :type "array",
                                              :description "Custom fields."}},
                  :id "CounterOptions",
                  :description "Increment a streamz counter with the specified metric and field names. Metric names should start with a '/', generally be lowercase-only, and end in \"_count\". Field names should not contain an initial slash. The actual exported metric names will have \"/iam/policy\" prepended. Field names correspond to IAM request parameters and field values are their respective values. Supported field names: - \"authority\", which is \"[token]\" if IAMContext.token is present, otherwise the value of IAMContext.authority_selector if present, and otherwise a representation of IAMContext.principal; or - \"iam_principal\", a representation of IAMContext.principal even if a token or authority selector is present; or - \"\" (empty string), resulting in a counter with no fields. Examples: counter { metric: \"/debug_access_count\" field: \"iam_principal\" } ==> increment counter /iam/policy/debug_access_count {iam_principal=[value of IAMContext.principal]}"},
 :TargetFleetDetails {:properties {:fleet {:$ref "TargetFleet",
                                           :description "Reference to target Agones fleet."},
                                   :autoscaler {:description "Reference to target Agones fleet autoscaling policy.",
                                                :$ref "TargetFleetAutoscaler"}},
                      :type "object",
                      :description "Details of the target Agones fleet.",
                      :id "TargetFleetDetails"},
 :LabelSelector {:properties {:labels {:type "object",
                                       :description "Resource labels for this selector.",
                                       :additionalProperties {:type "string"}}},
                 :description "The label selector, used to group labels on the resources.",
                 :id "LabelSelector",
                 :type "object"},
 :ScalingConfig {:properties {:schedules {:description "The schedules to which this Scaling Config applies.",
                                          :items {:$ref "Schedule"},
                                          :type "array"},
                              :selectors {:description "Labels used to identify the game server clusters to which this Agones scaling config applies. A game server cluster is subject to this Agones scaling config if its labels match any of the selector entries.",
                                          :items {:$ref "LabelSelector"},
                                          :type "array"},
                              :name {:description "Required. The name of the Scaling Config",
                                     :type "string"},
                              :fleetAutoscalerSpec {:type "string",
                                                    :description "Required. Agones fleet autoscaler spec. Example spec: https://agones.dev/site/docs/reference/fleetautoscaler/"}},
                 :type "object",
                 :description "Autoscaling config for an Agones fleet.",
                 :id "ScalingConfig"},
 :Policy {:description "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
          :type "object",
          :id "Policy",
          :properties {:bindings {:description "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member.",
                                  :items {:$ref "Binding"},
                                  :type "array"},
                       :rules {:description "If more than one rule is specified, the rules are applied in the following manner: - All matching LOG rules are always applied. - If any DENY/DENY_WITH_LOG rule matches, permission is denied. Logging will be applied if one or more matching rule requires logging. - Otherwise, if any ALLOW/ALLOW_WITH_LOG rule matches, permission is granted. Logging will be applied if one or more matching rule requires logging. - Otherwise, if no rule applies, permission is denied.",
                               :items {:$ref "Rule"},
                               :type "array"},
                       :etag {:description "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                              :format "byte",
                              :type "string"},
                       :version {:description "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                                 :type "integer",
                                 :format "int32"},
                       :iamOwned {:type "boolean"},
                       :auditConfigs {:type "array",
                                      :items {:$ref "AuditConfig"},
                                      :description "Specifies cloud audit logging configuration for this policy."}}},
 :ListGameServerClustersResponse {:type "object",
                                  :description "Response message for GameServerClustersService.ListGameServerClusters.",
                                  :properties {:unreachable {:type "array",
                                                             :items {:type "string"},
                                                             :description "List of locations that could not be reached."},
                                               :gameServerClusters {:items {:$ref "GameServerCluster"},
                                                                    :description "The list of game server clusters.",
                                                                    :type "array"},
                                               :nextPageToken {:type "string",
                                                               :description "Token to retrieve the next page of results, or empty if there are no more results in the list."}},
                                  :id "ListGameServerClustersResponse"},
 :Status {:type "object",
          :description "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
          :id "Status",
          :properties {:details {:description "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                                 :items {:type "object",
                                         :additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                                :type "any"}},
                                 :type "array"},
                       :code {:type "integer",
                              :description "The status code, which should be an enum value of google.rpc.Code.",
                              :format "int32"},
                       :message {:type "string",
                                 :description "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."}}}}
