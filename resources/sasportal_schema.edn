{:SasPortalDeviceMetadata {:properties {},
                           :type "object",
                           :description "Device data overridable by both SAS Portal and registration requests.",
                           :id "SasPortalDeviceMetadata"},
 :SasPortalSignDeviceRequest {:type "object",
                              :id "SasPortalSignDeviceRequest",
                              :description "Request for SignDevice.",
                              :properties {:device {:$ref "SasPortalDevice",
                                                    :description "Required. The device to sign. The device fields name, fcc_id and serial_number must be set. The user_id field must be set."}}},
 :SasPortalDeviceModel {:type "object",
                        :id "SasPortalDeviceModel",
                        :properties {:name {:type "string",
                                            :description "The name of the device model."},
                                     :vendor {:description "The name of the device vendor.",
                                              :type "string"},
                                     :hardwareVersion {:description "The hardware version of the device.",
                                                       :type "string"},
                                     :firmwareVersion {:type "string",
                                                       :description "The firmware version of the device."},
                                     :softwareVersion {:type "string",
                                                       :description "The software version of the device."}},
                        :description "Information about the model of the device."},
 :SasPortalGetPolicyRequest {:properties {:resource {:type "string",
                                                     :description "Required. The resource for which the policy is being requested."}},
                             :description "Request message for `GetPolicy` method.",
                             :type "object",
                             :id "SasPortalGetPolicyRequest"},
 :SasPortalNode {:type "object",
                 :properties {:displayName {:type "string",
                                            :description "The node's display name."},
                              :sasUserIds {:type "array",
                                           :description "User ids used by the devices belonging to this node.",
                                           :items {:type "string"}},
                              :name {:description "Output only. Resource name.",
                                     :type "string"}},
                 :description "The Node.",
                 :id "SasPortalNode"},
 :SasPortalEmpty {:type "object",
                  :properties {},
                  :description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
                  :id "SasPortalEmpty"},
 :SasPortalGenerateSecretRequest {:id "SasPortalGenerateSecretRequest",
                                  :type "object",
                                  :properties {},
                                  :description "Request for GenerateSecret."},
 :SasPortalOperation {:description "This resource represents a long-running operation that is the result of a network API call.",
                      :properties {:response {:type "object",
                                              :additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                                     :type "any"},
                                              :description "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."},
                                   :metadata {:type "object",
                                              :additionalProperties {:type "any",
                                                                     :description "Properties of the object. Contains field @type with type URL."},
                                              :description "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."},
                                   :error {:$ref "SasPortalStatus",
                                           :description "The error result of the operation in case of failure or cancellation."},
                                   :name {:type "string",
                                          :description "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."},
                                   :done {:description "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                                          :type "boolean"}},
                      :type "object",
                      :id "SasPortalOperation"},
 :SasPortalValidateInstallerRequest {:description "Request for ValidateInstaller.",
                                     :id "SasPortalValidateInstallerRequest",
                                     :type "object",
                                     :properties {:encodedSecret {:description "Required. JSON Web Token signed using a CPI private key. Payload must include a \"secret\" claim whose value is the secret.",
                                                                  :type "string"},
                                                  :installerId {:description "Required. Unique installer id (CPI ID) from the Certified Professional Installers database.",
                                                                :type "string"},
                                                  :secret {:type "string",
                                                           :description "Required. Secret returned by the GenerateSecret."}}},
 :SasPortalValidateInstallerResponse {:id "SasPortalValidateInstallerResponse",
                                      :type "object",
                                      :properties {},
                                      :description "Response for ValidateInstaller."},
 :SasPortalDpaMoveList {:description "An entry in a DPA's move list.",
                        :id "SasPortalDpaMoveList",
                        :properties {:frequencyRange {:description "The frequency range that the move list affects.",
                                                      :$ref "SasPortalFrequencyRange"},
                                     :dpaId {:type "string",
                                             :description "The ID of the DPA."}},
                        :type "object"},
 :SasPortalSetPolicyRequest {:properties {:resource {:type "string",
                                                     :description "Required. The resource for which the policy is being specified. This policy replaces any existing policy."},
                                          :disableNotification {:description "Optional. Set the field as true when we would like to disable the onboarding notification.",
                                                                :type "boolean"},
                                          :policy {:description "Required. The policy to be applied to the `resource`.",
                                                   :$ref "SasPortalPolicy"}},
                             :description "Request message for `SetPolicy` method.",
                             :type "object",
                             :id "SasPortalSetPolicyRequest"},
 :SasPortalPolicy {:type "object",
                   :description "Defines an access control policy to the resources.",
                   :properties {:assignments {:description "List of assignments",
                                              :items {:$ref "SasPortalAssignment"},
                                              :type "array"},
                                :etag {:type "string",
                                       :format "byte",
                                       :description "The etag is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the etag in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An etag is returned in the response to GetPolicy, and systems are expected to put that etag in the request to SetPolicy to ensure that their change will be applied to the same version of the policy. If no etag is provided in the call to GetPolicy, then the existing policy is overwritten blindly."}},
                   :id "SasPortalPolicy"},
 :SasPortalUpdateSignedDeviceRequest {:type "object",
                                      :description "Request for UpdateSignedDevice.",
                                      :properties {:encodedDevice {:format "byte",
                                                                   :type "string",
                                                                   :description "Required. The JSON Web Token signed using a CPI private key. Payload must be the JSON encoding of the device. The user_id field must be set."},
                                                   :installerId {:type "string",
                                                                 :description "Required. Unique installer ID (CPI ID) from the Certified Professional Installers database."}},
                                      :id "SasPortalUpdateSignedDeviceRequest"},
 :SasPortalTestPermissionsResponse {:description "Response message for `TestPermissions` method.",
                                    :properties {:permissions {:type "array",
                                                               :description "A set of permissions that the caller is allowed.",
                                                               :items {:type "string"}}},
                                    :type "object",
                                    :id "SasPortalTestPermissionsResponse"},
 :SasPortalMoveDeviceRequest {:properties {:destination {:type "string",
                                                         :description "Required. The name of the new parent resource node or customer to reparent the device under."}},
                              :id "SasPortalMoveDeviceRequest",
                              :type "object",
                              :description "Request for MoveDevice."},
 :SasPortalStatus {:type "object",
                   :id "SasPortalStatus",
                   :properties {:code {:format "int32",
                                       :type "integer",
                                       :description "The status code, which should be an enum value of google.rpc.Code."},
                                :details {:type "array",
                                          :description "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                                          :items {:type "object",
                                                  :additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                                         :type "any"}}},
                                :message {:description "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
                                          :type "string"}},
                   :description "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."},
 :SasPortalListCustomersResponse {:id "SasPortalListCustomersResponse",
                                  :type "object",
                                  :description "Response for `ListCustomers`.",
                                  :properties {:nextPageToken {:description "A pagination token returned from a previous call to ListCustomers that indicates from where listing should continue. If the field is missing or empty, it means there are no more customers.",
                                                               :type "string"},
                                               :customers {:description "The list of customers that match the request.",
                                                           :items {:$ref "SasPortalCustomer"},
                                                           :type "array"}}},
 :SasPortalInstallationParams {:id "SasPortalInstallationParams",
                               :description "Information about the device installation parameters.",
                               :type "object",
                               :properties {:antennaDowntilt {:type "integer",
                                                              :format "int32",
                                                              :description "Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices."},
                                            :cpeCbsdIndication {:description "If present, this parameter specifies whether the CBSD is a CPE-CBSD or not.",
                                                                :type "boolean"},
                                            :indoorDeployment {:type "boolean",
                                                               :description "Whether the device antenna is indoor or not. `true`: indoor. `false`: outdoor."},
                                            :eirpCapability {:type "integer",
                                                             :format "int32",
                                                             :description "This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category."},
                                            :heightType {:enum ["HEIGHT_TYPE_UNSPECIFIED"
                                                                "HEIGHT_TYPE_AGL"
                                                                "HEIGHT_TYPE_AMSL"],
                                                         :description "Specifies how the height is measured.",
                                                         :enumDescriptions ["Unspecified height type."
                                                                            "AGL height is measured relative to the ground level."
                                                                            "AMSL height is measured relative to the mean sea level."],
                                                         :type "string"},
                                            :antennaGain {:format "int32",
                                                          :description "Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive.",
                                                          :type "integer"},
                                            :antennaModel {:type "string",
                                                           :description "If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets."},
                                            :horizontalAccuracy {:type "number",
                                                                 :format "double",
                                                                 :description "A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters."},
                                            :longitude {:format "double",
                                                        :description "Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian.",
                                                        :type "number"},
                                            :antennaBeamwidth {:type "integer",
                                                               :format "int32",
                                                               :description "3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices."},
                                            :verticalAccuracy {:type "number",
                                                               :format "double",
                                                               :description "A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters."},
                                            :latitude {:type "number",
                                                       :format "double",
                                                       :description "Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator."},
                                            :antennaAzimuth {:format "int32",
                                                             :description "Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices.",
                                                             :type "integer"},
                                            :height {:format "double",
                                                     :type "number",
                                                     :description "Device antenna height in meters. When the `heightType` parameter value is \"AGL\", the antenna height should be given relative to ground level. When the `heightType` parameter value is \"AMSL\", it is given with respect to WGS84 datum."}}},
 :SasPortalListDeploymentsResponse {:id "SasPortalListDeploymentsResponse",
                                    :description "Response for ListDeployments.",
                                    :type "object",
                                    :properties {:nextPageToken {:description "A pagination token returned from a previous call to ListDeployments that indicates from where listing should continue. If the field is missing or empty, it means there are no more deployments.",
                                                                 :type "string"},
                                                 :deployments {:items {:$ref "SasPortalDeployment"},
                                                               :description "The deployments that match the request.",
                                                               :type "array"}}},
 :SasPortalAssignment {:properties {:members {:items {:type "string"},
                                              :type "array",
                                              :description "The identities the role is assigned to. It can have the following values: * `{user_email}`: An email address that represents a specific Google account. For example: `alice@gmail.com`. * `{group_email}`: An email address that represents a Google group. For example, `viewers@gmail.com`."},
                                    :role {:type "string",
                                           :description "Required. Role that is assigned to `members`."}},
                       :id "SasPortalAssignment",
                       :type "object",
                       :description "Associates `members` with a `role`."},
 :SasPortalCustomer {:properties {:sasUserIds {:items {:type "string"},
                                               :description "User IDs used by the devices belonging to this customer.",
                                               :type "array"},
                                  :name {:type "string",
                                         :description "Output only. Resource name of the customer."},
                                  :displayName {:description "Required. Name of the organization that the customer entity represents.",
                                                :type "string"}},
                     :id "SasPortalCustomer",
                     :description "Entity representing a SAS customer.",
                     :type "object"},
 :SasPortalDeviceGrant {:type "object",
                        :properties {:frequencyRange {:description "The transmission frequency range.",
                                                      :$ref "SasPortalFrequencyRange"},
                                     :maxEirp {:description "Maximum Equivalent Isotropically Radiated Power (EIRP) permitted by the grant. The maximum EIRP is in units of dBm/MHz. The value of `maxEirp` represents the average (RMS) EIRP that would be measured by the procedure defined in FCC part 96.41(e)(3).",
                                               :type "number",
                                               :format "double"},
                                     :moveList {:items {:$ref "SasPortalDpaMoveList"},
                                                :description "The DPA move lists on which this grant appears.",
                                                :type "array"},
                                     :grantId {:description "Grant Id.",
                                               :type "string"},
                                     :expireTime {:format "google-datetime",
                                                  :type "string",
                                                  :description "The expiration time of the grant."},
                                     :channelType {:enumDescriptions [""
                                                                      ""
                                                                      ""],
                                                   :description "Type of channel used.",
                                                   :type "string",
                                                   :enum ["CHANNEL_TYPE_UNSPECIFIED"
                                                          "CHANNEL_TYPE_GAA"
                                                          "CHANNEL_TYPE_PAL"]},
                                     :state {:enum ["GRANT_STATE_UNSPECIFIED"
                                                    "GRANT_STATE_GRANTED"
                                                    "GRANT_STATE_TERMINATED"
                                                    "GRANT_STATE_SUSPENDED"
                                                    "GRANT_STATE_AUTHORIZED"
                                                    "GRANT_STATE_EXPIRED"],
                                             :enumDescriptions [""
                                                                "The grant has been granted but the device is not heartbeating on it."
                                                                "The grant has been terminated by the SAS."
                                                                "The grant has been suspended by the SAS."
                                                                "The device is currently transmitting."
                                                                "The grant has expired."],
                                             :type "string",
                                             :description "State of the grant."},
                                     :suspensionReason {:items {:type "string"},
                                                        :type "array",
                                                        :description "If the grant is suspended, the reason(s) for suspension."}},
                        :description "Device grant. It is an authorization provided by the Spectrum Access System to a device to transmit using specified operating parameters after a successful heartbeat by the device.",
                        :id "SasPortalDeviceGrant"},
 :SasPortalMoveNodeRequest {:description "Request for MoveNode.",
                            :id "SasPortalMoveNodeRequest",
                            :properties {:destination {:type "string",
                                                       :description "Required. The name of the new parent resource node or customer to reparent the node under."}},
                            :type "object"},
 :SasPortalMoveDeploymentRequest {:description "Request for MoveDeployment.",
                                  :id "SasPortalMoveDeploymentRequest",
                                  :type "object",
                                  :properties {:destination {:description "Required. The name of the new parent resource node or customer to reparent the deployment under.",
                                                             :type "string"}}},
 :SasPortalListDevicesResponse {:description "Response for ListDevices.",
                                :type "object",
                                :properties {:devices {:items {:$ref "SasPortalDevice"},
                                                       :description "The devices that match the request.",
                                                       :type "array"},
                                             :nextPageToken {:type "string",
                                                             :description "A pagination token returned from a previous call to ListDevices that indicates from where listing should continue. If the field is missing or empty, it means there is no more devices."}},
                                :id "SasPortalListDevicesResponse"},
 :SasPortalDeviceAirInterface {:id "SasPortalDeviceAirInterface",
                               :type "object",
                               :properties {:supportedSpec {:type "string",
                                                            :description "Optional. This field is related to the `radioTechnology` and provides the air interface specification that the CBSD is compliant with at the time of registration."},
                                            :radioTechnology {:description "Conditional. This field specifies the radio access technology that is used for the CBSD.",
                                                              :type "string",
                                                              :enumDescriptions [""
                                                                                 ""
                                                                                 ""
                                                                                 ""
                                                                                 ""
                                                                                 ""
                                                                                 ""
                                                                                 ""
                                                                                 ""],
                                                              :enum ["RADIO_TECHNOLOGY_UNSPECIFIED"
                                                                     "E_UTRA"
                                                                     "CAMBIUM_NETWORKS"
                                                                     "FOUR_G_BBW_SAA_1"
                                                                     "NR"
                                                                     "DOODLE_CBRS"
                                                                     "CW"
                                                                     "REDLINE"
                                                                     "TARANA_WIRELESS"]}},
                               :description "Information about the device's air interface."},
 :SasPortalDevice {:properties {:serialNumber {:description "A serial number assigned to the device by the device manufacturer.",
                                               :type "string"},
                                :activeConfig {:description "Output only. Current configuration of the device as registered to the SAS.",
                                               :$ref "SasPortalDeviceConfig"},
                                :grantRangeAllowlists {:type "array",
                                                       :description "Only ranges within the allowlists are available for new grants.",
                                                       :items {:$ref "SasPortalFrequencyRange"}},
                                :displayName {:description "Device display name.",
                                              :type "string"},
                                :name {:description "Output only. The resource path name.",
                                       :type "string"},
                                :state {:enumDescriptions ["Unspecified state."
                                                           "Device created in the SAS Portal, however, not yet registered with SAS."
                                                           "Device registered with SAS."
                                                           "Device de-registered with SAS."],
                                        :type "string",
                                        :description "Output only. Device state.",
                                        :enum ["DEVICE_STATE_UNSPECIFIED"
                                               "RESERVED"
                                               "REGISTERED"
                                               "DEREGISTERED"]},
                                :deviceMetadata {:$ref "SasPortalDeviceMetadata",
                                                 :description "Device parameters that can be overridden by both SAS Portal and SAS registration requests."},
                                :grants {:description "Output only. Grants held by the device.",
                                         :items {:$ref "SasPortalDeviceGrant"},
                                         :type "array"},
                                :preloadedConfig {:$ref "SasPortalDeviceConfig",
                                                  :description "Configuration of the device, as specified via SAS Portal API."},
                                :currentChannels {:description "Output only. Current channels with scores.",
                                                  :items {:$ref "SasPortalChannelWithScore"},
                                                  :readOnly true,
                                                  :type "array"},
                                :fccId {:type "string",
                                        :description "The FCC identifier of the device."}},
                   :id "SasPortalDevice",
                   :type "object"},
 :SasPortalDeviceConfig {:id "SasPortalDeviceConfig",
                         :description "Information about the device configuration.",
                         :type "object",
                         :properties {:category {:enum ["DEVICE_CATEGORY_UNSPECIFIED"
                                                        "DEVICE_CATEGORY_A"
                                                        "DEVICE_CATEGORY_B"],
                                                 :type "string",
                                                 :enumDescriptions ["Unspecified device category."
                                                                    "Category A."
                                                                    "Category B."],
                                                 :description "FCC category of the device."},
                                      :installationParams {:$ref "SasPortalInstallationParams",
                                                           :description "Installation parameters for the device."},
                                      :state {:enum ["DEVICE_CONFIG_STATE_UNSPECIFIED"
                                                     "DRAFT"
                                                     "FINAL"],
                                              :description "State of the configuration.",
                                              :type "string",
                                              :enumDescriptions [""
                                                                 ""
                                                                 ""]},
                                      :measurementCapabilities {:type "array",
                                                                :description "Measurement reporting capabilities of the device.",
                                                                :items {:enum ["MEASUREMENT_CAPABILITY_UNSPECIFIED"
                                                                               "MEASUREMENT_CAPABILITY_RECEIVED_POWER_WITH_GRANT"
                                                                               "MEASUREMENT_CAPABILITY_RECEIVED_POWER_WITHOUT_GRANT"],
                                                                        :type "string",
                                                                        :enumDescriptions [""
                                                                                           ""
                                                                                           ""]}},
                                      :updateTime {:format "google-datetime",
                                                   :description "Output only. The last time the device configuration was edited.",
                                                   :type "string"},
                                      :callSign {:type "string",
                                                 :description "The call sign of the device operator."},
                                      :userId {:description "The identifier of a device user.",
                                               :type "string"},
                                      :isSigned {:type "boolean",
                                                 :description "Output only. Whether the configuration has been signed by a CPI."},
                                      :airInterface {:$ref "SasPortalDeviceAirInterface",
                                                     :description "Information about this device's air interface."},
                                      :model {:$ref "SasPortalDeviceModel",
                                              :description "Information about this device model."}}},
 :SasPortalGenerateSecretResponse {:description "Response for GenerateSecret.",
                                   :type "object",
                                   :properties {:secret {:type "string",
                                                         :description "The secret generated by the string and used by ValidateInstaller."}},
                                   :id "SasPortalGenerateSecretResponse"},
 :SasPortalListNodesResponse {:type "object",
                              :id "SasPortalListNodesResponse",
                              :description "Response for ListNodes.",
                              :properties {:nodes {:items {:$ref "SasPortalNode"},
                                                   :type "array",
                                                   :description "The nodes that match the request."},
                                           :nextPageToken {:description "A pagination token returned from a previous call to ListNodes that indicates from where listing should continue. If the field is missing or empty, it means there is no more nodes.",
                                                           :type "string"}}},
 :SasPortalDeployment {:description "The Deployment.",
                       :type "object",
                       :id "SasPortalDeployment",
                       :properties {:displayName {:description "The deployment's display name.",
                                                  :type "string"},
                                    :defaultBillingMode {:enumDescriptions ["Billing mode has not been specified."
                                                                            "Price is based on category of CBSD: Category A, Category B registered with SAS."
                                                                            "Price is based on type of CBSD: Base station or CPE."],
                                                         :description "Default billing mode for the deployment and devices under it.",
                                                         :enum ["BILLING_MODE_UNSPECIFIED"
                                                                "MOBILE"
                                                                "FIXED_WIRELESS"],
                                                         :type "string"},
                                    :allowedBillingModes {:description "The allowed billing modes under this deployment.",
                                                          :type "array",
                                                          :items {:enum ["BILLING_MODE_UNSPECIFIED"
                                                                         "MOBILE"
                                                                         "FIXED_WIRELESS"],
                                                                  :type "string",
                                                                  :enumDescriptions ["Billing mode has not been specified."
                                                                                     "Price is based on category of CBSD: Category A, Category B registered with SAS."
                                                                                     "Price is based on type of CBSD: Base station or CPE."]}},
                                    :name {:type "string",
                                           :readOnly true,
                                           :description "Output only. Resource name."},
                                    :frns {:items {:type "string"},
                                           :type "array",
                                           :readOnly true,
                                           :description "Output only. The FRNs copied from its direct parent."},
                                    :sasUserIds {:items {:type "string"},
                                                 :type "array",
                                                 :description "User ID used by the devices belonging to this deployment. Each deployment should be associated with one unique user ID."}}},
 :SasPortalCreateSignedDeviceRequest {:description "Request for CreateSignedDevice.",
                                      :properties {:installerId {:type "string",
                                                                 :description "Required. Unique installer id (CPI ID) from the Certified Professional Installers database."},
                                                   :encodedDevice {:type "string",
                                                                   :description "Required. JSON Web Token signed using a CPI private key. Payload must be the JSON encoding of the device. The user_id field must be set.",
                                                                   :format "byte"}},
                                      :type "object",
                                      :id "SasPortalCreateSignedDeviceRequest"},
 :SasPortalTestPermissionsRequest {:id "SasPortalTestPermissionsRequest",
                                   :type "object",
                                   :description "Request message for `TestPermissions` method.",
                                   :properties {:resource {:description "Required. The resource for which the permissions are being requested.",
                                                           :type "string"},
                                                :permissions {:description "The set of permissions to check for the `resource`.",
                                                              :items {:type "string"},
                                                              :type "array"}}},
 :SasPortalFrequencyRange {:description "Frequency range from `low_frequency` to `high_frequency`.",
                           :type "object",
                           :id "SasPortalFrequencyRange",
                           :properties {:lowFrequencyMhz {:format "double",
                                                          :type "number",
                                                          :description "The lowest frequency of the frequency range in MHz."},
                                        :highFrequencyMhz {:description "The highest frequency of the frequency range in MHz.",
                                                           :format "double",
                                                           :type "number"}}},
 :SasPortalChannelWithScore {:type "object",
                             :id "SasPortalChannelWithScore",
                             :properties {:frequencyRange {:description "The frequency range of the channel.",
                                                           :$ref "SasPortalFrequencyRange"},
                                          :score {:format "double",
                                                  :type "number",
                                                  :description "The channel score, normalized to be in [0,100]."}},
                             :description "The channel with score."}}
