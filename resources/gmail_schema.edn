{:Label {:id "Label",
         :description "Labels are used to categorize messages and threads within the user's mailbox. The maximum number of labels supported for a user's mailbox is 10,000.",
         :type "object",
         :properties {:threadsUnread {:description "The number of unread threads with the label.",
                                      :type "integer",
                                      :format "int32"},
                      :threadsTotal {:description "The total number of threads with the label.",
                                     :type "integer",
                                     :format "int32"},
                      :messagesTotal {:description "The total number of messages with the label.",
                                      :type "integer",
                                      :format "int32"},
                      :labelListVisibility {:description "The visibility of the label in the label list in the Gmail web interface.",
                                            :annotations {:required ["gmail.users.labels.create"
                                                                     "gmail.users.labels.update"]},
                                            :type "string",
                                            :enumDescriptions ["Show the label in the label list."
                                                               "Show the label if there are any unread messages with that label."
                                                               "Do not show the label in the label list."],
                                            :enum ["labelShow"
                                                   "labelShowIfUnread"
                                                   "labelHide"]},
                      :color {:description "The color to assign to the label. Color is only available for labels that have their `type` set to `user`.",
                              :$ref "LabelColor"},
                      :messagesUnread {:description "The number of unread messages with the label.",
                                       :type "integer",
                                       :format "int32"},
                      :name {:description "The display name of the label.",
                             :annotations {:required ["gmail.users.labels.create"
                                                      "gmail.users.labels.update"]},
                             :type "string"},
                      :messageListVisibility {:description "The visibility of messages with this label in the message list in the Gmail web interface.",
                                              :annotations {:required ["gmail.users.labels.create"
                                                                       "gmail.users.labels.update"]},
                                              :type "string",
                                              :enumDescriptions ["Show the label in the message list."
                                                                 "Do not show the label in the message list."],
                                              :enum ["show" "hide"]},
                      :type {:description "The owner type for the label. User labels are created by the user and can be modified and deleted by the user and can be applied to any message or thread. System labels are internally created and cannot be added, modified, or deleted. System labels may be able to be applied to or removed from messages and threads under some circumstances but this is not guaranteed. For example, users can apply and remove the `INBOX` and `UNREAD` labels from messages and threads, but cannot apply or remove the `DRAFTS` or `SENT` labels from messages or threads.",
                             :type "string",
                             :enumDescriptions ["Labels created by Gmail."
                                                "Custom labels created by the user or application."],
                             :enum ["system" "user"]},
                      :id {:description "The immutable ID of the label.",
                           :annotations {:required ["gmail.users.labels.update"]},
                           :type "string"}}},
 :ListDelegatesResponse {:id "ListDelegatesResponse",
                         :description "Response for the ListDelegates method.",
                         :type "object",
                         :properties {:delegates {:description "List of the user's delegates (with any verification status). If an account doesn't have delegates, this field doesn't appear.",
                                                  :type "array",
                                                  :items {:$ref "Delegate"}}}},
 :VacationSettings {:id "VacationSettings",
                    :description "Vacation auto-reply settings for an account. These settings correspond to the \"Vacation responder\" feature in the web interface.",
                    :type "object",
                    :properties {:enableAutoReply {:description "Flag that controls whether Gmail automatically replies to messages.",
                                                   :type "boolean"},
                                 :responseSubject {:description "Optional text to prepend to the subject line in vacation responses. In order to enable auto-replies, either the response subject or the response body must be nonempty.",
                                                   :type "string"},
                                 :responseBodyPlainText {:description "Response body in plain text format. If both `response_body_plain_text` and `response_body_html` are specified, `response_body_html` will be used.",
                                                         :type "string"},
                                 :responseBodyHtml {:description "Response body in HTML format. Gmail will sanitize the HTML before storing it. If both `response_body_plain_text` and `response_body_html` are specified, `response_body_html` will be used.",
                                                    :type "string"},
                                 :restrictToContacts {:description "Flag that determines whether responses are sent to recipients who are not in the user's list of contacts.",
                                                      :type "boolean"},
                                 :restrictToDomain {:description "Flag that determines whether responses are sent to recipients who are outside of the user's domain. This feature is only available for Google Workspace users.",
                                                    :type "boolean"},
                                 :startTime {:description "An optional start time for sending auto-replies (epoch ms). When this is specified, Gmail will automatically reply only to messages that it receives after the start time. If both `startTime` and `endTime` are specified, `startTime` must precede `endTime`.",
                                             :type "string",
                                             :format "int64"},
                                 :endTime {:description "An optional end time for sending auto-replies (epoch ms). When this is specified, Gmail will automatically reply only to messages that it receives before the end time. If both `startTime` and `endTime` are specified, `startTime` must precede `endTime`.",
                                           :type "string",
                                           :format "int64"}}},
 :ListSendAsResponse {:id "ListSendAsResponse",
                      :description "Response for the ListSendAs method.",
                      :type "object",
                      :properties {:sendAs {:description "List of send-as aliases.",
                                            :type "array",
                                            :items {:$ref "SendAs"}}}},
 :ListHistoryResponse {:id "ListHistoryResponse",
                       :type "object",
                       :properties {:history {:description "List of history records. Any `messages` contained in the response will typically only have `id` and `threadId` fields populated.",
                                              :type "array",
                                              :items {:$ref "History"}},
                                    :nextPageToken {:description "Page token to retrieve the next page of results in the list.",
                                                    :type "string"},
                                    :historyId {:description "The ID of the mailbox's current history record.",
                                                :type "string",
                                                :format "uint64"}}},
 :ListCseIdentitiesResponse {:id "ListCseIdentitiesResponse",
                             :type "object",
                             :properties {:cseIdentities {:description "One page of the list of CSE identities configured for the user.",
                                                          :type "array",
                                                          :items {:$ref "CseIdentity"}},
                                          :nextPageToken {:description "Pagination token to be passed to a subsequent ListCseIdentities call in order to retrieve the next page of identities. If this value is not returned or is the empty string, then no further pages remain.",
                                                          :type "string"}}},
 :HistoryMessageAdded {:id "HistoryMessageAdded",
                       :type "object",
                       :properties {:message {:$ref "Message"}}},
 :FilterCriteria {:id "FilterCriteria",
                  :description "Message matching criteria.",
                  :type "object",
                  :properties {:excludeChats {:description "Whether the response should exclude chats.",
                                              :type "boolean"},
                               :hasAttachment {:description "Whether the message has any attachment.",
                                               :type "boolean"},
                               :sizeComparison {:description "How the message size in bytes should be in relation to the size field.",
                                                :type "string",
                                                :enumDescriptions [""
                                                                   "Find messages smaller than the given size."
                                                                   "Find messages larger than the given size."],
                                                :enum ["unspecified"
                                                       "smaller"
                                                       "larger"]},
                               :size {:description "The size of the entire RFC822 message in bytes, including all headers and attachments.",
                                      :type "integer",
                                      :format "int32"},
                               :negatedQuery {:description "Only return messages not matching the specified query. Supports the same query format as the Gmail search box. For example, `\"from:someuser@example.com rfc822msgid: is:unread\"`.",
                                              :type "string"},
                               :from {:description "The sender's display name or email address.",
                                      :type "string"},
                               :query {:description "Only return messages matching the specified query. Supports the same query format as the Gmail search box. For example, `\"from:someuser@example.com rfc822msgid: is:unread\"`.",
                                       :type "string"},
                               :subject {:description "Case-insensitive phrase found in the message's subject. Trailing and leading whitespace are be trimmed and adjacent spaces are collapsed.",
                                         :type "string"},
                               :to {:description "The recipient's display name or email address. Includes recipients in the \"to\", \"cc\", and \"bcc\" header fields. You can use simply the local part of the email address. For example, \"example\" and \"example@\" both match \"example@gmail.com\". This field is case-insensitive.",
                                    :type "string"}}},
 :BatchModifyMessagesRequest {:id "BatchModifyMessagesRequest",
                              :type "object",
                              :properties {:ids {:description "The IDs of the messages to modify. There is a limit of 1000 ids per request.",
                                                 :type "array",
                                                 :items {:type "string"}},
                                           :addLabelIds {:description "A list of label IDs to add to messages.",
                                                         :type "array",
                                                         :items {:type "string"}},
                                           :removeLabelIds {:description "A list of label IDs to remove from messages.",
                                                            :type "array",
                                                            :items {:type "string"}}}},
 :ListThreadsResponse {:id "ListThreadsResponse",
                       :type "object",
                       :properties {:threads {:description "List of threads. Note that each thread resource does not contain a list of `messages`. The list of `messages` for a given thread can be fetched using the threads.get method.",
                                              :type "array",
                                              :items {:$ref "Thread"}},
                                    :nextPageToken {:description "Page token to retrieve the next page of results in the list.",
                                                    :type "string"},
                                    :resultSizeEstimate {:description "Estimated total number of results.",
                                                         :type "integer",
                                                         :format "uint32"}}},
 :EnableCseKeyPairRequest {:id "EnableCseKeyPairRequest",
                           :description "Requests to turn on a client-side encryption key pair.",
                           :type "object",
                           :properties {}},
 :SignAndEncryptKeyPairs {:id "SignAndEncryptKeyPairs",
                          :description "The configuration of a CSE identity that uses different key pairs for signing and encryption.",
                          :type "object",
                          :properties {:signingKeyPairId {:description "The ID of the CseKeyPair that signs outgoing mail.",
                                                          :type "string"},
                                       :encryptionKeyPairId {:description "The ID of the CseKeyPair that encrypts signed outgoing mail.",
                                                             :type "string"}}},
 :Filter {:id "Filter",
          :description "Resource definition for Gmail filters. Filters apply to specific messages instead of an entire email thread.",
          :type "object",
          :properties {:id {:description "The server assigned ID of the filter.",
                            :type "string"},
                       :criteria {:description "Matching criteria for the filter.",
                                  :$ref "FilterCriteria"},
                       :action {:description "Action that the filter performs.",
                                :$ref "FilterAction"}}},
 :Message {:id "Message",
           :description "An email message.",
           :type "object",
           :properties {:threadId {:description "The ID of the thread the message belongs to. To add a message or draft to a thread, the following criteria must be met: 1. The requested `threadId` must be specified on the `Message` or `Draft.Message` you supply with your request. 2. The `References` and `In-Reply-To` headers must be set in compliance with the [RFC 2822](https://tools.ietf.org/html/rfc2822) standard. 3. The `Subject` headers must match. ",
                                   :type "string"},
                        :payload {:description "The parsed email structure in the message parts.",
                                  :$ref "MessagePart"},
                        :historyId {:description "The ID of the last history record that modified this message.",
                                    :type "string",
                                    :format "uint64"},
                        :raw {:description "The entire email message in an RFC 2822 formatted and base64url encoded string. Returned in `messages.get` and `drafts.get` responses when the `format=RAW` parameter is supplied.",
                              :annotations {:required ["gmail.users.drafts.create"
                                                       "gmail.users.drafts.update"
                                                       "gmail.users.messages.insert"
                                                       "gmail.users.messages.send"]},
                              :type "string",
                              :format "byte"},
                        :labelIds {:description "List of IDs of labels applied to this message.",
                                   :type "array",
                                   :items {:type "string"}},
                        :snippet {:description "A short part of the message text.",
                                  :type "string"},
                        :id {:description "The immutable ID of the message.",
                             :type "string"},
                        :sizeEstimate {:description "Estimated size in bytes of the message.",
                                       :type "integer",
                                       :format "int32"},
                        :internalDate {:description "The internal message creation timestamp (epoch ms), which determines ordering in the inbox. For normal SMTP-received email, this represents the time the message was originally accepted by Google, which is more reliable than the `Date` header. However, for API-migrated mail, it can be configured by client to be based on the `Date` header.",
                                       :type "string",
                                       :format "int64"}}},
 :ImapSettings {:id "ImapSettings",
                :description "IMAP settings for an account.",
                :type "object",
                :properties {:enabled {:description "Whether IMAP is enabled for the account.",
                                       :type "boolean"},
                             :autoExpunge {:description "If this value is true, Gmail will immediately expunge a message when it is marked as deleted in IMAP. Otherwise, Gmail will wait for an update from the client before expunging messages marked as deleted.",
                                           :type "boolean"},
                             :expungeBehavior {:description "The action that will be executed on a message when it is marked as deleted and expunged from the last visible IMAP folder.",
                                               :type "string",
                                               :enumDescriptions ["Unspecified behavior."
                                                                  "Archive messages marked as deleted."
                                                                  "Move messages marked as deleted to the trash."
                                                                  "Immediately and permanently delete messages marked as deleted. The expunged messages cannot be recovered."],
                                               :enum ["expungeBehaviorUnspecified"
                                                      "archive"
                                                      "trash"
                                                      "deleteForever"]},
                             :maxFolderSize {:description "An optional limit on the number of messages that an IMAP folder may contain. Legal values are 0, 1000, 2000, 5000 or 10000. A value of zero is interpreted to mean that there is no limit.",
                                             :type "integer",
                                             :format "int32"}}},
 :HistoryLabelAdded {:id "HistoryLabelAdded",
                     :type "object",
                     :properties {:message {:$ref "Message"},
                                  :labelIds {:description "Label IDs added to the message.",
                                             :type "array",
                                             :items {:type "string"}}}},
 :ListDraftsResponse {:id "ListDraftsResponse",
                      :type "object",
                      :properties {:drafts {:description "List of drafts. Note that the `Message` property in each `Draft` resource only contains an `id` and a `threadId`. The messages.get method can fetch additional message details.",
                                            :type "array",
                                            :items {:$ref "Draft"}},
                                   :nextPageToken {:description "Token to retrieve the next page of results in the list.",
                                                   :type "string"},
                                   :resultSizeEstimate {:description "Estimated total number of results.",
                                                        :type "integer",
                                                        :format "uint32"}}},
 :ListFiltersResponse {:id "ListFiltersResponse",
                       :description "Response for the ListFilters method.",
                       :type "object",
                       :properties {:filter {:description "List of a user's filters.",
                                             :type "array",
                                             :items {:$ref "Filter"}}}},
 :Profile {:id "Profile",
           :description "Profile for a Gmail user.",
           :type "object",
           :properties {:emailAddress {:description "The user's email address.",
                                       :type "string"},
                        :messagesTotal {:description "The total number of messages in the mailbox.",
                                        :type "integer",
                                        :format "int32"},
                        :threadsTotal {:description "The total number of threads in the mailbox.",
                                       :type "integer",
                                       :format "int32"},
                        :historyId {:description "The ID of the mailbox's current history record.",
                                    :type "string",
                                    :format "uint64"}}},
 :DisableCseKeyPairRequest {:id "DisableCseKeyPairRequest",
                            :description "Requests to turn off a client-side encryption key pair.",
                            :type "object",
                            :properties {}},
 :Draft {:id "Draft",
         :description "A draft email in the user's mailbox.",
         :type "object",
         :properties {:id {:description "The immutable ID of the draft.",
                           :annotations {:required ["gmail.users.drafts.send"]},
                           :type "string"},
                      :message {:description "The message content of the draft.",
                                :$ref "Message"}}},
 :WatchResponse {:id "WatchResponse",
                 :description "Push notification watch response.",
                 :type "object",
                 :properties {:historyId {:description "The ID of the mailbox's current history record.",
                                          :type "string",
                                          :format "uint64"},
                              :expiration {:description "When Gmail will stop sending notifications for mailbox updates (epoch millis). Call `watch` again before this time to renew the watch.",
                                           :type "string",
                                           :format "int64"}}},
 :CsePrivateKeyMetadata {:id "CsePrivateKeyMetadata",
                         :description "Metadata for a private key instance.",
                         :type "object",
                         :properties {:privateKeyMetadataId {:description "Output only. The immutable ID for the private key metadata instance.",
                                                             :readOnly true,
                                                             :type "string"},
                                      :kaclsKeyMetadata {:description "Metadata for a private key instance managed by an external key access control list service.",
                                                         :$ref "KaclsKeyMetadata"},
                                      :hardwareKeyMetadata {:description "Metadata for hardware keys.",
                                                            :$ref "HardwareKeyMetadata"}}},
 :ObliterateCseKeyPairRequest {:id "ObliterateCseKeyPairRequest",
                               :description "Request to obliterate a CSE key pair.",
                               :type "object",
                               :properties {}},
 :MessagePart {:id "MessagePart",
               :description "A single MIME message part.",
               :type "object",
               :properties {:partId {:description "The immutable ID of the message part.",
                                     :type "string"},
                            :mimeType {:description "The MIME type of the message part.",
                                       :type "string"},
                            :filename {:description "The filename of the attachment. Only present if this message part represents an attachment.",
                                       :type "string"},
                            :headers {:description "List of headers on this message part. For the top-level message part, representing the entire message payload, it will contain the standard RFC 2822 email headers such as `To`, `From`, and `Subject`.",
                                      :type "array",
                                      :items {:$ref "MessagePartHeader"}},
                            :body {:description "The message part body for this part, which may be empty for container MIME message parts.",
                                   :$ref "MessagePartBody"},
                            :parts {:description "The child MIME message parts of this part. This only applies to container MIME message parts, for example `multipart/*`. For non- container MIME message part types, such as `text/plain`, this field is empty. For more information, see RFC 1521.",
                                    :type "array",
                                    :items {:$ref "MessagePart"}}}},
 :History {:id "History",
           :description "A record of a change to the user's mailbox. Each history change may affect multiple messages in multiple ways.",
           :type "object",
           :properties {:id {:description "The mailbox sequence ID.",
                             :type "string",
                             :format "uint64"},
                        :messages {:description "List of messages changed in this history record. The fields for specific change types, such as `messagesAdded` may duplicate messages in this field. We recommend using the specific change-type fields instead of this.",
                                   :type "array",
                                   :items {:$ref "Message"}},
                        :messagesAdded {:description "Messages added to the mailbox in this history record.",
                                        :type "array",
                                        :items {:$ref "HistoryMessageAdded"}},
                        :messagesDeleted {:description "Messages deleted (not Trashed) from the mailbox in this history record.",
                                          :type "array",
                                          :items {:$ref "HistoryMessageDeleted"}},
                        :labelsAdded {:description "Labels added to messages in this history record.",
                                      :type "array",
                                      :items {:$ref "HistoryLabelAdded"}},
                        :labelsRemoved {:description "Labels removed from messages in this history record.",
                                        :type "array",
                                        :items {:$ref "HistoryLabelRemoved"}}}},
 :Thread {:id "Thread",
          :description "A collection of messages representing a conversation.",
          :type "object",
          :properties {:id {:description "The unique ID of the thread.",
                            :type "string"},
                       :snippet {:description "A short part of the message text.",
                                 :type "string"},
                       :historyId {:description "The ID of the last history record that modified this thread.",
                                   :type "string",
                                   :format "uint64"},
                       :messages {:description "The list of messages in the thread.",
                                  :type "array",
                                  :items {:$ref "Message"}}}},
 :HistoryMessageDeleted {:id "HistoryMessageDeleted",
                         :type "object",
                         :properties {:message {:$ref "Message"}}},
 :AutoForwarding {:id "AutoForwarding",
                  :description "Auto-forwarding settings for an account.",
                  :type "object",
                  :properties {:enabled {:description "Whether all incoming mail is automatically forwarded to another address.",
                                         :type "boolean"},
                               :emailAddress {:description "Email address to which all incoming messages are forwarded. This email address must be a verified member of the forwarding addresses.",
                                              :type "string"},
                               :disposition {:description "The state that a message should be left in after it has been forwarded.",
                                             :type "string",
                                             :enumDescriptions ["Unspecified disposition."
                                                                "Leave the message in the `INBOX`."
                                                                "Archive the message."
                                                                "Move the message to the `TRASH`."
                                                                "Leave the message in the `INBOX` and mark it as read."],
                                             :enum ["dispositionUnspecified"
                                                    "leaveInInbox"
                                                    "archive"
                                                    "trash"
                                                    "markRead"]}}},
 :ListMessagesResponse {:id "ListMessagesResponse",
                        :type "object",
                        :properties {:messages {:description "List of messages. Note that each message resource contains only an `id` and a `threadId`. Additional message details can be fetched using the messages.get method.",
                                                :type "array",
                                                :items {:$ref "Message"}},
                                     :nextPageToken {:description "Token to retrieve the next page of results in the list.",
                                                     :type "string"},
                                     :resultSizeEstimate {:description "Estimated total number of results.",
                                                          :type "integer",
                                                          :format "uint32"}}},
 :PopSettings {:id "PopSettings",
               :description "POP settings for an account.",
               :type "object",
               :properties {:accessWindow {:description "The range of messages which are accessible via POP.",
                                           :type "string",
                                           :enumDescriptions ["Unspecified range."
                                                              "Indicates that no messages are accessible via POP."
                                                              "Indicates that unfetched messages received after some past point in time are accessible via POP."
                                                              "Indicates that all unfetched messages are accessible via POP."],
                                           :enum ["accessWindowUnspecified"
                                                  "disabled"
                                                  "fromNowOn"
                                                  "allMail"]},
                            :disposition {:description "The action that will be executed on a message after it has been fetched via POP.",
                                          :type "string",
                                          :enumDescriptions ["Unspecified disposition."
                                                             "Leave the message in the `INBOX`."
                                                             "Archive the message."
                                                             "Move the message to the `TRASH`."
                                                             "Leave the message in the `INBOX` and mark it as read."],
                                          :enum ["dispositionUnspecified"
                                                 "leaveInInbox"
                                                 "archive"
                                                 "trash"
                                                 "markRead"]}}},
 :ModifyMessageRequest {:id "ModifyMessageRequest",
                        :type "object",
                        :properties {:addLabelIds {:description "A list of IDs of labels to add to this message. You can add up to 100 labels with each update.",
                                                   :type "array",
                                                   :items {:type "string"}},
                                     :removeLabelIds {:description "A list IDs of labels to remove from this message. You can remove up to 100 labels with each update.",
                                                      :type "array",
                                                      :items {:type "string"}}}},
 :CseIdentity {:id "CseIdentity",
               :description "The client-side encryption (CSE) configuration for the email address of an authenticated user. Gmail uses CSE configurations to save drafts of client-side encrypted email messages, and to sign and send encrypted email messages.",
               :type "object",
               :properties {:emailAddress {:description "The email address for the sending identity. The email address must be the primary email address of the authenticated user.",
                                           :type "string"},
                            :primaryKeyPairId {:description "If a key pair is associated, the ID of the key pair, CseKeyPair.",
                                               :type "string"},
                            :signAndEncryptKeyPairs {:description "The configuration of a CSE identity that uses different key pairs for signing and encryption.",
                                                     :$ref "SignAndEncryptKeyPairs"}}},
 :ListSmimeInfoResponse {:id "ListSmimeInfoResponse",
                         :type "object",
                         :properties {:smimeInfo {:description "List of SmimeInfo.",
                                                  :type "array",
                                                  :items {:$ref "SmimeInfo"}}}},
 :ListForwardingAddressesResponse {:id "ListForwardingAddressesResponse",
                                   :description "Response for the ListForwardingAddresses method.",
                                   :type "object",
                                   :properties {:forwardingAddresses {:description "List of addresses that may be used for forwarding.",
                                                                      :type "array",
                                                                      :items {:$ref "ForwardingAddress"}}}},
 :MessagePartHeader {:id "MessagePartHeader",
                     :type "object",
                     :properties {:name {:description "The name of the header before the `:` separator. For example, `To`.",
                                         :type "string"},
                                  :value {:description "The value of the header after the `:` separator. For example, `someuser@example.com`.",
                                          :type "string"}}},
 :ListCseKeyPairsResponse {:id "ListCseKeyPairsResponse",
                           :type "object",
                           :properties {:cseKeyPairs {:description "One page of the list of CSE key pairs installed for the user.",
                                                      :type "array",
                                                      :items {:$ref "CseKeyPair"}},
                                        :nextPageToken {:description "Pagination token to be passed to a subsequent ListCseKeyPairs call in order to retrieve the next page of key pairs. If this value is not returned, then no further pages remain.",
                                                        :type "string"}}},
 :CseKeyPair {:id "CseKeyPair",
              :description "A client-side encryption S/MIME key pair, which is comprised of a public key, its certificate chain, and metadata for its paired private key. Gmail uses the key pair to complete the following tasks: - Sign outgoing client-side encrypted messages. - Save and reopen drafts of client-side encrypted messages. - Save and reopen sent messages. - Decrypt incoming or archived S/MIME messages.",
              :type "object",
              :properties {:keyPairId {:description "Output only. The immutable ID for the client-side encryption S/MIME key pair.",
                                       :readOnly true,
                                       :type "string"},
                           :pkcs7 {:description "Input only. The public key and its certificate chain. The chain must be in [PKCS#7](https://en.wikipedia.org/wiki/PKCS_7) format and use PEM encoding and ASCII armor.",
                                   :type "string"},
                           :pem {:description "Output only. The public key and its certificate chain, in [PEM](https://en.wikipedia.org/wiki/Privacy-Enhanced_Mail) format.",
                                 :readOnly true,
                                 :type "string"},
                           :subjectEmailAddresses {:description "Output only. The email address identities that are specified on the leaf certificate.",
                                                   :readOnly true,
                                                   :type "array",
                                                   :items {:type "string"}},
                           :enablementState {:description "Output only. The current state of the key pair.",
                                             :readOnly true,
                                             :type "string",
                                             :enumDescriptions ["The current state of the key pair is not set. The key pair is neither turned on nor turned off."
                                                                "The key pair is turned on. For any email messages that this key pair encrypts, Gmail decrypts the messages and signs any outgoing mail with the private key. To turn on a key pair, use the EnableCseKeyPair method."
                                                                "The key pair is turned off. Authenticated users cannot decrypt email messages nor sign outgoing messages. If a key pair is turned off for more than 30 days, you can permanently delete it. To turn off a key pair, use the DisableCseKeyPair method."],
                                             :enum ["stateUnspecified"
                                                    "enabled"
                                                    "disabled"]},
                           :disableTime {:description "Output only. If a key pair is set to `DISABLED`, the time that the key pair's state changed from `ENABLED` to `DISABLED`. This field is present only when the key pair is in state `DISABLED`.",
                                         :readOnly true,
                                         :type "string",
                                         :format "google-datetime"},
                           :privateKeyMetadata {:description "Metadata for instances of this key pair's private key.",
                                                :type "array",
                                                :items {:$ref "CsePrivateKeyMetadata"}}}},
 :WatchRequest {:id "WatchRequest",
                :description "Set up or update a new push notification watch on this user's mailbox.",
                :type "object",
                :properties {:labelIds {:description "List of label_ids to restrict notifications about. By default, if unspecified, all changes are pushed out. If specified then dictates which labels are required for a push notification to be generated.",
                                        :type "array",
                                        :items {:type "string"}},
                             :labelFilterAction {:description "Filtering behavior of `labelIds list` specified. This field is deprecated because it caused incorrect behavior in some cases; use `label_filter_behavior` instead.",
                                                 :deprecated true,
                                                 :type "string",
                                                 :enumDescriptions ["Only get push notifications for message changes relating to labelIds specified."
                                                                    "Get push notifications for all message changes except those relating to labelIds specified."],
                                                 :enum ["include"
                                                        "exclude"]},
                             :labelFilterBehavior {:description "Filtering behavior of `labelIds list` specified. This field replaces `label_filter_action`; if set, `label_filter_action` is ignored.",
                                                   :type "string",
                                                   :enumDescriptions ["Only get push notifications for message changes relating to labelIds specified."
                                                                      "Get push notifications for all message changes except those relating to labelIds specified."],
                                                   :enum ["include"
                                                          "exclude"]},
                             :topicName {:description "A fully qualified Google Cloud Pub/Sub API topic name to publish the events to. This topic name **must** already exist in Cloud Pub/Sub and you **must** have already granted gmail \"publish\" permission on it. For example, \"projects/my-project-identifier/topics/my-topic-name\" (using the Cloud Pub/Sub \"v1\" topic naming format). Note that the \"my-project-identifier\" portion must exactly match your Google developer project id (the one executing this watch request).",
                                         :type "string"}}},
 :SendAs {:id "SendAs",
          :description "Settings associated with a send-as alias, which can be either the primary login address associated with the account or a custom \"from\" address. Send-as aliases correspond to the \"Send Mail As\" feature in the web interface.",
          :type "object",
          :properties {:treatAsAlias {:description "Whether Gmail should treat this address as an alias for the user's primary email address. This setting only applies to custom \"from\" aliases.",
                                      :type "boolean"},
                       :isDefault {:description "Whether this address is selected as the default \"From:\" address in situations such as composing a new message or sending a vacation auto-reply. Every Gmail account has exactly one default send-as address, so the only legal value that clients may write to this field is `true`. Changing this from `false` to `true` for an address will result in this field becoming `false` for the other previous default address.",
                                   :type "boolean"},
                       :displayName {:description "A name that appears in the \"From:\" header for mail sent using this alias. For custom \"from\" addresses, when this is empty, Gmail will populate the \"From:\" header with the name that is used for the primary address associated with the account. If the admin has disabled the ability for users to update their name format, requests to update this field for the primary login will silently fail.",
                                     :type "string"},
                       :isPrimary {:description "Whether this address is the primary address used to login to the account. Every Gmail account has exactly one primary address, and it cannot be deleted from the collection of send-as aliases. This field is read-only.",
                                   :type "boolean"},
                       :signature {:description "An optional HTML signature that is included in messages composed with this alias in the Gmail web UI. This signature is added to new emails only.",
                                   :type "string"},
                       :sendAsEmail {:description "The email address that appears in the \"From:\" header for mail sent using this alias. This is read-only for all operations except create.",
                                     :type "string"},
                       :verificationStatus {:description "Indicates whether this address has been verified for use as a send-as alias. Read-only. This setting only applies to custom \"from\" aliases.",
                                            :type "string",
                                            :enumDescriptions ["Unspecified verification status."
                                                               "The address is ready to use as a send-as alias."
                                                               "The address is awaiting verification by the owner."],
                                            :enum ["verificationStatusUnspecified"
                                                   "accepted"
                                                   "pending"]},
                       :replyToAddress {:description "An optional email address that is included in a \"Reply-To:\" header for mail sent using this alias. If this is empty, Gmail will not generate a \"Reply-To:\" header.",
                                        :type "string"},
                       :smtpMsa {:description "An optional SMTP service that will be used as an outbound relay for mail sent using this alias. If this is empty, outbound mail will be sent directly from Gmail's servers to the destination SMTP service. This setting only applies to custom \"from\" aliases.",
                                 :$ref "SmtpMsa"}}},
 :ModifyThreadRequest {:id "ModifyThreadRequest",
                       :type "object",
                       :properties {:addLabelIds {:description "A list of IDs of labels to add to this thread. You can add up to 100 labels with each update.",
                                                  :type "array",
                                                  :items {:type "string"}},
                                    :removeLabelIds {:description "A list of IDs of labels to remove from this thread. You can remove up to 100 labels with each update.",
                                                     :type "array",
                                                     :items {:type "string"}}}},
 :LabelColor {:id "LabelColor",
              :type "object",
              :properties {:textColor {:description "The text color of the label, represented as hex string. This field is required in order to set the color of a label. Only the following predefined set of color values are allowed: \\#000000, #434343, #666666, #999999, #cccccc, #efefef, #f3f3f3, #ffffff, \\#fb4c2f, #ffad47, #fad165, #16a766, #43d692, #4a86e8, #a479e2, #f691b3, \\#f6c5be, #ffe6c7, #fef1d1, #b9e4d0, #c6f3de, #c9daf8, #e4d7f5, #fcdee8, \\#efa093, #ffd6a2, #fce8b3, #89d3b2, #a0eac9, #a4c2f4, #d0bcf1, #fbc8d9, \\#e66550, #ffbc6b, #fcda83, #44b984, #68dfa9, #6d9eeb, #b694e8, #f7a7c0, \\#cc3a21, #eaa041, #f2c960, #149e60, #3dc789, #3c78d8, #8e63ce, #e07798, \\#ac2b16, #cf8933, #d5ae49, #0b804b, #2a9c68, #285bac, #653e9b, #b65775, \\#822111, #a46a21, #aa8831, #076239, #1a764d, #1c4587, #41236d, #83334c \\#464646, #e7e7e7, #0d3472, #b6cff5, #0d3b44, #98d7e4, #3d188e, #e3d7ff, \\#711a36, #fbd3e0, #8a1c0a, #f2b2a8, #7a2e0b, #ffc8af, #7a4706, #ffdeb5, \\#594c05, #fbe983, #684e07, #fdedc1, #0b4f30, #b3efd3, #04502e, #a2dcc1, \\#c2c2c2, #4986e7, #2da2bb, #b99aff, #994a64, #f691b2, #ff7537, #ffad46, \\#662e37, #ebdbde, #cca6ac, #094228, #42d692, #16a765",
                                       :type "string"},
                           :backgroundColor {:description "The background color represented as hex string #RRGGBB (ex #000000). This field is required in order to set the color of a label. Only the following predefined set of color values are allowed: \\#000000, #434343, #666666, #999999, #cccccc, #efefef, #f3f3f3, #ffffff, \\#fb4c2f, #ffad47, #fad165, #16a766, #43d692, #4a86e8, #a479e2, #f691b3, \\#f6c5be, #ffe6c7, #fef1d1, #b9e4d0, #c6f3de, #c9daf8, #e4d7f5, #fcdee8, \\#efa093, #ffd6a2, #fce8b3, #89d3b2, #a0eac9, #a4c2f4, #d0bcf1, #fbc8d9, \\#e66550, #ffbc6b, #fcda83, #44b984, #68dfa9, #6d9eeb, #b694e8, #f7a7c0, \\#cc3a21, #eaa041, #f2c960, #149e60, #3dc789, #3c78d8, #8e63ce, #e07798, \\#ac2b16, #cf8933, #d5ae49, #0b804b, #2a9c68, #285bac, #653e9b, #b65775, \\#822111, #a46a21, #aa8831, #076239, #1a764d, #1c4587, #41236d, #83334c \\#464646, #e7e7e7, #0d3472, #b6cff5, #0d3b44, #98d7e4, #3d188e, #e3d7ff, \\#711a36, #fbd3e0, #8a1c0a, #f2b2a8, #7a2e0b, #ffc8af, #7a4706, #ffdeb5, \\#594c05, #fbe983, #684e07, #fdedc1, #0b4f30, #b3efd3, #04502e, #a2dcc1, \\#c2c2c2, #4986e7, #2da2bb, #b99aff, #994a64, #f691b2, #ff7537, #ffad46, \\#662e37, #ebdbde, #cca6ac, #094228, #42d692, #16a765",
                                             :type "string"}}},
 :MessagePartBody {:id "MessagePartBody",
                   :description "The body of a single MIME message part.",
                   :type "object",
                   :properties {:attachmentId {:description "When present, contains the ID of an external attachment that can be retrieved in a separate `messages.attachments.get` request. When not present, the entire content of the message part body is contained in the data field.",
                                               :type "string"},
                                :size {:description "Number of bytes for the message part data (encoding notwithstanding).",
                                       :type "integer",
                                       :format "int32"},
                                :data {:description "The body data of a MIME message part as a base64url encoded string. May be empty for MIME container types that have no message body or when the body data is sent as a separate attachment. An attachment ID is present if the body data is contained in a separate attachment.",
                                       :type "string",
                                       :format "byte"}}},
 :ListLabelsResponse {:id "ListLabelsResponse",
                      :type "object",
                      :properties {:labels {:description "List of labels. Note that each label resource only contains an `id`, `name`, `messageListVisibility`, `labelListVisibility`, and `type`. The labels.get method can fetch additional label details.",
                                            :type "array",
                                            :items {:$ref "Label"}}}},
 :BatchDeleteMessagesRequest {:id "BatchDeleteMessagesRequest",
                              :type "object",
                              :properties {:ids {:description "The IDs of the messages to delete.",
                                                 :type "array",
                                                 :items {:type "string"}}}},
 :Delegate {:id "Delegate",
            :description "Settings for a delegate. Delegates can read, send, and delete messages, as well as view and add contacts, for the delegator's account. See \"Set up mail delegation\" for more information about delegates.",
            :type "object",
            :properties {:delegateEmail {:description "The email address of the delegate.",
                                         :type "string"},
                         :verificationStatus {:description "Indicates whether this address has been verified and can act as a delegate for the account. Read-only.",
                                              :type "string",
                                              :enumDescriptions ["Unspecified verification status."
                                                                 "The address can act a delegate for the account."
                                                                 "A verification request was mailed to the address, and the owner has not yet accepted it."
                                                                 "A verification request was mailed to the address, and the owner rejected it."
                                                                 "A verification request was mailed to the address, and it expired without verification."],
                                              :enum ["verificationStatusUnspecified"
                                                     "accepted"
                                                     "pending"
                                                     "rejected"
                                                     "expired"]}}},
 :HardwareKeyMetadata {:id "HardwareKeyMetadata",
                       :description "Metadata for hardware keys.",
                       :type "object",
                       :properties {:description {:description "Description about the hardware key.",
                                                  :type "string"}}},
 :SmtpMsa {:id "SmtpMsa",
           :description "Configuration for communication with an SMTP service.",
           :type "object",
           :properties {:host {:description "The hostname of the SMTP service. Required.",
                               :type "string"},
                        :port {:description "The port of the SMTP service. Required.",
                               :type "integer",
                               :format "int32"},
                        :username {:description "The username that will be used for authentication with the SMTP service. This is a write-only field that can be specified in requests to create or update SendAs settings; it is never populated in responses.",
                                   :type "string"},
                        :password {:description "The password that will be used for authentication with the SMTP service. This is a write-only field that can be specified in requests to create or update SendAs settings; it is never populated in responses.",
                                   :type "string"},
                        :securityMode {:description "The protocol that will be used to secure communication with the SMTP service. Required.",
                                       :type "string",
                                       :enumDescriptions ["Unspecified security mode."
                                                          "Communication with the remote SMTP service is unsecured. Requires port 25."
                                                          "Communication with the remote SMTP service is secured using SSL."
                                                          "Communication with the remote SMTP service is secured using STARTTLS."],
                                       :enum ["securityModeUnspecified"
                                              "none"
                                              "ssl"
                                              "starttls"]}}},
 :ForwardingAddress {:id "ForwardingAddress",
                     :description "Settings for a forwarding address.",
                     :type "object",
                     :properties {:forwardingEmail {:description "An email address to which messages can be forwarded.",
                                                    :type "string"},
                                  :verificationStatus {:description "Indicates whether this address has been verified and is usable for forwarding. Read-only.",
                                                       :type "string",
                                                       :enumDescriptions ["Unspecified verification status."
                                                                          "The address is ready to use for forwarding."
                                                                          "The address is awaiting verification by the owner."],
                                                       :enum ["verificationStatusUnspecified"
                                                              "accepted"
                                                              "pending"]}}},
 :SmimeInfo {:id "SmimeInfo",
             :description "An S/MIME email config.",
             :type "object",
             :properties {:id {:description "The immutable ID for the SmimeInfo.",
                               :type "string"},
                          :issuerCn {:description "The S/MIME certificate issuer's common name.",
                                     :type "string"},
                          :isDefault {:description "Whether this SmimeInfo is the default one for this user's send-as address.",
                                      :type "boolean"},
                          :expiration {:description "When the certificate expires (in milliseconds since epoch).",
                                       :type "string",
                                       :format "int64"},
                          :pem {:description "PEM formatted X509 concatenated certificate string (standard base64 encoding). Format used for returning key, which includes public key as well as certificate chain (not private key).",
                                :type "string"},
                          :pkcs12 {:description "PKCS#12 format containing a single private/public key pair and certificate chain. This format is only accepted from client for creating a new SmimeInfo and is never returned, because the private key is not intended to be exported. PKCS#12 may be encrypted, in which case encryptedKeyPassword should be set appropriately.",
                                   :type "string",
                                   :format "byte"},
                          :encryptedKeyPassword {:description "Encrypted key password, when key is encrypted.",
                                                 :type "string"}}},
 :LanguageSettings {:id "LanguageSettings",
                    :description "Language settings for an account. These settings correspond to the \"Language settings\" feature in the web interface.",
                    :type "object",
                    :properties {:displayLanguage {:description "The language to display Gmail in, formatted as an RFC 3066 Language Tag (for example `en-GB`, `fr` or `ja` for British English, French, or Japanese respectively). The set of languages supported by Gmail evolves over time, so please refer to the \"Language\" dropdown in the Gmail settings for all available options, as described in the language settings help article. A table of sample values is also provided in the Managing Language Settings guide Not all Gmail clients can display the same set of languages. In the case that a user's display language is not available for use on a particular client, said client automatically chooses to display in the closest supported variant (or a reasonable default).",
                                                   :type "string"}}},
 :KaclsKeyMetadata {:id "KaclsKeyMetadata",
                    :description "Metadata for private keys managed by an external key access control list service. For details about managing key access, see [Google Workspace CSE API Reference](https://developers.google.com/workspace/cse/reference).",
                    :type "object",
                    :properties {:kaclsUri {:description "The URI of the key access control list service that manages the private key.",
                                            :type "string"},
                                 :kaclsData {:description "Opaque data generated and used by the key access control list service. Maximum size: 8 KiB.",
                                             :type "string"}}},
 :FilterAction {:id "FilterAction",
                :description "A set of actions to perform on a message.",
                :type "object",
                :properties {:addLabelIds {:description "List of labels to add to the message.",
                                           :type "array",
                                           :items {:type "string"}},
                             :removeLabelIds {:description "List of labels to remove from the message.",
                                              :type "array",
                                              :items {:type "string"}},
                             :forward {:description "Email address that the message should be forwarded to.",
                                       :type "string"}}},
 :HistoryLabelRemoved {:id "HistoryLabelRemoved",
                       :type "object",
                       :properties {:message {:$ref "Message"},
                                    :labelIds {:description "Label IDs removed from the message.",
                                               :type "array",
                                               :items {:type "string"}}}}}
