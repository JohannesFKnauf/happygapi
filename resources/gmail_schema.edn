{:Label {:id "Label",
         :type "object",
         :description "Labels are used to categorize messages and threads within the user's mailbox.",
         :properties {:threadsUnread {:type "integer",
                                      :description "The number of unread threads with the label.",
                                      :format "int32"},
                      :threadsTotal {:type "integer",
                                     :description "The total number of threads with the label.",
                                     :format "int32"},
                      :messagesTotal {:type "integer",
                                      :description "The total number of messages with the label.",
                                      :format "int32"},
                      :labelListVisibility {:type "string",
                                            :description "The visibility of the label in the label list in the Gmail web interface.",
                                            :enum ["labelHide"
                                                   "labelShow"
                                                   "labelShowIfUnread"],
                                            :enumDescriptions [""
                                                               ""
                                                               ""],
                                            :annotations {:required ["gmail.users.labels.create"
                                                                     "gmail.users.labels.update"]}},
                      :color {:$ref "LabelColor",
                              :description "The color to assign to the label. Color is only available for labels that have their type set to user."},
                      :messagesUnread {:type "integer",
                                       :description "The number of unread messages with the label.",
                                       :format "int32"},
                      :name {:type "string",
                             :description "The display name of the label.",
                             :annotations {:required ["gmail.users.labels.create"
                                                      "gmail.users.labels.update"]}},
                      :messageListVisibility {:type "string",
                                              :description "The visibility of the label in the message list in the Gmail web interface.",
                                              :enum ["hide" "show"],
                                              :enumDescriptions [""
                                                                 ""],
                                              :annotations {:required ["gmail.users.labels.create"
                                                                       "gmail.users.labels.update"]}},
                      :type {:type "string",
                             :description "The owner type for the label. User labels are created by the user and can be modified and deleted by the user and can be applied to any message or thread. System labels are internally created and cannot be added, modified, or deleted. System labels may be able to be applied to or removed from messages and threads under some circumstances but this is not guaranteed. For example, users can apply and remove the INBOX and UNREAD labels from messages and threads, but cannot apply or remove the DRAFTS or SENT labels from messages or threads.",
                             :enum ["system" "user"],
                             :enumDescriptions ["" ""]},
                      :id {:type "string",
                           :description "The immutable ID of the label.",
                           :annotations {:required ["gmail.users.labels.update"]}}}},
 :ListDelegatesResponse {:id "ListDelegatesResponse",
                         :type "object",
                         :description "Response for the ListDelegates method.",
                         :properties {:delegates {:type "array",
                                                  :description "List of the user's delegates (with any verification status).",
                                                  :items {:$ref "Delegate"}}}},
 :VacationSettings {:id "VacationSettings",
                    :type "object",
                    :description "Vacation auto-reply settings for an account. These settings correspond to the \"Vacation responder\" feature in the web interface.",
                    :properties {:enableAutoReply {:type "boolean",
                                                   :description "Flag that controls whether Gmail automatically replies to messages."},
                                 :endTime {:type "string",
                                           :description "An optional end time for sending auto-replies (epoch ms). When this is specified, Gmail will automatically reply only to messages that it receives before the end time. If both startTime and endTime are specified, startTime must precede endTime.",
                                           :format "int64"},
                                 :responseBodyHtml {:type "string",
                                                    :description "Response body in HTML format. Gmail will sanitize the HTML before storing it."},
                                 :responseBodyPlainText {:type "string",
                                                         :description "Response body in plain text format."},
                                 :responseSubject {:type "string",
                                                   :description "Optional text to prepend to the subject line in vacation responses. In order to enable auto-replies, either the response subject or the response body must be nonempty."},
                                 :restrictToContacts {:type "boolean",
                                                      :description "Flag that determines whether responses are sent to recipients who are not in the user's list of contacts."},
                                 :restrictToDomain {:type "boolean",
                                                    :description "Flag that determines whether responses are sent to recipients who are outside of the user's domain. This feature is only available for G Suite users."},
                                 :startTime {:type "string",
                                             :description "An optional start time for sending auto-replies (epoch ms). When this is specified, Gmail will automatically reply only to messages that it receives after the start time. If both startTime and endTime are specified, startTime must precede endTime.",
                                             :format "int64"}}},
 :ListSendAsResponse {:id "ListSendAsResponse",
                      :type "object",
                      :description "Response for the ListSendAs method.",
                      :properties {:sendAs {:type "array",
                                            :description "List of send-as aliases.",
                                            :items {:$ref "SendAs"}}}},
 :ListHistoryResponse {:id "ListHistoryResponse",
                       :type "object",
                       :properties {:history {:type "array",
                                              :description "List of history records. Any messages contained in the response will typically only have id and threadId fields populated.",
                                              :items {:$ref "History"}},
                                    :historyId {:type "string",
                                                :description "The ID of the mailbox's current history record.",
                                                :format "uint64"},
                                    :nextPageToken {:type "string",
                                                    :description "Page token to retrieve the next page of results in the list."}}},
 :HistoryMessageAdded {:id "HistoryMessageAdded",
                       :type "object",
                       :properties {:message {:$ref "Message"}}},
 :FilterCriteria {:id "FilterCriteria",
                  :type "object",
                  :description "Message matching criteria.",
                  :properties {:excludeChats {:type "boolean",
                                              :description "Whether the response should exclude chats."},
                               :hasAttachment {:type "boolean",
                                               :description "Whether the message has any attachment."},
                               :sizeComparison {:type "string",
                                                :description "How the message size in bytes should be in relation to the size field.",
                                                :enum ["larger"
                                                       "smaller"
                                                       "unspecified"],
                                                :enumDescriptions [""
                                                                   ""
                                                                   ""]},
                               :size {:type "integer",
                                      :description "The size of the entire RFC822 message in bytes, including all headers and attachments.",
                                      :format "int32"},
                               :negatedQuery {:type "string",
                                              :description "Only return messages not matching the specified query. Supports the same query format as the Gmail search box. For example, \"from:someuser@example.com rfc822msgid: is:unread\"."},
                               :from {:type "string",
                                      :description "The sender's display name or email address."},
                               :query {:type "string",
                                       :description "Only return messages matching the specified query. Supports the same query format as the Gmail search box. For example, \"from:someuser@example.com rfc822msgid: is:unread\"."},
                               :subject {:type "string",
                                         :description "Case-insensitive phrase found in the message's subject. Trailing and leading whitespace are be trimmed and adjacent spaces are collapsed."},
                               :to {:type "string",
                                    :description "The recipient's display name or email address. Includes recipients in the \"to\", \"cc\", and \"bcc\" header fields. You can use simply the local part of the email address. For example, \"example\" and \"example@\" both match \"example@gmail.com\". This field is case-insensitive."}}},
 :BatchModifyMessagesRequest {:id "BatchModifyMessagesRequest",
                              :type "object",
                              :properties {:addLabelIds {:type "array",
                                                         :description "A list of label IDs to add to messages.",
                                                         :items {:type "string"}},
                                           :ids {:type "array",
                                                 :description "The IDs of the messages to modify. There is a limit of 1000 ids per request.",
                                                 :items {:type "string"}},
                                           :removeLabelIds {:type "array",
                                                            :description "A list of label IDs to remove from messages.",
                                                            :items {:type "string"}}}},
 :ListThreadsResponse {:id "ListThreadsResponse",
                       :type "object",
                       :properties {:nextPageToken {:type "string",
                                                    :description "Page token to retrieve the next page of results in the list."},
                                    :resultSizeEstimate {:type "integer",
                                                         :description "Estimated total number of results.",
                                                         :format "uint32"},
                                    :threads {:type "array",
                                              :description "List of threads. Note that each thread resource does not contain a list of messages. The list of messages for a given thread can be fetched using the threads.get method.",
                                              :items {:$ref "Thread"}}}},
 :Filter {:id "Filter",
          :type "object",
          :description "Resource definition for Gmail filters. Filters apply to specific messages instead of an entire email thread.",
          :properties {:action {:$ref "FilterAction",
                                :description "Action that the filter performs."},
                       :criteria {:$ref "FilterCriteria",
                                  :description "Matching criteria for the filter."},
                       :id {:type "string",
                            :description "The server assigned ID of the filter."}}},
 :Message {:id "Message",
           :type "object",
           :description "An email message.",
           :properties {:threadId {:type "string",
                                   :description "The ID of the thread the message belongs to. To add a message or draft to a thread, the following criteria must be met: \n- The requested threadId must be specified on the Message or Draft.Message you supply with your request. \n- The References and In-Reply-To headers must be set in compliance with the RFC 2822 standard. \n- The Subject headers must match."},
                        :payload {:$ref "MessagePart",
                                  :description "The parsed email structure in the message parts."},
                        :historyId {:type "string",
                                    :description "The ID of the last history record that modified this message.",
                                    :format "uint64"},
                        :raw {:type "string",
                              :description "The entire email message in an RFC 2822 formatted and base64url encoded string. Returned in messages.get and drafts.get responses when the format=RAW parameter is supplied.",
                              :format "byte",
                              :annotations {:required ["gmail.users.drafts.create"
                                                       "gmail.users.drafts.update"
                                                       "gmail.users.messages.insert"
                                                       "gmail.users.messages.send"]}},
                        :labelIds {:type "array",
                                   :description "List of IDs of labels applied to this message.",
                                   :items {:type "string"}},
                        :snippet {:type "string",
                                  :description "A short part of the message text."},
                        :id {:type "string",
                             :description "The immutable ID of the message."},
                        :sizeEstimate {:type "integer",
                                       :description "Estimated size in bytes of the message.",
                                       :format "int32"},
                        :internalDate {:type "string",
                                       :description "The internal message creation timestamp (epoch ms), which determines ordering in the inbox. For normal SMTP-received email, this represents the time the message was originally accepted by Google, which is more reliable than the Date header. However, for API-migrated mail, it can be configured by client to be based on the Date header.",
                                       :format "int64"}}},
 :ImapSettings {:id "ImapSettings",
                :type "object",
                :description "IMAP settings for an account.",
                :properties {:autoExpunge {:type "boolean",
                                           :description "If this value is true, Gmail will immediately expunge a message when it is marked as deleted in IMAP. Otherwise, Gmail will wait for an update from the client before expunging messages marked as deleted."},
                             :enabled {:type "boolean",
                                       :description "Whether IMAP is enabled for the account."},
                             :expungeBehavior {:type "string",
                                               :description "The action that will be executed on a message when it is marked as deleted and expunged from the last visible IMAP folder.",
                                               :enum ["archive"
                                                      "deleteForever"
                                                      "expungeBehaviorUnspecified"
                                                      "trash"],
                                               :enumDescriptions [""
                                                                  ""
                                                                  ""
                                                                  ""]},
                             :maxFolderSize {:type "integer",
                                             :description "An optional limit on the number of messages that an IMAP folder may contain. Legal values are 0, 1000, 2000, 5000 or 10000. A value of zero is interpreted to mean that there is no limit.",
                                             :format "int32"}}},
 :HistoryLabelAdded {:id "HistoryLabelAdded",
                     :type "object",
                     :properties {:labelIds {:type "array",
                                             :description "Label IDs added to the message.",
                                             :items {:type "string"}},
                                  :message {:$ref "Message"}}},
 :ListDraftsResponse {:id "ListDraftsResponse",
                      :type "object",
                      :properties {:drafts {:type "array",
                                            :description "List of drafts. Note that the Message property in each Draft resource only contains an id and a threadId. The messages.get method can fetch additional message details.",
                                            :items {:$ref "Draft"}},
                                   :nextPageToken {:type "string",
                                                   :description "Token to retrieve the next page of results in the list."},
                                   :resultSizeEstimate {:type "integer",
                                                        :description "Estimated total number of results.",
                                                        :format "uint32"}}},
 :ListFiltersResponse {:id "ListFiltersResponse",
                       :type "object",
                       :description "Response for the ListFilters method.",
                       :properties {:filter {:type "array",
                                             :description "List of a user's filters.",
                                             :items {:$ref "Filter"}}}},
 :Profile {:id "Profile",
           :type "object",
           :description "Profile for a Gmail user.",
           :properties {:emailAddress {:type "string",
                                       :description "The user's email address."},
                        :historyId {:type "string",
                                    :description "The ID of the mailbox's current history record.",
                                    :format "uint64"},
                        :messagesTotal {:type "integer",
                                        :description "The total number of messages in the mailbox.",
                                        :format "int32"},
                        :threadsTotal {:type "integer",
                                       :description "The total number of threads in the mailbox.",
                                       :format "int32"}}},
 :Draft {:id "Draft",
         :type "object",
         :description "A draft email in the user's mailbox.",
         :properties {:id {:type "string",
                           :description "The immutable ID of the draft.",
                           :annotations {:required ["gmail.users.drafts.send"]}},
                      :message {:$ref "Message",
                                :description "The message content of the draft."}}},
 :WatchResponse {:id "WatchResponse",
                 :type "object",
                 :description "Push notification watch response.",
                 :properties {:expiration {:type "string",
                                           :description "When Gmail will stop sending notifications for mailbox updates (epoch millis). Call watch again before this time to renew the watch.",
                                           :format "int64"},
                              :historyId {:type "string",
                                          :description "The ID of the mailbox's current history record.",
                                          :format "uint64"}}},
 :MessagePart {:id "MessagePart",
               :type "object",
               :description "A single MIME message part.",
               :properties {:body {:$ref "MessagePartBody",
                                   :description "The message part body for this part, which may be empty for container MIME message parts."},
                            :filename {:type "string",
                                       :description "The filename of the attachment. Only present if this message part represents an attachment."},
                            :headers {:type "array",
                                      :description "List of headers on this message part. For the top-level message part, representing the entire message payload, it will contain the standard RFC 2822 email headers such as To, From, and Subject.",
                                      :items {:$ref "MessagePartHeader"}},
                            :mimeType {:type "string",
                                       :description "The MIME type of the message part."},
                            :partId {:type "string",
                                     :description "The immutable ID of the message part."},
                            :parts {:type "array",
                                    :description "The child MIME message parts of this part. This only applies to container MIME message parts, for example multipart/*. For non- container MIME message part types, such as text/plain, this field is empty. For more information, see RFC 1521.",
                                    :items {:$ref "MessagePart"}}}},
 :History {:id "History",
           :type "object",
           :description "A record of a change to the user's mailbox. Each history change may affect multiple messages in multiple ways.",
           :properties {:id {:type "string",
                             :description "The mailbox sequence ID.",
                             :format "uint64"},
                        :labelsAdded {:type "array",
                                      :description "Labels added to messages in this history record.",
                                      :items {:$ref "HistoryLabelAdded"}},
                        :labelsRemoved {:type "array",
                                        :description "Labels removed from messages in this history record.",
                                        :items {:$ref "HistoryLabelRemoved"}},
                        :messages {:type "array",
                                   :description "List of messages changed in this history record. The fields for specific change types, such as messagesAdded may duplicate messages in this field. We recommend using the specific change-type fields instead of this.",
                                   :items {:$ref "Message"}},
                        :messagesAdded {:type "array",
                                        :description "Messages added to the mailbox in this history record.",
                                        :items {:$ref "HistoryMessageAdded"}},
                        :messagesDeleted {:type "array",
                                          :description "Messages deleted (not Trashed) from the mailbox in this history record.",
                                          :items {:$ref "HistoryMessageDeleted"}}}},
 :Thread {:id "Thread",
          :type "object",
          :description "A collection of messages representing a conversation.",
          :properties {:historyId {:type "string",
                                   :description "The ID of the last history record that modified this thread.",
                                   :format "uint64"},
                       :id {:type "string",
                            :description "The unique ID of the thread."},
                       :messages {:type "array",
                                  :description "The list of messages in the thread.",
                                  :items {:$ref "Message"}},
                       :snippet {:type "string",
                                 :description "A short part of the message text."}}},
 :HistoryMessageDeleted {:id "HistoryMessageDeleted",
                         :type "object",
                         :properties {:message {:$ref "Message"}}},
 :AutoForwarding {:id "AutoForwarding",
                  :type "object",
                  :description "Auto-forwarding settings for an account.",
                  :properties {:disposition {:type "string",
                                             :description "The state that a message should be left in after it has been forwarded.",
                                             :enum ["archive"
                                                    "dispositionUnspecified"
                                                    "leaveInInbox"
                                                    "markRead"
                                                    "trash"],
                                             :enumDescriptions [""
                                                                ""
                                                                ""
                                                                ""
                                                                ""]},
                               :emailAddress {:type "string",
                                              :description "Email address to which all incoming messages are forwarded. This email address must be a verified member of the forwarding addresses."},
                               :enabled {:type "boolean",
                                         :description "Whether all incoming mail is automatically forwarded to another address."}}},
 :ListMessagesResponse {:id "ListMessagesResponse",
                        :type "object",
                        :properties {:messages {:type "array",
                                                :description "List of messages. Note that each message resource contains only an id and a threadId. Additional message details can be fetched using the messages.get method.",
                                                :items {:$ref "Message"}},
                                     :nextPageToken {:type "string",
                                                     :description "Token to retrieve the next page of results in the list."},
                                     :resultSizeEstimate {:type "integer",
                                                          :description "Estimated total number of results.",
                                                          :format "uint32"}}},
 :PopSettings {:id "PopSettings",
               :type "object",
               :description "POP settings for an account.",
               :properties {:accessWindow {:type "string",
                                           :description "The range of messages which are accessible via POP.",
                                           :enum ["accessWindowUnspecified"
                                                  "allMail"
                                                  "disabled"
                                                  "fromNowOn"],
                                           :enumDescriptions [""
                                                              ""
                                                              ""
                                                              ""]},
                            :disposition {:type "string",
                                          :description "The action that will be executed on a message after it has been fetched via POP.",
                                          :enum ["archive"
                                                 "dispositionUnspecified"
                                                 "leaveInInbox"
                                                 "markRead"
                                                 "trash"],
                                          :enumDescriptions [""
                                                             ""
                                                             ""
                                                             ""
                                                             ""]}}},
 :ModifyMessageRequest {:id "ModifyMessageRequest",
                        :type "object",
                        :properties {:addLabelIds {:type "array",
                                                   :description "A list of IDs of labels to add to this message.",
                                                   :items {:type "string"}},
                                     :removeLabelIds {:type "array",
                                                      :description "A list IDs of labels to remove from this message.",
                                                      :items {:type "string"}}}},
 :ListSmimeInfoResponse {:id "ListSmimeInfoResponse",
                         :type "object",
                         :properties {:smimeInfo {:type "array",
                                                  :description "List of SmimeInfo.",
                                                  :items {:$ref "SmimeInfo"}}}},
 :ListForwardingAddressesResponse {:id "ListForwardingAddressesResponse",
                                   :type "object",
                                   :description "Response for the ListForwardingAddresses method.",
                                   :properties {:forwardingAddresses {:type "array",
                                                                      :description "List of addresses that may be used for forwarding.",
                                                                      :items {:$ref "ForwardingAddress"}}}},
 :MessagePartHeader {:id "MessagePartHeader",
                     :type "object",
                     :properties {:name {:type "string",
                                         :description "The name of the header before the : separator. For example, To."},
                                  :value {:type "string",
                                          :description "The value of the header after the : separator. For example, someuser@example.com."}}},
 :WatchRequest {:id "WatchRequest",
                :type "object",
                :description "Set up or update a new push notification watch on this user's mailbox.",
                :properties {:labelFilterAction {:type "string",
                                                 :description "Filtering behavior of labelIds list specified.",
                                                 :enum ["exclude"
                                                        "include"],
                                                 :enumDescriptions [""
                                                                    ""]},
                             :labelIds {:type "array",
                                        :description "List of label_ids to restrict notifications about. By default, if unspecified, all changes are pushed out. If specified then dictates which labels are required for a push notification to be generated.",
                                        :items {:type "string"}},
                             :topicName {:type "string",
                                         :description "A fully qualified Google Cloud Pub/Sub API topic name to publish the events to. This topic name **must** already exist in Cloud Pub/Sub and you **must** have already granted gmail \"publish\" permission on it. For example, \"projects/my-project-identifier/topics/my-topic-name\" (using the Cloud Pub/Sub \"v1\" topic naming format).\n\nNote that the \"my-project-identifier\" portion must exactly match your Google developer project id (the one executing this watch request)."}}},
 :SendAs {:id "SendAs",
          :type "object",
          :description "Settings associated with a send-as alias, which can be either the primary login address associated with the account or a custom \"from\" address. Send-as aliases correspond to the \"Send Mail As\" feature in the web interface.",
          :properties {:treatAsAlias {:type "boolean",
                                      :description "Whether Gmail should  treat this address as an alias for the user's primary email address. This setting only applies to custom \"from\" aliases."},
                       :isDefault {:type "boolean",
                                   :description "Whether this address is selected as the default \"From:\" address in situations such as composing a new message or sending a vacation auto-reply. Every Gmail account has exactly one default send-as address, so the only legal value that clients may write to this field is true. Changing this from false to true for an address will result in this field becoming false for the other previous default address."},
                       :displayName {:type "string",
                                     :description "A name that appears in the \"From:\" header for mail sent using this alias. For custom \"from\" addresses, when this is empty, Gmail will populate the \"From:\" header with the name that is used for the primary address associated with the account. If the admin has disabled the ability for users to update their name format, requests to update this field for the primary login will silently fail."},
                       :isPrimary {:type "boolean",
                                   :description "Whether this address is the primary address used to login to the account. Every Gmail account has exactly one primary address, and it cannot be deleted from the collection of send-as aliases. This field is read-only."},
                       :signature {:type "string",
                                   :description "An optional HTML signature that is included in messages composed with this alias in the Gmail web UI."},
                       :sendAsEmail {:type "string",
                                     :description "The email address that appears in the \"From:\" header for mail sent using this alias. This is read-only for all operations except create."},
                       :verificationStatus {:type "string",
                                            :description "Indicates whether this address has been verified for use as a send-as alias. Read-only. This setting only applies to custom \"from\" aliases.",
                                            :enum ["accepted"
                                                   "pending"
                                                   "verificationStatusUnspecified"],
                                            :enumDescriptions [""
                                                               ""
                                                               ""]},
                       :replyToAddress {:type "string",
                                        :description "An optional email address that is included in a \"Reply-To:\" header for mail sent using this alias. If this is empty, Gmail will not generate a \"Reply-To:\" header."},
                       :smtpMsa {:$ref "SmtpMsa",
                                 :description "An optional SMTP service that will be used as an outbound relay for mail sent using this alias. If this is empty, outbound mail will be sent directly from Gmail's servers to the destination SMTP service. This setting only applies to custom \"from\" aliases."}}},
 :ModifyThreadRequest {:id "ModifyThreadRequest",
                       :type "object",
                       :properties {:addLabelIds {:type "array",
                                                  :description "A list of IDs of labels to add to this thread.",
                                                  :items {:type "string"}},
                                    :removeLabelIds {:type "array",
                                                     :description "A list of IDs of labels to remove from this thread.",
                                                     :items {:type "string"}}}},
 :LabelColor {:id "LabelColor",
              :type "object",
              :properties {:backgroundColor {:type "string",
                                             :description "The background color represented as hex string #RRGGBB (ex #000000). This field is required in order to set the color of a label. Only the following predefined set of color values are allowed:\n#000000, #434343, #666666, #999999, #cccccc, #efefef, #f3f3f3, #ffffff, #fb4c2f, #ffad47, #fad165, #16a766, #43d692, #4a86e8, #a479e2, #f691b3, #f6c5be, #ffe6c7, #fef1d1, #b9e4d0, #c6f3de, #c9daf8, #e4d7f5, #fcdee8, #efa093, #ffd6a2, #fce8b3, #89d3b2, #a0eac9, #a4c2f4, #d0bcf1, #fbc8d9, #e66550, #ffbc6b, #fcda83, #44b984, #68dfa9, #6d9eeb, #b694e8, #f7a7c0, #cc3a21, #eaa041, #f2c960, #149e60, #3dc789, #3c78d8, #8e63ce, #e07798, #ac2b16, #cf8933, #d5ae49, #0b804b, #2a9c68, #285bac, #653e9b, #b65775, #822111, #a46a21, #aa8831, #076239, #1a764d, #1c4587, #41236d, #83334c #464646, #e7e7e7, #0d3472, #b6cff5, #0d3b44, #98d7e4, #3d188e, #e3d7ff, #711a36, #fbd3e0, #8a1c0a, #f2b2a8, #7a2e0b, #ffc8af, #7a4706, #ffdeb5, #594c05, #fbe983, #684e07, #fdedc1, #0b4f30, #b3efd3, #04502e, #a2dcc1, #c2c2c2, #4986e7, #2da2bb, #b99aff, #994a64, #f691b2, #ff7537, #ffad46, #662e37, #ebdbde, #cca6ac, #094228, #42d692, #16a765"},
                           :textColor {:type "string",
                                       :description "The text color of the label, represented as hex string. This field is required in order to set the color of a label. Only the following predefined set of color values are allowed:\n#000000, #434343, #666666, #999999, #cccccc, #efefef, #f3f3f3, #ffffff, #fb4c2f, #ffad47, #fad165, #16a766, #43d692, #4a86e8, #a479e2, #f691b3, #f6c5be, #ffe6c7, #fef1d1, #b9e4d0, #c6f3de, #c9daf8, #e4d7f5, #fcdee8, #efa093, #ffd6a2, #fce8b3, #89d3b2, #a0eac9, #a4c2f4, #d0bcf1, #fbc8d9, #e66550, #ffbc6b, #fcda83, #44b984, #68dfa9, #6d9eeb, #b694e8, #f7a7c0, #cc3a21, #eaa041, #f2c960, #149e60, #3dc789, #3c78d8, #8e63ce, #e07798, #ac2b16, #cf8933, #d5ae49, #0b804b, #2a9c68, #285bac, #653e9b, #b65775, #822111, #a46a21, #aa8831, #076239, #1a764d, #1c4587, #41236d, #83334c #464646, #e7e7e7, #0d3472, #b6cff5, #0d3b44, #98d7e4, #3d188e, #e3d7ff, #711a36, #fbd3e0, #8a1c0a, #f2b2a8, #7a2e0b, #ffc8af, #7a4706, #ffdeb5, #594c05, #fbe983, #684e07, #fdedc1, #0b4f30, #b3efd3, #04502e, #a2dcc1, #c2c2c2, #4986e7, #2da2bb, #b99aff, #994a64, #f691b2, #ff7537, #ffad46, #662e37, #ebdbde, #cca6ac, #094228, #42d692, #16a765"}}},
 :MessagePartBody {:id "MessagePartBody",
                   :type "object",
                   :description "The body of a single MIME message part.",
                   :properties {:attachmentId {:type "string",
                                               :description "When present, contains the ID of an external attachment that can be retrieved in a separate messages.attachments.get request. When not present, the entire content of the message part body is contained in the data field."},
                                :data {:type "string",
                                       :description "The body data of a MIME message part as a base64url encoded string. May be empty for MIME container types that have no message body or when the body data is sent as a separate attachment. An attachment ID is present if the body data is contained in a separate attachment.",
                                       :format "byte"},
                                :size {:type "integer",
                                       :description "Number of bytes for the message part data (encoding notwithstanding).",
                                       :format "int32"}}},
 :ListLabelsResponse {:id "ListLabelsResponse",
                      :type "object",
                      :properties {:labels {:type "array",
                                            :description "List of labels. Note that each label resource only contains an id, name, messageListVisibility, labelListVisibility, and type. The labels.get method can fetch additional label details.",
                                            :items {:$ref "Label"}}}},
 :BatchDeleteMessagesRequest {:id "BatchDeleteMessagesRequest",
                              :type "object",
                              :properties {:ids {:type "array",
                                                 :description "The IDs of the messages to delete.",
                                                 :items {:type "string"}}}},
 :Delegate {:id "Delegate",
            :type "object",
            :description "Settings for a delegate. Delegates can read, send, and delete messages, as well as view and add contacts, for the delegator's account. See \"Set up mail delegation\" for more information about delegates.",
            :properties {:delegateEmail {:type "string",
                                         :description "The email address of the delegate."},
                         :verificationStatus {:type "string",
                                              :description "Indicates whether this address has been verified and can act as a delegate for the account. Read-only.",
                                              :enum ["accepted"
                                                     "expired"
                                                     "pending"
                                                     "rejected"
                                                     "verificationStatusUnspecified"],
                                              :enumDescriptions [""
                                                                 ""
                                                                 ""
                                                                 ""
                                                                 ""]}}},
 :SmtpMsa {:id "SmtpMsa",
           :type "object",
           :description "Configuration for communication with an SMTP service.",
           :properties {:host {:type "string",
                               :description "The hostname of the SMTP service. Required."},
                        :password {:type "string",
                                   :description "The password that will be used for authentication with the SMTP service. This is a write-only field that can be specified in requests to create or update SendAs settings; it is never populated in responses."},
                        :port {:type "integer",
                               :description "The port of the SMTP service. Required.",
                               :format "int32"},
                        :securityMode {:type "string",
                                       :description "The protocol that will be used to secure communication with the SMTP service. Required.",
                                       :enum ["none"
                                              "securityModeUnspecified"
                                              "ssl"
                                              "starttls"],
                                       :enumDescriptions ["" "" "" ""]},
                        :username {:type "string",
                                   :description "The username that will be used for authentication with the SMTP service. This is a write-only field that can be specified in requests to create or update SendAs settings; it is never populated in responses."}}},
 :ForwardingAddress {:id "ForwardingAddress",
                     :type "object",
                     :description "Settings for a forwarding address.",
                     :properties {:forwardingEmail {:type "string",
                                                    :description "An email address to which messages can be forwarded."},
                                  :verificationStatus {:type "string",
                                                       :description "Indicates whether this address has been verified and is usable for forwarding. Read-only.",
                                                       :enum ["accepted"
                                                              "pending"
                                                              "verificationStatusUnspecified"],
                                                       :enumDescriptions [""
                                                                          ""
                                                                          ""]}}},
 :SmimeInfo {:id "SmimeInfo",
             :type "object",
             :description "An S/MIME email config.",
             :properties {:encryptedKeyPassword {:type "string",
                                                 :description "Encrypted key password, when key is encrypted."},
                          :expiration {:type "string",
                                       :description "When the certificate expires (in milliseconds since epoch).",
                                       :format "int64"},
                          :id {:type "string",
                               :description "The immutable ID for the SmimeInfo."},
                          :isDefault {:type "boolean",
                                      :description "Whether this SmimeInfo is the default one for this user's send-as address."},
                          :issuerCn {:type "string",
                                     :description "The S/MIME certificate issuer's common name."},
                          :pem {:type "string",
                                :description "PEM formatted X509 concatenated certificate string (standard base64 encoding). Format used for returning key, which includes public key as well as certificate chain (not private key)."},
                          :pkcs12 {:type "string",
                                   :description "PKCS#12 format containing a single private/public key pair and certificate chain. This format is only accepted from client for creating a new SmimeInfo and is never returned, because the private key is not intended to be exported. PKCS#12 may be encrypted, in which case encryptedKeyPassword should be set appropriately.",
                                   :format "byte"}}},
 :LanguageSettings {:id "LanguageSettings",
                    :type "object",
                    :description "Language settings for an account. These settings correspond to the \"Language settings\" feature in the web interface.",
                    :properties {:displayLanguage {:type "string",
                                                   :description "The language to display Gmail in, formatted as an RFC 3066 Language Tag (for example en-GB, fr or ja for British English, French, or Japanese respectively).\n\nThe set of languages supported by Gmail evolves over time, so please refer to the \"Language\" dropdown in the Gmail settings  for all available options, as described in the language settings help article. A table of sample values is also provided in the Managing Language Settings guide \n\nNot all Gmail clients can display the same set of languages. In the case that a user's display language is not available for use on a particular client, said client automatically chooses to display in the closest supported variant (or a reasonable default)."}}},
 :FilterAction {:id "FilterAction",
                :type "object",
                :description "A set of actions to perform on a message.",
                :properties {:addLabelIds {:type "array",
                                           :description "List of labels to add to the message.",
                                           :items {:type "string"}},
                             :forward {:type "string",
                                       :description "Email address that the message should be forwarded to."},
                             :removeLabelIds {:type "array",
                                              :description "List of labels to remove from the message.",
                                              :items {:type "string"}}}},
 :HistoryLabelRemoved {:id "HistoryLabelRemoved",
                       :type "object",
                       :properties {:labelIds {:type "array",
                                               :description "Label IDs removed from the message.",
                                               :items {:type "string"}},
                                    :message {:$ref "Message"}}}}
