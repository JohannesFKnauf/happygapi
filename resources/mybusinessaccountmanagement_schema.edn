{:Invitation {:description "Represents a pending invitation.",
              :properties {:targetAccount {:description "The sparsely populated account this invitation is for.",
                                           :$ref "Account"},
                           :role {:type "string",
                                  :enumDescriptions ["Not specified."
                                                     "The admin has owner-level access and is the primary owner. (Displays as 'Primary Owner' in UI)."
                                                     "The admin has owner-level access. (Displays as 'Owner' in UI)."
                                                     "The admin has managerial access."
                                                     "The admin can manage social (Google+) pages. (Displays as 'Site Manager' in UI). This API doesn't allow creating an account admin with a SITE_MANAGER role."],
                                  :readOnly true,
                                  :description "Output only. The invited role on the account.",
                                  :enum ["ADMIN_ROLE_UNSPECIFIED"
                                         "PRIMARY_OWNER"
                                         "OWNER"
                                         "MANAGER"
                                         "SITE_MANAGER"]},
                           :name {:description "Required. The resource name for the invitation. `accounts/{account_id}/invitations/{invitation_id}`.",
                                  :type "string"},
                           :targetType {:readOnly true,
                                        :enumDescriptions ["Set when target type is unspecified."
                                                           "List invitations only for targets of type Account."
                                                           "List invitations only for targets of type Location."],
                                        :type "string",
                                        :enum ["TARGET_TYPE_UNSPECIFIED"
                                               "ACCOUNTS_ONLY"
                                               "LOCATIONS_ONLY"],
                                        :description "Output only. Specifies which target types should appear in the response."},
                           :targetLocation {:description "The target location this invitation is for.",
                                            :$ref "TargetLocation"}},
              :type "object",
              :id "Invitation"},
 :ListAccountAdminsResponse {:properties {:accountAdmins {:description "A collection of Admin instances.",
                                                          :items {:$ref "Admin"},
                                                          :type "array"}},
                             :description "Response message for AccessControl.ListAccountAdmins.",
                             :id "ListAccountAdminsResponse",
                             :type "object"},
 :ListAccountsResponse {:properties {:accounts {:description "A collection of accounts to which the user has access. The personal account of the user doing the query will always be the first item of the result, unless it is filtered out.",
                                                :type "array",
                                                :items {:$ref "Account"}},
                                     :nextPageToken {:type "string",
                                                     :description "If the number of accounts exceeds the requested page size, this field is populated with a token to fetch the next page of accounts on a subsequent call to `accounts.list`. If there are no more accounts, this field is not present in the response."}},
                        :description "Response message for Accounts.ListAccounts.",
                        :type "object",
                        :id "ListAccountsResponse"},
 :Admin {:properties {:role {:enum ["ADMIN_ROLE_UNSPECIFIED"
                                    "PRIMARY_OWNER"
                                    "OWNER"
                                    "MANAGER"
                                    "SITE_MANAGER"],
                             :description "Required. Specifies the role that this admin uses with the specified Account or Location.",
                             :type "string",
                             :enumDescriptions ["Not specified."
                                                "The admin has owner-level access and is the primary owner. (Displays as 'Primary Owner' in UI)."
                                                "The admin has owner-level access. (Displays as 'Owner' in UI)."
                                                "The admin has managerial access."
                                                "The admin can manage social (Google+) pages. (Displays as 'Site Manager' in UI). This API doesn't allow creating an account admin with a SITE_MANAGER role."]},
                      :admin {:description "Optional. The name of the admin. When making the initial invitation, this is the invitee's email address. On `GET` calls, the user's email address is returned if the invitation is still pending. Otherwise, it contains the user's first and last names. This field is only needed to be set during admin creation.",
                              :type "string"},
                      :pendingInvitation {:type "boolean",
                                          :readOnly true,
                                          :description "Output only. Indicates whether this admin has a pending invitation for the specified resource."},
                      :name {:description "Immutable. The resource name. For account admins, this is in the form: `accounts/{account_id}/admins/{admin_id}` For location admins, this is in the form: `locations/{location_id}/admins/{admin_id}` This field will be ignored if set during admin creation.",
                             :type "string"}},
         :id "Admin",
         :type "object",
         :description "An administrator of an Account or a location."},
 :ListLocationAdminsResponse {:description "Response message for AccessControl.ListLocationAdmins.",
                              :properties {:admins {:type "array",
                                                    :items {:$ref "Admin"},
                                                    :description "A collection of Admins."}},
                              :id "ListLocationAdminsResponse",
                              :type "object"},
 :ListInvitationsResponse {:type "object",
                           :description "Response message for AccessControl.ListInvitations.",
                           :properties {:invitations {:description "A collection of invitations that are pending for the account. The number of invitations listed here cannot exceed 1000.",
                                                      :type "array",
                                                      :items {:$ref "Invitation"}}},
                           :id "ListInvitationsResponse"},
 :DeclineInvitationRequest {:properties {},
                            :type "object",
                            :description "Request message for AccessControl.DeclineInvitation.",
                            :id "DeclineInvitationRequest"},
 :Empty {:properties {},
         :description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
         :type "object",
         :id "Empty"},
 :PostalAddress {:id "PostalAddress",
                 :properties {:sortingCode {:type "string",
                                            :description "Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like \"CEDEX\", optionally followed by a number (e.g. \"CEDEX 7\"), or just a number alone, representing the \"sector code\" (Jamaica), \"delivery area indicator\" (Malawi) or \"post office indicator\" (e.g. CÃ´te d'Ivoire)."},
                              :locality {:type "string",
                                         :description "Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines."},
                              :revision {:type "integer",
                                         :description "The schema revision of the `PostalAddress`. This must be set to 0, which is the latest revision. All new revisions **must** be backward compatible with old revisions.",
                                         :format "int32"},
                              :administrativeArea {:description "Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. \"Barcelona\" and not \"Catalonia\"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated.",
                                                   :type "string"},
                              :addressLines {:type "array",
                                             :items {:type "string"},
                                             :description "Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. \"Austin, TX\"), it is important that the line order is clear. The order of address lines should be \"envelope order\" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. \"ja\" for large-to-small ordering and \"ja-Latn\" or \"en\" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas)."},
                              :organization {:description "Optional. The name of the organization at the address.",
                                             :type "string"},
                              :recipients {:description "Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain \"care of\" information.",
                                           :items {:type "string"},
                                           :type "array"},
                              :languageCode {:type "string",
                                             :description "Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: \"zh-Hant\", \"ja\", \"ja-Latn\", \"en\"."},
                              :regionCode {:type "string",
                                           :description "Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See http://cldr.unicode.org/ and http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: \"CH\" for Switzerland."},
                              :postalCode {:description "Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.).",
                                           :type "string"},
                              :sublocality {:description "Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts.",
                                            :type "string"}},
                 :description "Represents a postal address, e.g. for postal delivery or payments addresses. Given a postal address, a postal service can deliver items to a premise, P.O. Box or similar. It is not intended to model geographical locations (roads, towns, mountains). In typical usage an address would be created via user input or from importing existing data, depending on the type of process. Advice on address input / editing: - Use an i18n-ready address widget such as https://github.com/google/libaddressinput) - Users should not be presented with UI elements for input or editing of fields outside countries where that field is used. For more guidance on how to use this schema, please see: https://support.google.com/business/answer/6397478",
                 :type "object"},
 :TransferLocationRequest {:description "Request message for AccessControl.TransferLocation.",
                           :type "object",
                           :properties {:destinationAccount {:type "string",
                                                             :description "Required. Name of the account resource to transfer the location to (for example, \"accounts/{account}\")."}},
                           :id "TransferLocationRequest"},
 :Account {:properties {:role {:readOnly true,
                               :description "Output only. Specifies the AccountRole of this account.",
                               :type "string",
                               :enumDescriptions ["Not specified."
                                                  "The user is the primary owner this account."
                                                  "The user owner of the account."
                                                  "The user can manage this account."
                                                  "The user can manage a limited set of features for the account."],
                               :enum ["ACCOUNT_ROLE_UNSPECIFIED"
                                      "PRIMARY_OWNER"
                                      "OWNER"
                                      "MANAGER"
                                      "SITE_MANAGER"]},
                        :vettedState {:enumDescriptions ["Not Specified"
                                                         "The account is not vetted by Google."
                                                         "The account is vetted by Google and in a valid state. An account is automatically vetted if it has direct access to a vetted group account."
                                                         "The account is vetted but in an invalid state. The account will behave like an unvetted account."],
                                      :description "Output only. Indicates whether the account is vetted by Google. A vetted account is able to verify locations via the VETTED_PARTNER method.",
                                      :enum ["VETTED_STATE_UNSPECIFIED"
                                             "NOT_VETTED"
                                             "VETTED"
                                             "INVALID"],
                                      :type "string",
                                      :readOnly true},
                        :primaryOwner {:type "string",
                                       :description "Required. Input only. The resource name of the account which will be the primary owner of the account being created. It should be of the form `accounts/{account_id}/`."},
                        :accountNumber {:description "Output only. Account reference number if provisioned.",
                                        :readOnly true,
                                        :type "string"},
                        :name {:type "string",
                               :description "Immutable. The resource name, in the format `accounts/{account_id}`."},
                        :accountName {:type "string",
                                      :description "Required. The name of the account. For an account of type `PERSONAL`, this is the first and last name of the user account."},
                        :type {:enum ["ACCOUNT_TYPE_UNSPECIFIED"
                                      "PERSONAL"
                                      "LOCATION_GROUP"
                                      "USER_GROUP"
                                      "ORGANIZATION"],
                               :description "Required. Contains the type of account. Accounts of type PERSONAL and ORGANIZATION cannot be created using this API.",
                               :type "string",
                               :enumDescriptions ["Not specified."
                                                  "An end-user account."
                                                  "A group of Locations. For more information, see the [help center article] (https://support.google.com/business/answer/6085326)"
                                                  "A User Group for segregating organization staff in groups. For more information, see the [help center article](https://support.google.com/business/answer/7655731)"
                                                  "An organization representing a company. For more information, see the [help center article](https://support.google.com/business/answer/7663063)"]},
                        :verificationState {:readOnly true,
                                            :enum ["VERIFICATION_STATE_UNSPECIFIED"
                                                   "VERIFIED"
                                                   "UNVERIFIED"
                                                   "VERIFICATION_REQUESTED"],
                                            :type "string",
                                            :description "Output only. If verified, future locations that are created are automatically connected to Google Maps, and have Google+ pages created, without requiring moderation.",
                                            :enumDescriptions ["Not specified."
                                                               "Verified account."
                                                               "Account that is not verified, and verification has not been requested."
                                                               "Account that is not verified, but verification has been requested."]},
                        :organizationInfo {:description "Output only. Additional info for an organization. This is populated only for an organization account.",
                                           :readOnly true,
                                           :$ref "OrganizationInfo"},
                        :permissionLevel {:type "string",
                                          :enumDescriptions ["Not specified."
                                                             "The user has owner level permission."
                                                             "The user has member level permission."],
                                          :description "Output only. Specifies the permission level the user has for this account.",
                                          :readOnly true,
                                          :enum ["PERMISSION_LEVEL_UNSPECIFIED"
                                                 "OWNER_LEVEL"
                                                 "MEMBER_LEVEL"]}},
           :description "An account is a container for your location. If you are the only user who manages locations for your business, you can use your personal Google Account. To share management of locations with multiple users, [create a business account] (https://support.google.com/business/answer/6085339?ref_topic=6085325).",
           :id "Account",
           :type "object"},
 :OrganizationInfo {:properties {:phoneNumber {:readOnly true,
                                               :type "string",
                                               :description "Output only. The contact number for the organization."},
                                 :registeredDomain {:description "Output only. The registered domain for the account.",
                                                    :type "string",
                                                    :readOnly true},
                                 :address {:readOnly true,
                                           :$ref "PostalAddress",
                                           :description "Output only. The postal address for the account."}},
                    :type "object",
                    :id "OrganizationInfo",
                    :description "Additional information stored for an organization."},
 :TargetLocation {:type "object",
                  :properties {:address {:type "string",
                                         :description "The address of the location to which the user is invited."},
                               :locationName {:type "string",
                                              :description "The name of the location to which the user is invited."}},
                  :description "Represents a target location for a pending invitation.",
                  :id "TargetLocation"},
 :AcceptInvitationRequest {:description "Request message for AccessControl.AcceptInvitation.",
                           :properties {},
                           :type "object",
                           :id "AcceptInvitationRequest"}}
