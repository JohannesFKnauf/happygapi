{:GenerateIdTokenRequest {:id "GenerateIdTokenRequest",
                          :type "object",
                          :properties {:includeEmail {:description "Include the service account email in the token. If set to `true`, the\ntoken will contain `email` and `email_verified` claims.",
                                                      :type "boolean"},
                                       :delegates {:description "The sequence of service accounts in a delegation chain. Each service\naccount must be granted the `roles/iam.serviceAccountTokenCreator` role\non its next service account in the chain. The last service account in the\nchain must be granted the `roles/iam.serviceAccountTokenCreator` role\non the service account that is specified in the `name` field of the\nrequest.\n\nThe delegates must have the following format:\n`projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard\ncharacter is required; replacing it with a project ID is invalid.",
                                                   :type "array",
                                                   :items {:type "string"}},
                                       :audience {:description "Required. The audience for the token, such as the API or account that this token\ngrants access to.",
                                                  :type "string"}}},
 :GenerateIdTokenResponse {:type "object",
                           :properties {:token {:description "The OpenId Connect ID token.",
                                                :type "string"}},
                           :id "GenerateIdTokenResponse"},
 :GenerateAccessTokenResponse {:type "object",
                               :properties {:accessToken {:description "The OAuth 2.0 access token.",
                                                          :type "string"},
                                            :expireTime {:description "Token expiration time.\nThe expiration time is always set.",
                                                         :format "google-datetime",
                                                         :type "string"}},
                               :id "GenerateAccessTokenResponse"},
 :GenerateAccessTokenRequest {:type "object",
                              :properties {:scope {:description "Required. Code to identify the scopes to be included in the OAuth 2.0 access token.\nSee https://developers.google.com/identity/protocols/googlescopes for more\ninformation.\nAt least one value required.",
                                                   :type "array",
                                                   :items {:type "string"}},
                                           :delegates {:type "array",
                                                       :items {:type "string"},
                                                       :description "The sequence of service accounts in a delegation chain. Each service\naccount must be granted the `roles/iam.serviceAccountTokenCreator` role\non its next service account in the chain. The last service account in the\nchain must be granted the `roles/iam.serviceAccountTokenCreator` role\non the service account that is specified in the `name` field of the\nrequest.\n\nThe delegates must have the following format:\n`projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard\ncharacter is required; replacing it with a project ID is invalid."},
                                           :lifetime {:description "The desired lifetime duration of the access token in seconds.\nMust be set to a value less than or equal to 3600 (1 hour). If a value is\nnot specified, the token's lifetime will be set to a default value of one\nhour.",
                                                      :format "google-duration",
                                                      :type "string"}},
                              :id "GenerateAccessTokenRequest"},
 :SignBlobRequest {:type "object",
                   :properties {:payload {:description "Required. The bytes to sign.",
                                          :format "byte",
                                          :type "string"},
                                :delegates {:description "The sequence of service accounts in a delegation chain. Each service\naccount must be granted the `roles/iam.serviceAccountTokenCreator` role\non its next service account in the chain. The last service account in the\nchain must be granted the `roles/iam.serviceAccountTokenCreator` role\non the service account that is specified in the `name` field of the\nrequest.\n\nThe delegates must have the following format:\n`projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard\ncharacter is required; replacing it with a project ID is invalid.",
                                            :type "array",
                                            :items {:type "string"}}},
                   :id "SignBlobRequest"},
 :SignJwtResponse {:type "object",
                   :properties {:keyId {:description "The ID of the key used to sign the JWT.",
                                        :type "string"},
                                :signedJwt {:description "The signed JWT.",
                                            :type "string"}},
                   :id "SignJwtResponse"},
 :SignBlobResponse {:type "object",
                    :properties {:keyId {:description "The ID of the key used to sign the blob.",
                                         :type "string"},
                                 :signedBlob {:description "The signed blob.",
                                              :format "byte",
                                              :type "string"}},
                    :id "SignBlobResponse"},
 :SignJwtRequest {:type "object",
                  :properties {:payload {:description "Required. The JWT payload to sign: a JSON object that contains a JWT Claims Set.",
                                         :type "string"},
                               :delegates {:description "The sequence of service accounts in a delegation chain. Each service\naccount must be granted the `roles/iam.serviceAccountTokenCreator` role\non its next service account in the chain. The last service account in the\nchain must be granted the `roles/iam.serviceAccountTokenCreator` role\non the service account that is specified in the `name` field of the\nrequest.\n\nThe delegates must have the following format:\n`projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard\ncharacter is required; replacing it with a project ID is invalid.",
                                           :type "array",
                                           :items {:type "string"}}},
                  :id "SignJwtRequest"}}
