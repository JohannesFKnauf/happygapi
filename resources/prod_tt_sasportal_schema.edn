{:SasPortalDeviceMetadata {:type "object",
                           :id "SasPortalDeviceMetadata",
                           :description "Device data overridable by both SAS Portal and registration requests.",
                           :properties {}},
 :SasPortalSignDeviceRequest {:description "Request for SignDevice method.",
                              :properties {:device {:$ref "SasPortalDevice",
                                                    :description "Required. The device to sign. The device fields name, fcc_id and serial_number must be set. The user_id field must be set."}},
                              :type "object",
                              :id "SasPortalSignDeviceRequest"},
 :SasPortalDeviceModel {:id "SasPortalDeviceModel",
                        :properties {:name {:type "string",
                                            :description "The name of the device model."},
                                     :softwareVersion {:type "string",
                                                       :description "The software version of the device."},
                                     :vendor {:type "string",
                                              :description "The name of the device vendor."},
                                     :hardwareVersion {:description "The hardware version of the device.",
                                                       :type "string"},
                                     :firmwareVersion {:description "The firmware version of the device.",
                                                       :type "string"}},
                        :description "Information about the model of the device.",
                        :type "object"},
 :SasPortalGetPolicyRequest {:description "Request message for `GetPolicy` method.",
                             :type "object",
                             :properties {:resource {:description "Required. The resource for which the policy is being requested.",
                                                     :type "string"}},
                             :id "SasPortalGetPolicyRequest"},
 :SasPortalNode {:type "object",
                 :description "The Node.",
                 :id "SasPortalNode",
                 :properties {:sasUserIds {:type "array",
                                           :items {:type "string"},
                                           :description "User ids used by the devices belonging to this node."},
                              :name {:type "string",
                                     :description "Output only. Resource name."},
                              :displayName {:type "string",
                                            :description "The node's display name."}}},
 :SasPortalEmpty {:type "object",
                  :properties {},
                  :description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
                  :id "SasPortalEmpty"},
 :SasPortalGenerateSecretRequest {:properties {},
                                  :type "object",
                                  :id "SasPortalGenerateSecretRequest",
                                  :description "Request for GenerateSecret method] [spectrum.sas.portal.v1alpha1.DeviceManager.GenerateSecret]."},
 :SasPortalOperation {:id "SasPortalOperation",
                      :description "This resource represents a long-running operation that is the result of a network API call.",
                      :properties {:error {:$ref "SasPortalStatus",
                                           :description "The error result of the operation in case of failure or cancellation."},
                                   :metadata {:type "object",
                                              :description "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                                              :additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                                     :type "any"}},
                                   :response {:additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                                     :type "any"},
                                              :description "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                                              :type "object"},
                                   :done {:type "boolean",
                                          :description "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."},
                                   :name {:type "string",
                                          :description "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."}},
                      :type "object"},
 :SasPortalValidateInstallerRequest {:properties {:encodedSecret {:type "string",
                                                                  :description "Required. JSON Web Token signed using a CPI private key. Payload must include a \"secret\" claim whose value is the secret."},
                                                  :secret {:description "Required. Secret returned by the GenerateSecret method.",
                                                           :type "string"},
                                                  :installerId {:description "Required. Unique installer id (cpiId) from the Certified Professional Installers database.",
                                                                :type "string"}},
                                     :type "object",
                                     :id "SasPortalValidateInstallerRequest",
                                     :description "Request for ValidateInstaller method."},
 :SasPortalBulkCreateDeviceResponse {:properties {:devices {:items {:$ref "SasPortalDevice"},
                                                            :description "Required. The devices that were imported.",
                                                            :type "array"}},
                                     :type "object",
                                     :id "SasPortalBulkCreateDeviceResponse",
                                     :description "Response for BulkCreateDevice method."},
 :SasPortalValidateInstallerResponse {:type "object",
                                      :properties {},
                                      :description "Response for ValidateInstaller method] [spectrum.sas.portal.v1alpha1.DeviceManager.ValidateInstaller].",
                                      :id "SasPortalValidateInstallerResponse"},
 :SasPortalDpaMoveList {:type "object",
                        :id "SasPortalDpaMoveList",
                        :description "An entry in a DPA's move list.",
                        :properties {:frequencyRange {:description "The frequency range that the move list affects.",
                                                      :$ref "SasPortalFrequencyRange"},
                                     :dpaId {:description "The ID of the DPA.",
                                             :type "string"}}},
 :SasPortalSetPolicyRequest {:properties {:resource {:description "Required. The resource for which the policy is being specified. This policy replaces any existing policy.",
                                                     :type "string"},
                                          :policy {:$ref "SasPortalPolicy",
                                                   :description "Required. The policy to be applied to the `resource`."}},
                             :id "SasPortalSetPolicyRequest",
                             :description "Request message for `SetPolicy` method.",
                             :type "object"},
 :SasPortalPolicy {:id "SasPortalPolicy",
                   :description "Defines an access control policy to the resources.",
                   :type "object",
                   :properties {:etag {:description "The [etag] is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the [etag] in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An [etag] is returned in the response to [GetPolicy], and systems are expected to put that etag in the request to [SetPolicy] to ensure that their change will be applied to the same version of the policy. If no [etag] is provided in the call to [SetPolicy], then the existing policy is overwritten blindly.",
                                       :type "string",
                                       :format "byte"},
                                :assignments {:items {:$ref "SasPortalAssignment"},
                                              :type "array"}}},
 :SasPortalBulkCreateDeviceRequest {:id "SasPortalBulkCreateDeviceRequest",
                                    :type "object",
                                    :properties {:csv {:description "Required. A csv with each row representing a [device]. Each row must conform to the regulations described on CreateDeviceRequest's device field.",
                                                       :type "string"}},
                                    :description "Request for BulkCreateDevice method."},
 :SasPortalUpdateSignedDeviceRequest {:id "SasPortalUpdateSignedDeviceRequest",
                                      :description "Request for UpdateSignedDevice method.",
                                      :properties {:installerId {:description "Required. Unique installer ID (CPI ID) from the Certified Professional Installers database.",
                                                                 :type "string"},
                                                   :encodedDevice {:type "string",
                                                                   :description "Required. The JSON Web Token signed using a CPI private key. Payload must be the JSON encoding of the device. The user_id field must be set.",
                                                                   :format "byte"}},
                                      :type "object"},
 :SasPortalTestPermissionsResponse {:id "SasPortalTestPermissionsResponse",
                                    :description "Response message for `TestPermissions` method.",
                                    :properties {:permissions {:type "array",
                                                               :description "A set of permissions that the caller is allowed.",
                                                               :items {:type "string"}}},
                                    :type "object"},
 :SasPortalMoveDeviceRequest {:description "Request for MoveDevice method.",
                              :type "object",
                              :properties {:destination {:type "string",
                                                         :description "Required. The name of the new parent resource (Node or Customer) to reparent the device under."}},
                              :id "SasPortalMoveDeviceRequest"},
 :SasPortalStatus {:type "object",
                   :description "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
                   :id "SasPortalStatus",
                   :properties {:message {:description "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
                                          :type "string"},
                                :code {:description "The status code, which should be an enum value of google.rpc.Code.",
                                       :type "integer",
                                       :format "int32"},
                                :details {:description "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                                          :type "array",
                                          :items {:type "object",
                                                  :additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                                         :type "any"}}}}},
 :SasPortalListCustomersResponse {:description "Response for `ListCustomers`.",
                                  :id "SasPortalListCustomersResponse",
                                  :type "object",
                                  :properties {:customers {:items {:$ref "SasPortalCustomer"},
                                                           :type "array",
                                                           :description "The list of customers that match the request."},
                                               :nextPageToken {:description "A pagination token returned from a previous call to ListCustomers method that indicates from where listing should continue. If the field is missing or empty, it means there are no more customers.",
                                                               :type "string"}}},
 :SasPortalInstallationParams {:id "SasPortalInstallationParams",
                               :properties {:antennaDowntilt {:format "int32",
                                                              :type "integer",
                                                              :description "Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices."},
                                            :cpeCbsdIndication {:description "If present, this parameter specifies whether the CBSD is a CPE-CBSD or not.",
                                                                :type "boolean"},
                                            :indoorDeployment {:type "boolean",
                                                               :description "Whether the device antenna is indoor or not. True: indoor. False: outdoor."},
                                            :eirpCapability {:description "This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category.",
                                                             :format "int32",
                                                             :type "integer"},
                                            :heightType {:description "Specifies how the height is measured.",
                                                         :type "string",
                                                         :enumDescriptions ["Unspecified height type."
                                                                            "AGL height is measured relative to the ground level."
                                                                            "AMSL height is measured relative to the mean sea level."],
                                                         :enum ["HEIGHT_TYPE_UNSPECIFIED"
                                                                "HEIGHT_TYPE_AGL"
                                                                "HEIGHT_TYPE_AMSL"]},
                                            :antennaGain {:format "int32",
                                                          :description "Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive.",
                                                          :type "integer"},
                                            :antennaModel {:type "string",
                                                           :description "If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets."},
                                            :horizontalAccuracy {:description "A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters.",
                                                                 :format "double",
                                                                 :type "number"},
                                            :longitude {:format "double",
                                                        :description "Longitude of the device antenna location. in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian.",
                                                        :type "number"},
                                            :antennaBeamwidth {:type "integer",
                                                               :format "int32",
                                                               :description "3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices."},
                                            :verticalAccuracy {:description "A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters.",
                                                               :type "number",
                                                               :format "double"},
                                            :latitude {:format "double",
                                                       :description "Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator.",
                                                       :type "number"},
                                            :antennaAzimuth {:format "int32",
                                                             :description "Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices.",
                                                             :type "integer"},
                                            :height {:format "double",
                                                     :description "Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum.",
                                                     :type "number"}},
                               :type "object",
                               :description "Information about the device installation parameters."},
 :SasPortalAssignment {:id "SasPortalAssignment",
                       :type "object",
                       :properties {:members {:description "The identities the role is assigned to. It can have the following values: * `{user_email}`: An email address that represents a specific Google account. For example: `alice@gmail.com`. * `{group_email}`: An email address that represents a Google group. For example, `viewers@gmail.com`.",
                                              :items {:type "string"},
                                              :type "array"},
                                    :role {:description "Required. Role that is assigned to `members`.",
                                           :type "string"}},
                       :description "Associates `members` with a `role`."},
 :SasPortalCustomer {:description "Entity representing a SAS customer.",
                     :properties {:displayName {:type "string",
                                                :description "Required. Name of the organization that the customer entity represents."},
                                  :name {:type "string",
                                         :description "Output only. Resource name of the customer."},
                                  :sasUserIds {:items {:type "string"},
                                               :type "array",
                                               :description "User IDs used by the devices belonging to this customer."}},
                     :type "object",
                     :id "SasPortalCustomer"},
 :SasPortalDeviceGrant {:properties {:moveList {:items {:$ref "SasPortalDpaMoveList"},
                                                :type "array",
                                                :description "The DPA move lists on which this grant appears."},
                                     :state {:enumDescriptions [""
                                                                "The grant has been granted but the device is not heartbeating on it."
                                                                "The grant has been terminated by the SAS."
                                                                "The grant has been suspended by the SAS."
                                                                "The device is currently transmitting."
                                                                "The grant has expired."],
                                             :type "string",
                                             :enum ["GRANT_STATE_UNSPECIFIED"
                                                    "GRANT_STATE_GRANTED"
                                                    "GRANT_STATE_TERMINATED"
                                                    "GRANT_STATE_SUSPENDED"
                                                    "GRANT_STATE_AUTHORIZED"
                                                    "GRANT_STATE_EXPIRED"],
                                             :description "State of the grant."},
                                     :expireTime {:format "google-datetime",
                                                  :description "The expiration time of the grant.",
                                                  :type "string"},
                                     :frequencyRange {:$ref "SasPortalFrequencyRange",
                                                      :description "The transmission frequency range."},
                                     :channelType {:type "string",
                                                   :description "Type of channel used.",
                                                   :enum ["CHANNEL_TYPE_UNSPECIFIED"
                                                          "CHANNEL_TYPE_GAA"
                                                          "CHANNEL_TYPE_PAL"],
                                                   :enumDescriptions [""
                                                                      ""
                                                                      ""]},
                                     :maxEirp {:description "Maximum Equivalent Isotropically Radiated Power (EIRP) permitted by the grant. The maximum EIRP is in units of dBm/MHz. The value of maxEirp represents the average (RMS) EIRP that would be measured by the procedure defined in FCC part 96.41(e)(3).",
                                               :type "number",
                                               :format "double"},
                                     :suspensionReason {:description "If the grant is suspended, the reason(s) for suspension.",
                                                        :items {:type "string"},
                                                        :type "array"},
                                     :grantId {:type "string",
                                               :description "Grant Id."}},
                        :description "Device grant. It is an authorization provided by the Spectrum Access System to a device to transmit using specified operating parameters after a successful heartbeat by the device.",
                        :id "SasPortalDeviceGrant",
                        :type "object"},
 :SasPortalMoveNodeRequest {:id "SasPortalMoveNodeRequest",
                            :type "object",
                            :description "Request for MoveNode method.",
                            :properties {:destination {:type "string",
                                                       :description "Required. The name of the new parent resource node or Customer) to reparent the node under."}}},
 :SasPortalMoveDeploymentRequest {:properties {:destination {:type "string",
                                                             :description "Required. The name of the new parent resource Node or Customer to reparent the deployment under."}},
                                  :id "SasPortalMoveDeploymentRequest",
                                  :description "Request for MoveDeployment method.",
                                  :type "object"},
 :SasPortalListDevicesResponse {:properties {:nextPageToken {:description "A pagination token returned from a previous call to ListDevices method that indicates from where listing should continue. If the field is missing or empty, it means there is no more devices.",
                                                             :type "string"},
                                             :devices {:description "The devices that match the request.",
                                                       :items {:$ref "SasPortalDevice"},
                                                       :type "array"}},
                                :description "Response for ListDevices method.",
                                :type "object",
                                :id "SasPortalListDevicesResponse"},
 :SasPortalDeviceAirInterface {:description "Information about the device's air interface.",
                               :properties {:radioTechnology {:type "string",
                                                              :enum ["RADIO_TECHNOLOGY_UNSPECIFIED"
                                                                     "E_UTRA"
                                                                     "CAMBIUM_NETWORKS"
                                                                     "FOUR_G_BBW_SAA_1"
                                                                     "NR"
                                                                     "DOODLE_CBRS"
                                                                     "CW"
                                                                     "REDLINE"
                                                                     "TARANA_WIRELESS"],
                                                              :enumDescriptions [""
                                                                                 ""
                                                                                 ""
                                                                                 ""
                                                                                 ""
                                                                                 ""
                                                                                 ""
                                                                                 ""
                                                                                 ""],
                                                              :description "This field specifies the radio access technology that is used for the CBSD. Conditional"},
                                            :supportedSpec {:type "string",
                                                            :description "This field is related to the radioTechnology field and provides the air interface specification that the CBSD is compliant with at the time of registration. Optional"}},
                               :id "SasPortalDeviceAirInterface",
                               :type "object"},
 :SasPortalDevice {:id "SasPortalDevice",
                   :properties {:serialNumber {:type "string",
                                               :description "A serial number assigned to the device by the device manufacturer."},
                                :activeConfig {:description "Output only. Current configuration of the device as registered to the SAS.",
                                               :$ref "SasPortalDeviceConfig"},
                                :displayName {:type "string",
                                              :description "Device display name."},
                                :name {:description "Output only. The resource path name.",
                                       :type "string"},
                                :state {:type "string",
                                        :enumDescriptions ["Unspecified state."
                                                           "Device created in the SAS Portal, however, not yet registered with SAS."
                                                           "Device registered with SAS."
                                                           "Device de-registered with SAS."],
                                        :enum ["DEVICE_STATE_UNSPECIFIED"
                                               "RESERVED"
                                               "REGISTERED"
                                               "DEREGISTERED"],
                                        :description "Output only. Device state."},
                                :deviceMetadata {:description "Device parameters that can be overridden by both SAS Portal and SAS registration requests.",
                                                 :$ref "SasPortalDeviceMetadata"},
                                :grants {:description "Output only. Grants held by the device.",
                                         :items {:$ref "SasPortalDeviceGrant"},
                                         :type "array"},
                                :preloadedConfig {:description "Configuration of the device, as specified via SAS Portal API.",
                                                  :$ref "SasPortalDeviceConfig"},
                                :fccId {:description "The FCC identifier of the device.",
                                        :type "string"}},
                   :type "object"},
 :SasPortalDeviceConfig {:description "Information about the device configuration.",
                         :properties {:category {:type "string",
                                                 :enumDescriptions ["Unspecified device category."
                                                                    "Category A."
                                                                    "Category B."],
                                                 :description "FCC category of the device.",
                                                 :enum ["DEVICE_CATEGORY_UNSPECIFIED"
                                                        "DEVICE_CATEGORY_A"
                                                        "DEVICE_CATEGORY_B"]},
                                      :installationParams {:$ref "SasPortalInstallationParams",
                                                           :description "Installation parameters for the device."},
                                      :state {:enumDescriptions [""
                                                                 ""
                                                                 ""],
                                              :enum ["DEVICE_CONFIG_STATE_UNSPECIFIED"
                                                     "DRAFT"
                                                     "FINAL"],
                                              :type "string",
                                              :description "State of the configuration."},
                                      :measurementCapabilities {:type "array",
                                                                :description "Measurement reporting capabilities of the device.",
                                                                :items {:enum ["MEASUREMENT_CAPABILITY_UNSPECIFIED"
                                                                               "MEASUREMENT_CAPABILITY_RECEIVED_POWER_WITH_GRANT"
                                                                               "MEASUREMENT_CAPABILITY_RECEIVED_POWER_WITHOUT_GRANT"],
                                                                        :type "string",
                                                                        :enumDescriptions [""
                                                                                           ""
                                                                                           ""]}},
                                      :updateTime {:format "google-datetime",
                                                   :description "Output-only. The last time the device configuration was edited.",
                                                   :type "string"},
                                      :callSign {:description "The call sign of the device operator.",
                                                 :type "string"},
                                      :userId {:description "The identifier of a device user.",
                                               :type "string"},
                                      :isSigned {:type "boolean",
                                                 :description "Output-only. Whether the configuration has been signed by a CPI."},
                                      :airInterface {:description "Information about this device's air interface.",
                                                     :$ref "SasPortalDeviceAirInterface"},
                                      :model {:$ref "SasPortalDeviceModel",
                                              :description "Information about this device model."}},
                         :type "object",
                         :id "SasPortalDeviceConfig"},
 :SasPortalGenerateSecretResponse {:properties {:secret {:type "string",
                                                         :description "The secret generated by the string and used by [ValidateInstaller] method."}},
                                   :id "SasPortalGenerateSecretResponse",
                                   :description "Response for GenerateSecret method.",
                                   :type "object"},
 :SasPortalListNodesResponse {:type "object",
                              :id "SasPortalListNodesResponse",
                              :properties {:nodes {:description "The nodes that match the request.",
                                                   :type "array",
                                                   :items {:$ref "SasPortalNode"}},
                                           :nextPageToken {:description "A pagination token returned from a previous call to ListNodes method that indicates from where listing should continue. If the field is missing or empty, it means there is no more nodes.",
                                                           :type "string"}},
                              :description "Response for ListNodes method."},
 :SasPortalCreateSignedDeviceRequest {:properties {:installerId {:description "Required. Unique installer id (cpiId) from the Certified Professional Installers database.",
                                                                 :type "string"},
                                                   :encodedDevice {:format "byte",
                                                                   :description "Required. JSON Web Token signed using a CPI private key. Payload must be the JSON encoding of the [Device]. The user_id field must be set.",
                                                                   :type "string"}},
                                      :id "SasPortalCreateSignedDeviceRequest",
                                      :description "Request for CreateSignedDevice method.",
                                      :type "object"},
 :SasPortalTestPermissionsRequest {:id "SasPortalTestPermissionsRequest",
                                   :properties {:permissions {:type "array",
                                                              :items {:type "string"},
                                                              :description "The set of permissions to check for the `resource`."},
                                                :resource {:type "string",
                                                           :description "Required. The resource for which the permissions are being requested."}},
                                   :description "Request message for `TestPermissions` method.",
                                   :type "object"},
 :SasPortalFrequencyRange {:description "Frequency range from `low_frequency` to `high_frequency`.",
                           :id "SasPortalFrequencyRange",
                           :properties {:lowFrequencyMhz {:format "double",
                                                          :type "number",
                                                          :description "The lowest frequency of the frequency range in MHz."},
                                        :highFrequencyMhz {:description "The highest frequency of the frequency range in MHz.",
                                                           :format "double",
                                                           :type "number"}},
                           :type "object"}}
