{:GcsObject {:description "Cloud Storage object representation.",
             :type "object",
             :properties {:object {:description "Required. Name of the Cloud Storage object.",
                                   :type "string"},
                          :bucket {:type "string",
                                   :description "Required. Bucket of the Cloud Storage object."},
                          :generationNumber {:description "Required. Generation number of the Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.",
                                             :type "string",
                                             :format "int64"}},
             :id "GcsObject"},
 :ListPatchJobInstanceDetailsResponse {:properties {:patchJobInstanceDetails {:description "A list of instance status.",
                                                                              :type "array",
                                                                              :items {:$ref "PatchJobInstanceDetails"}},
                                                    :nextPageToken {:type "string",
                                                                    :description "A pagination token that can be used to get the next page of results."}},
                                       :description "A response message for listing the instances details for a patch job.",
                                       :type "object",
                                       :id "ListPatchJobInstanceDetailsResponse"},
 :PatchInstanceFilterGroupLabel {:id "PatchInstanceFilterGroupLabel",
                                 :type "object",
                                 :description "Targets a group of VM instances by using their [assigned labels](https://cloud.google.com/compute/docs/labeling-resources). Labels are key-value pairs. A `GroupLabel` is a combination of labels that is used to target VMs for a patch job. For example, a patch job can target VMs that have the following `GroupLabel`: `{\"env\":\"test\", \"app\":\"web\"}`. This means that the patch job is applied to VMs that have both the labels `env=test` and `app=web`.",
                                 :properties {:labels {:description "Compute Engine instance labels that must be present for a VM instance to be targeted by this filter.",
                                                       :additionalProperties {:type "string"},
                                                       :type "object"}}},
 :ExecStepConfig {:description "Common configurations for an ExecStep.",
                  :id "ExecStepConfig",
                  :type "object",
                  :properties {:allowedSuccessCodes {:type "array",
                                                     :items {:type "integer",
                                                             :format "int32"},
                                                     :description "Defaults to [0]. A list of possible return values that the execution can return to indicate a success."},
                               :gcsObject {:description "A Cloud Storage object containing the executable.",
                                           :$ref "GcsObject"},
                               :interpreter {:description "The script interpreter to use to run the script. If no interpreter is specified the script will be executed directly, which will likely only succeed for scripts with [shebang lines] (https://en.wikipedia.org/wiki/Shebang_\\(Unix\\)).",
                                             :enum ["INTERPRETER_UNSPECIFIED"
                                                    "SHELL"
                                                    "POWERSHELL"],
                                             :enumDescriptions ["Invalid for a Windows ExecStepConfig. For a Linux ExecStepConfig, the interpreter will be parsed from the shebang line of the script if unspecified."
                                                                "Indicates that the script is run with `/bin/sh` on Linux and `cmd` on Windows."
                                                                "Indicates that the file is run with PowerShell flags `-NonInteractive`, `-NoProfile`, and `-ExecutionPolicy Bypass`."],
                                             :type "string"},
                               :localPath {:type "string",
                                           :description "An absolute path to the executable on the VM."}}},
 :FixedOrPercent {:type "object",
                  :properties {:fixed {:format "int32",
                                       :description "Specifies a fixed value.",
                                       :type "integer"},
                               :percent {:format "int32",
                                         :description "Specifies the relative value defined as a percentage, which will be multiplied by a reference value.",
                                         :type "integer"}},
                  :description "Message encapsulating a value that can be either absolute (\"fixed\") or relative (\"percent\") to a value.",
                  :id "FixedOrPercent"},
 :RecurringSchedule {:description "Sets the time for recurring patch deployments.",
                     :id "RecurringSchedule",
                     :properties {:timeZone {:$ref "TimeZone",
                                             :description "Required. Defines the time zone that `time_of_day` is relative to. The rules for daylight saving time are determined by the chosen time zone."},
                                  :lastExecuteTime {:format "google-datetime",
                                                    :description "Output only. The time the last patch job ran successfully.",
                                                    :readOnly true,
                                                    :type "string"},
                                  :nextExecuteTime {:description "Output only. The time the next patch job is scheduled to run.",
                                                    :type "string",
                                                    :format "google-datetime",
                                                    :readOnly true},
                                  :startTime {:type "string",
                                              :description "Optional. The time that the recurring schedule becomes effective. Defaults to `create_time` of the patch deployment.",
                                              :format "google-datetime"},
                                  :endTime {:description "Optional. The end time at which a recurring patch deployment schedule is no longer active.",
                                            :format "google-datetime",
                                            :type "string"},
                                  :frequency {:description "Required. The frequency unit of this recurring schedule.",
                                              :enum ["FREQUENCY_UNSPECIFIED"
                                                     "WEEKLY"
                                                     "MONTHLY"],
                                              :type "string",
                                              :enumDescriptions ["Invalid. A frequency must be specified."
                                                                 "Indicates that the frequency should be expressed in terms of weeks."
                                                                 "Indicates that the frequency should be expressed in terms of months."]},
                                  :monthly {:description "Required. Schedule with monthly executions.",
                                            :$ref "MonthlySchedule"},
                                  :weekly {:description "Required. Schedule with weekly executions.",
                                           :$ref "WeeklySchedule"},
                                  :timeOfDay {:$ref "TimeOfDay",
                                              :description "Required. Time of the day to run a recurring deployment."}},
                     :type "object"},
 :WeekDayOfMonth {:type "object",
                  :properties {:dayOfWeek {:enum ["DAY_OF_WEEK_UNSPECIFIED"
                                                  "MONDAY"
                                                  "TUESDAY"
                                                  "WEDNESDAY"
                                                  "THURSDAY"
                                                  "FRIDAY"
                                                  "SATURDAY"
                                                  "SUNDAY"],
                                           :description "Required. A day of the week.",
                                           :enumDescriptions ["The day of the week is unspecified."
                                                              "Monday"
                                                              "Tuesday"
                                                              "Wednesday"
                                                              "Thursday"
                                                              "Friday"
                                                              "Saturday"
                                                              "Sunday"],
                                           :type "string"},
                               :weekOrdinal {:type "integer",
                                             :description "Required. Week number in a month. 1-4 indicates the 1st to 4th week of the month. -1 indicates the last week of the month.",
                                             :format "int32"}},
                  :id "WeekDayOfMonth",
                  :description "Represents one week day in a month. An example is \"the 4th Sunday\"."},
 :YumSettings {:properties {:exclusivePackages {:items {:type "string"},
                                                :description "An exclusive list of packages to be updated. These are the only packages that will be updated. If these packages are not installed, they will be ignored. This field must not be specified with any other patch configuration fields.",
                                                :type "array"},
                            :excludes {:items {:type "string"},
                                       :description "List of packages to exclude from update. These packages are excluded by using the yum `--exclude` flag.",
                                       :type "array"},
                            :security {:type "boolean",
                                       :description "Adds the `--security` flag to `yum update`. Not supported on all platforms."},
                            :minimal {:description "Will cause patch to run `yum update-minimal` instead.",
                                      :type "boolean"}},
               :id "YumSettings",
               :type "object",
               :description "Yum patching is performed by executing `yum update`. Additional options can be set to control how this is executed. Note that not all settings are supported on all platforms."},
 :GooSettings {:type "object",
               :id "GooSettings",
               :description "Googet patching is performed by running `googet update`.",
               :properties {}},
 :PatchConfig {:id "PatchConfig",
               :properties {:preStep {:description "The `ExecStep` to run before the patch update.",
                                      :$ref "ExecStep"},
                            :windowsUpdate {:$ref "WindowsUpdateSettings",
                                            :description "Windows update settings. Use this override the default windows patch rules."},
                            :apt {:description "Apt update settings. Use this setting to override the default `apt` patch rules.",
                                  :$ref "AptSettings"},
                            :postStep {:description "The `ExecStep` to run after the patch update.",
                                       :$ref "ExecStep"},
                            :goo {:description "Goo update settings. Use this setting to override the default `goo` patch rules.",
                                  :$ref "GooSettings"},
                            :rebootConfig {:enum ["REBOOT_CONFIG_UNSPECIFIED"
                                                  "DEFAULT"
                                                  "ALWAYS"
                                                  "NEVER"],
                                           :enumDescriptions ["The default behavior is DEFAULT."
                                                              "The agent decides if a reboot is necessary by checking signals such as registry keys on Windows or `/var/run/reboot-required` on APT based systems. On RPM based systems, a set of core system package install times are compared with system boot time."
                                                              "Always reboot the machine after the update completes."
                                                              "Never reboot the machine after the update completes."],
                                           :description "Post-patch reboot settings.",
                                           :type "string"},
                            :zypper {:description "Zypper update settings. Use this setting to override the default `zypper` patch rules.",
                                     :$ref "ZypperSettings"},
                            :yum {:description "Yum update settings. Use this setting to override the default `yum` patch rules.",
                                  :$ref "YumSettings"}},
               :type "object",
               :description "Patch configuration specifications. Contains details on how to apply the patch(es) to a VM instance."},
 :PatchJobInstanceDetailsSummary {:id "PatchJobInstanceDetailsSummary",
                                  :properties {:noAgentDetectedInstanceCount {:type "string",
                                                                              :format "int64",
                                                                              :description "Number of instances that do not appear to be running the agent. Check to ensure that the agent is installed, running, and able to communicate with the service."},
                                               :downloadingPatchesInstanceCount {:type "string",
                                                                                 :description "Number of instances that are downloading patches.",
                                                                                 :format "int64"},
                                               :startedInstanceCount {:type "string",
                                                                      :format "int64",
                                                                      :description "Number of instances that have started."},
                                               :rebootingInstanceCount {:type "string",
                                                                        :format "int64",
                                                                        :description "Number of instances rebooting."},
                                               :pendingInstanceCount {:description "Number of instances pending patch job.",
                                                                      :format "int64",
                                                                      :type "string"},
                                               :timedOutInstanceCount {:type "string",
                                                                       :description "Number of instances that exceeded the time out while applying the patch.",
                                                                       :format "int64"},
                                               :prePatchStepInstanceCount {:type "string",
                                                                           :format "int64",
                                                                           :description "Number of instances that are running the pre-patch step."},
                                               :ackedInstanceCount {:format "int64",
                                                                    :description "Number of instances that have acked and will start shortly.",
                                                                    :type "string"},
                                               :succeededRebootRequiredInstanceCount {:format "int64",
                                                                                      :description "Number of instances that require reboot.",
                                                                                      :type "string"},
                                               :succeededInstanceCount {:description "Number of instances that have completed successfully.",
                                                                        :type "string",
                                                                        :format "int64"},
                                               :failedInstanceCount {:format "int64",
                                                                     :description "Number of instances that failed.",
                                                                     :type "string"},
                                               :inactiveInstanceCount {:type "string",
                                                                       :format "int64",
                                                                       :description "Number of instances that are inactive."},
                                               :applyingPatchesInstanceCount {:type "string",
                                                                              :description "Number of instances that are applying patches.",
                                                                              :format "int64"},
                                               :postPatchStepInstanceCount {:description "Number of instances that are running the post-patch step.",
                                                                            :type "string",
                                                                            :format "int64"},
                                               :notifiedInstanceCount {:format "int64",
                                                                       :description "Number of instances notified about patch job.",
                                                                       :type "string"}},
                                  :type "object",
                                  :description "A summary of the current patch state across all instances that this patch job affects. Contains counts of instances in different states. These states map to `InstancePatchState`. List patch job instance details to see the specific states of each instance."},
 :PatchInstanceFilter {:properties {:all {:description "Target all VM instances in the project. If true, no other criteria is permitted.",
                                          :type "boolean"},
                                    :instances {:items {:type "string"},
                                                :description "Targets any of the VM instances specified. Instances are specified by their URI in the form `zones/[ZONE]/instances/[INSTANCE_NAME]`, `projects/[PROJECT_ID]/zones/[ZONE]/instances/[INSTANCE_NAME]`, or `https://www.googleapis.com/compute/v1/projects/[PROJECT_ID]/zones/[ZONE]/instances/[INSTANCE_NAME]`",
                                                :type "array"},
                                    :instanceNamePrefixes {:type "array",
                                                           :items {:type "string"},
                                                           :description "Targets VMs whose name starts with one of these prefixes. Similar to labels, this is another way to group VMs when targeting configs, for example prefix=\"prod-\"."},
                                    :zones {:description "Targets VM instances in ANY of these zones. Leave empty to target VM instances in any zone.",
                                            :items {:type "string"},
                                            :type "array"},
                                    :groupLabels {:items {:$ref "PatchInstanceFilterGroupLabel"},
                                                  :type "array",
                                                  :description "Targets VM instances matching ANY of these GroupLabels. This allows targeting of disparate groups of VM instances."}},
                       :type "object",
                       :id "PatchInstanceFilter",
                       :description "A filter to target VM instances for patching. The targeted VMs must meet all criteria specified. So if both labels and zones are specified, the patch job targets only VMs with those labels and in those zones."},
 :ZypperSettings {:description "Zypper patching is performed by running `zypper patch`. See also https://en.opensuse.org/SDB:Zypper_manual.",
                  :properties {:excludes {:type "array",
                                          :description "List of patches to exclude from update.",
                                          :items {:type "string"}},
                               :exclusivePatches {:type "array",
                                                  :description "An exclusive list of patches to be updated. These are the only patches that will be installed using 'zypper patch patch:' command. This field must not be used with any other patch configuration fields.",
                                                  :items {:type "string"}},
                               :severities {:items {:type "string"},
                                            :type "array",
                                            :description "Install only patches with these severities. Common severities include critical, important, moderate, and low."},
                               :categories {:description "Install only patches with these categories. Common categories include security, recommended, and feature.",
                                            :items {:type "string"},
                                            :type "array"},
                               :withUpdate {:type "boolean",
                                            :description "Adds the `--with-update` flag, to `zypper patch`."},
                               :withOptional {:type "boolean",
                                              :description "Adds the `--with-optional` flag to `zypper patch`."}},
                  :id "ZypperSettings",
                  :type "object"},
 :WeeklySchedule {:properties {:dayOfWeek {:type "string",
                                           :enum ["DAY_OF_WEEK_UNSPECIFIED"
                                                  "MONDAY"
                                                  "TUESDAY"
                                                  "WEDNESDAY"
                                                  "THURSDAY"
                                                  "FRIDAY"
                                                  "SATURDAY"
                                                  "SUNDAY"],
                                           :enumDescriptions ["The day of the week is unspecified."
                                                              "Monday"
                                                              "Tuesday"
                                                              "Wednesday"
                                                              "Thursday"
                                                              "Friday"
                                                              "Saturday"
                                                              "Sunday"],
                                           :description "Required. Day of the week."}},
                  :description "Represents a weekly schedule.",
                  :type "object",
                  :id "WeeklySchedule"},
 :AptSettings {:type "object",
               :id "AptSettings",
               :properties {:exclusivePackages {:type "array",
                                                :description "An exclusive list of packages to be updated. These are the only packages that will be updated. If these packages are not installed, they will be ignored. This field cannot be specified with any other patch configuration fields.",
                                                :items {:type "string"}},
                            :type {:description "By changing the type to DIST, the patching is performed using `apt-get dist-upgrade` instead.",
                                   :enum ["TYPE_UNSPECIFIED"
                                          "DIST"
                                          "UPGRADE"],
                                   :type "string",
                                   :enumDescriptions ["By default, upgrade will be performed."
                                                      "Runs `apt-get dist-upgrade`."
                                                      "Runs `apt-get upgrade`."]},
                            :excludes {:items {:type "string"},
                                       :description "List of packages to exclude from update. These packages will be excluded",
                                       :type "array"}},
               :description "Apt patching is completed by executing `apt-get update && apt-get upgrade`. Additional options can be set to control how this is executed."},
 :Empty {:description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
         :type "object",
         :id "Empty",
         :properties {}},
 :MonthlySchedule {:properties {:weekDayOfMonth {:$ref "WeekDayOfMonth",
                                                 :description "Required. Week day in a month."},
                                :monthDay {:format "int32",
                                           :description "Required. One day of the month. 1-31 indicates the 1st to the 31st day. -1 indicates the last day of the month. Months without the target day will be skipped. For example, a schedule to run \"every month on the 31st\" will not run in February, April, June, etc.",
                                           :type "integer"}},
                   :description "Represents a monthly schedule. An example of a valid monthly schedule is \"on the third Tuesday of the month\" or \"on the 15th of the month\".",
                   :id "MonthlySchedule",
                   :type "object"},
 :TimeZone {:id "TimeZone",
            :type "object",
            :description "Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).",
            :properties {:id {:description "IANA Time Zone Database time zone, e.g. \"America/New_York\".",
                              :type "string"},
                         :version {:description "Optional. IANA Time Zone Database version number, e.g. \"2019a\".",
                                   :type "string"}}},
 :WindowsUpdateSettings {:type "object",
                         :id "WindowsUpdateSettings",
                         :description "Windows patching is performed using the Windows Update Agent.",
                         :properties {:exclusivePatches {:items {:type "string"},
                                                         :description "An exclusive list of kbs to be updated. These are the only patches that will be updated. This field must not be used with other patch configurations.",
                                                         :type "array"},
                                      :excludes {:items {:type "string"},
                                                 :type "array",
                                                 :description "List of KBs to exclude from update."},
                                      :classifications {:type "array",
                                                        :description "Only apply updates of these windows update classifications. If empty, all updates are applied.",
                                                        :items {:type "string",
                                                                :enumDescriptions ["Invalid. If classifications are included, they must be specified."
                                                                                   "\"A widely released fix for a specific problem that addresses a critical, non-security-related bug.\" [1]"
                                                                                   "\"A widely released fix for a product-specific, security-related vulnerability. Security vulnerabilities are rated by their severity. The severity rating is indicated in the Microsoft security bulletin as critical, important, moderate, or low.\" [1]"
                                                                                   "\"A widely released and frequent software update that contains additions to a product's definition database. Definition databases are often used to detect objects that have specific attributes, such as malicious code, phishing websites, or junk mail.\" [1]"
                                                                                   "\"Software that controls the input and output of a device.\" [1]"
                                                                                   "\"New product functionality that is first distributed outside the context of a product release and that is typically included in the next full product release.\" [1]"
                                                                                   "\"A tested, cumulative set of all hotfixes, security updates, critical updates, and updates. Additionally, service packs may contain additional fixes for problems that are found internally since the release of the product. Service packs my also contain a limited number of customer-requested design changes or features.\" [1]"
                                                                                   "\"A utility or feature that helps complete a task or set of tasks.\" [1]"
                                                                                   "\"A tested, cumulative set of hotfixes, security updates, critical updates, and updates that are packaged together for easy deployment. A rollup generally targets a specific area, such as security, or a component of a product, such as Internet Information Services (IIS).\" [1]"
                                                                                   "\"A widely released fix for a specific problem. An update addresses a noncritical, non-security-related bug.\" [1]"],
                                                                :enum ["CLASSIFICATION_UNSPECIFIED"
                                                                       "CRITICAL"
                                                                       "SECURITY"
                                                                       "DEFINITION"
                                                                       "DRIVER"
                                                                       "FEATURE_PACK"
                                                                       "SERVICE_PACK"
                                                                       "TOOL"
                                                                       "UPDATE_ROLLUP"
                                                                       "UPDATE"]}}}},
 :PatchDeployment {:properties {:description {:description "Optional. Description of the patch deployment. Length of the description is limited to 1024 characters.",
                                              :type "string"},
                                :lastExecuteTime {:readOnly true,
                                                  :type "string",
                                                  :description "Output only. The last time a patch job was started by this deployment. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.",
                                                  :format "google-datetime"},
                                :name {:description "Unique name for the patch deployment resource in a project. The patch deployment name is in the form: `projects/{project_id}/patchDeployments/{patch_deployment_id}`. This field is ignored when you create a new patch deployment.",
                                       :type "string"},
                                :patchConfig {:$ref "PatchConfig",
                                              :description "Optional. Patch configuration that is applied."},
                                :createTime {:description "Output only. Time the patch deployment was created. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.",
                                             :type "string",
                                             :format "google-datetime",
                                             :readOnly true},
                                :duration {:format "google-duration",
                                           :type "string",
                                           :description "Optional. Duration of the patch. After the duration ends, the patch times out."},
                                :updateTime {:type "string",
                                             :format "google-datetime",
                                             :readOnly true,
                                             :description "Output only. Time the patch deployment was last updated. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format."},
                                :recurringSchedule {:$ref "RecurringSchedule",
                                                    :description "Required. Schedule recurring executions."},
                                :oneTimeSchedule {:$ref "OneTimeSchedule",
                                                  :description "Required. Schedule a one-time execution."},
                                :rollout {:$ref "PatchRollout",
                                          :description "Optional. Rollout strategy of the patch job."},
                                :instanceFilter {:$ref "PatchInstanceFilter",
                                                 :description "Required. VM instances to patch."}},
                   :type "object",
                   :id "PatchDeployment",
                   :description "Patch deployments are configurations that individual patch jobs use to complete a patch. These configurations include instance filter, package repository settings, and a schedule. For more information about creating and managing patch deployments, see [Scheduling patch jobs](https://cloud.google.com/compute/docs/os-patch-management/schedule-patch-jobs)."},
 :PatchJob {:id "PatchJob",
            :properties {:description {:type "string",
                                       :description "Description of the patch job. Length of the description is limited to 1024 characters."},
                         :dryRun {:type "boolean",
                                  :description "If this patch job is a dry run, the agent reports that it has finished without running any updates on the VM instance."},
                         :errorMessage {:type "string",
                                        :description "If this patch job failed, this message provides information about the failure."},
                         :displayName {:description "Display name for this patch job. This is not a unique identifier.",
                                       :type "string"},
                         :name {:type "string",
                                :description "Unique identifier for this patch job in the form `projects/*/patchJobs/*`"},
                         :patchDeployment {:readOnly true,
                                           :description "Output only. Name of the patch deployment that created this patch job.",
                                           :type "string"},
                         :patchConfig {:$ref "PatchConfig",
                                       :description "Patch configuration being applied."},
                         :createTime {:description "Time this patch job was created.",
                                      :format "google-datetime",
                                      :type "string"},
                         :instanceDetailsSummary {:description "Summary of instance details.",
                                                  :$ref "PatchJobInstanceDetailsSummary"},
                         :duration {:description "Duration of the patch job. After the duration ends, the patch job times out.",
                                    :format "google-duration",
                                    :type "string"},
                         :state {:type "string",
                                 :description "The current state of the PatchJob.",
                                 :enumDescriptions ["State must be specified."
                                                    "The patch job was successfully initiated."
                                                    "The patch job is looking up instances to run the patch on."
                                                    "Instances are being patched."
                                                    "Patch job completed successfully."
                                                    "Patch job completed but there were errors."
                                                    "The patch job was canceled."
                                                    "The patch job timed out."],
                                 :enum ["STATE_UNSPECIFIED"
                                        "STARTED"
                                        "INSTANCE_LOOKUP"
                                        "PATCHING"
                                        "SUCCEEDED"
                                        "COMPLETED_WITH_ERRORS"
                                        "CANCELED"
                                        "TIMED_OUT"]},
                         :updateTime {:type "string",
                                      :description "Last time this patch job was updated.",
                                      :format "google-datetime"},
                         :percentComplete {:format "double",
                                           :description "Reflects the overall progress of the patch job in the range of 0.0 being no progress to 100.0 being complete.",
                                           :type "number"},
                         :rollout {:$ref "PatchRollout",
                                   :description "Rollout strategy being applied."},
                         :instanceFilter {:description "Instances to patch.",
                                          :$ref "PatchInstanceFilter"}},
            :description "A high level representation of a patch job that is either in progress or has completed. Instance details are not included in the job. To paginate through instance details, use ListPatchJobInstanceDetails. For more information about patch jobs, see [Creating patch jobs](https://cloud.google.com/compute/docs/os-patch-management/create-patch-job).",
            :type "object"},
 :ExecStep {:properties {:linuxExecStepConfig {:description "The ExecStepConfig for all Linux VMs targeted by the PatchJob.",
                                               :$ref "ExecStepConfig"},
                         :windowsExecStepConfig {:description "The ExecStepConfig for all Windows VMs targeted by the PatchJob.",
                                                 :$ref "ExecStepConfig"}},
            :description "A step that runs an executable for a PatchJob.",
            :id "ExecStep",
            :type "object"},
 :PatchRollout {:properties {:mode {:enum ["MODE_UNSPECIFIED"
                                           "ZONE_BY_ZONE"
                                           "CONCURRENT_ZONES"],
                                    :type "string",
                                    :enumDescriptions ["Mode must be specified."
                                                       "Patches are applied one zone at a time. The patch job begins in the region with the lowest number of targeted VMs. Within the region, patching begins in the zone with the lowest number of targeted VMs. If multiple regions (or zones within a region) have the same number of targeted VMs, a tie-breaker is achieved by sorting the regions or zones in alphabetical order."
                                                       "Patches are applied to VMs in all zones at the same time."],
                                    :description "Mode of the patch rollout."},
                             :disruptionBudget {:description "The maximum number (or percentage) of VMs per zone to disrupt at any given moment. The number of VMs calculated from multiplying the percentage by the total number of VMs in a zone is rounded up. During patching, a VM is considered disrupted from the time the agent is notified to begin until patching has completed. This disruption time includes the time to complete reboot and any post-patch steps. A VM contributes to the disruption budget if its patching operation fails either when applying the patches, running pre or post patch steps, or if it fails to respond with a success notification before timing out. VMs that are not running or do not have an active agent do not count toward this disruption budget. For zone-by-zone rollouts, if the disruption budget in a zone is exceeded, the patch job stops, because continuing to the next zone requires completion of the patch process in the previous zone. For example, if the disruption budget has a fixed value of `10`, and 8 VMs fail to patch in the current zone, the patch job continues to patch 2 VMs at a time until the zone is completed. When that zone is completed successfully, patching begins with 10 VMs at a time in the next zone. If 10 VMs in the next zone fail to patch, the patch job stops.",
                                                :$ref "FixedOrPercent"}},
                :type "object",
                :id "PatchRollout",
                :description "Patch rollout configuration specifications. Contains details on the concurrency control when applying patch(es) to all targeted VMs."},
 :ListPatchJobsResponse {:type "object",
                         :id "ListPatchJobsResponse",
                         :description "A response message for listing patch jobs.",
                         :properties {:nextPageToken {:type "string",
                                                      :description "A pagination token that can be used to get the next page of results."},
                                      :patchJobs {:items {:$ref "PatchJob"},
                                                  :type "array",
                                                  :description "The list of patch jobs."}}},
 :TimeOfDay {:properties {:nanos {:type "integer",
                                  :description "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
                                  :format "int32"},
                          :seconds {:type "integer",
                                    :format "int32",
                                    :description "Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds."},
                          :hours {:format "int32",
                                  :type "integer",
                                  :description "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time."},
                          :minutes {:description "Minutes of hour of day. Must be from 0 to 59.",
                                    :type "integer",
                                    :format "int32"}},
             :description "Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.",
             :type "object",
             :id "TimeOfDay"},
 :PatchJobInstanceDetails {:id "PatchJobInstanceDetails",
                           :description "Patch details for a VM instance. For more information about reviewing VM instance details, see [Listing all VM instance details for a specific patch job](https://cloud.google.com/compute/docs/os-patch-management/manage-patch-jobs#list-instance-details).",
                           :properties {:failureReason {:type "string",
                                                        :description "If the patch fails, this field provides the reason."},
                                        :instanceSystemId {:description "The unique identifier for the instance. This identifier is defined by the server.",
                                                           :type "string"},
                                        :name {:description "The instance name in the form `projects/*/zones/*/instances/*`",
                                               :type "string"},
                                        :state {:enum ["PATCH_STATE_UNSPECIFIED"
                                                       "PENDING"
                                                       "INACTIVE"
                                                       "NOTIFIED"
                                                       "STARTED"
                                                       "DOWNLOADING_PATCHES"
                                                       "APPLYING_PATCHES"
                                                       "REBOOTING"
                                                       "SUCCEEDED"
                                                       "SUCCEEDED_REBOOT_REQUIRED"
                                                       "FAILED"
                                                       "ACKED"
                                                       "TIMED_OUT"
                                                       "RUNNING_PRE_PATCH_STEP"
                                                       "RUNNING_POST_PATCH_STEP"
                                                       "NO_AGENT_DETECTED"],
                                                :enumDescriptions ["Unspecified."
                                                                   "The instance is not yet notified."
                                                                   "Instance is inactive and cannot be patched."
                                                                   "The instance is notified that it should be patched."
                                                                   "The instance has started the patching process."
                                                                   "The instance is downloading patches."
                                                                   "The instance is applying patches."
                                                                   "The instance is rebooting."
                                                                   "The instance has completed applying patches."
                                                                   "The instance has completed applying patches but a reboot is required."
                                                                   "The instance has failed to apply the patch."
                                                                   "The instance acked the notification and will start shortly."
                                                                   "The instance exceeded the time out while applying the patch."
                                                                   "The instance is running the pre-patch step."
                                                                   "The instance is running the post-patch step."
                                                                   "The service could not detect the presence of the agent. Check to ensure that the agent is installed, running, and able to communicate with the service."],
                                                :description "Current state of instance patch.",
                                                :type "string"},
                                        :attemptCount {:type "string",
                                                       :format "int64",
                                                       :description "The number of times the agent that the agent attempts to apply the patch."}},
                           :type "object"},
 :ListPatchDeploymentsResponse {:description "A response message for listing patch deployments.",
                                :id "ListPatchDeploymentsResponse",
                                :properties {:nextPageToken {:type "string",
                                                             :description "A pagination token that can be used to get the next page of patch deployments."},
                                             :patchDeployments {:type "array",
                                                                :description "The list of patch deployments.",
                                                                :items {:$ref "PatchDeployment"}}},
                                :type "object"},
 :OneTimeSchedule {:description "Sets the time for a one time patch deployment. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.",
                   :properties {:executeTime {:format "google-datetime",
                                              :type "string",
                                              :description "Required. The desired patch job execution time."}},
                   :type "object",
                   :id "OneTimeSchedule"},
 :CancelPatchJobRequest {:id "CancelPatchJobRequest",
                         :description "Message for canceling a patch job.",
                         :properties {},
                         :type "object"},
 :ExecutePatchJobRequest {:description "A request message to initiate patching across Compute Engine instances.",
                          :type "object",
                          :id "ExecutePatchJobRequest",
                          :properties {:displayName {:description "Display name for this patch job. This does not have to be unique.",
                                                     :type "string"},
                                       :patchConfig {:$ref "PatchConfig",
                                                     :description "Patch configuration being applied. If omitted, instances are patched using the default configurations."},
                                       :duration {:description "Duration of the patch job. After the duration ends, the patch job times out.",
                                                  :format "google-duration",
                                                  :type "string"},
                                       :dryRun {:type "boolean",
                                                :description "If this patch is a dry-run only, instances are contacted but will do nothing."},
                                       :rollout {:$ref "PatchRollout",
                                                 :description "Rollout strategy of the patch job."},
                                       :description {:description "Description of the patch job. Length of the description is limited to 1024 characters.",
                                                     :type "string"},
                                       :instanceFilter {:description "Required. Instances to patch, either explicitly or filtered by some criteria such as zone or labels.",
                                                        :$ref "PatchInstanceFilter"}}}}
