{:Space {:id "Space",
         :properties {:threaded {:type "boolean",
                                 :description "Whether the messages are threaded in this space."},
                      :singleUserBotDm {:type "boolean",
                                        :description "Whether the space is a DM between a bot and a single human."},
                      :name {:type "string",
                             :description "Resource name of the space, in the form \"spaces/*\". Example: spaces/AAAAMpdlehYs"},
                      :type {:description "Output only. The type of a space. This is deprecated. Use `single_user_bot_dm` instead.",
                             :enum ["TYPE_UNSPECIFIED" "ROOM" "DM"],
                             :type "string",
                             :enumDescriptions [""
                                                "Multi-user spaces such as rooms and DMs between humans."
                                                "1:1 Direct Message between a human and a bot, where all messages are flat."]},
                      :displayName {:description "Output only. The display name (only if the space is a room). Please note that this field might not be populated in direct messages between humans.",
                                    :type "string"}},
         :description "A room or DM in Hangouts Chat.",
         :type "object"},
 :WidgetMarkup {:properties {:keyValue {:$ref "KeyValue",
                                        :description "Display a key value item in this widget."},
                             :textParagraph {:description "Display a text paragraph in this widget.",
                                             :$ref "TextParagraph"},
                             :image {:description "Display an image in this widget.",
                                     :$ref "Image"},
                             :buttons {:description "A list of buttons. Buttons is also oneof data and only one of these fields should be set.",
                                       :items {:$ref "Button"},
                                       :type "array"}},
                :description "A widget is a UI element that presents texts, images, etc.",
                :type "object",
                :id "WidgetMarkup"},
 :SlashCommandMetadata {:description "Annotation metadata for slash commands (/).",
                        :type "object",
                        :id "SlashCommandMetadata",
                        :properties {:type {:enumDescriptions ["Default value for the enum. DO NOT USE."
                                                               "Add bot to space."
                                                               "Invoke slash command in space."],
                                            :description "The type of slash command.",
                                            :type "string",
                                            :enum ["TYPE_UNSPECIFIED"
                                                   "ADD"
                                                   "INVOKE"]},
                                     :bot {:description "The bot whose command was invoked.",
                                           :$ref "User"},
                                     :commandId {:format "int64",
                                                 :type "string",
                                                 :description "The command id of the invoked slash command."},
                                     :triggersDialog {:type "boolean",
                                                      :description "Indicating whether the slash command is for a dialog."},
                                     :commandName {:description "The name of the invoked slash command.",
                                                   :type "string"}}},
 :CardAction {:id "CardAction",
              :description "A card action is the action associated with the card. For an invoice card, a typical action would be: delete invoice, email invoice or open the invoice in browser.",
              :type "object",
              :properties {:actionLabel {:type "string",
                                         :description "The label used to be displayed in the action menu item."},
                           :onClick {:description "The onclick action for this action item.",
                                     :$ref "OnClick"}}},
 :TextButton {:description "A button with text and onclick action.",
              :properties {:onClick {:$ref "OnClick",
                                     :description "The onclick action of the button."},
                           :text {:description "The text of the button.",
                                  :type "string"}},
              :id "TextButton",
              :type "object"},
 :Message {:description "A message in Hangouts Chat.",
           :type "object",
           :properties {:space {:$ref "Space",
                                :description "The space the message belongs to."},
                        :fallbackText {:type "string",
                                       :description "A plain-text description of the message's cards, used when the actual cards cannot be displayed (e.g. mobile notifications)."},
                        :name {:description "Resource name, in the form \"spaces/*/messages/*\". Example: spaces/AAAAMpdlehY/messages/UMxbHmzDlr4.UMxbHmzDlr4",
                               :type "string"},
                        :createTime {:type "string",
                                     :description "Output only. The time at which the message was created in Hangouts Chat server.",
                                     :format "google-datetime"},
                        :previewText {:type "string",
                                      :description "Text for generating preview chips. This text will not be displayed to the user, but any links to images, web pages, videos, etc. included here will generate preview chips."},
                        :argumentText {:type "string",
                                       :description "Plain-text body of the message with all bot mentions stripped out."},
                        :thread {:$ref "Thread",
                                 :description "The thread the message belongs to."},
                        :actionResponse {:$ref "ActionResponse",
                                         :description "Input only. Parameters that a bot can use to configure how its response is posted."},
                        :sender {:$ref "User",
                                 :description "The user who created the message."},
                        :cards {:description "Rich, formatted and interactive cards that can be used to display UI elements such as: formatted texts, buttons, clickable images. Cards are normally displayed below the plain-text body of the message.",
                                :type "array",
                                :items {:$ref "Card"}},
                        :annotations {:description "Output only. Annotations associated with the text in this message.",
                                      :items {:$ref "Annotation"},
                                      :type "array"},
                        :slashCommand {:$ref "SlashCommand",
                                       :description "Slash command information, if applicable."},
                        :attachment {:description "User uploaded attachment.",
                                     :items {:$ref "Attachment"},
                                     :type "array"},
                        :text {:type "string",
                               :description "Plain-text body of the message."}},
           :id "Message"},
 :Image {:id "Image",
         :type "object",
         :description "An image that is specified by a URL and can have an onclick action.",
         :properties {:imageUrl {:type "string",
                                 :description "The URL of the image."},
                      :aspectRatio {:description "The aspect ratio of this image (width/height). This field allows clients to reserve the right height for the image while waiting for it to load. It's not meant to override the native aspect ratio of the image. If unset, the server fills it by prefetching the image.",
                                    :type "number",
                                    :format "double"},
                      :onClick {:description "The onclick action.",
                                :$ref "OnClick"}}},
 :CardHeader {:properties {:subtitle {:type "string",
                                      :description "The subtitle of the card header."},
                           :imageStyle {:description "The image's type (e.g. square border or circular border).",
                                        :type "string",
                                        :enumDescriptions [""
                                                           "Square border."
                                                           "Circular border."],
                                        :enum ["IMAGE_STYLE_UNSPECIFIED"
                                               "IMAGE"
                                               "AVATAR"]},
                           :title {:description "The title must be specified. The header has a fixed height: if both a title and subtitle is specified, each will take up 1 line. If only the title is specified, it will take up both lines.",
                                   :type "string"},
                           :imageUrl {:type "string",
                                      :description "The URL of the image in the card header."}},
              :id "CardHeader",
              :type "object"},
 :KeyValue {:properties {:icon {:enum ["ICON_UNSPECIFIED"
                                       "AIRPLANE"
                                       "BOOKMARK"
                                       "BUS"
                                       "CAR"
                                       "CLOCK"
                                       "CONFIRMATION_NUMBER_ICON"
                                       "DOLLAR"
                                       "DESCRIPTION"
                                       "EMAIL"
                                       "EVENT_PERFORMER"
                                       "EVENT_SEAT"
                                       "FLIGHT_ARRIVAL"
                                       "FLIGHT_DEPARTURE"
                                       "HOTEL"
                                       "HOTEL_ROOM_TYPE"
                                       "INVITE"
                                       "MAP_PIN"
                                       "MEMBERSHIP"
                                       "MULTIPLE_PEOPLE"
                                       "OFFER"
                                       "PERSON"
                                       "PHONE"
                                       "RESTAURANT_ICON"
                                       "SHOPPING_CART"
                                       "STAR"
                                       "STORE"
                                       "TICKET"
                                       "TRAIN"
                                       "VIDEO_CAMERA"
                                       "VIDEO_PLAY"],
                                :enumDescriptions [""
                                                   ""
                                                   ""
                                                   ""
                                                   ""
                                                   ""
                                                   ""
                                                   ""
                                                   ""
                                                   ""
                                                   ""
                                                   ""
                                                   ""
                                                   ""
                                                   ""
                                                   ""
                                                   ""
                                                   ""
                                                   ""
                                                   ""
                                                   ""
                                                   ""
                                                   ""
                                                   ""
                                                   ""
                                                   ""
                                                   ""
                                                   ""
                                                   ""
                                                   ""
                                                   ""],
                                :type "string",
                                :description "An enum value that will be replaced by the Chat API with the corresponding icon image."},
                         :bottomLabel {:description "The text of the bottom label. Formatted text supported.",
                                       :type "string"},
                         :topLabel {:type "string",
                                    :description "The text of the top label. Formatted text supported."},
                         :content {:description "The text of the content. Formatted text supported and always required.",
                                   :type "string"},
                         :iconUrl {:type "string",
                                   :description "The icon specified by a URL."},
                         :contentMultiline {:description "If the content should be multiline.",
                                            :type "boolean"},
                         :onClick {:$ref "OnClick",
                                   :description "The onclick action. Only the top label, bottom label and content region are clickable."},
                         :button {:description "A button that can be clicked to trigger an action.",
                                  :$ref "Button"}},
            :type "object",
            :id "KeyValue",
            :description "A UI element contains a key (label) and a value (content). And this element may also contain some actions such as onclick button."},
 :Thread {:id "Thread",
          :type "object",
          :description "A thread in Hangouts Chat.",
          :properties {:name {:description "Resource name, in the form \"spaces/*/threads/*\". Example: spaces/AAAAMpdlehY/threads/UMxbHmzDlr4",
                              :type "string"}}},
 :OnClick {:properties {:openLink {:description "This onclick triggers an open link action if specified.",
                                   :$ref "OpenLink"},
                        :action {:description "A form action will be triggered by this onclick if specified.",
                                 :$ref "FormAction"}},
           :id "OnClick",
           :type "object",
           :description "An onclick action (e.g. open a link)."},
 :ActionResponse {:description "Parameters that a bot can use to configure how it's response is posted.",
                  :properties {:url {:type "string",
                                     :description "URL for users to auth or config. (Only for REQUEST_CONFIG response types.)"},
                               :type {:type "string",
                                      :enum ["TYPE_UNSPECIFIED"
                                             "NEW_MESSAGE"
                                             "UPDATE_MESSAGE"
                                             "REQUEST_CONFIG"],
                                      :description "The type of bot response.",
                                      :enumDescriptions ["Default type; will be handled as NEW_MESSAGE."
                                                         "Post as a new message in the topic."
                                                         "Update the bot's own message. (Only after CARD_CLICKED events.)"
                                                         "Privately ask the user for additional auth or config."]}},
                  :type "object",
                  :id "ActionResponse"},
 :DeprecatedEvent {:type "object",
                   :id "DeprecatedEvent",
                   :properties {:configCompleteRedirectUrl {:type "string",
                                                            :description "The URL the bot should redirect the user to after they have completed an authorization or configuration flow outside of Google Chat. See the [Authorizing access to 3p services guide](/hangouts/chat/how-tos/auth-3p) for more information."},
                                :space {:$ref "Space",
                                        :description "The room or DM in which the event occurred."},
                                :type {:enum ["UNSPECIFIED"
                                              "MESSAGE"
                                              "ADDED_TO_SPACE"
                                              "REMOVED_FROM_SPACE"
                                              "CARD_CLICKED"],
                                       :description "The type of the event.",
                                       :type "string",
                                       :enumDescriptions ["Default value for the enum. DO NOT USE."
                                                          "A message was sent in a room or direct message."
                                                          "The bot was added to a room or DM."
                                                          "The bot was removed from a room or DM."
                                                          "The bot's interactive card was clicked."]},
                                :token {:description "A secret value that bots can use to verify if a request is from Google. The token is randomly generated by Google, remains static, and can be obtained from the Google Chat API configuration page in the Cloud Console. Developers can revoke/regenerate it if needed from the same page.",
                                        :type "string"},
                                :action {:$ref "FormAction",
                                         :description "The form action data associated with an interactive card that was clicked. Only populated for CARD_CLICKED events. See the [Interactive Cards guide](/hangouts/chat/how-tos/cards-onclick) for more information."},
                                :eventTime {:description "The timestamp indicating when the event was dispatched.",
                                            :type "string",
                                            :format "google-datetime"},
                                :user {:description "The user that triggered the event.",
                                       :$ref "User"},
                                :message {:description "The message that triggered the event, if applicable.",
                                          :$ref "Message"},
                                :threadKey {:description "The bot-defined key for the thread related to the event. See the thread_key field of the `spaces.message.create` request for more information.",
                                            :type "string"}},
                   :description "Google Chat events."},
 :FormAction {:type "object",
              :properties {:actionMethodName {:description "The method name is used to identify which part of the form triggered the form submission. This information is echoed back to the bot as part of the card click event. The same method name can be used for several elements that trigger a common behavior if desired.",
                                              :type "string"},
                           :parameters {:items {:$ref "ActionParameter"},
                                        :type "array",
                                        :description "List of action parameters."}},
              :description "A form action describes the behavior when the form is submitted. For example, an Apps Script can be invoked to handle the form.",
              :id "FormAction"},
 :Empty {:id "Empty",
         :type "object",
         :properties {},
         :description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."},
 :Membership {:id "Membership",
              :description "Represents a membership relation in Hangouts Chat.",
              :type "object",
              :properties {:name {:type "string"},
                           :member {:$ref "User",
                                    :description "A User in Hangout Chat"},
                           :createTime {:type "string",
                                        :format "google-datetime",
                                        :description "The creation time of the membership a.k.a the time at which the member joined the space, if applicable."},
                           :state {:description "State of the membership.",
                                   :enumDescriptions ["Default, do not use."
                                                      "The user has joined the space."
                                                      "The user has been invited, is able to join the space, but currently has not joined."
                                                      "The user is not a member of the space, has not been invited and is not able to join the space."],
                                   :enum ["MEMBERSHIP_STATE_UNSPECIFIED"
                                          "JOINED"
                                          "INVITED"
                                          "NOT_A_MEMBER"],
                                   :type "string"}}},
 :SlashCommand {:description "A Slash Command in Hangouts Chat.",
                :properties {:commandId {:description "The id of the slash command invoked.",
                                         :type "string",
                                         :format "int64"}},
                :id "SlashCommand",
                :type "object"},
 :Card {:id "Card",
        :description "A card is a UI element that can contain UI widgets such as texts, images.",
        :type "object",
        :properties {:cardActions {:type "array",
                                   :items {:$ref "CardAction"},
                                   :description "The actions of this card."},
                     :header {:description "The header of the card. A header usually contains a title and an image.",
                              :$ref "CardHeader"},
                     :name {:type "string",
                            :description "Name of the card."},
                     :sections {:items {:$ref "Section"},
                                :type "array",
                                :description "Sections are separated by a line divider."}}},
 :ListSpacesResponse {:properties {:nextPageToken {:type "string",
                                                   :description "Continuation token to retrieve the next page of results. It will be empty for the last page of results. Tokens expire in an hour. An error is thrown if an expired token is passed."},
                                   :spaces {:type "array",
                                            :items {:$ref "Space"},
                                            :description "List of spaces in the requested (or first) page."}},
                      :id "ListSpacesResponse",
                      :type "object"},
 :User {:description "A user in Hangouts Chat.",
        :type "object",
        :properties {:displayName {:description "The user's display name.",
                                   :type "string"},
                     :name {:description "Resource name, in the format \"users/*\".",
                            :type "string"},
                     :domainId {:type "string",
                                :description "Obfuscated domain information."},
                     :type {:description "User type.",
                            :enum ["TYPE_UNSPECIFIED" "HUMAN" "BOT"],
                            :type "string",
                            :enumDescriptions ["Default value for the enum. DO NOT USE."
                                               "Human user."
                                               "Bot user."]},
                     :isAnonymous {:description "Set to true if none of the depending services (Gaia, PeopleApi) returns any info for this user.",
                                   :type "boolean"}},
        :id "User"},
 :AttachmentDataRef {:id "AttachmentDataRef",
                     :properties {:resourceName {:type "string",
                                                 :description "The resource name of the attachment data. This is used with the media API to download the attachment data."}},
                     :description "A reference to the data of an attachment.",
                     :type "object"},
 :ImageButton {:id "ImageButton",
               :description "An image button with an onclick action.",
               :type "object",
               :properties {:icon {:enumDescriptions [""
                                                      ""
                                                      ""
                                                      ""
                                                      ""
                                                      ""
                                                      ""
                                                      ""
                                                      ""
                                                      ""
                                                      ""
                                                      ""
                                                      ""
                                                      ""
                                                      ""
                                                      ""
                                                      ""
                                                      ""
                                                      ""
                                                      ""
                                                      ""
                                                      ""
                                                      ""
                                                      ""
                                                      ""
                                                      ""
                                                      ""
                                                      ""
                                                      ""
                                                      ""
                                                      ""],
                                   :enum ["ICON_UNSPECIFIED"
                                          "AIRPLANE"
                                          "BOOKMARK"
                                          "BUS"
                                          "CAR"
                                          "CLOCK"
                                          "CONFIRMATION_NUMBER_ICON"
                                          "DOLLAR"
                                          "DESCRIPTION"
                                          "EMAIL"
                                          "EVENT_PERFORMER"
                                          "EVENT_SEAT"
                                          "FLIGHT_ARRIVAL"
                                          "FLIGHT_DEPARTURE"
                                          "HOTEL"
                                          "HOTEL_ROOM_TYPE"
                                          "INVITE"
                                          "MAP_PIN"
                                          "MEMBERSHIP"
                                          "MULTIPLE_PEOPLE"
                                          "OFFER"
                                          "PERSON"
                                          "PHONE"
                                          "RESTAURANT_ICON"
                                          "SHOPPING_CART"
                                          "STAR"
                                          "STORE"
                                          "TICKET"
                                          "TRAIN"
                                          "VIDEO_CAMERA"
                                          "VIDEO_PLAY"],
                                   :type "string",
                                   :description "The icon specified by an enum that indices to an icon provided by Chat API."},
                            :onClick {:description "The onclick action.",
                                      :$ref "OnClick"},
                            :iconUrl {:description "The icon specified by a URL.",
                                      :type "string"},
                            :name {:type "string",
                                   :description "The name of this image_button which will be used for accessibility. Default value will be provided if developers don't specify."}}},
 :Attachment {:type "object",
              :description "An attachment in Hangouts Chat.",
              :properties {:contentType {:description "The content type (MIME type) of the file.",
                                         :type "string"},
                           :contentName {:description "The original file name for the content, not the full path.",
                                         :type "string"},
                           :name {:description "Resource name of the attachment, in the form \"spaces/*/messages/*/attachments/*\".",
                                  :type "string"},
                           :thumbnailUri {:type "string",
                                          :description "Output only. The thumbnail URL which should be used to preview the attachment to a human user. Bots should not use this URL to download attachment content."},
                           :driveDataRef {:description "A reference to the drive attachment. This is used with the Drive API.",
                                          :$ref "DriveDataRef"},
                           :source {:enum ["SOURCE_UNSPECIFIED"
                                           "DRIVE_FILE"
                                           "UPLOADED_CONTENT"],
                                    :description "The source of the attachment.",
                                    :type "string",
                                    :enumDescriptions ["" "" ""]},
                           :downloadUri {:description "Output only. The download URL which should be used to allow a human user to download the attachment. Bots should not use this URL to download attachment content.",
                                         :type "string"},
                           :attachmentDataRef {:$ref "AttachmentDataRef",
                                               :description "A reference to the attachment data. This is used with the media API to download the attachment data."}},
              :id "Attachment"},
 :Section {:id "Section",
           :type "object",
           :description "A section contains a collection of widgets that are rendered (vertically) in the order that they are specified. Across all platforms, cards have a narrow fixed width, so there is currently no need for layout properties (e.g. float).",
           :properties {:header {:type "string",
                                 :description "The header of the section, text formatted supported."},
                        :widgets {:items {:$ref "WidgetMarkup"},
                                  :description "A section must contain at least 1 widget.",
                                  :type "array"}}},
 :TextParagraph {:type "object",
                 :description "A paragraph of text. Formatted text supported.",
                 :id "TextParagraph",
                 :properties {:text {:type "string"}}},
 :ActionParameter {:type "object",
                   :properties {:key {:type "string",
                                      :description "The name of the parameter for the action script."},
                                :value {:description "The value of the parameter.",
                                        :type "string"}},
                   :id "ActionParameter",
                   :description "List of string parameters to supply when the action method is invoked. For example, consider three snooze buttons: snooze now, snooze 1 day, snooze next week. You might use action method = snooze(), passing the snooze type and snooze time in the list of string parameters."},
 :DriveDataRef {:type "object",
                :description "A reference to the data of a drive attachment.",
                :id "DriveDataRef",
                :properties {:driveFileId {:type "string",
                                           :description "The id for the drive file, for use with the Drive API."}}},
 :UserMentionMetadata {:description "Annotation metadata for user mentions (@).",
                       :id "UserMentionMetadata",
                       :properties {:user {:$ref "User",
                                           :description "The user mentioned."},
                                    :type {:description "The type of user mention.",
                                           :type "string",
                                           :enum ["TYPE_UNSPECIFIED"
                                                  "ADD"
                                                  "MENTION"],
                                           :enumDescriptions ["Default value for the enum. DO NOT USE."
                                                              "Add user to space."
                                                              "Mention user in space."]}},
                       :type "object"},
 :Media {:description "Media resource.",
         :id "Media",
         :type "object",
         :properties {:resourceName {:description "Name of the media resource.",
                                     :type "string"}}},
 :Annotation {:id "Annotation",
              :properties {:userMention {:$ref "UserMentionMetadata",
                                         :description "The metadata of user mention."},
                           :startIndex {:format "int32",
                                        :description "Start index (0-based, inclusive) in the plain-text message body this annotation corresponds to.",
                                        :type "integer"},
                           :length {:description "Length of the substring in the plain-text message body this annotation corresponds to.",
                                    :format "int32",
                                    :type "integer"},
                           :slashCommand {:description "The metadata for a slash command.",
                                          :$ref "SlashCommandMetadata"},
                           :type {:type "string",
                                  :enum ["ANNOTATION_TYPE_UNSPECIFIED"
                                         "USER_MENTION"
                                         "SLASH_COMMAND"],
                                  :description "The type of this annotation.",
                                  :enumDescriptions ["Default value for the enum. DO NOT USE."
                                                     "A user is mentioned."
                                                     "A slash command is invoked."]}},
              :description "Annotations associated with the plain-text body of the message. Example plain-text message body: ``` Hello @FooBot how are you!\" ``` The corresponding annotations metadata: ``` \"annotations\":[{ \"type\":\"USER_MENTION\", \"startIndex\":6, \"length\":7, \"userMention\": { \"user\": { \"name\":\"users/107946847022116401880\", \"displayName\":\"FooBot\", \"avatarUrl\":\"https://goo.gl/aeDtrS\", \"type\":\"BOT\" }, \"type\":\"MENTION\" } }] ```",
              :type "object"},
 :Button {:type "object",
          :id "Button",
          :properties {:textButton {:description "A button with text and onclick action.",
                                    :$ref "TextButton"},
                       :imageButton {:description "A button with image and onclick action.",
                                     :$ref "ImageButton"}},
          :description "A button. Can be a text button or an image button."},
 :ListMembershipsResponse {:type "object",
                           :properties {:nextPageToken {:type "string",
                                                        :description "Continuation token to retrieve the next page of results. It will be empty for the last page of results."},
                                        :memberships {:description "List of memberships in the requested (or first) page.",
                                                      :items {:$ref "Membership"},
                                                      :type "array"}},
                           :id "ListMembershipsResponse"},
 :OpenLink {:id "OpenLink",
            :type "object",
            :properties {:url {:type "string",
                               :description "The URL to open."}},
            :description "A link that opens a new window."}}
