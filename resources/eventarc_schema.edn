{:EventFilter {:type "object",
               :properties {:attribute {:type "string",
                                        :description "Required. The name of a CloudEvents attribute. Currently, only a subset of attributes are supported for filtering. All triggers MUST provide a filter for the 'type' attribute."},
                            :value {:description "Required. The value for the attribute.",
                                    :type "string"}},
               :id "EventFilter",
               :description "Filters events based on exact matches on the CloudEvents attributes."},
 :SetIamPolicyRequest {:properties {:updateMask {:format "google-fieldmask",
                                                 :description "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
                                                 :type "string"},
                                    :policy {:$ref "Policy",
                                             :description "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them."}},
                       :description "Request message for `SetIamPolicy` method.",
                       :type "object",
                       :id "SetIamPolicyRequest"},
 :AuditConfig {:id "AuditConfig",
               :type "object",
               :properties {:auditLogConfigs {:items {:$ref "AuditLogConfig"},
                                              :type "array",
                                              :description "The configuration for logging of each type of permission."},
                            :service {:type "string",
                                      :description "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."}},
               :description "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."},
 :AuditLogConfig {:properties {:logType {:enum ["LOG_TYPE_UNSPECIFIED"
                                                "ADMIN_READ"
                                                "DATA_WRITE"
                                                "DATA_READ"],
                                         :type "string",
                                         :description "The log type that this config enables.",
                                         :enumDescriptions ["Default case. Should never be this."
                                                            "Admin reads. Example: CloudIAM getIamPolicy"
                                                            "Data writes. Example: CloudSQL Users create"
                                                            "Data reads. Example: CloudSQL Users list"]},
                               :exemptedMembers {:description "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
                                                 :items {:type "string"},
                                                 :type "array"}},
                  :id "AuditLogConfig",
                  :type "object",
                  :description "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."},
 :Destination {:type "object",
               :description "Represents a target of an invocation over HTTP.",
               :properties {:cloudRun {:description "Cloud Run fully-managed service that receives the events. The service should be running in the same project of the trigger.",
                                       :$ref "CloudRun"}},
               :id "Destination"},
 :CloudRun {:id "CloudRun",
            :type "object",
            :description "Represents a Cloud Run destination.",
            :properties {:path {:type "string",
                                :description "Optional. The relative path on the Cloud Run service the events should be sent to. The value must conform to the definition of URI path segment (section 3.3 of RFC2396). Examples: \"/route\", \"route\", \"route/subroute\"."},
                         :service {:type "string",
                                   :description "Required. The name of the Cloud Run service being addressed. See https://cloud.google.com/run/docs/reference/rest/v1/namespaces.services. Only services located in the same project of the trigger object can be addressed."},
                         :region {:type "string",
                                  :description "Required. The region the Cloud Run service is deployed in."}}},
 :Pubsub {:description "Represents a Pub/Sub transport.",
          :type "object",
          :id "Pubsub",
          :properties {:subscription {:description "Output only. The name of the Pub/Sub subscription created and managed by Eventarc system as a transport for the event delivery. Format: `projects/{PROJECT_ID}/subscriptions/{SUBSCRIPTION_NAME}`.",
                                      :readOnly true,
                                      :type "string"},
                       :topic {:type "string",
                               :description "Optional. The name of the Pub/Sub topic created and managed by Eventarc system as a transport for the event delivery. Format: `projects/{PROJECT_ID}/topics/{TOPIC_NAME}`. You may set an existing topic for triggers of the type `google.cloud.pubsub.topic.v1.messagePublished` only. The topic you provide here will not be deleted by Eventarc at trigger deletion."}}},
 :Binding {:properties {:condition {:$ref "Expr",
                                    :description "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."},
                        :members {:description "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. ",
                                  :type "array",
                                  :items {:type "string"}},
                        :role {:description "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
                               :type "string"}},
           :id "Binding",
           :type "object",
           :description "Associates `members` with a `role`."},
 :Empty {:description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
         :id "Empty",
         :properties {},
         :type "object"},
 :Transport {:description "Represents the transport intermediaries created for the trigger in order to deliver events.",
             :type "object",
             :properties {:pubsub {:$ref "Pubsub",
                                   :description "The Pub/Sub topic and subscription used by Eventarc as delivery intermediary."}},
             :id "Transport"},
 :ListLocationsResponse {:description "The response message for Locations.ListLocations.",
                         :id "ListLocationsResponse",
                         :properties {:nextPageToken {:description "The standard List next-page token.",
                                                      :type "string"},
                                      :locations {:items {:$ref "Location"},
                                                  :description "A list of locations that matches the specified filter in the request.",
                                                  :type "array"}},
                         :type "object"},
 :GoogleLongrunningOperation {:type "object",
                              :id "GoogleLongrunningOperation",
                              :properties {:error {:description "The error result of the operation in case of failure or cancellation.",
                                                   :$ref "GoogleRpcStatus"},
                                           :response {:additionalProperties {:type "any",
                                                                             :description "Properties of the object. Contains field @type with type URL."},
                                                      :description "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                                                      :type "object"},
                                           :metadata {:description "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                                                      :additionalProperties {:type "any",
                                                                             :description "Properties of the object. Contains field @type with type URL."},
                                                      :type "object"},
                                           :name {:type "string",
                                                  :description "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."},
                                           :done {:description "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                                                  :type "boolean"}},
                              :description "This resource represents a long-running operation that is the result of a network API call."},
 :Trigger {:description "A representation of the trigger resource.",
           :id "Trigger",
           :type "object",
           :properties {:serviceAccount {:type "string",
                                         :description "Optional. The IAM service account email associated with the trigger. The service account represents the identity of the trigger. The principal who calls this API must have `iam.serviceAccounts.actAs` permission in the service account. See https://cloud.google.com/iam/docs/understanding-service-accounts?hl=en#sa_common for more information. For Cloud Run destinations, this service account is used to generate identity tokens when invoking the service. See https://cloud.google.com/run/docs/triggering/pubsub-push#create-service-account for information on how to invoke authenticated Cloud Run services. In order to create Audit Log triggers, the service account should also have `roles/eventarc.eventReceiver` IAM role."},
                        :transport {:description "Optional. In order to deliver messages, Eventarc may use other GCP products as transport intermediary. This field contains a reference to that transport intermediary. This information can be used for debugging purposes.",
                                    :$ref "Transport"},
                        :labels {:description "Optional. User labels attached to the triggers that can be used to group resources.",
                                 :additionalProperties {:type "string"},
                                 :type "object"},
                        :uid {:description "Output only. Server assigned unique identifier for the trigger. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.",
                              :readOnly true,
                              :type "string"},
                        :name {:description "Required. The resource name of the trigger. Must be unique within the location on the project and must be in `projects/{project}/locations/{location}/triggers/{trigger}` format.",
                               :type "string"},
                        :createTime {:format "google-datetime",
                                     :readOnly true,
                                     :type "string",
                                     :description "Output only. The creation time."},
                        :etag {:readOnly true,
                               :type "string",
                               :description "Output only. This checksum is computed by the server based on the value of other fields, and may be sent only on create requests to ensure the client has an up-to-date value before proceeding."},
                        :updateTime {:format "google-datetime",
                                     :type "string",
                                     :readOnly true,
                                     :description "Output only. The last-modified time."},
                        :eventFilters {:items {:$ref "EventFilter"},
                                       :description "Required. null The list of filters that applies to event attributes. Only events that match all the provided filters will be sent to the destination.",
                                       :type "array"},
                        :destination {:description "Required. Destination specifies where the events should be sent to.",
                                      :$ref "Destination"}}},
 :TestIamPermissionsRequest {:properties {:permissions {:items {:type "string"},
                                                        :type "array",
                                                        :description "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."}},
                             :description "Request message for `TestIamPermissions` method.",
                             :id "TestIamPermissionsRequest",
                             :type "object"},
 :TestIamPermissionsResponse {:description "Response message for `TestIamPermissions` method.",
                              :type "object",
                              :properties {:permissions {:items {:type "string"},
                                                         :type "array",
                                                         :description "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."}},
                              :id "TestIamPermissionsResponse"},
 :GoogleLongrunningCancelOperationRequest {:properties {},
                                           :description "The request message for Operations.CancelOperation.",
                                           :id "GoogleLongrunningCancelOperationRequest",
                                           :type "object"},
 :GoogleLongrunningListOperationsResponse {:description "The response message for Operations.ListOperations.",
                                           :properties {:nextPageToken {:description "The standard List next-page token.",
                                                                        :type "string"},
                                                        :operations {:description "A list of operations that matches the specified filter in the request.",
                                                                     :items {:$ref "GoogleLongrunningOperation"},
                                                                     :type "array"}},
                                           :type "object",
                                           :id "GoogleLongrunningListOperationsResponse"},
 :ListTriggersResponse {:type "object",
                        :description "The response message for the ListTriggers method.",
                        :properties {:nextPageToken {:description "A page token that can be sent to ListTriggers to request the next page. If this is empty, then there are no more pages.",
                                                     :type "string"},
                                     :triggers {:items {:$ref "Trigger"},
                                                :type "array",
                                                :description "The requested triggers, up to the number specified in `page_size`."},
                                     :unreachable {:items {:type "string"},
                                                   :description "Unreachable resources, if any.",
                                                   :type "array"}},
                        :id "ListTriggersResponse"},
 :OperationMetadata {:type "object",
                     :properties {:apiVersion {:type "string",
                                               :description "Output only. API version used to start the operation.",
                                               :readOnly true},
                                  :target {:description "Output only. Server-defined resource path for the target of the operation.",
                                           :readOnly true,
                                           :type "string"},
                                  :endTime {:format "google-datetime",
                                            :type "string",
                                            :readOnly true,
                                            :description "Output only. The time the operation finished running."},
                                  :createTime {:format "google-datetime",
                                               :readOnly true,
                                               :type "string",
                                               :description "Output only. The time the operation was created."},
                                  :requestedCancellation {:description "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                                                          :type "boolean",
                                                          :readOnly true},
                                  :statusMessage {:type "string",
                                                  :description "Output only. Human-readable status of the operation, if any.",
                                                  :readOnly true},
                                  :verb {:readOnly true,
                                         :type "string",
                                         :description "Output only. Name of the verb executed by the operation."}},
                     :id "OperationMetadata",
                     :description "Represents the metadata of the long-running operation."},
 :Expr {:id "Expr",
        :description "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
        :properties {:title {:description "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
                             :type "string"},
                     :location {:type "string",
                                :description "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."},
                     :expression {:description "Textual representation of an expression in Common Expression Language syntax.",
                                  :type "string"},
                     :description {:type "string",
                                   :description "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."}},
        :type "object"},
 :Location {:properties {:locationId {:type "string",
                                      :description "The canonical id for this location. For example: `\"us-east1\"`."},
                         :labels {:type "object",
                                  :description "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
                                  :additionalProperties {:type "string"}},
                         :displayName {:type "string",
                                       :description "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."},
                         :metadata {:additionalProperties {:type "any",
                                                           :description "Properties of the object. Contains field @type with type URL."},
                                    :description "Service-specific metadata. For example the available capacity at the given location.",
                                    :type "object"},
                         :name {:description "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
                                :type "string"}},
            :description "A resource that represents Google Cloud Platform location.",
            :type "object",
            :id "Location"},
 :GoogleRpcStatus {:type "object",
                   :properties {:details {:items {:type "object",
                                                  :additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                                         :type "any"}},
                                          :description "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                                          :type "array"},
                                :code {:type "integer",
                                       :description "The status code, which should be an enum value of google.rpc.Code.",
                                       :format "int32"},
                                :message {:type "string",
                                          :description "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."}},
                   :id "GoogleRpcStatus",
                   :description "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."},
 :Policy {:type "object",
          :id "Policy",
          :properties {:version {:description "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                                 :type "integer",
                                 :format "int32"},
                       :bindings {:items {:$ref "Binding"},
                                  :description "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member.",
                                  :type "array"},
                       :auditConfigs {:type "array",
                                      :items {:$ref "AuditConfig"},
                                      :description "Specifies cloud audit logging configuration for this policy."},
                       :etag {:format "byte",
                              :description "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                              :type "string"}},
          :description "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."}}
