{:GetRecaptchaParamResponse {:id "GetRecaptchaParamResponse",
                             :type "object",
                             :description "Response of getting recaptcha param.",
                             :properties {:kind {:type "string",
                                                 :description "The fixed string \"identitytoolkit#GetRecaptchaParamResponse\".",
                                                 :default "identitytoolkit#GetRecaptchaParamResponse"},
                                          :recaptchaSiteKey {:type "string",
                                                             :description "Site key registered at recaptcha."},
                                          :recaptchaStoken {:type "string",
                                                            :description "The stoken field for the recaptcha widget, used to request captcha challenge."}}},
 :IdentitytoolkitRelyingpartySetAccountInfoRequest {:id "IdentitytoolkitRelyingpartySetAccountInfoRequest",
                                                    :type "object",
                                                    :description "Request to set the account information.",
                                                    :properties {:email {:type "string",
                                                                         :description "The email of the user."},
                                                                 :deleteProvider {:type "array",
                                                                                  :description "The IDPs the user request to delete.",
                                                                                  :items {:type "string"}},
                                                                 :returnSecureToken {:type "boolean",
                                                                                     :description "Whether return sts id token and refresh token instead of gitkit token."},
                                                                 :validSince {:type "string",
                                                                              :description "Timestamp in seconds for valid login token.",
                                                                              :format "int64"},
                                                                 :instanceId {:type "string",
                                                                              :description "Instance id token of the app."},
                                                                 :password {:type "string",
                                                                            :description "The new password of the user."},
                                                                 :displayName {:type "string",
                                                                               :description "The name of the user."},
                                                                 :upgradeToFederatedLogin {:type "boolean",
                                                                                           :description "Mark the user to upgrade to federated login."},
                                                                 :customAttributes {:type "string",
                                                                                    :description "The custom attributes to be set in the user's id token."},
                                                                 :createdAt {:type "string",
                                                                             :description "The timestamp when the account is created.",
                                                                             :format "int64"},
                                                                 :idToken {:type "string",
                                                                           :description "The GITKit token of the authenticated user."},
                                                                 :deleteAttribute {:type "array",
                                                                                   :description "The attributes users request to delete.",
                                                                                   :items {:type "string"}},
                                                                 :captchaResponse {:type "string",
                                                                                   :description "Response to the captcha."},
                                                                 :captchaChallenge {:type "string",
                                                                                    :description "The captcha challenge."},
                                                                 :emailVerified {:type "boolean",
                                                                                 :description "Mark the email as verified or not."},
                                                                 :localId {:type "string",
                                                                           :description "The local ID of the user."},
                                                                 :photoUrl {:type "string",
                                                                            :description "The photo url of the user."},
                                                                 :oobCode {:type "string",
                                                                           :description "The out-of-band code of the change email request."},
                                                                 :disableUser {:type "boolean",
                                                                               :description "Whether to disable the user."},
                                                                 :phoneNumber {:type "string",
                                                                               :description "Privileged caller can update user with specified phone number."},
                                                                 :lastLoginAt {:type "string",
                                                                               :description "Last login timestamp.",
                                                                               :format "int64"},
                                                                 :provider {:type "array",
                                                                            :description "The associated IDPs of the user.",
                                                                            :items {:type "string"}},
                                                                 :delegatedProjectNumber {:type "string",
                                                                                          :description "GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.",
                                                                                          :format "int64"}}},
 :IdentitytoolkitRelyingpartySetProjectConfigResponse {:id "IdentitytoolkitRelyingpartySetProjectConfigResponse",
                                                       :type "object",
                                                       :description "Response of setting the project configuration.",
                                                       :properties {:projectId {:type "string",
                                                                                :description "Project ID of the relying party."}}},
 :IdentitytoolkitRelyingpartyGetProjectConfigResponse {:id "IdentitytoolkitRelyingpartyGetProjectConfigResponse",
                                                       :type "object",
                                                       :description "Response of getting the project configuration.",
                                                       :properties {:allowPasswordUser {:type "boolean",
                                                                                        :description "Whether to allow password user sign in or sign up."},
                                                                    :authorizedDomains {:type "array",
                                                                                        :description "Authorized domains.",
                                                                                        :items {:type "string"}},
                                                                    :legacyResetPasswordTemplate {:$ref "EmailTemplate",
                                                                                                  :description "Legacy reset password email template."},
                                                                    :changeEmailTemplate {:$ref "EmailTemplate",
                                                                                          :description "Change email template."},
                                                                    :dynamicLinksDomain {:type "string"},
                                                                    :idpConfig {:type "array",
                                                                                :description "OAuth2 provider configuration.",
                                                                                :items {:$ref "IdpConfig"}},
                                                                    :apiKey {:type "string",
                                                                             :description "Browser API key, needed when making http request to Apiary."},
                                                                    :enableAnonymousUser {:type "boolean",
                                                                                          :description "Whether anonymous user is enabled."},
                                                                    :verifyEmailTemplate {:$ref "EmailTemplate",
                                                                                          :description "Verify email template."},
                                                                    :projectId {:type "string",
                                                                                :description "Project ID of the relying party."},
                                                                    :useEmailSending {:type "boolean",
                                                                                      :description "Whether to use email sending provided by Firebear."},
                                                                    :resetPasswordTemplate {:$ref "EmailTemplate",
                                                                                            :description "Reset password email template."}}},
 :IdentitytoolkitRelyingpartyVerifyAssertionRequest {:id "IdentitytoolkitRelyingpartyVerifyAssertionRequest",
                                                     :type "object",
                                                     :description "Request to verify the IDP assertion.",
                                                     :properties {:tenantId {:type "string",
                                                                             :description "For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from."},
                                                                  :tenantProjectNumber {:type "string",
                                                                                        :description "Tenant project number to be used for idp discovery.",
                                                                                        :format "uint64"},
                                                                  :autoCreate {:type "boolean",
                                                                               :description "When it's true, automatically creates a new account if the user doesn't exist. When it's false, allows existing user to sign in normally and throws exception if the user doesn't exist."},
                                                                  :returnSecureToken {:type "boolean",
                                                                                      :description "Whether return sts id token and refresh token instead of gitkit token."},
                                                                  :sessionId {:type "string",
                                                                              :description "Session ID, which should match the one in previous createAuthUri request."},
                                                                  :instanceId {:type "string",
                                                                               :description "Instance id token of the app."},
                                                                  :idToken {:type "string",
                                                                            :description "The GITKit token of the authenticated user."},
                                                                  :requestUri {:type "string",
                                                                               :description "The URI to which the IDP redirects the user back. It may contain federated login result params added by the IDP."},
                                                                  :postBody {:type "string",
                                                                             :description "The post body if the request is a HTTP POST."},
                                                                  :returnRefreshToken {:type "boolean",
                                                                                       :description "Whether to return refresh tokens."},
                                                                  :pendingIdToken {:type "string",
                                                                                   :description "The GITKit token for the non-trusted IDP pending to be confirmed by the user."},
                                                                  :returnIdpCredential {:type "boolean",
                                                                                        :description "Whether return 200 and IDP credential rather than throw exception when federated id is already linked."},
                                                                  :delegatedProjectNumber {:type "string",
                                                                                           :description "GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.",
                                                                                           :format "int64"}}},
 :IdentitytoolkitRelyingpartyGetAccountInfoRequest {:id "IdentitytoolkitRelyingpartyGetAccountInfoRequest",
                                                    :type "object",
                                                    :description "Request to get the account information.",
                                                    :properties {:delegatedProjectNumber {:type "string",
                                                                                          :description "GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.",
                                                                                          :format "int64"},
                                                                 :email {:type "array",
                                                                         :description "The list of emails of the users to inquiry.",
                                                                         :items {:type "string"}},
                                                                 :idToken {:type "string",
                                                                           :description "The GITKit token of the authenticated user."},
                                                                 :localId {:type "array",
                                                                           :description "The list of local ID's of the users to inquiry.",
                                                                           :items {:type "string"}},
                                                                 :phoneNumber {:type "array",
                                                                               :description "Privileged caller can query users by specified phone number.",
                                                                               :items {:type "string"}}}},
 :IdentitytoolkitRelyingpartySignOutUserRequest {:id "IdentitytoolkitRelyingpartySignOutUserRequest",
                                                 :type "object",
                                                 :description "Request to sign out user.",
                                                 :properties {:instanceId {:type "string",
                                                                           :description "Instance id token of the app."},
                                                              :localId {:type "string",
                                                                        :description "The local ID of the user."}}},
 :IdentitytoolkitRelyingpartySendVerificationCodeRequest {:id "IdentitytoolkitRelyingpartySendVerificationCodeRequest",
                                                          :type "object",
                                                          :description "Request for Identitytoolkit-SendVerificationCode",
                                                          :properties {:iosReceipt {:type "string",
                                                                                    :description "Receipt of successful app token validation with APNS."},
                                                                       :iosSecret {:type "string",
                                                                                   :description "Secret delivered to iOS app via APNS."},
                                                                       :phoneNumber {:type "string",
                                                                                     :description "The phone number to send the verification code to in E.164 format."},
                                                                       :recaptchaToken {:type "string",
                                                                                        :description "Recaptcha solution."}}},
 :DownloadAccountResponse {:id "DownloadAccountResponse",
                           :type "object",
                           :description "Response of downloading accounts in batch.",
                           :properties {:kind {:type "string",
                                               :description "The fixed string \"identitytoolkit#DownloadAccountResponse\".",
                                               :default "identitytoolkit#DownloadAccountResponse"},
                                        :nextPageToken {:type "string",
                                                        :description "The next page token. To be used in a subsequent request to return the next page of results."},
                                        :users {:type "array",
                                                :description "The user accounts data.",
                                                :items {:$ref "UserInfo"}}}},
 :DeleteAccountResponse {:id "DeleteAccountResponse",
                         :type "object",
                         :description "Respone of deleting account.",
                         :properties {:kind {:type "string",
                                             :description "The fixed string \"identitytoolkit#DeleteAccountResponse\".",
                                             :default "identitytoolkit#DeleteAccountResponse"}}},
 :SignupNewUserResponse {:id "SignupNewUserResponse",
                         :type "object",
                         :description "Response of signing up new user, creating anonymous user or anonymous user reauth.",
                         :properties {:displayName {:type "string",
                                                    :description "The name of the user."},
                                      :email {:type "string",
                                              :description "The email of the user."},
                                      :expiresIn {:type "string",
                                                  :description "If idToken is STS id token, then this field will be expiration time of STS id token in seconds.",
                                                  :format "int64"},
                                      :idToken {:type "string",
                                                :description "The Gitkit id token to login the newly sign up user."},
                                      :kind {:type "string",
                                             :description "The fixed string \"identitytoolkit#SignupNewUserResponse\".",
                                             :default "identitytoolkit#SignupNewUserResponse"},
                                      :localId {:type "string",
                                                :description "The RP local ID of the user."},
                                      :refreshToken {:type "string",
                                                     :description "If idToken is STS id token, then this field will be refresh token."}}},
 :Relyingparty {:id "Relyingparty",
                :type "object",
                :description "Request of getting a code for user confirmation (reset password, change email etc.)",
                :properties {:newEmail {:type "string",
                                        :description "The new email if the code is for email change."},
                             :continueUrl {:type "string",
                                           :description "The url to continue to the Gitkit app"},
                             :userIp {:type "string",
                                      :description "The IP address of the user."},
                             :email {:type "string",
                                     :description "The email of the user."},
                             :iOSAppStoreId {:type "string",
                                             :description "iOS app store id to download the app if it's not already installed"},
                             :captchaResp {:type "string",
                                           :description "The recaptcha response from the user."},
                             :idToken {:type "string",
                                       :description "The user's Gitkit login token for email change."},
                             :androidInstallApp {:type "boolean",
                                                 :description "whether or not to install the android app on the device where the link is opened"},
                             :challenge {:type "string",
                                         :description "The recaptcha challenge presented to the user."},
                             :kind {:type "string",
                                    :description "The fixed string \"identitytoolkit#relyingparty\".",
                                    :default "identitytoolkit#relyingparty"},
                             :requestType {:type "string",
                                           :description "The request type."},
                             :iOSBundleId {:type "string",
                                           :description "the iOS bundle id of iOS app to handle the action code"},
                             :androidPackageName {:type "string",
                                                  :description "android package name of the android app to handle the action code"},
                             :canHandleCodeInApp {:type "boolean",
                                                  :description "whether or not the app can handle the oob code without first going to web"},
                             :androidMinimumVersion {:type "string",
                                                     :description "minimum version of the app. if the version on the device is lower than this version then the user is taken to the play store to upgrade the app"}}},
 :ResetPasswordResponse {:id "ResetPasswordResponse",
                         :type "object",
                         :description "Response of resetting the password.",
                         :properties {:email {:type "string",
                                              :description "The user's email. If the out-of-band code is for email recovery, the user's original email."},
                                      :kind {:type "string",
                                             :description "The fixed string \"identitytoolkit#ResetPasswordResponse\".",
                                             :default "identitytoolkit#ResetPasswordResponse"},
                                      :newEmail {:type "string",
                                                 :description "If the out-of-band code is for email recovery, the user's new email."},
                                      :requestType {:type "string",
                                                    :description "The request type."}}},
 :VerifyCustomTokenResponse {:id "VerifyCustomTokenResponse",
                             :type "object",
                             :description "Response from verifying a custom token",
                             :properties {:expiresIn {:type "string",
                                                      :description "If idToken is STS id token, then this field will be expiration time of STS id token in seconds.",
                                                      :format "int64"},
                                          :idToken {:type "string",
                                                    :description "The GITKit token for authenticated user."},
                                          :isNewUser {:type "boolean",
                                                      :description "True if it's a new user sign-in, false if it's a returning user."},
                                          :kind {:type "string",
                                                 :description "The fixed string \"identitytoolkit#VerifyCustomTokenResponse\".",
                                                 :default "identitytoolkit#VerifyCustomTokenResponse"},
                                          :refreshToken {:type "string",
                                                         :description "If idToken is STS id token, then this field will be refresh token."}}},
 :GetOobConfirmationCodeResponse {:id "GetOobConfirmationCodeResponse",
                                  :type "object",
                                  :description "Response of getting a code for user confirmation (reset password, change email etc.).",
                                  :properties {:email {:type "string",
                                                       :description "The email address that the email is sent to."},
                                               :kind {:type "string",
                                                      :description "The fixed string \"identitytoolkit#GetOobConfirmationCodeResponse\".",
                                                      :default "identitytoolkit#GetOobConfirmationCodeResponse"},
                                               :oobCode {:type "string",
                                                         :description "The code to be send to the user."}}},
 :IdentitytoolkitRelyingpartySetProjectConfigRequest {:id "IdentitytoolkitRelyingpartySetProjectConfigRequest",
                                                      :type "object",
                                                      :description "Request to set the project configuration.",
                                                      :properties {:allowPasswordUser {:type "boolean",
                                                                                       :description "Whether to allow password user sign in or sign up."},
                                                                   :authorizedDomains {:type "array",
                                                                                       :description "Authorized domains for widget redirect.",
                                                                                       :items {:type "string"}},
                                                                   :legacyResetPasswordTemplate {:$ref "EmailTemplate",
                                                                                                 :description "Legacy reset password email template."},
                                                                   :changeEmailTemplate {:$ref "EmailTemplate",
                                                                                         :description "Change email template."},
                                                                   :idpConfig {:type "array",
                                                                               :description "Oauth2 provider configuration.",
                                                                               :items {:$ref "IdpConfig"}},
                                                                   :apiKey {:type "string",
                                                                            :description "Browser API key, needed when making http request to Apiary."},
                                                                   :enableAnonymousUser {:type "boolean",
                                                                                         :description "Whether to enable anonymous user."},
                                                                   :verifyEmailTemplate {:$ref "EmailTemplate",
                                                                                         :description "Verify email template."},
                                                                   :useEmailSending {:type "boolean",
                                                                                     :description "Whether to use email sending provided by Firebear."},
                                                                   :delegatedProjectNumber {:type "string",
                                                                                            :description "GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.",
                                                                                            :format "int64"},
                                                                   :resetPasswordTemplate {:$ref "EmailTemplate",
                                                                                           :description "Reset password email template."}}},
 :UserInfo {:id "UserInfo",
            :type "object",
            :description "Template for an individual account info.",
            :properties {:salt {:type "string",
                                :description "The user's password salt.",
                                :format "byte"},
                         :email {:type "string",
                                 :description "The email of the user."},
                         :validSince {:type "string",
                                      :description "Timestamp in seconds for valid login token.",
                                      :format "int64"},
                         :disabled {:type "boolean",
                                    :description "Whether the user is disabled."},
                         :displayName {:type "string",
                                       :description "The name of the user."},
                         :providerUserInfo {:type "array",
                                            :description "The IDP of the user.",
                                            :items {:type "object",
                                                    :properties {:displayName {:type "string",
                                                                               :description "The user's display name at the IDP."},
                                                                 :email {:type "string",
                                                                         :description "User's email at IDP."},
                                                                 :federatedId {:type "string",
                                                                               :description "User's identifier at IDP."},
                                                                 :phoneNumber {:type "string",
                                                                               :description "User's phone number."},
                                                                 :photoUrl {:type "string",
                                                                            :description "The user's photo url at the IDP."},
                                                                 :providerId {:type "string",
                                                                              :description "The IdP ID. For white listed IdPs it's a short domain name, e.g., google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it's the OP identifier."},
                                                                 :rawId {:type "string",
                                                                         :description "User's raw identifier directly returned from IDP."},
                                                                 :screenName {:type "string",
                                                                              :description "User's screen name at Twitter or login name at Github."}}}},
                         :customAttributes {:type "string",
                                            :description "The custom attributes to be set in the user's id token."},
                         :createdAt {:type "string",
                                     :description "User creation timestamp.",
                                     :format "int64"},
                         :emailVerified {:type "boolean",
                                         :description "Whether the email has been verified."},
                         :customAuth {:type "boolean",
                                      :description "Whether the user is authenticated by the developer."},
                         :localId {:type "string",
                                   :description "The local ID of the user."},
                         :passwordUpdatedAt {:type "number",
                                             :description "The timestamp when the password was last updated.",
                                             :format "double"},
                         :photoUrl {:type "string",
                                    :description "The URL of the user profile photo."},
                         :rawPassword {:type "string",
                                       :description "The user's plain text password."},
                         :passwordHash {:type "string",
                                        :description "The user's hashed password.",
                                        :format "byte"},
                         :version {:type "integer",
                                   :description "Version of the user's password.",
                                   :format "int32"},
                         :screenName {:type "string",
                                      :description "User's screen name at Twitter or login name at Github."},
                         :phoneNumber {:type "string",
                                       :description "User's phone number."},
                         :lastLoginAt {:type "string",
                                       :description "last login timestamp.",
                                       :format "int64"}}},
 :IdpConfig {:id "IdpConfig",
             :type "object",
             :description "Template for a single idp configuration.",
             :properties {:clientId {:type "string",
                                     :description "OAuth2 client ID."},
                          :enabled {:type "boolean",
                                    :description "Whether this IDP is enabled."},
                          :experimentPercent {:type "integer",
                                              :description "Percent of users who will be prompted/redirected federated login for this IDP.",
                                              :format "int32"},
                          :provider {:type "string",
                                     :description "OAuth2 provider."},
                          :secret {:type "string",
                                   :description "OAuth2 client secret."},
                          :whitelistedAudiences {:type "array",
                                                 :description "Whitelisted client IDs for audience check.",
                                                 :items {:type "string"}}}},
 :IdentitytoolkitRelyingpartyEmailLinkSigninRequest {:id "IdentitytoolkitRelyingpartyEmailLinkSigninRequest",
                                                     :type "object",
                                                     :description "Request to sign in with email.",
                                                     :properties {:email {:type "string",
                                                                          :description "The email address of the user."},
                                                                  :idToken {:type "string",
                                                                            :description "Token for linking flow."},
                                                                  :oobCode {:type "string",
                                                                            :description "The confirmation code."}}},
 :IdentitytoolkitRelyingpartySendVerificationCodeResponse {:id "IdentitytoolkitRelyingpartySendVerificationCodeResponse",
                                                           :type "object",
                                                           :description "Response for Identitytoolkit-SendVerificationCode",
                                                           :properties {:sessionInfo {:type "string",
                                                                                      :description "Encrypted session information"}}},
 :IdentitytoolkitRelyingpartyVerifyPhoneNumberRequest {:id "IdentitytoolkitRelyingpartyVerifyPhoneNumberRequest",
                                                       :type "object",
                                                       :description "Request for Identitytoolkit-VerifyPhoneNumber",
                                                       :properties {:code {:type "string"},
                                                                    :idToken {:type "string"},
                                                                    :operation {:type "string"},
                                                                    :phoneNumber {:type "string"},
                                                                    :sessionInfo {:type "string",
                                                                                  :description "The session info previously returned by IdentityToolkit-SendVerificationCode."},
                                                                    :temporaryProof {:type "string"},
                                                                    :verificationProof {:type "string"}}},
 :IdentitytoolkitRelyingpartyResetPasswordRequest {:id "IdentitytoolkitRelyingpartyResetPasswordRequest",
                                                   :type "object",
                                                   :description "Request to reset the password.",
                                                   :properties {:email {:type "string",
                                                                        :description "The email address of the user."},
                                                                :newPassword {:type "string",
                                                                              :description "The new password inputted by the user."},
                                                                :oldPassword {:type "string",
                                                                              :description "The old password inputted by the user."},
                                                                :oobCode {:type "string",
                                                                          :description "The confirmation code."}}},
 :VerifyPasswordResponse {:id "VerifyPasswordResponse",
                          :type "object",
                          :description "Request of verifying the password.",
                          :properties {:email {:type "string",
                                               :description "The email returned by the IdP. NOTE: The federated login user may not own the email."},
                                       :displayName {:type "string",
                                                     :description "The name of the user."},
                                       :oauthAuthorizationCode {:type "string",
                                                                :description "The OAuth2 authorization code."},
                                       :oauthExpireIn {:type "integer",
                                                       :description "The lifetime in seconds of the OAuth2 access token.",
                                                       :format "int32"},
                                       :idToken {:type "string",
                                                 :description "The GITKit token for authenticated user."},
                                       :localId {:type "string",
                                                 :description "The RP local ID if it's already been mapped to the IdP account identified by the federated ID."},
                                       :kind {:type "string",
                                              :description "The fixed string \"identitytoolkit#VerifyPasswordResponse\".",
                                              :default "identitytoolkit#VerifyPasswordResponse"},
                                       :expiresIn {:type "string",
                                                   :description "If idToken is STS id token, then this field will be expiration time of STS id token in seconds.",
                                                   :format "int64"},
                                       :photoUrl {:type "string",
                                                  :description "The URI of the user's photo at IdP"},
                                       :refreshToken {:type "string",
                                                      :description "If idToken is STS id token, then this field will be refresh token."},
                                       :registered {:type "boolean",
                                                    :description "Whether the email is registered."},
                                       :oauthAccessToken {:type "string",
                                                          :description "The OAuth2 access token."}}},
 :SetAccountInfoResponse {:id "SetAccountInfoResponse",
                          :type "object",
                          :description "Respone of setting the account information.",
                          :properties {:newEmail {:type "string",
                                                  :description "The new email the user attempts to change to."},
                                       :email {:type "string",
                                               :description "The email of the user."},
                                       :displayName {:type "string",
                                                     :description "The name of the user."},
                                       :providerUserInfo {:type "array",
                                                          :description "The user's profiles at the associated IdPs.",
                                                          :items {:type "object",
                                                                  :properties {:displayName {:type "string",
                                                                                             :description "The user's display name at the IDP."},
                                                                               :federatedId {:type "string",
                                                                                             :description "User's identifier at IDP."},
                                                                               :photoUrl {:type "string",
                                                                                          :description "The user's photo url at the IDP."},
                                                                               :providerId {:type "string",
                                                                                            :description "The IdP ID. For whitelisted IdPs it's a short domain name, e.g., google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it's the OP identifier."}}}},
                                       :idToken {:type "string",
                                                 :description "The Gitkit id token to login the newly sign up user."},
                                       :emailVerified {:type "boolean",
                                                       :description "If email has been verified."},
                                       :localId {:type "string",
                                                 :description "The local ID of the user."},
                                       :kind {:type "string",
                                              :description "The fixed string \"identitytoolkit#SetAccountInfoResponse\".",
                                              :default "identitytoolkit#SetAccountInfoResponse"},
                                       :expiresIn {:type "string",
                                                   :description "If idToken is STS id token, then this field will be expiration time of STS id token in seconds.",
                                                   :format "int64"},
                                       :photoUrl {:type "string",
                                                  :description "The photo url of the user."},
                                       :passwordHash {:type "string",
                                                      :description "The user's hashed password.",
                                                      :format "byte"},
                                       :refreshToken {:type "string",
                                                      :description "If idToken is STS id token, then this field will be refresh token."}}},
 :VerifyAssertionResponse {:id "VerifyAssertionResponse",
                           :type "object",
                           :description "Response of verifying the IDP assertion.",
                           :properties {:appScheme {:type "string",
                                                    :description "The custom scheme used by mobile app."},
                                        :providerId {:type "string",
                                                     :description "The IdP ID. For white listed IdPs it's a short domain name e.g. google.com, aol.com, live.net and yahoo.com. If the \"providerId\" param is set to OpenID OP identifer other than the whilte listed IdPs the OP identifier is returned. If the \"identifier\" param is federated ID in the createAuthUri request. The domain part of the federated ID is returned."},
                                        :originalEmail {:type "string",
                                                        :description "The original email stored in the mapping storage. It's returned when the federated ID is associated to a different email."},
                                        :timeZone {:type "string",
                                                   :description "The timezone of the user."},
                                        :verifiedProvider {:type "array",
                                                           :description "When action is 'map', contains the idps which can be used for confirmation.",
                                                           :items {:type "string"}},
                                        :oauthRequestToken {:type "string",
                                                            :description "The user approved request token for the OpenID OAuth extension."},
                                        :email {:type "string",
                                                :description "The email returned by the IdP. NOTE: The federated login user may not own the email."},
                                        :federatedId {:type "string",
                                                      :description "The unique ID identifies the IdP account."},
                                        :errorMessage {:type "string",
                                                       :description "Client error code."},
                                        :isNewUser {:type "boolean",
                                                    :description "True if it's a new user sign-in, false if it's a returning user."},
                                        :displayName {:type "string",
                                                      :description "The display name of the user."},
                                        :oauthAuthorizationCode {:type "string",
                                                                 :description "The OAuth2 authorization code."},
                                        :oauthExpireIn {:type "integer",
                                                        :description "The lifetime in seconds of the OAuth2 access token.",
                                                        :format "int32"},
                                        :firstName {:type "string",
                                                    :description "The first name of the user."},
                                        :idToken {:type "string",
                                                  :description "The ID token."},
                                        :oauthTokenSecret {:type "string",
                                                           :description "The OAuth1 access token secret."},
                                        :emailVerified {:type "boolean",
                                                        :description "The value is true if the IDP is also the email provider. It means the user owns the email."},
                                        :dateOfBirth {:type "string",
                                                      :description "The birth date of the IdP account."},
                                        :nickName {:type "string",
                                                   :description "The nick name of the user."},
                                        :localId {:type "string",
                                                  :description "The RP local ID if it's already been mapped to the IdP account identified by the federated ID."},
                                        :oauthIdToken {:type "string",
                                                       :description "The OIDC id token."},
                                        :inputEmail {:type "string",
                                                     :description "It's the identifier param in the createAuthUri request if the identifier is an email. It can be used to check whether the user input email is different from the asserted email."},
                                        :language {:type "string",
                                                   :description "The language preference of the user."},
                                        :oauthScope {:type "string",
                                                     :description "The scope for the OpenID OAuth extension."},
                                        :needConfirmation {:type "boolean",
                                                           :description "Whether the assertion is from a non-trusted IDP and need account linking confirmation."},
                                        :fullName {:type "string",
                                                   :description "The full name of the user."},
                                        :kind {:type "string",
                                               :description "The fixed string \"identitytoolkit#VerifyAssertionResponse\".",
                                               :default "identitytoolkit#VerifyAssertionResponse"},
                                        :lastName {:type "string",
                                                   :description "The last name of the user."},
                                        :rawUserInfo {:type "string",
                                                      :description "Raw IDP-returned user info."},
                                        :expiresIn {:type "string",
                                                    :description "If idToken is STS id token, then this field will be expiration time of STS id token in seconds.",
                                                    :format "int64"},
                                        :context {:type "string",
                                                  :description "The opaque value used by the client to maintain context info between the authentication request and the IDP callback."},
                                        :photoUrl {:type "string",
                                                   :description "The URI of the public accessible profiel picture."},
                                        :action {:type "string",
                                                 :description "The action code."},
                                        :refreshToken {:type "string",
                                                       :description "If idToken is STS id token, then this field will be refresh token."},
                                        :screenName {:type "string",
                                                     :description "The screen_name of a Twitter user or the login name at Github."},
                                        :emailRecycled {:type "boolean",
                                                        :description "It's true if the email is recycled."},
                                        :appInstallationUrl {:type "string",
                                                             :description "URL for OTA app installation."},
                                        :oauthAccessToken {:type "string",
                                                           :description "The OAuth2 access token."},
                                        :needEmail {:type "boolean",
                                                    :description "Whether need client to supply email to complete the federated login flow."}}},
 :IdentitytoolkitRelyingpartyVerifyPasswordRequest {:id "IdentitytoolkitRelyingpartyVerifyPasswordRequest",
                                                    :type "object",
                                                    :description "Request to verify the password.",
                                                    :properties {:tenantId {:type "string",
                                                                            :description "For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from."},
                                                                 :tenantProjectNumber {:type "string",
                                                                                       :description "Tenant project number to be used for idp discovery.",
                                                                                       :format "uint64"},
                                                                 :email {:type "string",
                                                                         :description "The email of the user."},
                                                                 :returnSecureToken {:type "boolean",
                                                                                     :description "Whether return sts id token and refresh token instead of gitkit token."},
                                                                 :instanceId {:type "string",
                                                                              :description "Instance id token of the app."},
                                                                 :password {:type "string",
                                                                            :description "The password inputed by the user."},
                                                                 :idToken {:type "string",
                                                                           :description "The GITKit token of the authenticated user."},
                                                                 :captchaResponse {:type "string",
                                                                                   :description "Response to the captcha."},
                                                                 :captchaChallenge {:type "string",
                                                                                    :description "The captcha challenge."},
                                                                 :pendingIdToken {:type "string",
                                                                                  :description "The GITKit token for the non-trusted IDP, which is to be confirmed by the user."},
                                                                 :delegatedProjectNumber {:type "string",
                                                                                          :description "GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.",
                                                                                          :format "int64"}}},
 :IdentitytoolkitRelyingpartyCreateAuthUriRequest {:id "IdentitytoolkitRelyingpartyCreateAuthUriRequest",
                                                   :type "object",
                                                   :description "Request to get the IDP authentication URL.",
                                                   :properties {:tenantId {:type "string",
                                                                           :description "For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from."},
                                                                :providerId {:type "string",
                                                                             :description "The IdP ID. For white listed IdPs it's a short domain name e.g. google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it's the OP identifier."},
                                                                :clientId {:type "string",
                                                                           :description "The relying party OAuth client ID."},
                                                                :tenantProjectNumber {:type "string",
                                                                                      :description "Tenant project number to be used for idp discovery.",
                                                                                      :format "uint64"},
                                                                :continueUri {:type "string",
                                                                              :description "The URI to which the IDP redirects the user after the federated login flow."},
                                                                :sessionId {:type "string",
                                                                            :description "The session_id passed by client."},
                                                                :hostedDomain {:type "string",
                                                                               :description "The hosted domain to restrict sign-in to accounts at that domain for Google Apps hosted accounts."},
                                                                :otaApp {:type "string",
                                                                         :description "The native app package for OTA installation."},
                                                                :openidRealm {:type "string",
                                                                              :description "Optional realm for OpenID protocol. The sub string \"scheme://domain:port\" of the param \"continueUri\" is used if this is not set."},
                                                                :customParameter {:type "object",
                                                                                  :description "The query parameter that client can customize by themselves in auth url. The following parameters are reserved for server so that they cannot be customized by clients: client_id, response_type, scope, redirect_uri, state, oauth_token.",
                                                                                  :additionalProperties {:type "string",
                                                                                                         :description "The customized query parameter."}},
                                                                :authFlowType {:type "string",
                                                                               :description "Explicitly specify the auth flow type. Currently only support \"CODE_FLOW\" type. The field is only used for Google provider."},
                                                                :oauthConsumerKey {:type "string",
                                                                                   :description "The developer's consumer key for OpenId OAuth Extension"},
                                                                :oauthScope {:type "string",
                                                                             :description "Additional oauth scopes, beyond the basid user profile, that the user would be prompted to grant"},
                                                                :appId {:type "string",
                                                                        :description "The app ID of the mobile app, base64(CERT_SHA1):PACKAGE_NAME for Android, BUNDLE_ID for iOS."},
                                                                :identifier {:type "string",
                                                                             :description "The email or federated ID of the user."},
                                                                :context {:type "string",
                                                                          :description "The opaque value used by the client to maintain context info between the authentication request and the IDP callback."}}},
 :IdentitytoolkitRelyingpartyDownloadAccountRequest {:id "IdentitytoolkitRelyingpartyDownloadAccountRequest",
                                                     :type "object",
                                                     :description "Request to download user account in batch.",
                                                     :properties {:delegatedProjectNumber {:type "string",
                                                                                           :description "GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.",
                                                                                           :format "int64"},
                                                                  :maxResults {:type "integer",
                                                                               :description "The max number of results to return in the response.",
                                                                               :format "uint32"},
                                                                  :nextPageToken {:type "string",
                                                                                  :description "The token for the next page. This should be taken from the previous response."},
                                                                  :targetProjectId {:type "string",
                                                                                    :description "Specify which project (field value is actually project id) to operate. Only used when provided credential."}}},
 :IdentitytoolkitRelyingpartySignupNewUserRequest {:id "IdentitytoolkitRelyingpartySignupNewUserRequest",
                                                   :type "object",
                                                   :description "Request to signup new user, create anonymous user or anonymous user reauth.",
                                                   :properties {:tenantId {:type "string",
                                                                           :description "For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from."},
                                                                :tenantProjectNumber {:type "string",
                                                                                      :description "Tenant project number to be used for idp discovery.",
                                                                                      :format "uint64"},
                                                                :email {:type "string",
                                                                        :description "The email of the user."},
                                                                :disabled {:type "boolean",
                                                                           :description "Whether to disable the user. Only can be used by service account."},
                                                                :instanceId {:type "string",
                                                                             :description "Instance id token of the app."},
                                                                :password {:type "string",
                                                                           :description "The new password of the user."},
                                                                :displayName {:type "string",
                                                                              :description "The name of the user."},
                                                                :idToken {:type "string",
                                                                          :description "The GITKit token of the authenticated user."},
                                                                :captchaResponse {:type "string",
                                                                                  :description "Response to the captcha."},
                                                                :captchaChallenge {:type "string",
                                                                                   :description "The captcha challenge."},
                                                                :emailVerified {:type "boolean",
                                                                                :description "Mark the email as verified or not. Only can be used by service account."},
                                                                :localId {:type "string",
                                                                          :description "Privileged caller can create user with specified user id."},
                                                                :photoUrl {:type "string",
                                                                           :description "The photo url of the user."},
                                                                :phoneNumber {:type "string",
                                                                              :description "Privileged caller can create user with specified phone number."}}},
 :IdentitytoolkitRelyingpartySignOutUserResponse {:id "IdentitytoolkitRelyingpartySignOutUserResponse",
                                                  :type "object",
                                                  :description "Response of signing out user.",
                                                  :properties {:localId {:type "string",
                                                                         :description "The local ID of the user."}}},
 :GetAccountInfoResponse {:id "GetAccountInfoResponse",
                          :type "object",
                          :description "Response of getting account information.",
                          :properties {:kind {:type "string",
                                              :description "The fixed string \"identitytoolkit#GetAccountInfoResponse\".",
                                              :default "identitytoolkit#GetAccountInfoResponse"},
                                       :users {:type "array",
                                               :description "The info of the users.",
                                               :items {:$ref "UserInfo"}}}},
 :EmailLinkSigninResponse {:id "EmailLinkSigninResponse",
                           :type "object",
                           :description "Response of email signIn.",
                           :properties {:email {:type "string",
                                                :description "The user's email."},
                                        :expiresIn {:type "string",
                                                    :description "Expiration time of STS id token in seconds.",
                                                    :format "int64"},
                                        :idToken {:type "string",
                                                  :description "The STS id token to login the newly signed in user."},
                                        :isNewUser {:type "boolean",
                                                    :description "Whether the user is new."},
                                        :kind {:type "string",
                                               :description "The fixed string \"identitytoolkit#EmailLinkSigninResponse\".",
                                               :default "identitytoolkit#EmailLinkSigninResponse"},
                                        :localId {:type "string",
                                                  :description "The RP local ID of the user."},
                                        :refreshToken {:type "string",
                                                       :description "The refresh token for the signed in user."}}},
 :IdentitytoolkitRelyingpartyGetPublicKeysResponse {:id "IdentitytoolkitRelyingpartyGetPublicKeysResponse",
                                                    :type "object",
                                                    :description "Respone of getting public keys.",
                                                    :additionalProperties {:type "string"}},
 :CreateAuthUriResponse {:id "CreateAuthUriResponse",
                         :type "object",
                         :description "Response of creating the IDP authentication URL.",
                         :properties {:captchaRequired {:type "boolean",
                                                        :description "True if captcha is required."},
                                      :providerId {:type "string",
                                                   :description "The provider ID of the auth URI."},
                                      :allProviders {:type "array",
                                                     :description "all providers the user has once used to do federated login",
                                                     :items {:type "string"}},
                                      :sessionId {:type "string",
                                                  :description "Session ID which should be passed in the following verifyAssertion request."},
                                      :kind {:type "string",
                                             :description "The fixed string identitytoolkit#CreateAuthUriResponse\".",
                                             :default "identitytoolkit#CreateAuthUriResponse"},
                                      :forExistingProvider {:type "boolean",
                                                            :description "True if the authUri is for user's existing provider."},
                                      :authUri {:type "string",
                                                :description "The URI used by the IDP to authenticate the user."},
                                      :signinMethods {:type "array",
                                                      :description "All sign-in methods this user has used.",
                                                      :items {:type "string"}},
                                      :registered {:type "boolean",
                                                   :description "Whether the user is registered if the identifier is an email."}}},
 :IdentitytoolkitRelyingpartyDeleteAccountRequest {:id "IdentitytoolkitRelyingpartyDeleteAccountRequest",
                                                   :type "object",
                                                   :description "Request to delete account.",
                                                   :properties {:delegatedProjectNumber {:type "string",
                                                                                         :description "GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.",
                                                                                         :format "int64"},
                                                                :idToken {:type "string",
                                                                          :description "The GITKit token or STS id token of the authenticated user."},
                                                                :localId {:type "string",
                                                                          :description "The local ID of the user."}}},
 :EmailTemplate {:id "EmailTemplate",
                 :type "object",
                 :description "Template for an email template.",
                 :properties {:body {:type "string",
                                     :description "Email body."},
                              :format {:type "string",
                                       :description "Email body format."},
                              :from {:type "string",
                                     :description "From address of the email."},
                              :fromDisplayName {:type "string",
                                                :description "From display name."},
                              :replyTo {:type "string",
                                        :description "Reply-to address."},
                              :subject {:type "string",
                                        :description "Subject of the email."}}},
 :UploadAccountResponse {:id "UploadAccountResponse",
                         :type "object",
                         :description "Respone of uploading accounts in batch.",
                         :properties {:error {:type "array",
                                              :description "The error encountered while processing the account info.",
                                              :items {:type "object",
                                                      :properties {:index {:type "integer",
                                                                           :description "The index of the malformed account, starting from 0.",
                                                                           :format "int32"},
                                                                   :message {:type "string",
                                                                             :description "Detailed error message for the account info."}}}},
                                      :kind {:type "string",
                                             :description "The fixed string \"identitytoolkit#UploadAccountResponse\".",
                                             :default "identitytoolkit#UploadAccountResponse"}}},
 :IdentitytoolkitRelyingpartyVerifyPhoneNumberResponse {:id "IdentitytoolkitRelyingpartyVerifyPhoneNumberResponse",
                                                        :type "object",
                                                        :description "Response for Identitytoolkit-VerifyPhoneNumber",
                                                        :properties {:isNewUser {:type "boolean"},
                                                                     :temporaryProofExpiresIn {:type "string",
                                                                                               :format "int64"},
                                                                     :idToken {:type "string"},
                                                                     :verificationProof {:type "string"},
                                                                     :localId {:type "string"},
                                                                     :temporaryProof {:type "string"},
                                                                     :expiresIn {:type "string",
                                                                                 :format "int64"},
                                                                     :refreshToken {:type "string"},
                                                                     :phoneNumber {:type "string"},
                                                                     :verificationProofExpiresIn {:type "string",
                                                                                                  :format "int64"}}},
 :IdentitytoolkitRelyingpartyUploadAccountRequest {:id "IdentitytoolkitRelyingpartyUploadAccountRequest",
                                                   :type "object",
                                                   :description "Request to upload user account in batch.",
                                                   :properties {:blockSize {:type "integer",
                                                                            :format "int32"},
                                                                :memoryCost {:type "integer",
                                                                             :description "Memory cost for hash calculation. Used by scrypt similar algorithms.",
                                                                             :format "int32"},
                                                                :targetProjectId {:type "string",
                                                                                  :description "Specify which project (field value is actually project id) to operate. Only used when provided credential."},
                                                                :parallelization {:type "integer",
                                                                                  :format "int32"},
                                                                :hashAlgorithm {:type "string",
                                                                                :description "The password hash algorithm."},
                                                                :cpuMemCost {:type "integer",
                                                                             :description "The following 4 fields are for standard scrypt algorithm.",
                                                                             :format "int32"},
                                                                :sanityCheck {:type "boolean",
                                                                              :description "If true, backend will do sanity check(including duplicate email and federated id) when uploading account."},
                                                                :dkLen {:type "integer",
                                                                        :format "int32"},
                                                                :allowOverwrite {:type "boolean",
                                                                                 :description "Whether allow overwrite existing account when user local_id exists."},
                                                                :rounds {:type "integer",
                                                                         :description "Rounds for hash calculation. Used by scrypt and similar algorithms.",
                                                                         :format "int32"},
                                                                :signerKey {:type "string",
                                                                            :description "The key for to hash the password.",
                                                                            :format "byte"},
                                                                :saltSeparator {:type "string",
                                                                                :description "The salt separator.",
                                                                                :format "byte"},
                                                                :delegatedProjectNumber {:type "string",
                                                                                         :description "GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.",
                                                                                         :format "int64"},
                                                                :users {:type "array",
                                                                        :description "The account info to be stored.",
                                                                        :items {:$ref "UserInfo"}}}},
 :IdentitytoolkitRelyingpartyVerifyCustomTokenRequest {:id "IdentitytoolkitRelyingpartyVerifyCustomTokenRequest",
                                                       :type "object",
                                                       :description "Request to verify a custom token",
                                                       :properties {:delegatedProjectNumber {:type "string",
                                                                                             :description "GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.",
                                                                                             :format "int64"},
                                                                    :instanceId {:type "string",
                                                                                 :description "Instance id token of the app."},
                                                                    :returnSecureToken {:type "boolean",
                                                                                        :description "Whether return sts id token and refresh token instead of gitkit token."},
                                                                    :token {:type "string",
                                                                            :description "The custom token to verify"}}}}
