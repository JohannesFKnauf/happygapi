{:Service {:id "Service",
           :properties {:endpoints {:description "Output only. Endpoints associated with this service. Returned on LookupService.Resolve. Control plane clients should use RegistrationService.ListEndpoints.",
                                    :readOnly true,
                                    :items {:$ref "Endpoint"},
                                    :type "array"},
                        :metadata {:type "object",
                                   :additionalProperties {:type "string"},
                                   :description "Optional. Metadata for the service. This data can be consumed by service clients. The entire metadata dictionary may contain up to 2000 characters, spread across all key-value pairs. Metadata that goes beyond any these limits will be rejected."},
                        :name {:description "Immutable. The resource name for the service in the format 'projects/*/locations/*/namespaces/*/services/*'.",
                               :type "string"}},
           :type "object",
           :description "An individual service. A service contains a name and optional metadata. A service must exist before endpoints can be added to it."},
 :GetPolicyOptions {:id "GetPolicyOptions",
                    :description "Encapsulates settings provided to GetIamPolicy.",
                    :properties {:requestedPolicyVersion {:description "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                                                          :type "integer",
                                                          :format "int32"}},
                    :type "object"},
 :Endpoint {:description "An individual endpoint that provides a service. The service must already exist to create an endpoint.",
            :id "Endpoint",
            :properties {:port {:description "Optional. Service Directory will reject values outside of [0, 65535].",
                                :format "int32",
                                :type "integer"},
                         :name {:type "string",
                                :description "Immutable. The resource name for the endpoint in the format 'projects/*/locations/*/namespaces/*/services/*/endpoints/*'."},
                         :address {:type "string",
                                   :description "Optional. An IPv4 or IPv6 address. Service Directory will reject bad addresses like: \"8.8.8\" \"8.8.8.8:53\" \"test:bad:address\" \"[::1]\" \"[::1]:8080\" Limited to 45 characters."},
                         :metadata {:description "Optional. Metadata for the endpoint. This data can be consumed by service clients. The entire metadata dictionary may contain up to 512 characters, spread accoss all key-value pairs. Metadata that goes beyond any these limits will be rejected.",
                                    :additionalProperties {:type "string"},
                                    :type "object"}},
            :type "object"},
 :SetIamPolicyRequest {:properties {:policy {:description "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.",
                                             :$ref "Policy"}},
                       :id "SetIamPolicyRequest",
                       :description "Request message for `SetIamPolicy` method.",
                       :type "object"},
 :ListNamespacesResponse {:type "object",
                          :properties {:namespaces {:items {:$ref "Namespace"},
                                                    :type "array",
                                                    :description "The list of namespaces."},
                                       :nextPageToken {:description "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                                                       :type "string"}},
                          :id "ListNamespacesResponse",
                          :description "The response message for RegistrationService.ListNamespaces."},
 :GetIamPolicyRequest {:type "object",
                       :id "GetIamPolicyRequest",
                       :description "Request message for `GetIamPolicy` method.",
                       :properties {:options {:description "OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`.",
                                              :$ref "GetPolicyOptions"}}},
 :ListEndpointsResponse {:description "The response message for RegistrationService.ListEndpoints.",
                         :properties {:nextPageToken {:description "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                                                      :type "string"},
                                      :endpoints {:type "array",
                                                  :description "The list of endpoints.",
                                                  :items {:$ref "Endpoint"}}},
                         :type "object",
                         :id "ListEndpointsResponse"},
 :Binding {:id "Binding",
           :properties {:members {:description "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. ",
                                  :items {:type "string"},
                                  :type "array"},
                        :role {:description "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
                               :type "string"},
                        :condition {:description "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                                    :$ref "Expr"},
                        :bindingId {:description "A client-specified ID for this binding. Expected to be globally unique to support the internal bindings-by-ID API.",
                                    :type "string"}},
           :type "object",
           :description "Associates `members` with a `role`."},
 :Empty {:type "object",
         :properties {},
         :description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
         :id "Empty"},
 :ResolveServiceResponse {:id "ResolveServiceResponse",
                          :type "object",
                          :properties {:service {:$ref "Service"}},
                          :description "The response message for LookupService.ResolveService."},
 :ListLocationsResponse {:description "The response message for Locations.ListLocations.",
                         :id "ListLocationsResponse",
                         :type "object",
                         :properties {:locations {:description "A list of locations that matches the specified filter in the request.",
                                                  :type "array",
                                                  :items {:$ref "Location"}},
                                      :nextPageToken {:type "string",
                                                      :description "The standard List next-page token."}}},
 :TestIamPermissionsRequest {:properties {:permissions {:items {:type "string"},
                                                        :type "array",
                                                        :description "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."}},
                             :id "TestIamPermissionsRequest",
                             :type "object",
                             :description "Request message for `TestIamPermissions` method."},
 :ResolveServiceRequest {:properties {:maxEndpoints {:description "Optional. The maximum number of endpoints to return. Defaults to 25. Maximum is 100. If a value less than one is specified, the Default is used. If a value greater than the Maximum is specified, the Maximum is used.",
                                                     :type "integer",
                                                     :format "int32"},
                                      :endpointFilter {:type "string",
                                                       :description "Optional. The filter applied to the endpoints of the resolved service. General filter string syntax: () can be \"name\" or \"metadata.\" for map field. can be \"<, >, <=, >=, !=, =, :\". Of which \":\" means HAS and is roughly the same as \"=\". must be the same data type as the field. can be \"AND, OR, NOT\". Examples of valid filters: * \"metadata.owner\" returns Endpoints that have a label with the key \"owner\", this is the same as \"metadata:owner\" * \"metadata.protocol=gRPC\" returns Endpoints that have key/value \"protocol=gRPC\" * \"metadata.owner!=sd AND metadata.foo=bar\" returns Endpoints that have \"owner\" field in metadata with a value that is not \"sd\" AND have the key/value foo=bar."}},
                         :type "object",
                         :description "The request message for LookupService.ResolveService. Looks up a service by its name, returns the service and its endpoints.",
                         :id "ResolveServiceRequest"},
 :Namespace {:type "object",
             :id "Namespace",
             :description "A container for services. Namespaces allow administrators to group services together and define permissions for a collection of services.",
             :properties {:labels {:type "object",
                                   :additionalProperties {:type "string"},
                                   :description "Optional. Resource labels associated with this Namespace. No more than 64 user labels can be associated with a given resource. Label keys and values can be no longer than 63 characters."},
                          :name {:type "string",
                                 :description "Immutable. The resource name for the namespace in the format 'projects/*/locations/*/namespaces/*'."}}},
 :TestIamPermissionsResponse {:id "TestIamPermissionsResponse",
                              :properties {:permissions {:type "array",
                                                         :items {:type "string"},
                                                         :description "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."}},
                              :type "object",
                              :description "Response message for `TestIamPermissions` method."},
 :Expr {:description "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
        :properties {:expression {:description "Textual representation of an expression in Common Expression Language syntax.",
                                  :type "string"},
                     :title {:description "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
                             :type "string"},
                     :description {:type "string",
                                   :description "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."},
                     :location {:description "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
                                :type "string"}},
        :id "Expr",
        :type "object"},
 :Location {:description "A resource that represents Google Cloud Platform location.",
            :properties {:displayName {:type "string",
                                       :description "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."},
                         :metadata {:description "Service-specific metadata. For example the available capacity at the given location.",
                                    :type "object",
                                    :additionalProperties {:type "any",
                                                           :description "Properties of the object. Contains field @type with type URL."}},
                         :name {:description "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
                                :type "string"},
                         :locationId {:type "string",
                                      :description "The canonical id for this location. For example: `\"us-east1\"`."},
                         :labels {:description "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
                                  :additionalProperties {:type "string"},
                                  :type "object"}},
            :id "Location",
            :type "object"},
 :ListServicesResponse {:id "ListServicesResponse",
                        :properties {:services {:type "array",
                                                :items {:$ref "Service"},
                                                :description "The list of services."},
                                     :nextPageToken {:description "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                                                     :type "string"}},
                        :type "object",
                        :description "The response message for RegistrationService.ListServices."},
 :Policy {:description "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
          :type "object",
          :properties {:version {:type "integer",
                                 :description "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                                 :format "int32"},
                       :bindings {:items {:$ref "Binding"},
                                  :type "array",
                                  :description "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."},
                       :etag {:description "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                              :type "string",
                              :format "byte"}},
          :id "Policy"}}
