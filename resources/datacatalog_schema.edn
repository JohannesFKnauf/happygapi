{:GoogleCloudDatacatalogV1GcsFilesetSpec {:properties {:sampleGcsFileSpecs {:items {:$ref "GoogleCloudDatacatalogV1GcsFileSpec"},
                                                                            :type "array",
                                                                            :readOnly true,
                                                                            :description "Output only. Sample files contained in this fileset, not all files contained in this fileset are represented here."},
                                                       :filePatterns {:description "Required. Patterns to identify a set of files in Google Cloud Storage. For more information, see [Wildcard Names] (https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames). Note: Currently, bucket wildcards are not supported. Examples of valid `file_patterns`: * `gs://bucket_name/dir/*`: matches all files in `bucket_name/dir` directory * `gs://bucket_name/dir/**`: matches all files in `bucket_name/dir` and all subdirectories * `gs://bucket_name/file*`: matches files prefixed by `file` in `bucket_name` * `gs://bucket_name/??.txt`: matches files with two characters followed by `.txt` in `bucket_name` * `gs://bucket_name/[aeiou].txt`: matches files that contain a single vowel character followed by `.txt` in `bucket_name` * `gs://bucket_name/[a-m].txt`: matches files that contain `a`, `b`, ... or `m` followed by `.txt` in `bucket_name` * `gs://bucket_name/a/*/b`: matches all files in `bucket_name` that match the `a/*/b` pattern, such as `a/c/b`, `a/d/b` * `gs://another_bucket/a.txt`: matches `gs://another_bucket/a.txt` You can combine wildcards to match complex sets of files, for example: `gs://bucket_name/[a-m]??.j*g`",
                                                                      :items {:type "string"},
                                                                      :type "array"}},
                                          :id "GoogleCloudDatacatalogV1GcsFilesetSpec",
                                          :type "object",
                                          :description "Describes a Cloud Storage fileset entry."},
 :GoogleCloudDatacatalogV1BigQueryTableSpec {:id "GoogleCloudDatacatalogV1BigQueryTableSpec",
                                             :type "object",
                                             :properties {:viewSpec {:$ref "GoogleCloudDatacatalogV1ViewSpec",
                                                                     :description "Table view specification. Populated only if the `table_source_type` is `BIGQUERY_VIEW`."},
                                                          :tableSpec {:$ref "GoogleCloudDatacatalogV1TableSpec",
                                                                      :description "Specification of a BigQuery table. Populated only if the `table_source_type` is `BIGQUERY_TABLE`."},
                                                          :tableSourceType {:type "string",
                                                                            :readOnly true,
                                                                            :description "Output only. The table source type.",
                                                                            :enum ["TABLE_SOURCE_TYPE_UNSPECIFIED"
                                                                                   "BIGQUERY_VIEW"
                                                                                   "BIGQUERY_TABLE"
                                                                                   "BIGQUERY_MATERIALIZED_VIEW"],
                                                                            :enumDescriptions ["Default unknown type."
                                                                                               "Table view."
                                                                                               "BigQuery native table."
                                                                                               "BigQuery materialized view."]}},
                                             :description "Describes a BigQuery table."},
 :GetPolicyOptions {:type "object",
                    :id "GetPolicyOptions",
                    :properties {:requestedPolicyVersion {:description "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                                                          :type "integer",
                                                          :format "int32"}},
                    :description "Encapsulates settings provided to GetIamPolicy."},
 :GoogleCloudDatacatalogV1ImportTaxonomiesRequest {:id "GoogleCloudDatacatalogV1ImportTaxonomiesRequest",
                                                   :type "object",
                                                   :description "Request message for ImportTaxonomies.",
                                                   :properties {:inlineSource {:description "Inline source taxonomy to import.",
                                                                               :$ref "GoogleCloudDatacatalogV1InlineSource"},
                                                                :crossRegionalSource {:description "Cross-regional source taxonomy to import.",
                                                                                      :$ref "GoogleCloudDatacatalogV1CrossRegionalSource"}}},
 :GoogleCloudDatacatalogV1TagTemplateField {:description "The template for an individual field within a tag template.",
                                            :properties {:order {:description "The order of this field with respect to other fields in this tag template. For example, a higher value can indicate a more important field. The value can be negative. Multiple fields can have the same order and field orders within a tag don't have to be sequential.",
                                                                 :type "integer",
                                                                 :format "int32"},
                                                         :name {:type "string",
                                                                :readOnly true,
                                                                :description "Output only. The resource name of the tag template field in URL format. Example: `projects/{PROJECT_ID}/locations/{LOCATION}/tagTemplates/{TAG_TEMPLATE}/fields/{FIELD}` Note: The tag template field itself might not be stored in the location specified in its name. The name must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_), and must start with a letter or underscore. The maximum length is 64 characters."},
                                                         :displayName {:description "The display name for this field. Defaults to an empty string. The name must contain only Unicode letters, numbers (0-9), underscores (_), dashes (-), spaces ( ), and can't start or end with spaces. The maximum length is 200 characters.",
                                                                       :type "string"},
                                                         :isRequired {:description "If true, this field is required. Defaults to false.",
                                                                      :type "boolean"},
                                                         :description {:description "The description for this field. Defaults to an empty string.",
                                                                       :type "string"},
                                                         :type {:description "Required. The type of value this tag field can contain.",
                                                                :$ref "GoogleCloudDatacatalogV1FieldType"}},
                                            :id "GoogleCloudDatacatalogV1TagTemplateField",
                                            :type "object"},
 :GoogleCloudDatacatalogV1SerializedPolicyTag {:properties {:policyTag {:description "Resource name of the policy tag. This field is ignored when calling `ImportTaxonomies`.",
                                                                        :type "string"},
                                                            :childPolicyTags {:items {:$ref "GoogleCloudDatacatalogV1SerializedPolicyTag"},
                                                                              :type "array",
                                                                              :description "Children of the policy tag, if any."},
                                                            :description {:type "string",
                                                                          :description "Description of the serialized policy tag. At most 2000 bytes when encoded in UTF-8. If not set, defaults to an empty description."},
                                                            :displayName {:type "string",
                                                                          :description "Required. Display name of the policy tag. At most 200 bytes when encoded in UTF-8."}},
                                               :type "object",
                                               :description "A nested protocol buffer that represents a policy tag and all its descendants.",
                                               :id "GoogleCloudDatacatalogV1SerializedPolicyTag"},
 :GoogleCloudDatacatalogV1DatabaseTableSpec {:type "object",
                                             :properties {:type {:enum ["TABLE_TYPE_UNSPECIFIED"
                                                                        "NATIVE"
                                                                        "EXTERNAL"],
                                                                 :enumDescriptions ["Default unknown table type."
                                                                                    "Native table."
                                                                                    "External table."],
                                                                 :description "Type of this table.",
                                                                 :type "string"}},
                                             :description "Specification that applies to a table resource. Valid only for entries with the `TABLE` type.",
                                             :id "GoogleCloudDatacatalogV1DatabaseTableSpec"},
 :GoogleCloudDatacatalogV1Entry {:id "GoogleCloudDatacatalogV1Entry",
                                 :type "object",
                                 :description "Entry metadata. A Data Catalog entry represents another resource in Google Cloud Platform (such as a BigQuery dataset or a Pub/Sub topic) or outside of it. You can use the `linked_resource` field in the entry resource to refer to the original resource ID of the source system. An entry resource contains resource details, for example, its schema. Additionally, you can attach flexible metadata to an entry in the form of a Tag.",
                                 :properties {:description {:type "string",
                                                            :description "Entry description that can consist of several sentences or paragraphs that describe entry contents. The description must not contain Unicode non-characters as well as C0 and C1 control codes except tabs (HT), new lines (LF), carriage returns (CR), and page breaks (FF). The maximum size is 2000 bytes when encoded in UTF-8. Default value is an empty string."},
                                              :schema {:$ref "GoogleCloudDatacatalogV1Schema",
                                                       :description "Schema of the entry. An entry might not have any schema attached to it."},
                                              :bigqueryDateShardedSpec {:$ref "GoogleCloudDatacatalogV1BigQueryDateShardedSpec",
                                                                        :description "Specification for a group of BigQuery tables with the `[prefix]YYYYMMDD` name pattern. For more information, see [Introduction to partitioned tables] (https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding)."},
                                              :userSpecifiedSystem {:type "string",
                                                                    :description "Indicates the entry's source system that Data Catalog doesn't automatically integrate with. The `user_specified_system` string has the following limitations: * Is case insensitive. * Must begin with a letter or underscore. * Can only contain letters, numbers, and underscores. * Must be at least 1 character and at most 64 characters long."},
                                              :sourceSystemTimestamps {:$ref "GoogleCloudDatacatalogV1SystemTimestamps",
                                                                       :description "Timestamps from the underlying resource, not from the Data Catalog entry. Output only when the entry has a type listed in the `EntryType` enum. For entries with `user_specified_type`, this field is optional and defaults to an empty timestamp."},
                                              :displayName {:description "Display name of an entry. The name must contain only Unicode letters, numbers (0-9), underscores (_), dashes (-), spaces ( ), and can't start or end with spaces. The maximum size is 200 bytes when encoded in UTF-8. Default value is an empty string.",
                                                            :type "string"},
                                              :name {:description "Output only. The resource name of an entry in URL format. Note: The entry itself and its child resources might not be stored in the location specified in its name. ",
                                                     :readOnly true,
                                                     :type "string"},
                                              :usageSignal {:readOnly true,
                                                            :description "Output only. Resource usage statistics.",
                                                            :$ref "GoogleCloudDatacatalogV1UsageSignal"},
                                              :gcsFilesetSpec {:$ref "GoogleCloudDatacatalogV1GcsFilesetSpec",
                                                               :description "Specification that applies to a Cloud Storage fileset. Valid only for entries with the `FILESET` type."},
                                              :type {:description "The type of the entry. Only used for entries with types listed in the `EntryType` enum. Currently, only `FILESET` enum value is allowed. All other entries created in Data Catalog must use the `user_specified_type`.",
                                                     :type "string",
                                                     :enum ["ENTRY_TYPE_UNSPECIFIED"
                                                            "TABLE"
                                                            "MODEL"
                                                            "DATA_STREAM"
                                                            "FILESET"
                                                            "DATABASE"
                                                            "SERVICE"],
                                                     :enumDescriptions ["Default unknown type."
                                                                        "Output only. The entry type that has a GoogleSQL schema, including logical views."
                                                                        "Output only. The type of models. For more information, see [Supported models in BigQuery ML] (https://cloud.google.com/bigquery-ml/docs/introduction#supported_models_in)."
                                                                        "An entry type for streaming entries. For example, a Pub/Sub topic."
                                                                        "An entry type for a set of files or objects. For example, a Cloud Storage fileset."
                                                                        "A database."
                                                                        "A service, for example, a Dataproc Metastore service."]},
                                              :bigqueryTableSpec {:description "Specification that applies to a BigQuery table. Valid only for entries with the `TABLE` type.",
                                                                  :$ref "GoogleCloudDatacatalogV1BigQueryTableSpec"},
                                              :linkedResource {:type "string",
                                                               :description "The resource this metadata entry refers to. For Google Cloud Platform resources, `linked_resource` is the [Full Resource Name] (https://cloud.google.com/apis/design/resource_names#full_resource_name). For example, the `linked_resource` for a table resource from BigQuery is: `//bigquery.googleapis.com/projects/{PROJECT_ID}/datasets/{DATASET_ID}/tables/{TABLE_ID}` Output only when the entry is one of the types in the `EntryType` enum. For entries with a `user_specified_type`, this field is optional and defaults to an empty string. The resource string must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), periods (.), colons (:), slashes (/), dashes (-), and hashes (#). The maximum size is 200 bytes when encoded in UTF-8."},
                                              :dataSource {:description "Output only. Physical location of the entry.",
                                                           :$ref "GoogleCloudDatacatalogV1DataSource",
                                                           :readOnly true},
                                              :databaseTableSpec {:$ref "GoogleCloudDatacatalogV1DatabaseTableSpec",
                                                                  :description "Specification that applies to a table resource. Valid only for entries with the `TABLE` type."},
                                              :userSpecifiedType {:description "Custom entry type that doesn't match any of the values allowed for input and listed in the `EntryType` enum. When creating an entry, first check the type values in the enum. If there are no appropriate types for the new entry, provide a custom value, for example, `my_special_type`. The `user_specified_type` string has the following limitations: * Is case insensitive. * Must begin with a letter or underscore. * Can only contain letters, numbers, and underscores. * Must be at least 1 character and at most 64 characters long.",
                                                                  :type "string"},
                                              :integratedSystem {:type "string",
                                                                 :enumDescriptions ["Default unknown system."
                                                                                    "BigQuery."
                                                                                    "Cloud Pub/Sub."
                                                                                    "Dataproc Metastore."],
                                                                 :description "Output only. Indicates the entry's source system that Data Catalog integrates with, such as BigQuery, Pub/Sub, or Dataproc Metastore.",
                                                                 :readOnly true,
                                                                 :enum ["INTEGRATED_SYSTEM_UNSPECIFIED"
                                                                        "BIGQUERY"
                                                                        "CLOUD_PUBSUB"
                                                                        "DATAPROC_METASTORE"]},
                                              :fullyQualifiedName {:description "Fully qualified name (FQN) of the resource. Set automatically for entries representing resources from synced systems. Settable only during creation and read-only afterwards. Can be used for search and lookup of the entries. FQNs take two forms: * For non-regionalized resources: `{SYSTEM}:{PROJECT}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}` * For regionalized resources: `{SYSTEM}:{PROJECT}.{LOCATION_ID}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}` Example for a DPMS table: `dataproc_metastore:{PROJECT_ID}.{LOCATION_ID}.{INSTANCE_ID}.{DATABASE_ID}.{TABLE_ID}`",
                                                                   :type "string"}}},
 :GoogleCloudDatacatalogV1ListPolicyTagsResponse {:description "Response message for ListPolicyTags.",
                                                  :type "object",
                                                  :properties {:nextPageToken {:type "string",
                                                                               :description "Pagination token of the next results page. Empty if there are no more results in the list."},
                                                               :policyTags {:items {:$ref "GoogleCloudDatacatalogV1PolicyTag"},
                                                                            :type "array",
                                                                            :description "The policy tags that belong to the taxonomy."}},
                                                  :id "GoogleCloudDatacatalogV1ListPolicyTagsResponse"},
 :GoogleCloudDatacatalogV1GcsFileSpec {:id "GoogleCloudDatacatalogV1GcsFileSpec",
                                       :type "object",
                                       :description "Specification of a single file in Cloud Storage.",
                                       :properties {:sizeBytes {:description "Output only. File size in bytes.",
                                                                :readOnly true,
                                                                :type "string",
                                                                :format "int64"},
                                                    :filePath {:type "string",
                                                               :description "Required. Full file path. Example: `gs://bucket_name/a/b.txt`."},
                                                    :gcsTimestamps {:description "Output only. Creation, modification, and expiration timestamps of a Cloud Storage file.",
                                                                    :readOnly true,
                                                                    :$ref "GoogleCloudDatacatalogV1SystemTimestamps"}}},
 :GoogleCloudDatacatalogV1Taxonomy {:type "object",
                                    :description "A taxonomy is a collection of hierarchical policy tags that classify data along a common axis. For example, a \"data sensitivity\" taxonomy might contain the following policy tags: ``` + PII + Account number + Age + SSN + Zipcode + Financials + Revenue ``` A \"data origin\" taxonomy might contain the following policy tags: ``` + User data + Employee data + Partner data + Public data ```",
                                    :properties {:displayName {:description "Required. User-defined name of this taxonomy. The name can't start or end with spaces, must contain only Unicode letters, numbers, underscores, dashes, and spaces, and be at most 200 bytes long when encoded in UTF-8.",
                                                               :type "string"},
                                                 :name {:readOnly true,
                                                        :type "string",
                                                        :description "Output only. Resource name of this taxonomy in URL format. Note: Policy tag manager generates unique taxonomy IDs. "},
                                                 :taxonomyTimestamps {:description "Output only. Creation and modification timestamps of this taxonomy.",
                                                                      :$ref "GoogleCloudDatacatalogV1SystemTimestamps",
                                                                      :readOnly true},
                                                 :policyTagCount {:description "Output only. Number of policy tags in this taxonomy.",
                                                                  :readOnly true,
                                                                  :type "integer",
                                                                  :format "int32"},
                                                 :description {:description "Optional. Description of this taxonomy. If not set, defaults to empty. The description must contain only Unicode characters, tabs, newlines, carriage returns, and page breaks, and be at most 2000 bytes long when encoded in UTF-8.",
                                                               :type "string"},
                                                 :activatedPolicyTypes {:type "array",
                                                                        :items {:type "string",
                                                                                :enum ["POLICY_TYPE_UNSPECIFIED"
                                                                                       "FINE_GRAINED_ACCESS_CONTROL"],
                                                                                :enumDescriptions ["Unspecified policy type."
                                                                                                   "Fine-grained access control policy that enables access control on tagged sub-resources."]},
                                                                        :description "Optional. A list of policy types that are activated for this taxonomy. If not set, defaults to an empty list."}},
                                    :id "GoogleCloudDatacatalogV1Taxonomy"},
 :SetIamPolicyRequest {:id "SetIamPolicyRequest",
                       :properties {:policy {:description "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.",
                                             :$ref "Policy"}},
                       :description "Request message for `SetIamPolicy` method.",
                       :type "object"},
 :GoogleCloudDatacatalogV1ExportTaxonomiesResponse {:type "object",
                                                    :properties {:taxonomies {:description "List of taxonomies and policy tags as nested protocol buffers.",
                                                                              :type "array",
                                                                              :items {:$ref "GoogleCloudDatacatalogV1SerializedTaxonomy"}}},
                                                    :description "Response message for ExportTaxonomies.",
                                                    :id "GoogleCloudDatacatalogV1ExportTaxonomiesResponse"},
 :GoogleCloudDatacatalogV1RenameTagTemplateFieldEnumValueRequest {:type "object",
                                                                  :id "GoogleCloudDatacatalogV1RenameTagTemplateFieldEnumValueRequest",
                                                                  :description "Request message for RenameTagTemplateFieldEnumValue.",
                                                                  :properties {:newEnumValueDisplayName {:type "string",
                                                                                                         :description "Required. The new display name of the enum value. For example, `my_new_enum_value`."}}},
 :GoogleCloudDatacatalogV1FieldType {:id "GoogleCloudDatacatalogV1FieldType",
                                     :properties {:enumType {:$ref "GoogleCloudDatacatalogV1FieldTypeEnumType",
                                                             :description "An enum type."},
                                                  :primitiveType {:type "string",
                                                                  :enumDescriptions ["The default invalid value for a type."
                                                                                     "A double precision number."
                                                                                     "An UTF-8 string."
                                                                                     "A boolean value."
                                                                                     "A timestamp."],
                                                                  :description "Primitive types, such as string, boolean, etc.",
                                                                  :enum ["PRIMITIVE_TYPE_UNSPECIFIED"
                                                                         "DOUBLE"
                                                                         "STRING"
                                                                         "BOOL"
                                                                         "TIMESTAMP"]}},
                                     :type "object"},
 :GoogleCloudDatacatalogV1UsageSignal {:properties {:usageWithinTimeRange {:additionalProperties {:$ref "GoogleCloudDatacatalogV1UsageStats"},
                                                                           :type "object",
                                                                           :description "Usage statistics over each of the predefined time ranges. Supported time ranges are `{\"24H\", \"7D\", \"30D\"}`."},
                                                    :updateTime {:format "google-datetime",
                                                                 :description "The end timestamp of the duration of usage statistics.",
                                                                 :type "string"}},
                                       :description "The set of all usage signals that Data Catalog stores. Note: Usually, these signals are updated daily. In rare cases, an update may fail but will be performed again on the next day.",
                                       :type "object",
                                       :id "GoogleCloudDatacatalogV1UsageSignal"},
 :GoogleCloudDatacatalogV1DataSource {:id "GoogleCloudDatacatalogV1DataSource",
                                      :description "Physical location of an entry.",
                                      :type "object",
                                      :properties {:resource {:type "string",
                                                              :description "Full name of a resource as defined by the service. For example: `//bigquery.googleapis.com/projects/{PROJECT_ID}/locations/{LOCATION}/datasets/{DATASET_ID}/tables/{TABLE_ID}`"},
                                                   :service {:type "string",
                                                             :description "Service that physically stores the data.",
                                                             :enumDescriptions ["Default unknown service."
                                                                                "Google Cloud Storage service."
                                                                                "BigQuery service."],
                                                             :enum ["SERVICE_UNSPECIFIED"
                                                                    "CLOUD_STORAGE"
                                                                    "BIGQUERY"]}}},
 :GoogleCloudDatacatalogV1CrossRegionalSource {:type "object",
                                               :description "Cross-regional source used to import an existing taxonomy into a different region.",
                                               :id "GoogleCloudDatacatalogV1CrossRegionalSource",
                                               :properties {:taxonomy {:type "string",
                                                                       :description "Required. The resource name of the source taxonomy to import."}}},
 :GoogleCloudDatacatalogV1EntryGroup {:description "Entry group metadata. An `EntryGroup` resource represents a logical grouping of zero or more Data Catalog Entry resources.",
                                      :id "GoogleCloudDatacatalogV1EntryGroup",
                                      :type "object",
                                      :properties {:name {:description "The resource name of the entry group in URL format. Note: The entry group itself and its child resources might not be stored in the location specified in its name. ",
                                                          :type "string"},
                                                   :displayName {:type "string",
                                                                 :description "A short name to identify the entry group, for example, \"analytics data - jan 2011\". Default value is an empty string."},
                                                   :description {:type "string",
                                                                 :description "Entry group description. Can consist of several sentences or paragraphs that describe the entry group contents. Default value is an empty string."},
                                                   :dataCatalogTimestamps {:readOnly true,
                                                                           :description "Output only. Timestamps of the entry group. Default value is empty.",
                                                                           :$ref "GoogleCloudDatacatalogV1SystemTimestamps"}}},
 :GoogleCloudDatacatalogV1SystemTimestamps {:id "GoogleCloudDatacatalogV1SystemTimestamps",
                                            :type "object",
                                            :description "Timestamps associated with this resource in a particular system.",
                                            :properties {:updateTime {:type "string",
                                                                      :description "Timestamp of the last modification of the resource or its metadata within a given system. Note: Depending on the source system, not every modification updates this timestamp. For example, BigQuery timestamps every metadata modification but not data or permission changes.",
                                                                      :format "google-datetime"},
                                                         :createTime {:format "google-datetime",
                                                                      :type "string",
                                                                      :description "Creation timestamp of the resource within the given system."},
                                                         :expireTime {:description "Output only. Expiration timestamp of the resource within the given system. Currently only applicable to BigQuery resources.",
                                                                      :readOnly true,
                                                                      :type "string",
                                                                      :format "google-datetime"}}},
 :GoogleCloudDatacatalogV1SerializedTaxonomy {:id "GoogleCloudDatacatalogV1SerializedTaxonomy",
                                              :properties {:activatedPolicyTypes {:type "array",
                                                                                  :items {:type "string",
                                                                                          :enum ["POLICY_TYPE_UNSPECIFIED"
                                                                                                 "FINE_GRAINED_ACCESS_CONTROL"],
                                                                                          :enumDescriptions ["Unspecified policy type."
                                                                                                             "Fine-grained access control policy that enables access control on tagged sub-resources."]},
                                                                                  :description "A list of policy types that are activated per taxonomy."},
                                                           :policyTags {:items {:$ref "GoogleCloudDatacatalogV1SerializedPolicyTag"},
                                                                        :description "Top level policy tags associated with the taxonomy, if any.",
                                                                        :type "array"},
                                                           :displayName {:description "Required. Display name of the taxonomy. At most 200 bytes when encoded in UTF-8.",
                                                                         :type "string"},
                                                           :description {:type "string",
                                                                         :description "Description of the serialized taxonomy. At most 2000 bytes when encoded in UTF-8. If not set, defaults to an empty description."}},
                                              :type "object",
                                              :description "A nested protocol buffer that represents a taxonomy and the hierarchy of its policy tags. Used for taxonomy replacement, import, and export."},
 :GoogleCloudDatacatalogV1SearchCatalogResult {:type "object",
                                               :description "Result in the response to a search request. Each result captures details of one entry that matches the search.",
                                               :id "GoogleCloudDatacatalogV1SearchCatalogResult",
                                               :properties {:userSpecifiedSystem {:description "Custom source system that you can manually integrate Data Catalog with.",
                                                                                  :type "string"},
                                                            :integratedSystem {:type "string",
                                                                               :description "Output only. The source system that Data Catalog automatically integrates with, such as BigQuery, Cloud Pub/Sub, or Dataproc Metastore.",
                                                                               :enumDescriptions ["Default unknown system."
                                                                                                  "BigQuery."
                                                                                                  "Cloud Pub/Sub."
                                                                                                  "Dataproc Metastore."],
                                                                               :readOnly true,
                                                                               :enum ["INTEGRATED_SYSTEM_UNSPECIFIED"
                                                                                      "BIGQUERY"
                                                                                      "CLOUD_PUBSUB"
                                                                                      "DATAPROC_METASTORE"]},
                                                            :searchResultSubtype {:description "Sub-type of the search result. A dot-delimited full type of the resource. The same type you specify in the `type` search predicate. Examples: `entry.table`, `entry.dataStream`, `tagTemplate`.",
                                                                                  :type "string"},
                                                            :linkedResource {:type "string",
                                                                             :description "The full name of the Google Cloud resource the entry belongs to. For more information, see [Full Resource Name] (/apis/design/resource_names#full_resource_name). Example: `//bigquery.googleapis.com/projects/PROJECT_ID/datasets/DATASET_ID/tables/TABLE_ID`"},
                                                            :fullyQualifiedName {:type "string",
                                                                                 :description "Fully qualified name (FQN) of the resource. FQNs take two forms: * For non-regionalized resources: `{SYSTEM}:{PROJECT}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}` * For regionalized resources: `{SYSTEM}:{PROJECT}.{LOCATION_ID}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}` Example for a DPMS table: `dataproc_metastore:PROJECT_ID.LOCATION_ID.INSTANCE_ID.DATABASE_ID.TABLE_ID`"},
                                                            :searchResultType {:enumDescriptions ["Default unknown type."
                                                                                                  "An Entry."
                                                                                                  "A TagTemplate."
                                                                                                  "An EntryGroup."],
                                                                               :enum ["SEARCH_RESULT_TYPE_UNSPECIFIED"
                                                                                      "ENTRY"
                                                                                      "TAG_TEMPLATE"
                                                                                      "ENTRY_GROUP"],
                                                                               :type "string",
                                                                               :description "Type of the search result. You can use this field to determine which get method to call to fetch the full resource."},
                                                            :modifyTime {:format "google-datetime",
                                                                         :type "string",
                                                                         :description "The last modification timestamp of the entry in the source system."},
                                                            :relativeResourceName {:type "string",
                                                                                   :description "The relative name of the resource in URL format. Examples: * `projects/{PROJECT_ID}/locations/{LOCATION_ID}/entryGroups/{ENTRY_GROUP_ID}/entries/{ENTRY_ID}` * `projects/{PROJECT_ID}/tagTemplates/{TAG_TEMPLATE_ID}`"}}},
 :GoogleCloudDatacatalogV1ListEntryGroupsResponse {:description "Response message for ListEntryGroups.",
                                                   :properties {:entryGroups {:type "array",
                                                                              :items {:$ref "GoogleCloudDatacatalogV1EntryGroup"},
                                                                              :description "Entry group details."},
                                                                :nextPageToken {:description "Pagination token to specify in the next call to retrieve the next page of results. Empty if there are no more items.",
                                                                                :type "string"}},
                                                   :type "object",
                                                   :id "GoogleCloudDatacatalogV1ListEntryGroupsResponse"},
 :GetIamPolicyRequest {:type "object",
                       :properties {:options {:$ref "GetPolicyOptions",
                                              :description "OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`."}},
                       :id "GetIamPolicyRequest",
                       :description "Request message for `GetIamPolicy` method."},
 :GoogleCloudDatacatalogV1FieldTypeEnumTypeEnumValue {:type "object",
                                                      :id "GoogleCloudDatacatalogV1FieldTypeEnumTypeEnumValue",
                                                      :properties {:displayName {:type "string",
                                                                                 :description "Required. The display name of the enum value. Must not be an empty string. The name must contain only Unicode letters, numbers (0-9), underscores (_), dashes (-), spaces ( ), and can't start or end with spaces. The maximum length is 200 characters."}}},
 :GoogleCloudDatacatalogV1SearchCatalogRequestScope {:type "object",
                                                     :description "The criteria that select the subspace used for query matching.",
                                                     :properties {:includeProjectIds {:type "array",
                                                                                      :description "The list of project IDs to search within. For more information on the distinction between project names, IDs, and numbers, see [Projects](/docs/overview/#projects).",
                                                                                      :items {:type "string"}},
                                                                  :restrictedLocations {:description "Optional. The list of locations to search within. If empty, all locations are searched. Returns an error if any location in the list isn't one of the [Supported regions](https://cloud.google.com/data-catalog/docs/concepts/regions#supported_regions). If a location is unreachable, its name is returned in the `SearchCatalogResponse.unreachable` field. To get additional information on the error, repeat the search request and set the location name as the value of this parameter.",
                                                                                        :type "array",
                                                                                        :items {:type "string"}},
                                                                  :includeOrgIds {:type "array",
                                                                                  :description "The list of organization IDs to search within. To find your organization ID, follow the steps from [Creating and managing organizations] (/resource-manager/docs/creating-managing-organization).",
                                                                                  :items {:type "string"}},
                                                                  :includeGcpPublicDatasets {:type "boolean",
                                                                                             :description "If `true`, include Google Cloud Platform (GCP) public datasets in search results. By default, they are excluded. See [Google Cloud Public Datasets](/public-datasets) for more information."}},
                                                     :id "GoogleCloudDatacatalogV1SearchCatalogRequestScope"},
 :GoogleCloudDatacatalogV1TagField {:id "GoogleCloudDatacatalogV1TagField",
                                    :type "object",
                                    :description "Contains the value and additional information on a field within a Tag.",
                                    :properties {:timestampValue {:type "string",
                                                                  :format "google-datetime",
                                                                  :description "The value of a tag field with a timestamp type."},
                                                 :order {:readOnly true,
                                                         :description "Output only. The order of this field with respect to other fields in this tag. Can be set by Tag. For example, a higher value can indicate a more important field. The value can be negative. Multiple fields can have the same order, and field orders within a tag don't have to be sequential.",
                                                         :format "int32",
                                                         :type "integer"},
                                                 :boolValue {:description "The value of a tag field with a boolean type.",
                                                             :type "boolean"},
                                                 :doubleValue {:format "double",
                                                               :type "number",
                                                               :description "The value of a tag field with a double type."},
                                                 :enumValue {:description "The value of a tag field with an enum type. This value must be one of the allowed values listed in this enum.",
                                                             :$ref "GoogleCloudDatacatalogV1TagFieldEnumValue"},
                                                 :displayName {:readOnly true,
                                                               :description "Output only. The display name of this field.",
                                                               :type "string"},
                                                 :stringValue {:type "string",
                                                               :description "The value of a tag field with a string type. The maximum length is 2000 UTF-8 characters."}}},
 :Binding {:type "object",
           :description "Associates `members` with a `role`.",
           :id "Binding",
           :properties {:members {:items {:type "string"},
                                  :type "array",
                                  :description "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "},
                        :condition {:description "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                                    :$ref "Expr"},
                        :role {:type "string",
                               :description "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."}}},
 :GoogleCloudDatacatalogV1TableSpec {:properties {:groupedEntry {:type "string",
                                                                 :readOnly true,
                                                                 :description "Output only. If the table is date-sharded, that is, it matches the `[prefix]YYYYMMDD` name pattern, this field is the Data Catalog resource name of the date-sharded grouped entry. For example: `projects/{PROJECT_ID}/locations/{LOCATION}/entrygroups/{ENTRY_GROUP_ID}/entries/{ENTRY_ID}`. Otherwise, `grouped_entry` is empty."}},
                                     :id "GoogleCloudDatacatalogV1TableSpec",
                                     :type "object",
                                     :description "Normal BigQuery table specification."},
 :GoogleCloudDatacatalogV1UsageStats {:id "GoogleCloudDatacatalogV1UsageStats",
                                      :type "object",
                                      :properties {:totalFailures {:type "number",
                                                                   :description "The number of failed attempts to use the underlying entry.",
                                                                   :format "float"},
                                                   :totalCompletions {:format "float",
                                                                      :type "number",
                                                                      :description "The number of successful uses of the underlying entry."},
                                                   :totalCancellations {:description "The number of cancelled attempts to use the underlying entry.",
                                                                        :type "number",
                                                                        :format "float"},
                                                   :totalExecutionTimeForCompletionsMillis {:description "Total time spent only on successful uses, in milliseconds.",
                                                                                            :format "float",
                                                                                            :type "number"}},
                                      :description "Detailed statistics on the entry's usage. Usage statistics have the following limitations: - Only BigQuery tables have them. - They only include BigQuery query jobs. - They might be underestimated because wildcard table references are not yet counted. For more information, see [Querying multiple tables using a wildcard table] (https://cloud.google.com/bigquery/docs/querying-wildcard-tables)"},
 :Empty {:type "object",
         :description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
         :properties {},
         :id "Empty"},
 :GoogleCloudDatacatalogV1ImportTaxonomiesResponse {:description "Response message for ImportTaxonomies.",
                                                    :id "GoogleCloudDatacatalogV1ImportTaxonomiesResponse",
                                                    :properties {:taxonomies {:description "Imported taxonomies.",
                                                                              :items {:$ref "GoogleCloudDatacatalogV1Taxonomy"},
                                                                              :type "array"}},
                                                    :type "object"},
 :GoogleCloudDatacatalogV1Tag {:description "Tags contain custom metadata and are attached to Data Catalog resources. Tags conform with the specification of their tag template. See [Data Catalog IAM](https://cloud.google.com/data-catalog/docs/concepts/iam) for information on the permissions needed to create or view tags.",
                               :id "GoogleCloudDatacatalogV1Tag",
                               :properties {:name {:description "The resource name of the tag in URL format where tag ID is a system-generated identifier. Note: The tag itself might not be stored in the location specified in its name. ",
                                                   :type "string"},
                                            :fields {:type "object",
                                                     :description "Required. Maps the ID of a tag field to its value and additional information about that field. Tag template defines valid field IDs. A tag must have at least 1 field and at most 500 fields.",
                                                     :additionalProperties {:$ref "GoogleCloudDatacatalogV1TagField"}},
                                            :column {:type "string",
                                                     :description "Resources like entry can have schemas associated with them. This scope allows you to attach tags to an individual column based on that schema. To attach a tag to a nested column, separate column names with a dot (`.`). Example: `column.nested_column`."},
                                            :templateDisplayName {:readOnly true,
                                                                  :type "string",
                                                                  :description "Output only. The display name of the tag template."},
                                            :template {:description "Required. The resource name of the tag template this tag uses. Example: `projects/{PROJECT_ID}/locations/{LOCATION}/tagTemplates/{TAG_TEMPLATE_ID}` This field cannot be modified after creation.",
                                                       :type "string"}},
                               :type "object"},
 :GoogleCloudDatacatalogV1SearchCatalogRequest {:properties {:orderBy {:description "Specifies the order of results. Currently supported case-sensitive values are: * `relevance` that can only be descending * `last_modified_timestamp [asc|desc]` with descending (`desc`) as default If this parameter is omitted, it defaults to the descending `relevance`.",
                                                                       :type "string"},
                                                             :query {:description "Optional. The query string with a minimum of 3 characters and specific syntax. For more information, see [Data Catalog search syntax](/data-catalog/docs/how-to/search-reference). An empty query string returns all data assets (in the specified scope) that you have access to. A query string can be a simple `xyz` or qualified by predicates: * `name:x` * `column:y` * `description:z`",
                                                                     :type "string"},
                                                             :pageSize {:format "int32",
                                                                        :description "Number of results to return in a single search page. Can't be negative or 0, defaults to 10 in this case. The maximum number is 1000. If exceeded, throws an \"invalid argument\" exception.",
                                                                        :type "integer"},
                                                             :pageToken {:type "string",
                                                                         :description "Optional. Pagination token that, if specified, returns the next page of search results. If empty, returns the first page. This token is returned in the SearchCatalogResponse.next_page_token field of the response to a previous SearchCatalogRequest call."},
                                                             :scope {:$ref "GoogleCloudDatacatalogV1SearchCatalogRequestScope",
                                                                     :description "Required. The scope of this search request. The `scope` is invalid if `include_org_ids`, `include_project_ids` are empty AND `include_gcp_public_datasets` is set to `false`. In this case, the request returns an error."}},
                                                :id "GoogleCloudDatacatalogV1SearchCatalogRequest",
                                                :description "Request message for SearchCatalog.",
                                                :type "object"},
 :GoogleCloudDatacatalogV1TagTemplate {:type "object",
                                       :properties {:name {:type "string",
                                                           :description "The resource name of the tag template in URL format. Note: The tag template itself and its child resources might not be stored in the location specified in its name. "},
                                                    :displayName {:type "string",
                                                                  :description "Display name for this template. Defaults to an empty string. The name must contain only Unicode letters, numbers (0-9), underscores (_), dashes (-), spaces ( ), and can't start or end with spaces. The maximum length is 200 characters."},
                                                    :fields {:additionalProperties {:$ref "GoogleCloudDatacatalogV1TagTemplateField"},
                                                             :description "Required. Map of tag template field IDs to the settings for the field. This map is an exhaustive list of the allowed fields. The map must contain at least one field and at most 500 fields. The keys to this map are tag template field IDs. The IDs have the following limitations: * Can contain uppercase and lowercase letters, numbers (0-9) and underscores (_). * Must be at least 1 character and at most 64 characters long. * Must start with a letter or underscore.",
                                                             :type "object"}},
                                       :description "A tag template defines a tag that can have one or more typed fields. The template is used to create tags that are attached to GCP resources. [Tag template roles] (https://cloud.google.com/iam/docs/understanding-roles#data-catalog-roles) provide permissions to create, edit, and use the template. For example, see the [TagTemplate User] (https://cloud.google.com/data-catalog/docs/how-to/template-user) role that includes a permission to use the tag template to tag resources.",
                                       :id "GoogleCloudDatacatalogV1TagTemplate"},
 :GoogleCloudDatacatalogV1PolicyTag {:id "GoogleCloudDatacatalogV1PolicyTag",
                                     :description "Denotes one policy tag in a taxonomy, for example, SSN. Policy tags can be defined in a hierarchy. For example: ``` + Geolocation + LatLong + City + ZipCode ``` Where the \"Geolocation\" policy tag contains three children.",
                                     :type "object",
                                     :properties {:parentPolicyTag {:description "Resource name of this policy tag's parent policy tag. If empty, this is a top level tag. If not set, defaults to an empty string. For example, for the \"LatLong\" policy tag in the example above, this field contains the resource name of the \"Geolocation\" policy tag, and, for \"Geolocation\", this field is empty.",
                                                                    :type "string"},
                                                  :displayName {:description "Required. User-defined name of this policy tag. The name can't start or end with spaces and must be unique within the parent taxonomy, contain only Unicode letters, numbers, underscores, dashes and spaces, and be at most 200 bytes long when encoded in UTF-8.",
                                                                :type "string"},
                                                  :childPolicyTags {:description "Output only. Resource names of child policy tags of this policy tag.",
                                                                    :items {:type "string"},
                                                                    :readOnly true,
                                                                    :type "array"},
                                                  :description {:description "Description of this policy tag. If not set, defaults to empty. The description must contain only Unicode characters, tabs, newlines, carriage returns and page breaks, and be at most 2000 bytes long when encoded in UTF-8.",
                                                                :type "string"},
                                                  :name {:description "Output only. Resource name of this policy tag in the URL format. The policy tag manager generates unique taxonomy IDs and policy tag IDs. ",
                                                         :type "string",
                                                         :readOnly true}}},
 :GoogleCloudDatacatalogV1FieldTypeEnumType {:id "GoogleCloudDatacatalogV1FieldTypeEnumType",
                                             :type "object",
                                             :properties {:allowedValues {:description "The set of allowed values for this enum. This set must not be empty and can include up to 100 allowed values. The display names of the values in this set must not be empty and must be case-insensitively unique within this set. The order of items in this set is preserved. This field can be used to create, remove, and reorder enum values. To rename enum values, use the `RenameTagTemplateFieldEnumValue` method.",
                                                                          :type "array",
                                                                          :items {:$ref "GoogleCloudDatacatalogV1FieldTypeEnumTypeEnumValue"}}}},
 :TestIamPermissionsRequest {:properties {:permissions {:type "array",
                                                        :description "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
                                                        :items {:type "string"}}},
                             :id "TestIamPermissionsRequest",
                             :type "object",
                             :description "Request message for `TestIamPermissions` method."},
 :GoogleCloudDatacatalogV1BigQueryDateShardedSpec {:description "Specification for a group of BigQuery tables with the `[prefix]YYYYMMDD` name pattern. For more information, see [Introduction to partitioned tables] (https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding).",
                                                   :type "object",
                                                   :properties {:shardCount {:description "Output only. Total number of shards.",
                                                                             :type "string",
                                                                             :format "int64",
                                                                             :readOnly true},
                                                                :tablePrefix {:type "string",
                                                                              :readOnly true,
                                                                              :description "Output only. The table name prefix of the shards. The name of any given shard is `[table_prefix]YYYYMMDD`. For example, for the `MyTable20180101` shard, the `table_prefix` is `MyTable`."},
                                                                :dataset {:readOnly true,
                                                                          :type "string",
                                                                          :description "Output only. The Data Catalog resource name of the dataset entry the current table belongs to. For example: `projects/{PROJECT_ID}/locations/{LOCATION}/entrygroups/{ENTRY_GROUP_ID}/entries/{ENTRY_ID}`."}},
                                                   :id "GoogleCloudDatacatalogV1BigQueryDateShardedSpec"},
 :GoogleCloudDatacatalogV1RenameTagTemplateFieldRequest {:id "GoogleCloudDatacatalogV1RenameTagTemplateFieldRequest",
                                                         :type "object",
                                                         :description "Request message for RenameTagTemplateField.",
                                                         :properties {:newTagTemplateFieldId {:type "string",
                                                                                              :description "Required. The new ID of this tag template field. For example, `my_new_field`."}}},
 :TestIamPermissionsResponse {:id "TestIamPermissionsResponse",
                              :description "Response message for `TestIamPermissions` method.",
                              :properties {:permissions {:description "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                                                         :items {:type "string"},
                                                         :type "array"}},
                              :type "object"},
 :GoogleCloudDatacatalogV1InlineSource {:type "object",
                                        :id "GoogleCloudDatacatalogV1InlineSource",
                                        :properties {:taxonomies {:items {:$ref "GoogleCloudDatacatalogV1SerializedTaxonomy"},
                                                                  :type "array",
                                                                  :description "Required. Taxonomies to import."}},
                                        :description "Inline source containing taxonomies to import."},
 :GoogleCloudDatacatalogV1ReplaceTaxonomyRequest {:description "Request message for ReplaceTaxonomy.",
                                                  :id "GoogleCloudDatacatalogV1ReplaceTaxonomyRequest",
                                                  :properties {:serializedTaxonomy {:$ref "GoogleCloudDatacatalogV1SerializedTaxonomy",
                                                                                    :description "Required. Taxonomy to update along with its child policy tags."}},
                                                  :type "object"},
 :GoogleCloudDatacatalogV1ColumnSchema {:id "GoogleCloudDatacatalogV1ColumnSchema",
                                        :type "object",
                                        :description "A column within a schema. Columns can be nested inside other columns.",
                                        :properties {:column {:description "Required. Name of the column. Must be a UTF-8 string without dots (.). The maximum size is 64 bytes.",
                                                              :type "string"},
                                                     :type {:description "Required. Type of the column. Must be a UTF-8 string with the maximum size of 128 bytes.",
                                                            :type "string"},
                                                     :subcolumns {:type "array",
                                                                  :items {:$ref "GoogleCloudDatacatalogV1ColumnSchema"},
                                                                  :description "Optional. Schema of sub-columns. A column can have zero or more sub-columns."},
                                                     :description {:type "string",
                                                                   :description "Optional. Description of the column. Default value is an empty string. The description must be a UTF-8 string with the maximum size of 2000 bytes."},
                                                     :mode {:type "string",
                                                            :description "Optional. A column's mode indicates whether values in this column are required, nullable, or repeated. Only `NULLABLE`, `REQUIRED`, and `REPEATED` values are supported. Default mode is `NULLABLE`."}}},
 :GoogleCloudDatacatalogV1ListEntriesResponse {:properties {:entries {:type "array",
                                                                      :items {:$ref "GoogleCloudDatacatalogV1Entry"},
                                                                      :description "Entry details."},
                                                            :nextPageToken {:type "string",
                                                                            :description "Pagination token of the next results page. Empty if there are no more items in results."}},
                                               :description "Response message for ListEntries.",
                                               :id "GoogleCloudDatacatalogV1ListEntriesResponse",
                                               :type "object"},
 :Expr {:type "object",
        :properties {:location {:description "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
                                :type "string"},
                     :expression {:type "string",
                                  :description "Textual representation of an expression in Common Expression Language syntax."},
                     :title {:description "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
                             :type "string"},
                     :description {:type "string",
                                   :description "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."}},
        :description "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
        :id "Expr"},
 :GoogleCloudDatacatalogV1SearchCatalogResponse {:description "Response message for SearchCatalog.",
                                                 :properties {:unreachable {:description "Unreachable locations. Search results don't include data from those locations. To get additional information on an error, repeat the search request and restrict it to specific locations by setting the `SearchCatalogRequest.scope.restricted_locations` parameter.",
                                                                            :type "array",
                                                                            :items {:type "string"}},
                                                              :results {:items {:$ref "GoogleCloudDatacatalogV1SearchCatalogResult"},
                                                                        :description "Search results.",
                                                                        :type "array"},
                                                              :nextPageToken {:description "Pagination token that can be used in subsequent calls to retrieve the next page of results.",
                                                                              :type "string"}},
                                                 :type "object",
                                                 :id "GoogleCloudDatacatalogV1SearchCatalogResponse"},
 :GoogleCloudDatacatalogV1ListTaxonomiesResponse {:id "GoogleCloudDatacatalogV1ListTaxonomiesResponse",
                                                  :description "Response message for ListTaxonomies.",
                                                  :type "object",
                                                  :properties {:nextPageToken {:description "Pagination token of the next results page. Empty if there are no more results in the list.",
                                                                               :type "string"},
                                                               :taxonomies {:description "Taxonomies that the project contains.",
                                                                            :type "array",
                                                                            :items {:$ref "GoogleCloudDatacatalogV1Taxonomy"}}}},
 :GoogleCloudDatacatalogV1TagFieldEnumValue {:type "object",
                                             :properties {:displayName {:type "string",
                                                                        :description "The display name of the enum value."}},
                                             :description "An enum value.",
                                             :id "GoogleCloudDatacatalogV1TagFieldEnumValue"},
 :GoogleCloudDatacatalogV1ViewSpec {:description "Table view specification.",
                                    :id "GoogleCloudDatacatalogV1ViewSpec",
                                    :type "object",
                                    :properties {:viewQuery {:description "Output only. The query that defines the table view.",
                                                             :readOnly true,
                                                             :type "string"}}},
 :GoogleCloudDatacatalogV1Schema {:type "object",
                                  :description "Represents a schema, for example, a BigQuery, GoogleSQL, or Avro schema.",
                                  :id "GoogleCloudDatacatalogV1Schema",
                                  :properties {:columns {:type "array",
                                                         :items {:$ref "GoogleCloudDatacatalogV1ColumnSchema"},
                                                         :description "The unified GoogleSQL-like schema of columns. The overall maximum number of columns and nested columns is 10,000. The maximum nested depth is 15 levels."}}},
 :Policy {:description "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
          :properties {:bindings {:description "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member.",
                                  :items {:$ref "Binding"},
                                  :type "array"},
                       :etag {:description "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                              :type "string",
                              :format "byte"},
                       :version {:description "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                                 :format "int32",
                                 :type "integer"}},
          :id "Policy",
          :type "object"},
 :GoogleCloudDatacatalogV1ListTagsResponse {:properties {:tags {:description "Tag details.",
                                                                :type "array",
                                                                :items {:$ref "GoogleCloudDatacatalogV1Tag"}},
                                                         :nextPageToken {:description "Pagination token of the next results page. Empty if there are no more items in results.",
                                                                         :type "string"}},
                                            :description "Response message for ListTags.",
                                            :id "GoogleCloudDatacatalogV1ListTagsResponse",
                                            :type "object"}}
