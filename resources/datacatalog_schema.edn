{:GetPolicyOptions {:type "object",
                    :properties {:requestedPolicyVersion {:description "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                                                          :type "integer",
                                                          :format "int32"}},
                    :description "Encapsulates settings provided to GetIamPolicy.",
                    :id "GetPolicyOptions"},
 :GoogleCloudDatacatalogV1beta1EntryGroup {:properties {:dataCatalogTimestamps {:readOnly true,
                                                                                :$ref "GoogleCloudDatacatalogV1beta1SystemTimestamps",
                                                                                :description "Output only. Timestamps about this EntryGroup. Default value is empty timestamps."},
                                                        :displayName {:type "string",
                                                                      :description "A short name to identify the entry group, for example, \"analytics data - jan 2011\". Default value is an empty string."},
                                                        :description {:description "Entry group description, which can consist of several sentences or paragraphs that describe entry group contents. Default value is an empty string.",
                                                                      :type "string"},
                                                        :name {:type "string",
                                                               :description "The resource name of the entry group in URL format. Example: * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id} Note that this EntryGroup and its child resources may not actually be stored in the location in this name."}},
                                           :description "EntryGroup Metadata. An EntryGroup resource represents a logical grouping of zero or more Data Catalog Entry resources.",
                                           :id "GoogleCloudDatacatalogV1beta1EntryGroup",
                                           :type "object"},
 :GoogleCloudDatacatalogV1beta1ImportTaxonomiesRequest {:properties {:inlineSource {:description "Inline source used for taxonomies to be imported.",
                                                                                    :$ref "GoogleCloudDatacatalogV1beta1InlineSource"}},
                                                        :type "object",
                                                        :description "Request message for ImportTaxonomies.",
                                                        :id "GoogleCloudDatacatalogV1beta1ImportTaxonomiesRequest"},
 :GoogleCloudDatacatalogV1beta1FieldTypeEnumTypeEnumValue {:properties {:displayName {:type "string",
                                                                                      :description "Required. The display name of the enum value. Must not be an empty string."}},
                                                           :type "object",
                                                           :id "GoogleCloudDatacatalogV1beta1FieldTypeEnumTypeEnumValue"},
 :GoogleCloudDatacatalogV1beta1SerializedTaxonomy {:id "GoogleCloudDatacatalogV1beta1SerializedTaxonomy",
                                                   :properties {:displayName {:description "Required. Display name of the taxonomy. Max 200 bytes when encoded in UTF-8.",
                                                                              :type "string"},
                                                                :activatedPolicyTypes {:description "A list of policy types that are activated for a taxonomy.",
                                                                                       :type "array",
                                                                                       :items {:enumDescriptions ["Unspecified policy type."
                                                                                                                  "Fine grained access control policy, which enables access control on tagged resources."],
                                                                                               :type "string",
                                                                                               :enum ["POLICY_TYPE_UNSPECIFIED"
                                                                                                      "FINE_GRAINED_ACCESS_CONTROL"]}},
                                                                :description {:description "Description of the serialized taxonomy. The length of the description is limited to 2000 bytes when encoded in UTF-8. If not set, defaults to an empty description.",
                                                                              :type "string"},
                                                                :policyTags {:description "Top level policy tags associated with the taxonomy if any.",
                                                                             :items {:$ref "GoogleCloudDatacatalogV1beta1SerializedPolicyTag"},
                                                                             :type "array"}},
                                                   :type "object",
                                                   :description "Message capturing a taxonomy and its policy tag hierarchy as a nested proto. Used for taxonomy import/export and mutation."},
 :SetIamPolicyRequest {:description "Request message for `SetIamPolicy` method.",
                       :type "object",
                       :id "SetIamPolicyRequest",
                       :properties {:policy {:$ref "Policy",
                                             :description "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them."}}},
 :GoogleCloudDatacatalogV1beta1ListEntriesResponse {:description "Response message for ListEntries.",
                                                    :id "GoogleCloudDatacatalogV1beta1ListEntriesResponse",
                                                    :type "object",
                                                    :properties {:nextPageToken {:type "string",
                                                                                 :description "Token to retrieve the next page of results. It is set to empty if no items remain in results."},
                                                                 :entries {:items {:$ref "GoogleCloudDatacatalogV1beta1Entry"},
                                                                           :description "Entry details.",
                                                                           :type "array"}}},
 :GetIamPolicyRequest {:type "object",
                       :properties {:options {:description "OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`.",
                                              :$ref "GetPolicyOptions"}},
                       :id "GetIamPolicyRequest",
                       :description "Request message for `GetIamPolicy` method."},
 :GoogleCloudDatacatalogV1beta1Taxonomy {:properties {:activatedPolicyTypes {:items {:enum ["POLICY_TYPE_UNSPECIFIED"
                                                                                            "FINE_GRAINED_ACCESS_CONTROL"],
                                                                                     :type "string",
                                                                                     :enumDescriptions ["Unspecified policy type."
                                                                                                        "Fine grained access control policy, which enables access control on tagged resources."]},
                                                                             :type "array",
                                                                             :description "Optional. A list of policy types that are activated for this taxonomy. If not set, defaults to an empty list."},
                                                      :taxonomyTimestamps {:description "Output only. Timestamps about this taxonomy. Only create_time and update_time are used.",
                                                                           :$ref "GoogleCloudDatacatalogV1beta1SystemTimestamps",
                                                                           :readOnly true},
                                                      :name {:readOnly true,
                                                             :type "string",
                                                             :description "Output only. Resource name of this taxonomy, whose format is: \"projects/{project_number}/locations/{location_id}/taxonomies/{id}\"."},
                                                      :description {:type "string",
                                                                    :description "Optional. Description of this taxonomy. It must: contain only unicode characters, tabs, newlines, carriage returns and page breaks; and be at most 2000 bytes long when encoded in UTF-8. If not set, defaults to an empty description."},
                                                      :displayName {:description "Required. User defined name of this taxonomy. It must: contain only unicode letters, numbers, underscores, dashes and spaces; not start or end with spaces; and be at most 200 bytes long when encoded in UTF-8.",
                                                                    :type "string"},
                                                      :policyTagCount {:format "int32",
                                                                       :readOnly true,
                                                                       :type "integer",
                                                                       :description "Output only. Number of policy tags contained in this taxonomy."}},
                                         :description "A taxonomy is a collection of policy tags that classify data along a common axis. For instance a data *sensitivity* taxonomy could contain policy tags denoting PII such as age, zipcode, and SSN. A data *origin* taxonomy could contain policy tags to distinguish user data, employee data, partner data, public data.",
                                         :type "object",
                                         :id "GoogleCloudDatacatalogV1beta1Taxonomy"},
 :GoogleCloudDatacatalogV1beta1ListTagsResponse {:id "GoogleCloudDatacatalogV1beta1ListTagsResponse",
                                                 :type "object",
                                                 :description "Response message for ListTags.",
                                                 :properties {:nextPageToken {:description "Token to retrieve the next page of results. It is set to empty if no items remain in results.",
                                                                              :type "string"},
                                                              :tags {:type "array",
                                                                     :items {:$ref "GoogleCloudDatacatalogV1beta1Tag"},
                                                                     :description "Tag details."}}},
 :Binding {:type "object",
           :id "Binding",
           :description "Associates `members` with a `role`.",
           :properties {:condition {:$ref "Expr",
                                    :description "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."},
                        :role {:description "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
                               :type "string"},
                        :members {:type "array",
                                  :items {:type "string"},
                                  :description "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "},
                        :bindingId {:description "A client-specified ID for this binding. Expected to be globally unique to support the internal bindings-by-ID API.",
                                    :type "string"}}},
 :GoogleCloudDatacatalogV1beta1FieldTypeEnumType {:id "GoogleCloudDatacatalogV1beta1FieldTypeEnumType",
                                                  :type "object",
                                                  :properties {:allowedValues {:type "array",
                                                                               :description "The set of allowed values for this enum. This set must not be empty, the display names of the values in this set must not be empty and the display names of the values must be case-insensitively unique within this set. The order of items in this list is preserved. This field can be used to Required on create; optional on update. The set of allowed values for this enum. This set must not be empty, the display names of the values in this set must not be empty and the display names of the values must be case-insensitively unique within this set. Currently, enum values can only be added to the list of allowed values. Deletion and renaming of enum values are not supported. Can have up to 500 allowed values.",
                                                                               :items {:$ref "GoogleCloudDatacatalogV1beta1FieldTypeEnumTypeEnumValue"}}}},
 :GoogleCloudDatacatalogV1beta1ColumnSchema {:type "object",
                                             :id "GoogleCloudDatacatalogV1beta1ColumnSchema",
                                             :description "Representation of a column within a schema. Columns could be nested inside other columns.",
                                             :properties {:subcolumns {:description "Optional. Schema of sub-columns. A column can have zero or more sub-columns.",
                                                                       :type "array",
                                                                       :items {:$ref "GoogleCloudDatacatalogV1beta1ColumnSchema"}},
                                                          :mode {:type "string",
                                                                 :description "Optional. A column's mode indicates whether the values in this column are required, nullable, etc. Only `NULLABLE`, `REQUIRED` and `REPEATED` are supported. Default mode is `NULLABLE`."},
                                                          :column {:type "string",
                                                                   :description "Required. Name of the column."},
                                                          :type {:type "string",
                                                                 :description "Required. Type of the column."},
                                                          :description {:description "Optional. Description of the column. Default value is an empty string.",
                                                                        :type "string"}}},
 :Empty {:id "Empty",
         :properties {},
         :description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
         :type "object"},
 :GoogleCloudDatacatalogV1beta1ImportTaxonomiesResponse {:id "GoogleCloudDatacatalogV1beta1ImportTaxonomiesResponse",
                                                         :description "Response message for ImportTaxonomies.",
                                                         :type "object",
                                                         :properties {:taxonomies {:type "array",
                                                                                   :items {:$ref "GoogleCloudDatacatalogV1beta1Taxonomy"},
                                                                                   :description "Taxonomies that were imported."}}},
 :GoogleCloudDatacatalogV1beta1GcsFileSpec {:description "Specifications of a single file in Cloud Storage.",
                                            :properties {:gcsTimestamps {:$ref "GoogleCloudDatacatalogV1beta1SystemTimestamps",
                                                                         :description "Output only. Timestamps about the Cloud Storage file.",
                                                                         :readOnly true},
                                                         :filePath {:description "Required. The full file path. Example: `gs://bucket_name/a/b.txt`.",
                                                                    :type "string"},
                                                         :sizeBytes {:type "string",
                                                                     :description "Output only. The size of the file, in bytes.",
                                                                     :readOnly true,
                                                                     :format "int64"}},
                                            :id "GoogleCloudDatacatalogV1beta1GcsFileSpec",
                                            :type "object"},
 :GoogleCloudDatacatalogV1beta1ListTaxonomiesResponse {:id "GoogleCloudDatacatalogV1beta1ListTaxonomiesResponse",
                                                       :type "object",
                                                       :description "Response message for ListTaxonomies.",
                                                       :properties {:taxonomies {:items {:$ref "GoogleCloudDatacatalogV1beta1Taxonomy"},
                                                                                 :description "Taxonomies that the project contains.",
                                                                                 :type "array"},
                                                                    :nextPageToken {:description "Token used to retrieve the next page of results, or empty if there are no more results in the list.",
                                                                                    :type "string"}}},
 :GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope {:id "GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope",
                                                          :type "object",
                                                          :properties {:includeOrgIds {:items {:type "string"},
                                                                                       :type "array",
                                                                                       :description "The list of organization IDs to search within. To find your organization ID, follow instructions in https://cloud.google.com/resource-manager/docs/creating-managing-organization."},
                                                                       :restrictedLocations {:type "array",
                                                                                             :description "Optional. The list of locations to search within. 1. If empty, search will be performed in all locations; 2. If any of the locations are NOT in the valid locations list, error will be returned; 3. Otherwise, search only the given locations for matching results. Typical usage is to leave this field empty. When a location is unreachable as returned in the `SearchCatalogResponse.unreachable` field, users can repeat the search request with this parameter set to get additional information on the error. Valid locations: * asia-east1 * asia-east2 * asia-northeast1 * asia-northeast2 * asia-northeast3 * asia-south1 * asia-southeast1 * australia-southeast1 * eu * europe-north1 * europe-west1 * europe-west2 * europe-west3 * europe-west4 * europe-west6 * global * northamerica-northeast1 * southamerica-east1 * us * us-central1 * us-east1 * us-east4 * us-west1 * us-west2",
                                                                                             :items {:type "string"}},
                                                                       :includeGcpPublicDatasets {:type "boolean",
                                                                                                  :description "If `true`, include Google Cloud Platform (GCP) public datasets in the search results. Info on GCP public datasets is available at https://cloud.google.com/public-datasets/. By default, GCP public datasets are excluded."},
                                                                       :includeProjectIds {:items {:type "string"},
                                                                                           :type "array",
                                                                                           :description "The list of project IDs to search within. To learn more about the distinction between project names/IDs/numbers, go to https://cloud.google.com/docs/overview/#projects."}},
                                                          :description "The criteria that select the subspace used for query matching."},
 :GoogleCloudDatacatalogV1beta1Schema {:properties {:columns {:items {:$ref "GoogleCloudDatacatalogV1beta1ColumnSchema"},
                                                              :type "array",
                                                              :description "Required. Schema of columns. A maximum of 10,000 columns and sub-columns can be specified."}},
                                       :description "Represents a schema (e.g. BigQuery, GoogleSQL, Avro schema).",
                                       :type "object",
                                       :id "GoogleCloudDatacatalogV1beta1Schema"},
 :GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldEnumValueRequest {:type "object",
                                                                       :description "Request message for RenameTagTemplateFieldEnumValue.",
                                                                       :properties {:newEnumValueDisplayName {:type "string",
                                                                                                              :description "Required. The new display name of the enum value. For example, `my_new_enum_value`."}},
                                                                       :id "GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldEnumValueRequest"},
 :GoogleCloudDatacatalogV1beta1InlineSource {:description "Inline source used for taxonomies import.",
                                             :type "object",
                                             :properties {:taxonomies {:type "array",
                                                                       :description "Required. Taxonomies to be imported.",
                                                                       :items {:$ref "GoogleCloudDatacatalogV1beta1SerializedTaxonomy"}}},
                                             :id "GoogleCloudDatacatalogV1beta1InlineSource"},
 :TestIamPermissionsRequest {:properties {:permissions {:items {:type "string"},
                                                        :type "array",
                                                        :description "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."}},
                             :type "object",
                             :description "Request message for `TestIamPermissions` method.",
                             :id "TestIamPermissionsRequest"},
 :GoogleCloudDatacatalogV1beta1TagField {:id "GoogleCloudDatacatalogV1beta1TagField",
                                         :type "object",
                                         :description "Contains the value and supporting information for a field within a Tag.",
                                         :properties {:boolValue {:description "Holds the value for a tag field with boolean type.",
                                                                  :type "boolean"},
                                                      :displayName {:type "string",
                                                                    :readOnly true,
                                                                    :description "Output only. The display name of this field."},
                                                      :stringValue {:description "Holds the value for a tag field with string type.",
                                                                    :type "string"},
                                                      :order {:type "integer",
                                                              :readOnly true,
                                                              :description "Output only. The order of this field with respect to other fields in this tag. It can be set in Tag. For example, a higher value can indicate a more important field. The value can be negative. Multiple fields can have the same order, and field orders within a tag do not have to be sequential.",
                                                              :format "int32"},
                                                      :timestampValue {:description "Holds the value for a tag field with timestamp type.",
                                                                       :format "google-datetime",
                                                                       :type "string"},
                                                      :enumValue {:$ref "GoogleCloudDatacatalogV1beta1TagFieldEnumValue",
                                                                  :description "Holds the value for a tag field with enum type. This value must be one of the allowed values in the definition of this enum."},
                                                      :doubleValue {:format "double",
                                                                    :type "number",
                                                                    :description "Holds the value for a tag field with double type."}}},
 :GoogleCloudDatacatalogV1beta1FieldType {:type "object",
                                          :properties {:enumType {:$ref "GoogleCloudDatacatalogV1beta1FieldTypeEnumType",
                                                                  :description "Represents an enum type."},
                                                       :primitiveType {:enumDescriptions ["This is the default invalid value for a type."
                                                                                          "A double precision number."
                                                                                          "An UTF-8 string."
                                                                                          "A boolean value."
                                                                                          "A timestamp."],
                                                                       :enum ["PRIMITIVE_TYPE_UNSPECIFIED"
                                                                              "DOUBLE"
                                                                              "STRING"
                                                                              "BOOL"
                                                                              "TIMESTAMP"],
                                                                       :description "Represents primitive types - string, bool etc.",
                                                                       :type "string"}},
                                          :id "GoogleCloudDatacatalogV1beta1FieldType"},
 :GoogleCloudDatacatalogV1beta1ListEntryGroupsResponse {:description "Response message for ListEntryGroups.",
                                                        :properties {:nextPageToken {:type "string",
                                                                                     :description "Token to retrieve the next page of results. It is set to empty if no items remain in results."},
                                                                     :entryGroups {:type "array",
                                                                                   :items {:$ref "GoogleCloudDatacatalogV1beta1EntryGroup"},
                                                                                   :description "EntryGroup details."}},
                                                        :type "object",
                                                        :id "GoogleCloudDatacatalogV1beta1ListEntryGroupsResponse"},
 :GoogleCloudDatacatalogV1beta1SearchCatalogRequest {:type "object",
                                                     :properties {:pageSize {:format "int32",
                                                                             :description "Number of results in the search page. If <=0 then defaults to 10. Max limit for page_size is 1000. Throws an invalid argument for page_size > 1000.",
                                                                             :type "integer"},
                                                                  :orderBy {:description "Specifies the ordering of results, currently supported case-sensitive choices are: * `relevance`, only supports descending * `last_modified_timestamp [asc|desc]`, defaults to descending if not specified If not specified, defaults to `relevance` descending.",
                                                                            :type "string"},
                                                                  :pageToken {:description "Optional. Pagination token returned in an earlier SearchCatalogResponse.next_page_token, which indicates that this is a continuation of a prior SearchCatalogRequest call, and that the system should return the next page of data. If empty, the first page is returned.",
                                                                              :type "string"},
                                                                  :query {:description "Optional. The query string in search query syntax. An empty query string will result in all data assets (in the specified scope) that the user has access to. Query strings can be simple as \"x\" or more qualified as: * name:x * column:x * description:y Note: Query tokens need to have a minimum of 3 characters for substring matching to work correctly. See [Data Catalog Search Syntax](https://cloud.google.com/data-catalog/docs/how-to/search-reference) for more information.",
                                                                          :type "string"},
                                                                  :scope {:description "Required. The scope of this search request. A `scope` that has empty `include_org_ids`, `include_project_ids` AND false `include_gcp_public_datasets` is considered invalid. Data Catalog will return an error in such a case.",
                                                                          :$ref "GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope"}},
                                                     :id "GoogleCloudDatacatalogV1beta1SearchCatalogRequest",
                                                     :description "Request message for SearchCatalog."},
 :GoogleCloudDatacatalogV1beta1Entry {:id "GoogleCloudDatacatalogV1beta1Entry",
                                      :type "object",
                                      :properties {:description {:type "string",
                                                                 :description "Entry description, which can consist of several sentences or paragraphs that describe entry contents. Default value is an empty string."},
                                                   :schema {:$ref "GoogleCloudDatacatalogV1beta1Schema",
                                                            :description "Schema of the entry. An entry might not have any schema attached to it."},
                                                   :bigqueryDateShardedSpec {:description "Specification for a group of BigQuery tables with name pattern `[prefix]YYYYMMDD`. Context: https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding.",
                                                                             :$ref "GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec"},
                                                   :userSpecifiedSystem {:type "string",
                                                                         :description "This field indicates the entry's source system that Data Catalog does not integrate with. `user_specified_system` strings must begin with a letter or underscore and can only contain letters, numbers, and underscores; are case insensitive; must be at least 1 character and at most 64 characters long."},
                                                   :sourceSystemTimestamps {:$ref "GoogleCloudDatacatalogV1beta1SystemTimestamps",
                                                                            :readOnly true,
                                                                            :description "Output only. Timestamps about the underlying resource, not about this Data Catalog entry. Output only when Entry is of type in the EntryType enum. For entries with user_specified_type, this field is optional and defaults to an empty timestamp."},
                                                   :displayName {:type "string",
                                                                 :description "Display information such as title and description. A short name to identify the entry, for example, \"Analytics Data - Jan 2011\". Default value is an empty string."},
                                                   :name {:description "The Data Catalog resource name of the entry in URL format. Example: * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id} Note that this Entry and its child resources may not actually be stored in the location in this name.",
                                                          :type "string"},
                                                   :gcsFilesetSpec {:description "Specification that applies to a Cloud Storage fileset. This is only valid on entries of type FILESET.",
                                                                    :$ref "GoogleCloudDatacatalogV1beta1GcsFilesetSpec"},
                                                   :type {:enum ["ENTRY_TYPE_UNSPECIFIED"
                                                                 "TABLE"
                                                                 "MODEL"
                                                                 "DATA_STREAM"
                                                                 "FILESET"],
                                                          :description "The type of the entry. Only used for Entries with types in the EntryType enum.",
                                                          :type "string",
                                                          :enumDescriptions ["Default unknown type."
                                                                             "Output only. The type of entry that has a GoogleSQL schema, including logical views."
                                                                             "Output only. The type of models. https://cloud.google.com/bigquery-ml/docs/bigqueryml-intro"
                                                                             "Output only. An entry type which is used for streaming entries. Example: Pub/Sub topic."
                                                                             "An entry type which is a set of files or objects. Example: Cloud Storage fileset."]},
                                                   :bigqueryTableSpec {:$ref "GoogleCloudDatacatalogV1beta1BigQueryTableSpec",
                                                                       :description "Specification that applies to a BigQuery table. This is only valid on entries of type `TABLE`."},
                                                   :linkedResource {:description "The resource this metadata entry refers to. For Google Cloud Platform resources, `linked_resource` is the [full name of the resource](https://cloud.google.com/apis/design/resource_names#full_resource_name). For example, the `linked_resource` for a table resource from BigQuery is: * //bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId Output only when Entry is of type in the EntryType enum. For entries with user_specified_type, this field is optional and defaults to an empty string.",
                                                                    :type "string"},
                                                   :userSpecifiedType {:type "string",
                                                                       :description "Entry type if it does not fit any of the input-allowed values listed in `EntryType` enum above. When creating an entry, users should check the enum values first, if nothing matches the entry to be created, then provide a custom value, for example \"my_special_type\". `user_specified_type` strings must begin with a letter or underscore and can only contain letters, numbers, and underscores; are case insensitive; must be at least 1 character and at most 64 characters long. Currently, only FILESET enum value is allowed. All other entries created through Data Catalog must use `user_specified_type`."},
                                                   :integratedSystem {:enumDescriptions ["Default unknown system."
                                                                                         "BigQuery."
                                                                                         "Cloud Pub/Sub."],
                                                                      :description "Output only. This field indicates the entry's source system that Data Catalog integrates with, such as BigQuery or Pub/Sub.",
                                                                      :enum ["INTEGRATED_SYSTEM_UNSPECIFIED"
                                                                             "BIGQUERY"
                                                                             "CLOUD_PUBSUB"],
                                                                      :type "string",
                                                                      :readOnly true}},
                                      :description "Entry Metadata. A Data Catalog Entry resource represents another resource in Google Cloud Platform (such as a BigQuery dataset or a Pub/Sub topic), or outside of Google Cloud Platform. Clients can use the `linked_resource` field in the Entry resource to refer to the original resource ID of the source system. An Entry resource contains resource details, such as its schema. An Entry can also be used to attach flexible metadata, such as a Tag."},
 :GoogleCloudDatacatalogV1beta1BigQueryTableSpec {:type "object",
                                                  :id "GoogleCloudDatacatalogV1beta1BigQueryTableSpec",
                                                  :description "Describes a BigQuery table.",
                                                  :properties {:viewSpec {:$ref "GoogleCloudDatacatalogV1beta1ViewSpec",
                                                                          :description "Table view specification. This field should only be populated if `table_source_type` is `BIGQUERY_VIEW`."},
                                                               :tableSpec {:$ref "GoogleCloudDatacatalogV1beta1TableSpec",
                                                                           :description "Spec of a BigQuery table. This field should only be populated if `table_source_type` is `BIGQUERY_TABLE`."},
                                                               :tableSourceType {:enum ["TABLE_SOURCE_TYPE_UNSPECIFIED"
                                                                                        "BIGQUERY_VIEW"
                                                                                        "BIGQUERY_TABLE"
                                                                                        "BIGQUERY_MATERIALIZED_VIEW"],
                                                                                 :readOnly true,
                                                                                 :description "Output only. The table source type.",
                                                                                 :enumDescriptions ["Default unknown type."
                                                                                                    "Table view."
                                                                                                    "BigQuery native table."
                                                                                                    "BigQuery materialized view."],
                                                                                 :type "string"}}},
 :GoogleCloudDatacatalogV1beta1TableSpec {:id "GoogleCloudDatacatalogV1beta1TableSpec",
                                          :type "object",
                                          :properties {:groupedEntry {:description "Output only. If the table is a dated shard, i.e., with name pattern `[prefix]YYYYMMDD`, `grouped_entry` is the Data Catalog resource name of the date sharded grouped entry, for example, `projects/{project_id}/locations/{location}/entrygroups/{entry_group_id}/entries/{entry_id}`. Otherwise, `grouped_entry` is empty.",
                                                                      :readOnly true,
                                                                      :type "string"}},
                                          :description "Normal BigQuery table spec."},
 :GoogleCloudDatacatalogV1beta1GcsFilesetSpec {:description "Describes a Cloud Storage fileset entry.",
                                               :properties {:filePatterns {:items {:type "string"},
                                                                           :type "array",
                                                                           :description "Required. Patterns to identify a set of files in Google Cloud Storage. See [Cloud Storage documentation](https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames) for more information. Note that bucket wildcards are currently not supported. Examples of valid file_patterns: * `gs://bucket_name/dir/*`: matches all files within `bucket_name/dir` directory. * `gs://bucket_name/dir/**`: matches all files in `bucket_name/dir` spanning all subdirectories. * `gs://bucket_name/file*`: matches files prefixed by `file` in `bucket_name` * `gs://bucket_name/??.txt`: matches files with two characters followed by `.txt` in `bucket_name` * `gs://bucket_name/[aeiou].txt`: matches files that contain a single vowel character followed by `.txt` in `bucket_name` * `gs://bucket_name/[a-m].txt`: matches files that contain `a`, `b`, ... or `m` followed by `.txt` in `bucket_name` * `gs://bucket_name/a/*/b`: matches all files in `bucket_name` that match `a/*/b` pattern, such as `a/c/b`, `a/d/b` * `gs://another_bucket/a.txt`: matches `gs://another_bucket/a.txt` You can combine wildcards to provide more powerful matches, for example: * `gs://bucket_name/[a-m]??.j*g`"},
                                                            :sampleGcsFileSpecs {:description "Output only. Sample files contained in this fileset, not all files contained in this fileset are represented here.",
                                                                                 :type "array",
                                                                                 :items {:$ref "GoogleCloudDatacatalogV1beta1GcsFileSpec"},
                                                                                 :readOnly true}},
                                               :id "GoogleCloudDatacatalogV1beta1GcsFilesetSpec",
                                               :type "object"},
 :TestIamPermissionsResponse {:description "Response message for `TestIamPermissions` method.",
                              :id "TestIamPermissionsResponse",
                              :type "object",
                              :properties {:permissions {:description "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                                                         :items {:type "string"},
                                                         :type "array"}}},
 :GoogleCloudDatacatalogV1beta1ViewSpec {:id "GoogleCloudDatacatalogV1beta1ViewSpec",
                                         :description "Table view specification.",
                                         :type "object",
                                         :properties {:viewQuery {:type "string",
                                                                  :description "Output only. The query that defines the table view.",
                                                                  :readOnly true}}},
 :GoogleCloudDatacatalogV1beta1TagFieldEnumValue {:type "object",
                                                  :description "Holds an enum value.",
                                                  :properties {:displayName {:type "string",
                                                                             :description "The display name of the enum value."}},
                                                  :id "GoogleCloudDatacatalogV1beta1TagFieldEnumValue"},
 :GoogleCloudDatacatalogV1beta1PolicyTag {:properties {:displayName {:description "Required. User defined name of this policy tag. It must: be unique within the parent taxonomy; contain only unicode letters, numbers, underscores, dashes and spaces; not start or end with spaces; and be at most 200 bytes long when encoded in UTF-8.",
                                                                     :type "string"},
                                                       :childPolicyTags {:readOnly true,
                                                                         :type "array",
                                                                         :items {:type "string"},
                                                                         :description "Output only. Resource names of child policy tags of this policy tag."},
                                                       :parentPolicyTag {:description "Resource name of this policy tag's parent policy tag (e.g. for the \"LatLong\" policy tag in the example above, this field contains the resource name of the \"Geolocation\" policy tag). If empty, it means this policy tag is a top level policy tag (e.g. this field is empty for the \"Geolocation\" policy tag in the example above). If not set, defaults to an empty string.",
                                                                         :type "string"},
                                                       :description {:type "string",
                                                                     :description "Description of this policy tag. It must: contain only unicode characters, tabs, newlines, carriage returns and page breaks; and be at most 2000 bytes long when encoded in UTF-8. If not set, defaults to an empty description. If not set, defaults to an empty description."},
                                                       :name {:readOnly true,
                                                              :type "string",
                                                              :description "Output only. Resource name of this policy tag, whose format is: \"projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{id}\"."}},
                                          :type "object",
                                          :description "Denotes one policy tag in a taxonomy (e.g. ssn). Policy Tags can be defined in a hierarchy. For example, consider the following hierarchy: Geolocation -> (LatLong, City, ZipCode). PolicyTag \"Geolocation\" contains three child policy tags: \"LatLong\", \"City\", and \"ZipCode\".",
                                          :id "GoogleCloudDatacatalogV1beta1PolicyTag"},
 :Expr {:id "Expr",
        :properties {:title {:description "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
                             :type "string"},
                     :expression {:description "Textual representation of an expression in Common Expression Language syntax.",
                                  :type "string"},
                     :description {:type "string",
                                   :description "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."},
                     :location {:description "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
                                :type "string"}},
        :type "object",
        :description "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information."},
 :GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec {:properties {:tablePrefix {:readOnly true,
                                                                                   :description "Output only. The table name prefix of the shards. The name of any given shard is `[table_prefix]YYYYMMDD`, for example, for shard `MyTable20180101`, the `table_prefix` is `MyTable`.",
                                                                                   :type "string"},
                                                                     :shardCount {:readOnly true,
                                                                                  :type "string",
                                                                                  :description "Output only. Total number of shards.",
                                                                                  :format "int64"},
                                                                     :dataset {:type "string",
                                                                               :readOnly true,
                                                                               :description "Output only. The Data Catalog resource name of the dataset entry the current table belongs to, for example, `projects/{project_id}/locations/{location}/entrygroups/{entry_group_id}/entries/{entry_id}`."}},
                                                        :description "Spec for a group of BigQuery tables with name pattern `[prefix]YYYYMMDD`. Context: https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding",
                                                        :id "GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec",
                                                        :type "object"},
 :GoogleCloudDatacatalogV1beta1SerializedPolicyTag {:properties {:description {:description "Description of the serialized policy tag. The length of the description is limited to 2000 bytes when encoded in UTF-8. If not set, defaults to an empty description.",
                                                                               :type "string"},
                                                                 :displayName {:description "Required. Display name of the policy tag. Max 200 bytes when encoded in UTF-8.",
                                                                               :type "string"},
                                                                 :childPolicyTags {:type "array",
                                                                                   :description "Children of the policy tag if any.",
                                                                                   :items {:$ref "GoogleCloudDatacatalogV1beta1SerializedPolicyTag"}},
                                                                 :policyTag {:description "Resource name of the policy tag. This field will be ignored when calling ImportTaxonomies.",
                                                                             :type "string"}},
                                                    :id "GoogleCloudDatacatalogV1beta1SerializedPolicyTag",
                                                    :description "Message representing one policy tag when exported as a nested proto.",
                                                    :type "object"},
 :GoogleCloudDatacatalogV1beta1ListPolicyTagsResponse {:id "GoogleCloudDatacatalogV1beta1ListPolicyTagsResponse",
                                                       :description "Response message for ListPolicyTags.",
                                                       :type "object",
                                                       :properties {:policyTags {:description "The policy tags that are in the requested taxonomy.",
                                                                                 :type "array",
                                                                                 :items {:$ref "GoogleCloudDatacatalogV1beta1PolicyTag"}},
                                                                    :nextPageToken {:description "Token used to retrieve the next page of results, or empty if there are no more results in the list.",
                                                                                    :type "string"}}},
 :GoogleCloudDatacatalogV1beta1SearchCatalogResult {:id "GoogleCloudDatacatalogV1beta1SearchCatalogResult",
                                                    :description "A result that appears in the response of a search request. Each result captures details of one entry that matches the search.",
                                                    :type "object",
                                                    :properties {:searchResultType {:type "string",
                                                                                    :enumDescriptions ["Default unknown type."
                                                                                                       "An Entry."
                                                                                                       "A TagTemplate."
                                                                                                       "An EntryGroup."],
                                                                                    :enum ["SEARCH_RESULT_TYPE_UNSPECIFIED"
                                                                                           "ENTRY"
                                                                                           "TAG_TEMPLATE"
                                                                                           "ENTRY_GROUP"],
                                                                                    :description "Type of the search result. This field can be used to determine which Get method to call to fetch the full resource."},
                                                                 :searchResultSubtype {:description "Sub-type of the search result. This is a dot-delimited description of the resource's full type, and is the same as the value callers would provide in the \"type\" search facet. Examples: `entry.table`, `entry.dataStream`, `tagTemplate`.",
                                                                                       :type "string"},
                                                                 :linkedResource {:type "string",
                                                                                  :description "The full name of the cloud resource the entry belongs to. See: https://cloud.google.com/apis/design/resource_names#full_resource_name. Example: * `//bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId`"},
                                                                 :relativeResourceName {:description "The relative resource name of the resource in URL format. Examples: * `projects/{project_id}/locations/{location_id}/entryGroups/{entry_group_id}/entries/{entry_id}` * `projects/{project_id}/tagTemplates/{tag_template_id}`",
                                                                                        :type "string"}}},
 :GoogleCloudDatacatalogV1beta1ExportTaxonomiesResponse {:id "GoogleCloudDatacatalogV1beta1ExportTaxonomiesResponse",
                                                         :type "object",
                                                         :properties {:taxonomies {:type "array",
                                                                                   :description "List of taxonomies and policy tags in a tree structure.",
                                                                                   :items {:$ref "GoogleCloudDatacatalogV1beta1SerializedTaxonomy"}}},
                                                         :description "Response message for ExportTaxonomies."},
 :GoogleCloudDatacatalogV1beta1SystemTimestamps {:description "Timestamps about this resource according to a particular system.",
                                                 :properties {:updateTime {:format "google-datetime",
                                                                           :type "string",
                                                                           :description "The last-modified time of the resource within the given system."},
                                                              :createTime {:description "The creation time of the resource within the given system.",
                                                                           :format "google-datetime",
                                                                           :type "string"},
                                                              :expireTime {:readOnly true,
                                                                           :format "google-datetime",
                                                                           :type "string",
                                                                           :description "Output only. The expiration time of the resource within the given system. Currently only apllicable to BigQuery resources."}},
                                                 :type "object",
                                                 :id "GoogleCloudDatacatalogV1beta1SystemTimestamps"},
 :GoogleCloudDatacatalogV1beta1SearchCatalogResponse {:type "object",
                                                      :id "GoogleCloudDatacatalogV1beta1SearchCatalogResponse",
                                                      :description "Response message for SearchCatalog.",
                                                      :properties {:nextPageToken {:type "string",
                                                                                   :description "The token that can be used to retrieve the next page of results."},
                                                                   :unreachable {:type "array",
                                                                                 :description "Unreachable locations. Search result does not include data from those locations. Users can get additional information on the error by repeating the search request with a more restrictive parameter -- setting the value for `SearchDataCatalogRequest.scope.restricted_locations`.",
                                                                                 :items {:type "string"}},
                                                                   :results {:type "array",
                                                                             :items {:$ref "GoogleCloudDatacatalogV1beta1SearchCatalogResult"},
                                                                             :description "Search results."}}},
 :GoogleCloudDatacatalogV1beta1Tag {:description "Tags are used to attach custom metadata to Data Catalog resources. Tags conform to the specifications within their tag template. See [Data Catalog IAM](https://cloud.google.com/data-catalog/docs/concepts/iam) for information on the permissions needed to create or view tags.",
                                    :properties {:templateDisplayName {:description "Output only. The display name of the tag template.",
                                                                       :readOnly true,
                                                                       :type "string"},
                                                 :fields {:description "Required. This maps the ID of a tag field to the value of and additional information about that field. Valid field IDs are defined by the tag's template. A tag must have at least 1 field and at most 500 fields.",
                                                          :type "object",
                                                          :additionalProperties {:$ref "GoogleCloudDatacatalogV1beta1TagField"}},
                                                 :name {:type "string",
                                                        :description "The resource name of the tag in URL format. Example: * projects/{project_id}/locations/{location}/entrygroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id} where `tag_id` is a system-generated identifier. Note that this Tag may not actually be stored in the location in this name."},
                                                 :column {:type "string",
                                                          :description "Resources like Entry can have schemas associated with them. This scope allows users to attach tags to an individual column based on that schema. For attaching a tag to a nested column, use `.` to separate the column names. Example: * `outer_column.inner_column`"},
                                                 :template {:description "Required. The resource name of the tag template that this tag uses. Example: * projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id} This field cannot be modified after creation.",
                                                            :type "string"}},
                                    :type "object",
                                    :id "GoogleCloudDatacatalogV1beta1Tag"},
 :GoogleCloudDatacatalogV1beta1TagTemplateField {:properties {:name {:description "Output only. The resource name of the tag template field in URL format. Example: * projects/{project_id}/locations/{location}/tagTemplates/{tag_template}/fields/{field} Note that this TagTemplateField may not actually be stored in the location in this name.",
                                                                     :readOnly true,
                                                                     :type "string"},
                                                              :order {:description "The order of this field with respect to other fields in this tag template. A higher value indicates a more important field. The value can be negative. Multiple fields can have the same order, and field orders within a tag do not have to be sequential.",
                                                                      :format "int32",
                                                                      :type "integer"},
                                                              :displayName {:description "The display name for this field. Defaults to an empty string.",
                                                                            :type "string"},
                                                              :description {:type "string",
                                                                            :description "The description for this field. Defaults to an empty string."},
                                                              :type {:description "Required. The type of value this tag field can contain.",
                                                                     :$ref "GoogleCloudDatacatalogV1beta1FieldType"},
                                                              :isRequired {:description "Whether this is a required field. Defaults to false.",
                                                                           :type "boolean"}},
                                                 :description "The template for an individual field within a tag template.",
                                                 :type "object",
                                                 :id "GoogleCloudDatacatalogV1beta1TagTemplateField"},
 :GoogleCloudDatacatalogV1beta1TagTemplate {:type "object",
                                            :properties {:displayName {:type "string",
                                                                       :description "The display name for this template. Defaults to an empty string."},
                                                         :fields {:description "Required. Map of tag template field IDs to the settings for the field. This map is an exhaustive list of the allowed fields. This map must contain at least one field and at most 500 fields. The keys to this map are tag template field IDs. Field IDs can contain letters (both uppercase and lowercase), numbers (0-9) and underscores (_). Field IDs must be at least 1 character long and at most 64 characters long. Field IDs must start with a letter or underscore.",
                                                                  :type "object",
                                                                  :additionalProperties {:$ref "GoogleCloudDatacatalogV1beta1TagTemplateField"}},
                                                         :name {:description "The resource name of the tag template in URL format. Example: * projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id} Note that this TagTemplate and its child resources may not actually be stored in the location in this name.",
                                                                :type "string"}},
                                            :description "A tag template defines a tag, which can have one or more typed fields. The template is used to create and attach the tag to GCP resources. [Tag template roles](https://cloud.google.com/iam/docs/understanding-roles#data-catalog-roles) provide permissions to create, edit, and use the template. See, for example, the [TagTemplate User](https://cloud.google.com/data-catalog/docs/how-to/template-user) role, which includes permission to use the tag template to tag resources.",
                                            :id "GoogleCloudDatacatalogV1beta1TagTemplate"},
 :Policy {:properties {:version {:description "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                                 :type "integer",
                                 :format "int32"},
                       :etag {:type "string",
                              :format "byte",
                              :description "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."},
                       :bindings {:items {:$ref "Binding"},
                                  :type "array",
                                  :description "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."}},
          :type "object",
          :id "Policy",
          :description "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."},
 :GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldRequest {:description "Request message for RenameTagTemplateField.",
                                                              :type "object",
                                                              :id "GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldRequest",
                                                              :properties {:newTagTemplateFieldId {:type "string",
                                                                                                   :description "Required. The new ID of this tag template field. For example, `my_new_field`."}}}}
