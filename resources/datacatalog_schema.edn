{:GoogleCloudDatacatalogV1GcsFilesetSpec {:properties {:filePatterns {:items {:type "string"},
                                                                      :description "Required. Patterns to identify a set of files in Google Cloud Storage. For more information, see [Wildcard Names] (https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames). Note: Currently, bucket wildcards are not supported. Examples of valid `file_patterns`: * `gs://bucket_name/dir/*`: matches all files in `bucket_name/dir` directory * `gs://bucket_name/dir/**`: matches all files in `bucket_name/dir` and all subdirectories * `gs://bucket_name/file*`: matches files prefixed by `file` in `bucket_name` * `gs://bucket_name/??.txt`: matches files with two characters followed by `.txt` in `bucket_name` * `gs://bucket_name/[aeiou].txt`: matches files that contain a single vowel character followed by `.txt` in `bucket_name` * `gs://bucket_name/[a-m].txt`: matches files that contain `a`, `b`, ... or `m` followed by `.txt` in `bucket_name` * `gs://bucket_name/a/*/b`: matches all files in `bucket_name` that match the `a/*/b` pattern, such as `a/c/b`, `a/d/b` * `gs://another_bucket/a.txt`: matches `gs://another_bucket/a.txt` You can combine wildcards to match complex sets of files, for example: `gs://bucket_name/[a-m]??.j*g`",
                                                                      :type "array"},
                                                       :sampleGcsFileSpecs {:type "array",
                                                                            :readOnly true,
                                                                            :description "Output only. Sample files contained in this fileset, not all files contained in this fileset are represented here.",
                                                                            :items {:$ref "GoogleCloudDatacatalogV1GcsFileSpec"}}},
                                          :id "GoogleCloudDatacatalogV1GcsFilesetSpec",
                                          :description "Describes a Cloud Storage fileset entry.",
                                          :type "object"},
 :GoogleCloudDatacatalogV1BigQueryTableSpec {:properties {:tableSourceType {:enumDescriptions ["Default unknown type."
                                                                                               "Table view."
                                                                                               "BigQuery native table."
                                                                                               "BigQuery materialized view."],
                                                                            :type "string",
                                                                            :enum ["TABLE_SOURCE_TYPE_UNSPECIFIED"
                                                                                   "BIGQUERY_VIEW"
                                                                                   "BIGQUERY_TABLE"
                                                                                   "BIGQUERY_MATERIALIZED_VIEW"],
                                                                            :readOnly true,
                                                                            :description "Output only. The table source type."},
                                                          :viewSpec {:description "Table view specification. Populated only if the `table_source_type` is `BIGQUERY_VIEW`.",
                                                                     :$ref "GoogleCloudDatacatalogV1ViewSpec"},
                                                          :tableSpec {:$ref "GoogleCloudDatacatalogV1TableSpec",
                                                                      :description "Specification of a BigQuery table. Populated only if the `table_source_type` is `BIGQUERY_TABLE`."}},
                                             :id "GoogleCloudDatacatalogV1BigQueryTableSpec",
                                             :description "Describes a BigQuery table.",
                                             :type "object"},
 :GetPolicyOptions {:type "object",
                    :properties {:requestedPolicyVersion {:format "int32",
                                                          :description "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                                                          :type "integer"}},
                    :id "GetPolicyOptions",
                    :description "Encapsulates settings provided to GetIamPolicy."},
 :GoogleCloudDatacatalogV1ImportTaxonomiesRequest {:type "object",
                                                   :description "Request message for ImportTaxonomies.",
                                                   :id "GoogleCloudDatacatalogV1ImportTaxonomiesRequest",
                                                   :properties {:crossRegionalSource {:description "Cross-regional source taxonomy to import.",
                                                                                      :$ref "GoogleCloudDatacatalogV1CrossRegionalSource"},
                                                                :inlineSource {:description "Inline source taxonomy to import.",
                                                                               :$ref "GoogleCloudDatacatalogV1InlineSource"}}},
 :GoogleCloudDatacatalogV1TagTemplateField {:description "The template for an individual field within a tag template.",
                                            :type "object",
                                            :properties {:type {:$ref "GoogleCloudDatacatalogV1FieldType",
                                                                :description "Required. The type of value this tag field can contain."},
                                                         :name {:description "Output only. The resource name of the tag template field in URL format. Example: `projects/{PROJECT_ID}/locations/{LOCATION}/tagTemplates/{TAG_TEMPLATE}/fields/{FIELD}` Note: The tag template field itself might not be stored in the location specified in its name. The name must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_), and must start with a letter or underscore. The maximum length is 64 characters.",
                                                                :type "string",
                                                                :readOnly true},
                                                         :displayName {:type "string",
                                                                       :description "The display name for this field. Defaults to an empty string. The name must contain only Unicode letters, numbers (0-9), underscores (_), dashes (-), spaces ( ), and can't start or end with spaces. The maximum length is 200 characters."},
                                                         :order {:type "integer",
                                                                 :format "int32",
                                                                 :description "The order of this field with respect to other fields in this tag template. For example, a higher value can indicate a more important field. The value can be negative. Multiple fields can have the same order and field orders within a tag don't have to be sequential."},
                                                         :description {:type "string",
                                                                       :description "The description for this field. Defaults to an empty string."},
                                                         :isRequired {:type "boolean",
                                                                      :description "If true, this field is required. Defaults to false."}},
                                            :id "GoogleCloudDatacatalogV1TagTemplateField"},
 :GoogleCloudDatacatalogV1RoutineSpecArgument {:description "Input or output argument of a function or stored procedure.",
                                               :id "GoogleCloudDatacatalogV1RoutineSpecArgument",
                                               :type "object",
                                               :properties {:type {:type "string",
                                                                   :description "Type of the argument. The exact value depends on the source system and the language."},
                                                            :name {:type "string",
                                                                   :description "The name of the argument. A return argument of a function might not have a name."},
                                                            :mode {:type "string",
                                                                   :enumDescriptions ["Unspecified mode."
                                                                                      "The argument is input-only."
                                                                                      "The argument is output-only."
                                                                                      "The argument is both an input and an output."],
                                                                   :enum ["MODE_UNSPECIFIED"
                                                                          "IN"
                                                                          "OUT"
                                                                          "INOUT"],
                                                                   :description "Specifies whether the argument is input or output."}}},
 :GoogleCloudDatacatalogV1BigQueryConnectionSpec {:type "object",
                                                  :description "Specification for the BigQuery connection.",
                                                  :properties {:connectionType {:enum ["CONNECTION_TYPE_UNSPECIFIED"
                                                                                       "CLOUD_SQL"],
                                                                                :enumDescriptions ["Unspecified type."
                                                                                                   "Cloud SQL connection."],
                                                                                :description "The type of the BigQuery connection.",
                                                                                :type "string"},
                                                               :hasCredential {:type "boolean",
                                                                               :description "True if there are credentials attached to the BigQuery connection; false otherwise."},
                                                               :cloudSql {:$ref "GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec",
                                                                          :description "Specification for the BigQuery connection to a Cloud SQL instance."}},
                                                  :id "GoogleCloudDatacatalogV1BigQueryConnectionSpec"},
 :GoogleCloudDatacatalogV1SerializedPolicyTag {:properties {:policyTag {:type "string",
                                                                        :description "Resource name of the policy tag. This field is ignored when calling `ImportTaxonomies`."},
                                                            :description {:description "Description of the serialized policy tag. At most 2000 bytes when encoded in UTF-8. If not set, defaults to an empty description.",
                                                                          :type "string"},
                                                            :childPolicyTags {:items {:$ref "GoogleCloudDatacatalogV1SerializedPolicyTag"},
                                                                              :type "array",
                                                                              :description "Children of the policy tag, if any."},
                                                            :displayName {:type "string",
                                                                          :description "Required. Display name of the policy tag. At most 200 bytes when encoded in UTF-8."}},
                                               :id "GoogleCloudDatacatalogV1SerializedPolicyTag",
                                               :type "object",
                                               :description "A nested protocol buffer that represents a policy tag and all its descendants."},
 :GoogleCloudDatacatalogV1DatabaseTableSpec {:properties {:type {:enumDescriptions ["Default unknown table type."
                                                                                    "Native table."
                                                                                    "External table."],
                                                                 :enum ["TABLE_TYPE_UNSPECIFIED"
                                                                        "NATIVE"
                                                                        "EXTERNAL"],
                                                                 :type "string",
                                                                 :description "Type of this table."}},
                                             :description "Specification that applies to a table resource. Valid only for entries with the `TABLE` type.",
                                             :type "object",
                                             :id "GoogleCloudDatacatalogV1DatabaseTableSpec"},
 :GoogleCloudDatacatalogV1Entry {:properties {:description {:type "string",
                                                            :description "Entry description that can consist of several sentences or paragraphs that describe entry contents. The description must not contain Unicode non-characters as well as C0 and C1 control codes except tabs (HT), new lines (LF), carriage returns (CR), and page breaks (FF). The maximum size is 2000 bytes when encoded in UTF-8. Default value is an empty string."},
                                              :schema {:description "Schema of the entry. An entry might not have any schema attached to it.",
                                                       :$ref "GoogleCloudDatacatalogV1Schema"},
                                              :labels {:type "object",
                                                       :additionalProperties {:type "string"},
                                                       :description "Cloud labels attached to the entry. In Data Catalog, you can create and modify labels attached only to custom entries. Synced entries have unmodifiable labels that come from the source system."},
                                              :bigqueryDateShardedSpec {:$ref "GoogleCloudDatacatalogV1BigQueryDateShardedSpec",
                                                                        :description "Specification for a group of BigQuery tables with the `[prefix]YYYYMMDD` name pattern. For more information, see [Introduction to partitioned tables] (https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding)."},
                                              :userSpecifiedSystem {:description "Indicates the entry's source system that Data Catalog doesn't automatically integrate with. The `user_specified_system` string has the following limitations: * Is case insensitive. * Must begin with a letter or underscore. * Can only contain letters, numbers, and underscores. * Must be at least 1 character and at most 64 characters long.",
                                                                    :type "string"},
                                              :sourceSystemTimestamps {:description "Timestamps from the underlying resource, not from the Data Catalog entry. Output only when the entry has a type listed in the `EntryType` enum. For entries with `user_specified_type`, this field is optional and defaults to an empty timestamp.",
                                                                       :$ref "GoogleCloudDatacatalogV1SystemTimestamps"},
                                              :displayName {:description "Display name of an entry. The name must contain only Unicode letters, numbers (0-9), underscores (_), dashes (-), spaces ( ), and can't start or end with spaces. The maximum size is 200 bytes when encoded in UTF-8. Default value is an empty string.",
                                                            :type "string"},
                                              :name {:readOnly true,
                                                     :type "string",
                                                     :description "Output only. The resource name of an entry in URL format. Note: The entry itself and its child resources might not be stored in the location specified in its name."},
                                              :usageSignal {:$ref "GoogleCloudDatacatalogV1UsageSignal",
                                                            :readOnly true,
                                                            :description "Output only. Resource usage statistics."},
                                              :gcsFilesetSpec {:$ref "GoogleCloudDatacatalogV1GcsFilesetSpec",
                                                               :description "Specification that applies to a Cloud Storage fileset. Valid only for entries with the `FILESET` type."},
                                              :type {:type "string",
                                                     :description "The type of the entry. Only used for entries with types listed in the `EntryType` enum. Currently, only `FILESET` enum value is allowed. All other entries created in Data Catalog must use the `user_specified_type`.",
                                                     :enum ["ENTRY_TYPE_UNSPECIFIED"
                                                            "TABLE"
                                                            "MODEL"
                                                            "DATA_STREAM"
                                                            "FILESET"
                                                            "CLUSTER"
                                                            "DATABASE"
                                                            "DATA_SOURCE_CONNECTION"
                                                            "ROUTINE"
                                                            "SERVICE"],
                                                     :enumDescriptions ["Default unknown type."
                                                                        "Output only. The entry type that has a GoogleSQL schema, including logical views."
                                                                        "Output only. The type of models. For more information, see [Supported models in BigQuery ML] (https://cloud.google.com/bigquery-ml/docs/introduction#supported_models_in)."
                                                                        "An entry type for streaming entries. For example, a Pub/Sub topic."
                                                                        "An entry type for a set of files or objects. For example, a Cloud Storage fileset."
                                                                        "A group of servers that work together. For example, a Kafka cluster."
                                                                        "A database."
                                                                        "Output only. Connection to a data source. For example, a BigQuery connection."
                                                                        "Output only. Routine, for example, a BigQuery routine."
                                                                        "A service, for example, a Dataproc Metastore service."]},
                                              :bigqueryTableSpec {:description "Specification that applies to a BigQuery table. Valid only for entries with the `TABLE` type.",
                                                                  :$ref "GoogleCloudDatacatalogV1BigQueryTableSpec"},
                                              :linkedResource {:description "The resource this metadata entry refers to. For Google Cloud Platform resources, `linked_resource` is the [Full Resource Name] (https://cloud.google.com/apis/design/resource_names#full_resource_name). For example, the `linked_resource` for a table resource from BigQuery is: `//bigquery.googleapis.com/projects/{PROJECT_ID}/datasets/{DATASET_ID}/tables/{TABLE_ID}` Output only when the entry is one of the types in the `EntryType` enum. For entries with a `user_specified_type`, this field is optional and defaults to an empty string. The resource string must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), periods (.), colons (:), slashes (/), dashes (-), and hashes (#). The maximum size is 200 bytes when encoded in UTF-8.",
                                                               :type "string"},
                                              :routineSpec {:$ref "GoogleCloudDatacatalogV1RoutineSpec",
                                                            :description "Specification that applies to a user-defined function or procedure. Valid only for entries with the `ROUTINE` type."},
                                              :dataSourceConnectionSpec {:description "Specification that applies to a data source connection. Valid only for entries with the `DATA_SOURCE_CONNECTION` type.",
                                                                         :$ref "GoogleCloudDatacatalogV1DataSourceConnectionSpec"},
                                              :dataSource {:readOnly true,
                                                           :$ref "GoogleCloudDatacatalogV1DataSource",
                                                           :description "Output only. Physical location of the entry."},
                                              :databaseTableSpec {:description "Specification that applies to a table resource. Valid only for entries with the `TABLE` type.",
                                                                  :$ref "GoogleCloudDatacatalogV1DatabaseTableSpec"},
                                              :userSpecifiedType {:description "Custom entry type that doesn't match any of the values allowed for input and listed in the `EntryType` enum. When creating an entry, first check the type values in the enum. If there are no appropriate types for the new entry, provide a custom value, for example, `my_special_type`. The `user_specified_type` string has the following limitations: * Is case insensitive. * Must begin with a letter or underscore. * Can only contain letters, numbers, and underscores. * Must be at least 1 character and at most 64 characters long.",
                                                                  :type "string"},
                                              :integratedSystem {:description "Output only. Indicates the entry's source system that Data Catalog integrates with, such as BigQuery, Pub/Sub, or Dataproc Metastore.",
                                                                 :readOnly true,
                                                                 :type "string",
                                                                 :enumDescriptions ["Default unknown system."
                                                                                    "BigQuery."
                                                                                    "Cloud Pub/Sub."
                                                                                    "Dataproc Metastore."],
                                                                 :enum ["INTEGRATED_SYSTEM_UNSPECIFIED"
                                                                        "BIGQUERY"
                                                                        "CLOUD_PUBSUB"
                                                                        "DATAPROC_METASTORE"]},
                                              :fullyQualifiedName {:description "Fully qualified name (FQN) of the resource. Set automatically for entries representing resources from synced systems. Settable only during creation and read-only afterwards. Can be used for search and lookup of the entries. FQNs take two forms: * For non-regionalized resources: `{SYSTEM}:{PROJECT}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}` * For regionalized resources: `{SYSTEM}:{PROJECT}.{LOCATION_ID}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}` Example for a DPMS table: `dataproc_metastore:{PROJECT_ID}.{LOCATION_ID}.{INSTANCE_ID}.{DATABASE_ID}.{TABLE_ID}`",
                                                                   :type "string"}},
                                 :description "Entry metadata. A Data Catalog entry represents another resource in Google Cloud Platform (such as a BigQuery dataset or a Pub/Sub topic) or outside of it. You can use the `linked_resource` field in the entry resource to refer to the original resource ID of the source system. An entry resource contains resource details, for example, its schema. Additionally, you can attach flexible metadata to an entry in the form of a Tag.",
                                 :id "GoogleCloudDatacatalogV1Entry",
                                 :type "object"},
 :GoogleCloudDatacatalogV1ListPolicyTagsResponse {:description "Response message for ListPolicyTags.",
                                                  :type "object",
                                                  :properties {:nextPageToken {:type "string",
                                                                               :description "Pagination token of the next results page. Empty if there are no more results in the list."},
                                                               :policyTags {:type "array",
                                                                            :items {:$ref "GoogleCloudDatacatalogV1PolicyTag"},
                                                                            :description "The policy tags that belong to the taxonomy."}},
                                                  :id "GoogleCloudDatacatalogV1ListPolicyTagsResponse"},
 :GoogleCloudDatacatalogV1GcsFileSpec {:type "object",
                                       :properties {:gcsTimestamps {:readOnly true,
                                                                    :$ref "GoogleCloudDatacatalogV1SystemTimestamps",
                                                                    :description "Output only. Creation, modification, and expiration timestamps of a Cloud Storage file."},
                                                    :filePath {:type "string",
                                                               :description "Required. Full file path. Example: `gs://bucket_name/a/b.txt`."},
                                                    :sizeBytes {:format "int64",
                                                                :readOnly true,
                                                                :type "string",
                                                                :description "Output only. File size in bytes."}},
                                       :description "Specification of a single file in Cloud Storage.",
                                       :id "GoogleCloudDatacatalogV1GcsFileSpec"},
 :GoogleCloudDatacatalogV1Taxonomy {:type "object",
                                    :id "GoogleCloudDatacatalogV1Taxonomy",
                                    :properties {:displayName {:description "Required. User-defined name of this taxonomy. The name can't start or end with spaces, must contain only Unicode letters, numbers, underscores, dashes, and spaces, and be at most 200 bytes long when encoded in UTF-8.",
                                                               :type "string"},
                                                 :description {:description "Optional. Description of this taxonomy. If not set, defaults to empty. The description must contain only Unicode characters, tabs, newlines, carriage returns, and page breaks, and be at most 2000 bytes long when encoded in UTF-8.",
                                                               :type "string"},
                                                 :name {:type "string",
                                                        :readOnly true,
                                                        :description "Output only. Resource name of this taxonomy in URL format. Note: Policy tag manager generates unique taxonomy IDs."},
                                                 :policyTagCount {:format "int32",
                                                                  :readOnly true,
                                                                  :description "Output only. Number of policy tags in this taxonomy.",
                                                                  :type "integer"},
                                                 :activatedPolicyTypes {:description "Optional. A list of policy types that are activated for this taxonomy. If not set, defaults to an empty list.",
                                                                        :type "array",
                                                                        :items {:enum ["POLICY_TYPE_UNSPECIFIED"
                                                                                       "FINE_GRAINED_ACCESS_CONTROL"],
                                                                                :type "string",
                                                                                :enumDescriptions ["Unspecified policy type."
                                                                                                   "Fine-grained access control policy that enables access control on tagged sub-resources."]}},
                                                 :taxonomyTimestamps {:$ref "GoogleCloudDatacatalogV1SystemTimestamps",
                                                                      :readOnly true,
                                                                      :description "Output only. Creation and modification timestamps of this taxonomy."}},
                                    :description "A taxonomy is a collection of hierarchical policy tags that classify data along a common axis. For example, a \"data sensitivity\" taxonomy might contain the following policy tags: ``` + PII + Account number + Age + SSN + Zipcode + Financials + Revenue ``` A \"data origin\" taxonomy might contain the following policy tags: ``` + User data + Employee data + Partner data + Public data ```"},
 :SetIamPolicyRequest {:type "object",
                       :id "SetIamPolicyRequest",
                       :description "Request message for `SetIamPolicy` method.",
                       :properties {:policy {:$ref "Policy",
                                             :description "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them."}}},
 :GoogleCloudDatacatalogV1ExportTaxonomiesResponse {:properties {:taxonomies {:description "List of taxonomies and policy tags as nested protocol buffers.",
                                                                              :type "array",
                                                                              :items {:$ref "GoogleCloudDatacatalogV1SerializedTaxonomy"}}},
                                                    :id "GoogleCloudDatacatalogV1ExportTaxonomiesResponse",
                                                    :type "object",
                                                    :description "Response message for ExportTaxonomies."},
 :GoogleCloudDatacatalogV1RenameTagTemplateFieldEnumValueRequest {:type "object",
                                                                  :description "Request message for RenameTagTemplateFieldEnumValue.",
                                                                  :id "GoogleCloudDatacatalogV1RenameTagTemplateFieldEnumValueRequest",
                                                                  :properties {:newEnumValueDisplayName {:description "Required. The new display name of the enum value. For example, `my_new_enum_value`.",
                                                                                                         :type "string"}}},
 :GoogleCloudDatacatalogV1FieldType {:properties {:enumType {:$ref "GoogleCloudDatacatalogV1FieldTypeEnumType",
                                                             :description "An enum type."},
                                                  :primitiveType {:type "string",
                                                                  :enum ["PRIMITIVE_TYPE_UNSPECIFIED"
                                                                         "DOUBLE"
                                                                         "STRING"
                                                                         "BOOL"
                                                                         "TIMESTAMP"
                                                                         "RICHTEXT"],
                                                                  :description "Primitive types, such as string, boolean, etc.",
                                                                  :enumDescriptions ["The default invalid value for a type."
                                                                                     "A double precision number."
                                                                                     "An UTF-8 string."
                                                                                     "A boolean value."
                                                                                     "A timestamp."
                                                                                     "A Richtext description."]}},
                                     :type "object",
                                     :id "GoogleCloudDatacatalogV1FieldType"},
 :GoogleCloudDatacatalogV1BigQueryRoutineSpec {:description "Fields specific for BigQuery routines.",
                                               :type "object",
                                               :properties {:importedLibraries {:items {:type "string"},
                                                                                :type "array",
                                                                                :description "Paths of the imported libraries."}},
                                               :id "GoogleCloudDatacatalogV1BigQueryRoutineSpec"},
 :GoogleCloudDatacatalogV1UsageSignal {:type "object",
                                       :description "The set of all usage signals that Data Catalog stores. Note: Usually, these signals are updated daily. In rare cases, an update may fail but will be performed again on the next day.",
                                       :properties {:usageWithinTimeRange {:type "object",
                                                                           :additionalProperties {:$ref "GoogleCloudDatacatalogV1UsageStats"},
                                                                           :description "Usage statistics over each of the predefined time ranges. Supported time ranges are `{\"24H\", \"7D\", \"30D\"}`."},
                                                    :updateTime {:type "string",
                                                                 :format "google-datetime",
                                                                 :description "The end timestamp of the duration of usage statistics."}},
                                       :id "GoogleCloudDatacatalogV1UsageSignal"},
 :GoogleCloudDatacatalogV1DataSource {:type "object",
                                      :description "Physical location of an entry.",
                                      :properties {:resource {:description "Full name of a resource as defined by the service. For example: `//bigquery.googleapis.com/projects/{PROJECT_ID}/locations/{LOCATION}/datasets/{DATASET_ID}/tables/{TABLE_ID}`",
                                                              :type "string"},
                                                   :service {:description "Service that physically stores the data.",
                                                             :enumDescriptions ["Default unknown service."
                                                                                "Google Cloud Storage service."
                                                                                "BigQuery service."],
                                                             :enum ["SERVICE_UNSPECIFIED"
                                                                    "CLOUD_STORAGE"
                                                                    "BIGQUERY"],
                                                             :type "string"}},
                                      :id "GoogleCloudDatacatalogV1DataSource"},
 :GoogleCloudDatacatalogV1CrossRegionalSource {:id "GoogleCloudDatacatalogV1CrossRegionalSource",
                                               :properties {:taxonomy {:type "string",
                                                                       :description "Required. The resource name of the source taxonomy to import."}},
                                               :type "object",
                                               :description "Cross-regional source used to import an existing taxonomy into a different region."},
 :GoogleCloudDatacatalogV1EntryGroup {:description "Entry group metadata. An `EntryGroup` resource represents a logical grouping of zero or more Data Catalog Entry resources.",
                                      :id "GoogleCloudDatacatalogV1EntryGroup",
                                      :type "object",
                                      :properties {:description {:description "Entry group description. Can consist of several sentences or paragraphs that describe the entry group contents. Default value is an empty string.",
                                                                 :type "string"},
                                                   :name {:description "The resource name of the entry group in URL format. Note: The entry group itself and its child resources might not be stored in the location specified in its name.",
                                                          :type "string"},
                                                   :dataCatalogTimestamps {:readOnly true,
                                                                           :$ref "GoogleCloudDatacatalogV1SystemTimestamps",
                                                                           :description "Output only. Timestamps of the entry group. Default value is empty."},
                                                   :displayName {:type "string",
                                                                 :description "A short name to identify the entry group, for example, \"analytics data - jan 2011\". Default value is an empty string."}}},
 :GoogleCloudDatacatalogV1SystemTimestamps {:id "GoogleCloudDatacatalogV1SystemTimestamps",
                                            :description "Timestamps associated with this resource in a particular system.",
                                            :properties {:expireTime {:description "Output only. Expiration timestamp of the resource within the given system. Currently only applicable to BigQuery resources.",
                                                                      :type "string",
                                                                      :readOnly true,
                                                                      :format "google-datetime"},
                                                         :updateTime {:description "Timestamp of the last modification of the resource or its metadata within a given system. Note: Depending on the source system, not every modification updates this timestamp. For example, BigQuery timestamps every metadata modification but not data or permission changes.",
                                                                      :type "string",
                                                                      :format "google-datetime"},
                                                         :createTime {:type "string",
                                                                      :format "google-datetime",
                                                                      :description "Creation timestamp of the resource within the given system."}},
                                            :type "object"},
 :GoogleCloudDatacatalogV1SerializedTaxonomy {:type "object",
                                              :id "GoogleCloudDatacatalogV1SerializedTaxonomy",
                                              :description "A nested protocol buffer that represents a taxonomy and the hierarchy of its policy tags. Used for taxonomy replacement, import, and export.",
                                              :properties {:displayName {:type "string",
                                                                         :description "Required. Display name of the taxonomy. At most 200 bytes when encoded in UTF-8."},
                                                           :activatedPolicyTypes {:description "A list of policy types that are activated per taxonomy.",
                                                                                  :type "array",
                                                                                  :items {:enum ["POLICY_TYPE_UNSPECIFIED"
                                                                                                 "FINE_GRAINED_ACCESS_CONTROL"],
                                                                                          :type "string",
                                                                                          :enumDescriptions ["Unspecified policy type."
                                                                                                             "Fine-grained access control policy that enables access control on tagged sub-resources."]}},
                                                           :description {:type "string",
                                                                         :description "Description of the serialized taxonomy. At most 2000 bytes when encoded in UTF-8. If not set, defaults to an empty description."},
                                                           :policyTags {:type "array",
                                                                        :items {:$ref "GoogleCloudDatacatalogV1SerializedPolicyTag"},
                                                                        :description "Top level policy tags associated with the taxonomy, if any."}}},
 :GoogleCloudDatacatalogV1SearchCatalogResult {:id "GoogleCloudDatacatalogV1SearchCatalogResult",
                                               :properties {:searchResultType {:type "string",
                                                                               :description "Type of the search result. You can use this field to determine which get method to call to fetch the full resource.",
                                                                               :enum ["SEARCH_RESULT_TYPE_UNSPECIFIED"
                                                                                      "ENTRY"
                                                                                      "TAG_TEMPLATE"
                                                                                      "ENTRY_GROUP"],
                                                                               :enumDescriptions ["Default unknown type."
                                                                                                  "An Entry."
                                                                                                  "A TagTemplate."
                                                                                                  "An EntryGroup."]},
                                                            :fullyQualifiedName {:type "string",
                                                                                 :description "Fully qualified name (FQN) of the resource. FQNs take two forms: * For non-regionalized resources: `{SYSTEM}:{PROJECT}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}` * For regionalized resources: `{SYSTEM}:{PROJECT}.{LOCATION_ID}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}` Example for a DPMS table: `dataproc_metastore:PROJECT_ID.LOCATION_ID.INSTANCE_ID.DATABASE_ID.TABLE_ID`"},
                                                            :integratedSystem {:type "string",
                                                                               :readOnly true,
                                                                               :description "Output only. The source system that Data Catalog automatically integrates with, such as BigQuery, Cloud Pub/Sub, or Dataproc Metastore.",
                                                                               :enumDescriptions ["Default unknown system."
                                                                                                  "BigQuery."
                                                                                                  "Cloud Pub/Sub."
                                                                                                  "Dataproc Metastore."],
                                                                               :enum ["INTEGRATED_SYSTEM_UNSPECIFIED"
                                                                                      "BIGQUERY"
                                                                                      "CLOUD_PUBSUB"
                                                                                      "DATAPROC_METASTORE"]},
                                                            :relativeResourceName {:type "string",
                                                                                   :description "The relative name of the resource in URL format. Examples: * `projects/{PROJECT_ID}/locations/{LOCATION_ID}/entryGroups/{ENTRY_GROUP_ID}/entries/{ENTRY_ID}` * `projects/{PROJECT_ID}/tagTemplates/{TAG_TEMPLATE_ID}`"},
                                                            :modifyTime {:format "google-datetime",
                                                                         :type "string",
                                                                         :description "The last modification timestamp of the entry in the source system."},
                                                            :searchResultSubtype {:type "string",
                                                                                  :description "Sub-type of the search result. A dot-delimited full type of the resource. The same type you specify in the `type` search predicate. Examples: `entry.table`, `entry.dataStream`, `tagTemplate`."},
                                                            :userSpecifiedSystem {:description "Custom source system that you can manually integrate Data Catalog with.",
                                                                                  :type "string"},
                                                            :linkedResource {:description "The full name of the Google Cloud resource the entry belongs to. For more information, see [Full Resource Name] (/apis/design/resource_names#full_resource_name). Example: `//bigquery.googleapis.com/projects/PROJECT_ID/datasets/DATASET_ID/tables/TABLE_ID`",
                                                                             :type "string"}},
                                               :type "object",
                                               :description "Result in the response to a search request. Each result captures details of one entry that matches the search."},
 :GoogleCloudDatacatalogV1ListEntryGroupsResponse {:description "Response message for ListEntryGroups.",
                                                   :id "GoogleCloudDatacatalogV1ListEntryGroupsResponse",
                                                   :type "object",
                                                   :properties {:nextPageToken {:type "string",
                                                                                :description "Pagination token to specify in the next call to retrieve the next page of results. Empty if there are no more items."},
                                                                :entryGroups {:type "array",
                                                                              :items {:$ref "GoogleCloudDatacatalogV1EntryGroup"},
                                                                              :description "Entry group details."}}},
 :GetIamPolicyRequest {:description "Request message for `GetIamPolicy` method.",
                       :type "object",
                       :properties {:options {:$ref "GetPolicyOptions",
                                              :description "OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`."}},
                       :id "GetIamPolicyRequest"},
 :GoogleCloudDatacatalogV1FieldTypeEnumTypeEnumValue {:id "GoogleCloudDatacatalogV1FieldTypeEnumTypeEnumValue",
                                                      :properties {:displayName {:description "Required. The display name of the enum value. Must not be an empty string. The name must contain only Unicode letters, numbers (0-9), underscores (_), dashes (-), spaces ( ), and can't start or end with spaces. The maximum length is 200 characters.",
                                                                                 :type "string"}},
                                                      :type "object"},
 :GoogleCloudDatacatalogV1SearchCatalogRequestScope {:id "GoogleCloudDatacatalogV1SearchCatalogRequestScope",
                                                     :properties {:restrictedLocations {:items {:type "string"},
                                                                                        :description "Optional. The list of locations to search within. If empty, all locations are searched. Returns an error if any location in the list isn't one of the [Supported regions](https://cloud.google.com/data-catalog/docs/concepts/regions#supported_regions). If a location is unreachable, its name is returned in the `SearchCatalogResponse.unreachable` field. To get additional information on the error, repeat the search request and set the location name as the value of this parameter.",
                                                                                        :type "array"},
                                                                  :includeOrgIds {:type "array",
                                                                                  :items {:type "string"},
                                                                                  :description "The list of organization IDs to search within. To find your organization ID, follow the steps from [Creating and managing organizations] (/resource-manager/docs/creating-managing-organization)."},
                                                                  :includeGcpPublicDatasets {:description "If `true`, include Google Cloud Platform (GCP) public datasets in search results. By default, they are excluded. See [Google Cloud Public Datasets](/public-datasets) for more information.",
                                                                                             :type "boolean"},
                                                                  :includeProjectIds {:description "The list of project IDs to search within. For more information on the distinction between project names, IDs, and numbers, see [Projects](/docs/overview/#projects).",
                                                                                      :type "array",
                                                                                      :items {:type "string"}},
                                                                  :includePublicTagTemplates {:description "Optional. If `true`, include public tag templates in the search results. By default, they are included only if you have explicit permissions on them to view them. For example, if you are the owner. Other scope fields, for example, ``include_org_ids``, still restrict the returned public tag templates and at least one of them is required.",
                                                                                              :type "boolean"}},
                                                     :type "object",
                                                     :description "The criteria that select the subspace used for query matching."},
 :GoogleCloudDatacatalogV1TagField {:properties {:timestampValue {:description "The value of a tag field with a timestamp type.",
                                                                  :type "string",
                                                                  :format "google-datetime"},
                                                 :enumValue {:description "The value of a tag field with an enum type. This value must be one of the allowed values listed in this enum.",
                                                             :$ref "GoogleCloudDatacatalogV1TagFieldEnumValue"},
                                                 :doubleValue {:type "number",
                                                               :description "The value of a tag field with a double type.",
                                                               :format "double"},
                                                 :richtextValue {:type "string",
                                                                 :description "The value of a tag field with a rich text type. The maximum length is 10 MiB as this value holds HTML descriptions including encoded images. The maximum length of the text without images is 100 KiB."},
                                                 :displayName {:readOnly true,
                                                               :description "Output only. The display name of this field.",
                                                               :type "string"},
                                                 :order {:format "int32",
                                                         :type "integer",
                                                         :readOnly true,
                                                         :description "Output only. The order of this field with respect to other fields in this tag. Can be set by Tag. For example, a higher value can indicate a more important field. The value can be negative. Multiple fields can have the same order, and field orders within a tag don't have to be sequential."},
                                                 :stringValue {:description "The value of a tag field with a string type. The maximum length is 2000 UTF-8 characters.",
                                                               :type "string"},
                                                 :boolValue {:description "The value of a tag field with a boolean type.",
                                                             :type "boolean"}},
                                    :id "GoogleCloudDatacatalogV1TagField",
                                    :description "Contains the value and additional information on a field within a Tag.",
                                    :type "object"},
 :Binding {:type "object",
           :properties {:condition {:$ref "Expr",
                                    :description "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."},
                        :role {:type "string",
                               :description "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."},
                        :members {:type "array",
                                  :items {:type "string"},
                                  :description "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "}},
           :description "Associates `members` with a `role`.",
           :id "Binding"},
 :GoogleCloudDatacatalogV1TableSpec {:properties {:groupedEntry {:readOnly true,
                                                                 :type "string",
                                                                 :description "Output only. If the table is date-sharded, that is, it matches the `[prefix]YYYYMMDD` name pattern, this field is the Data Catalog resource name of the date-sharded grouped entry. For example: `projects/{PROJECT_ID}/locations/{LOCATION}/entrygroups/{ENTRY_GROUP_ID}/entries/{ENTRY_ID}`. Otherwise, `grouped_entry` is empty."}},
                                     :description "Normal BigQuery table specification.",
                                     :id "GoogleCloudDatacatalogV1TableSpec",
                                     :type "object"},
 :GoogleCloudDatacatalogV1UsageStats {:type "object",
                                      :properties {:totalCancellations {:description "The number of cancelled attempts to use the underlying entry.",
                                                                        :format "float",
                                                                        :type "number"},
                                                   :totalCompletions {:type "number",
                                                                      :description "The number of successful uses of the underlying entry.",
                                                                      :format "float"},
                                                   :totalExecutionTimeForCompletionsMillis {:type "number",
                                                                                            :description "Total time spent only on successful uses, in milliseconds.",
                                                                                            :format "float"},
                                                   :totalFailures {:type "number",
                                                                   :format "float",
                                                                   :description "The number of failed attempts to use the underlying entry."}},
                                      :description "Detailed statistics on the entry's usage. Usage statistics have the following limitations: - Only BigQuery tables have them. - They only include BigQuery query jobs. - They might be underestimated because wildcard table references are not yet counted. For more information, see [Querying multiple tables using a wildcard table] (https://cloud.google.com/bigquery/docs/querying-wildcard-tables)",
                                      :id "GoogleCloudDatacatalogV1UsageStats"},
 :Empty {:properties {},
         :description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
         :id "Empty",
         :type "object"},
 :GoogleCloudDatacatalogV1ImportTaxonomiesResponse {:id "GoogleCloudDatacatalogV1ImportTaxonomiesResponse",
                                                    :type "object",
                                                    :properties {:taxonomies {:type "array",
                                                                              :description "Imported taxonomies.",
                                                                              :items {:$ref "GoogleCloudDatacatalogV1Taxonomy"}}},
                                                    :description "Response message for ImportTaxonomies."},
 :GoogleCloudDatacatalogV1Tag {:type "object",
                               :properties {:template {:type "string",
                                                       :description "Required. The resource name of the tag template this tag uses. Example: `projects/{PROJECT_ID}/locations/{LOCATION}/tagTemplates/{TAG_TEMPLATE_ID}` This field cannot be modified after creation."},
                                            :fields {:type "object",
                                                     :description "Required. Maps the ID of a tag field to its value and additional information about that field. Tag template defines valid field IDs. A tag must have at least 1 field and at most 500 fields.",
                                                     :additionalProperties {:$ref "GoogleCloudDatacatalogV1TagField"}},
                                            :column {:description "Resources like entry can have schemas associated with them. This scope allows you to attach tags to an individual column based on that schema. To attach a tag to a nested column, separate column names with a dot (`.`). Example: `column.nested_column`.",
                                                     :type "string"},
                                            :name {:type "string",
                                                   :description "The resource name of the tag in URL format where tag ID is a system-generated identifier. Note: The tag itself might not be stored in the location specified in its name."},
                                            :templateDisplayName {:description "Output only. The display name of the tag template.",
                                                                  :readOnly true,
                                                                  :type "string"}},
                               :description "Tags contain custom metadata and are attached to Data Catalog resources. Tags conform with the specification of their tag template. See [Data Catalog IAM](https://cloud.google.com/data-catalog/docs/concepts/iam) for information on the permissions needed to create or view tags.",
                               :id "GoogleCloudDatacatalogV1Tag"},
 :GoogleCloudDatacatalogV1SearchCatalogRequest {:id "GoogleCloudDatacatalogV1SearchCatalogRequest",
                                                :properties {:orderBy {:type "string",
                                                                       :description "Specifies the order of results. Currently supported case-sensitive values are: * `relevance` that can only be descending * `last_modified_timestamp [asc|desc]` with descending (`desc`) as default If this parameter is omitted, it defaults to the descending `relevance`."},
                                                             :scope {:description "Required. The scope of this search request. The `scope` is invalid if `include_org_ids`, `include_project_ids` are empty AND `include_gcp_public_datasets` is set to `false`. In this case, the request returns an error.",
                                                                     :$ref "GoogleCloudDatacatalogV1SearchCatalogRequestScope"},
                                                             :query {:description "Optional. The query string with a minimum of 3 characters and specific syntax. For more information, see [Data Catalog search syntax](/data-catalog/docs/how-to/search-reference). An empty query string returns all data assets (in the specified scope) that you have access to. A query string can be a simple `xyz` or qualified by predicates: * `name:x` * `column:y` * `description:z`",
                                                                     :type "string"},
                                                             :pageToken {:description "Optional. Pagination token that, if specified, returns the next page of search results. If empty, returns the first page. This token is returned in the SearchCatalogResponse.next_page_token field of the response to a previous SearchCatalogRequest call.",
                                                                         :type "string"},
                                                             :pageSize {:format "int32",
                                                                        :type "integer",
                                                                        :description "Number of results to return in a single search page. Can't be negative or 0, defaults to 10 in this case. The maximum number is 1000. If exceeded, throws an \"invalid argument\" exception."}},
                                                :type "object",
                                                :description "Request message for SearchCatalog."},
 :GoogleCloudDatacatalogV1TagTemplate {:properties {:isPubliclyReadable {:type "boolean",
                                                                         :description "Indicates whether this is a public tag template. Every user has view access to a *public* tag template by default. This means that: * Every user can use this tag template to tag an entry. * If an entry is tagged using the tag template, the tag is always shown in the response to ``ListTags`` called on the entry. * To get the template using the GetTagTemplate method, you need view access either on the project or the organization the tag template resides in but no other permission is needed. * Operations on the tag template other than viewing (for example, editing IAM policies) follow standard IAM structures. Tags created with a public tag template are referred to as public tags. You can search for a public tag by value with a simple search query instead of using a ``tag:`` predicate. Public tag templates may not appear in search results depending on scope, see: include_public_tag_templates Note: If an [IAM domain restriction](https://cloud.google.com/resource-manager/docs/organization-policy/restricting-domains) is configured in the tag template's location, the public access will not be enabled but the simple search for tag values will still work."},
                                                    :fields {:description "Required. Map of tag template field IDs to the settings for the field. This map is an exhaustive list of the allowed fields. The map must contain at least one field and at most 500 fields. The keys to this map are tag template field IDs. The IDs have the following limitations: * Can contain uppercase and lowercase letters, numbers (0-9) and underscores (_). * Must be at least 1 character and at most 64 characters long. * Must start with a letter or underscore.",
                                                             :additionalProperties {:$ref "GoogleCloudDatacatalogV1TagTemplateField"},
                                                             :type "object"},
                                                    :name {:description "The resource name of the tag template in URL format. Note: The tag template itself and its child resources might not be stored in the location specified in its name.",
                                                           :type "string"},
                                                    :displayName {:type "string",
                                                                  :description "Display name for this template. Defaults to an empty string. The name must contain only Unicode letters, numbers (0-9), underscores (_), dashes (-), spaces ( ), and can't start or end with spaces. The maximum length is 200 characters."}},
                                       :description "A tag template defines a tag that can have one or more typed fields. The template is used to create tags that are attached to GCP resources. [Tag template roles] (https://cloud.google.com/iam/docs/understanding-roles#data-catalog-roles) provide permissions to create, edit, and use the template. For example, see the [TagTemplate User] (https://cloud.google.com/data-catalog/docs/how-to/template-user) role that includes a permission to use the tag template to tag resources.",
                                       :id "GoogleCloudDatacatalogV1TagTemplate",
                                       :type "object"},
 :GoogleCloudDatacatalogV1PolicyTag {:properties {:displayName {:type "string",
                                                                :description "Required. User-defined name of this policy tag. The name can't start or end with spaces and must be unique within the parent taxonomy, contain only Unicode letters, numbers, underscores, dashes and spaces, and be at most 200 bytes long when encoded in UTF-8."},
                                                  :parentPolicyTag {:description "Resource name of this policy tag's parent policy tag. If empty, this is a top level tag. If not set, defaults to an empty string. For example, for the \"LatLong\" policy tag in the example above, this field contains the resource name of the \"Geolocation\" policy tag, and, for \"Geolocation\", this field is empty.",
                                                                    :type "string"},
                                                  :name {:type "string",
                                                         :description "Output only. Resource name of this policy tag in the URL format. The policy tag manager generates unique taxonomy IDs and policy tag IDs.",
                                                         :readOnly true},
                                                  :childPolicyTags {:readOnly true,
                                                                    :items {:type "string"},
                                                                    :type "array",
                                                                    :description "Output only. Resource names of child policy tags of this policy tag."},
                                                  :description {:description "Description of this policy tag. If not set, defaults to empty. The description must contain only Unicode characters, tabs, newlines, carriage returns and page breaks, and be at most 2000 bytes long when encoded in UTF-8.",
                                                                :type "string"}},
                                     :type "object",
                                     :id "GoogleCloudDatacatalogV1PolicyTag",
                                     :description "Denotes one policy tag in a taxonomy, for example, SSN. Policy tags can be defined in a hierarchy. For example: ``` + Geolocation + LatLong + City + ZipCode ``` Where the \"Geolocation\" policy tag contains three children."},
 :GoogleCloudDatacatalogV1FieldTypeEnumType {:type "object",
                                             :id "GoogleCloudDatacatalogV1FieldTypeEnumType",
                                             :properties {:allowedValues {:description "The set of allowed values for this enum. This set must not be empty and can include up to 100 allowed values. The display names of the values in this set must not be empty and must be case-insensitively unique within this set. The order of items in this set is preserved. This field can be used to create, remove, and reorder enum values. To rename enum values, use the `RenameTagTemplateFieldEnumValue` method.",
                                                                          :items {:$ref "GoogleCloudDatacatalogV1FieldTypeEnumTypeEnumValue"},
                                                                          :type "array"}}},
 :TestIamPermissionsRequest {:id "TestIamPermissionsRequest",
                             :description "Request message for `TestIamPermissions` method.",
                             :properties {:permissions {:type "array",
                                                        :items {:type "string"},
                                                        :description "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."}},
                             :type "object"},
 :GoogleCloudDatacatalogV1BigQueryDateShardedSpec {:id "GoogleCloudDatacatalogV1BigQueryDateShardedSpec",
                                                   :properties {:dataset {:readOnly true,
                                                                          :type "string",
                                                                          :description "Output only. The Data Catalog resource name of the dataset entry the current table belongs to. For example: `projects/{PROJECT_ID}/locations/{LOCATION}/entrygroups/{ENTRY_GROUP_ID}/entries/{ENTRY_ID}`."},
                                                                :shardCount {:type "string",
                                                                             :description "Output only. Total number of shards.",
                                                                             :format "int64",
                                                                             :readOnly true},
                                                                :tablePrefix {:type "string",
                                                                              :readOnly true,
                                                                              :description "Output only. The table name prefix of the shards. The name of any given shard is `[table_prefix]YYYYMMDD`. For example, for the `MyTable20180101` shard, the `table_prefix` is `MyTable`."}},
                                                   :description "Specification for a group of BigQuery tables with the `[prefix]YYYYMMDD` name pattern. For more information, see [Introduction to partitioned tables] (https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding).",
                                                   :type "object"},
 :GoogleCloudDatacatalogV1DataSourceConnectionSpec {:id "GoogleCloudDatacatalogV1DataSourceConnectionSpec",
                                                    :properties {:bigqueryConnectionSpec {:description "Fields specific to BigQuery connections.",
                                                                                          :$ref "GoogleCloudDatacatalogV1BigQueryConnectionSpec"}},
                                                    :description "Specification that applies to a data source connection. Valid only for entries with the `DATA_SOURCE_CONNECTION` type.",
                                                    :type "object"},
 :GoogleCloudDatacatalogV1RenameTagTemplateFieldRequest {:type "object",
                                                         :description "Request message for RenameTagTemplateField.",
                                                         :properties {:newTagTemplateFieldId {:description "Required. The new ID of this tag template field. For example, `my_new_field`.",
                                                                                              :type "string"}},
                                                         :id "GoogleCloudDatacatalogV1RenameTagTemplateFieldRequest"},
 :TestIamPermissionsResponse {:description "Response message for `TestIamPermissions` method.",
                              :properties {:permissions {:items {:type "string"},
                                                         :description "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                                                         :type "array"}},
                              :id "TestIamPermissionsResponse",
                              :type "object"},
 :GoogleCloudDatacatalogV1InlineSource {:type "object",
                                        :properties {:taxonomies {:type "array",
                                                                  :description "Required. Taxonomies to import.",
                                                                  :items {:$ref "GoogleCloudDatacatalogV1SerializedTaxonomy"}}},
                                        :id "GoogleCloudDatacatalogV1InlineSource",
                                        :description "Inline source containing taxonomies to import."},
 :GoogleCloudDatacatalogV1ReplaceTaxonomyRequest {:description "Request message for ReplaceTaxonomy.",
                                                  :type "object",
                                                  :properties {:serializedTaxonomy {:description "Required. Taxonomy to update along with its child policy tags.",
                                                                                    :$ref "GoogleCloudDatacatalogV1SerializedTaxonomy"}},
                                                  :id "GoogleCloudDatacatalogV1ReplaceTaxonomyRequest"},
 :GoogleCloudDatacatalogV1ColumnSchema {:type "object",
                                        :description "A column within a schema. Columns can be nested inside other columns.",
                                        :id "GoogleCloudDatacatalogV1ColumnSchema",
                                        :properties {:subcolumns {:type "array",
                                                                  :items {:$ref "GoogleCloudDatacatalogV1ColumnSchema"},
                                                                  :description "Optional. Schema of sub-columns. A column can have zero or more sub-columns."},
                                                     :mode {:type "string",
                                                            :description "Optional. A column's mode indicates whether values in this column are required, nullable, or repeated. Only `NULLABLE`, `REQUIRED`, and `REPEATED` values are supported. Default mode is `NULLABLE`."},
                                                     :column {:type "string",
                                                              :description "Required. Name of the column. Must be a UTF-8 string without dots (.). The maximum size is 64 bytes."},
                                                     :type {:description "Required. Type of the column. Must be a UTF-8 string with the maximum size of 128 bytes.",
                                                            :type "string"},
                                                     :description {:type "string",
                                                                   :description "Optional. Description of the column. Default value is an empty string. The description must be a UTF-8 string with the maximum size of 2000 bytes."}}},
 :GoogleCloudDatacatalogV1ListEntriesResponse {:description "Response message for ListEntries.",
                                               :properties {:nextPageToken {:description "Pagination token of the next results page. Empty if there are no more items in results.",
                                                                            :type "string"},
                                                            :entries {:description "Entry details.",
                                                                      :type "array",
                                                                      :items {:$ref "GoogleCloudDatacatalogV1Entry"}}},
                                               :id "GoogleCloudDatacatalogV1ListEntriesResponse",
                                               :type "object"},
 :Expr {:id "Expr",
        :properties {:location {:type "string",
                                :description "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."},
                     :expression {:description "Textual representation of an expression in Common Expression Language syntax.",
                                  :type "string"},
                     :description {:description "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
                                   :type "string"},
                     :title {:description "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
                             :type "string"}},
        :description "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
        :type "object"},
 :GoogleCloudDatacatalogV1SearchCatalogResponse {:id "GoogleCloudDatacatalogV1SearchCatalogResponse",
                                                 :type "object",
                                                 :description "Response message for SearchCatalog.",
                                                 :properties {:results {:items {:$ref "GoogleCloudDatacatalogV1SearchCatalogResult"},
                                                                        :type "array",
                                                                        :description "Search results."},
                                                              :nextPageToken {:description "Pagination token that can be used in subsequent calls to retrieve the next page of results.",
                                                                              :type "string"},
                                                              :unreachable {:items {:type "string"},
                                                                            :type "array",
                                                                            :description "Unreachable locations. Search results don't include data from those locations. To get additional information on an error, repeat the search request and restrict it to specific locations by setting the `SearchCatalogRequest.scope.restricted_locations` parameter."}}},
 :GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec {:id "GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec",
                                                          :description "Specification for the BigQuery connection to a Cloud SQL instance.",
                                                          :properties {:type {:description "Type of the Cloud SQL database.",
                                                                              :type "string",
                                                                              :enum ["DATABASE_TYPE_UNSPECIFIED"
                                                                                     "POSTGRES"
                                                                                     "MYSQL"],
                                                                              :enumDescriptions ["Unspecified database type."
                                                                                                 "Cloud SQL for PostgreSQL."
                                                                                                 "Cloud SQL for MySQL."]},
                                                                       :instanceId {:description "Cloud SQL instance ID in the format of `project:location:instance`.",
                                                                                    :type "string"},
                                                                       :database {:type "string",
                                                                                  :description "Database name."}},
                                                          :type "object"},
 :GoogleCloudDatacatalogV1ListTaxonomiesResponse {:type "object",
                                                  :id "GoogleCloudDatacatalogV1ListTaxonomiesResponse",
                                                  :description "Response message for ListTaxonomies.",
                                                  :properties {:nextPageToken {:type "string",
                                                                               :description "Pagination token of the next results page. Empty if there are no more results in the list."},
                                                               :taxonomies {:type "array",
                                                                            :items {:$ref "GoogleCloudDatacatalogV1Taxonomy"},
                                                                            :description "Taxonomies that the project contains."}}},
 :GoogleCloudDatacatalogV1TagFieldEnumValue {:properties {:displayName {:type "string",
                                                                        :description "The display name of the enum value."}},
                                             :id "GoogleCloudDatacatalogV1TagFieldEnumValue",
                                             :type "object",
                                             :description "An enum value."},
 :GoogleCloudDatacatalogV1ViewSpec {:properties {:viewQuery {:description "Output only. The query that defines the table view.",
                                                             :type "string",
                                                             :readOnly true}},
                                    :description "Table view specification.",
                                    :id "GoogleCloudDatacatalogV1ViewSpec",
                                    :type "object"},
 :GoogleCloudDatacatalogV1Schema {:id "GoogleCloudDatacatalogV1Schema",
                                  :properties {:columns {:type "array",
                                                         :description "The unified GoogleSQL-like schema of columns. The overall maximum number of columns and nested columns is 10,000. The maximum nested depth is 15 levels.",
                                                         :items {:$ref "GoogleCloudDatacatalogV1ColumnSchema"}}},
                                  :type "object",
                                  :description "Represents a schema, for example, a BigQuery, GoogleSQL, or Avro schema."},
 :Policy {:description "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
          :properties {:version {:format "int32",
                                 :description "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                                 :type "integer"},
                       :etag {:description "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                              :format "byte",
                              :type "string"},
                       :bindings {:items {:$ref "Binding"},
                                  :type "array",
                                  :description "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."}},
          :type "object",
          :id "Policy"},
 :GoogleCloudDatacatalogV1ListTagsResponse {:id "GoogleCloudDatacatalogV1ListTagsResponse",
                                            :type "object",
                                            :description "Response message for ListTags.",
                                            :properties {:tags {:items {:$ref "GoogleCloudDatacatalogV1Tag"},
                                                                :type "array",
                                                                :description "Tag details."},
                                                         :nextPageToken {:description "Pagination token of the next results page. Empty if there are no more items in results.",
                                                                         :type "string"}}},
 :GoogleCloudDatacatalogV1RoutineSpec {:type "object",
                                       :id "GoogleCloudDatacatalogV1RoutineSpec",
                                       :description "Specification that applies to a routine. Valid only for entries with the `ROUTINE` type.",
                                       :properties {:routineArguments {:items {:$ref "GoogleCloudDatacatalogV1RoutineSpecArgument"},
                                                                       :description "Arguments of the routine.",
                                                                       :type "array"},
                                                    :returnType {:description "Return type of the argument. The exact value depends on the source system and the language.",
                                                                 :type "string"},
                                                    :bigqueryRoutineSpec {:description "Fields specific for BigQuery routines.",
                                                                          :$ref "GoogleCloudDatacatalogV1BigQueryRoutineSpec"},
                                                    :language {:description "The language the routine is written in. The exact value depends on the source system. For BigQuery routines, possible values are: * `SQL` * `JAVASCRIPT`",
                                                               :type "string"},
                                                    :routineType {:description "The type of the routine.",
                                                                  :type "string",
                                                                  :enum ["ROUTINE_TYPE_UNSPECIFIED"
                                                                         "SCALAR_FUNCTION"
                                                                         "PROCEDURE"],
                                                                  :enumDescriptions ["Unspecified type."
                                                                                     "Non-builtin permanent scalar function."
                                                                                     "Stored procedure."]},
                                                    :definitionBody {:type "string",
                                                                     :description "The body of the routine."}}}}
