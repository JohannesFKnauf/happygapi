{:ApplyParametersRequest {:type "object",
                          :properties {:applyAll {:type "boolean",
                                                  :description "Whether to apply instance-level parameter group to all nodes. If set to true, users are restricted from specifying individual nodes, and `ApplyParameters` updates all nodes within the instance."},
                                       :nodeIds {:type "array",
                                                 :description "Nodes to which the instance-level parameter group is applied.",
                                                 :items {:type "string"}}},
                          :id "ApplyParametersRequest",
                          :description "Request for ApplyParameters."},
 :GoogleCloudSaasacceleratorManagementProvidersV1SloMetadata {:id "GoogleCloudSaasacceleratorManagementProvidersV1SloMetadata",
                                                              :properties {:nodes {:items {:$ref "GoogleCloudSaasacceleratorManagementProvidersV1NodeSloMetadata"},
                                                                                   :type "array",
                                                                                   :description "Optional. List of nodes. Some producers need to use per-node metadata to calculate SLO. This field allows such producers to publish per-node SLO meta data, which will be consumed by SSA Eligibility Exporter and published in the form of per node metric to Monarch."},
                                                                           :perSliEligibility {:$ref "GoogleCloudSaasacceleratorManagementProvidersV1PerSliSloEligibility",
                                                                                               :description "Optional. Multiple per-instance SLI eligibilities which apply for individual SLIs."},
                                                                           :tier {:type "string",
                                                                                  :description "Name of the SLO tier the Instance belongs to. This name will be expected to match the tiers specified in the service SLO configuration. Field is mandatory and must not be empty."}},
                                                              :type "object",
                                                              :description "SloMetadata contains resources required for proper SLO classification of the instance."},
 :MaintenanceWindow {:type "object",
                     :id "MaintenanceWindow",
                     :properties {:dailyCycle {:description "Daily cycle.",
                                               :$ref "DailyCycle"},
                                  :weeklyCycle {:$ref "WeeklyCycle",
                                                :description "Weekly cycle."}},
                     :description "MaintenanceWindow definition."},
 :Operation {:properties {:error {:description "The error result of the operation in case of failure or cancellation.",
                                  :$ref "Status"},
                          :done {:description "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                                 :type "boolean"},
                          :metadata {:type "object",
                                     :additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                            :type "any"},
                                     :description "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."},
                          :name {:type "string",
                                 :description "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."},
                          :response {:type "object",
                                     :additionalProperties {:type "any",
                                                            :description "Properties of the object. Contains field @type with type URL."},
                                     :description "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."}},
             :id "Operation",
             :type "object",
             :description "This resource represents a long-running operation that is the result of a network API call."},
 :ZoneMetadata {:type "object", :id "ZoneMetadata", :properties {}},
 :Schedule {:description "Configure the schedule.",
            :type "object",
            :id "Schedule",
            :properties {:startTime {:description "Time within the window to start the operations.",
                                     :$ref "TimeOfDay"},
                         :duration {:description "Output only. Duration of the time window, set by service producer.",
                                    :format "google-duration",
                                    :type "string"},
                         :day {:enumDescriptions ["The day of the week is unspecified."
                                                  "Monday"
                                                  "Tuesday"
                                                  "Wednesday"
                                                  "Thursday"
                                                  "Friday"
                                                  "Saturday"
                                                  "Sunday"],
                               :enum ["DAY_OF_WEEK_UNSPECIFIED"
                                      "MONDAY"
                                      "TUESDAY"
                                      "WEDNESDAY"
                                      "THURSDAY"
                                      "FRIDAY"
                                      "SATURDAY"
                                      "SUNDAY"],
                               :type "string",
                               :description "Allows to define schedule that runs specified day of the week."}}},
 :GoogleCloudSaasacceleratorManagementProvidersV1PerSliSloEligibility {:description "PerSliSloEligibility is a mapping from an SLI name to eligibility.",
                                                                       :id "GoogleCloudSaasacceleratorManagementProvidersV1PerSliSloEligibility",
                                                                       :properties {:eligibilities {:additionalProperties {:$ref "GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility"},
                                                                                                    :type "object",
                                                                                                    :description "An entry in the eligibilities map specifies an eligibility for a particular SLI for the given instance. The SLI key in the name must be a valid SLI name specified in the Eligibility Exporter binary flags otherwise an error will be emitted by Eligibility Exporter and the oncaller will be alerted. If an SLI has been defined in the binary flags but the eligibilities map does not contain it, the corresponding SLI time series will not be emitted by the Eligibility Exporter. This ensures a smooth rollout and compatibility between the data produced by different versions of the Eligibility Exporters. If eligibilities map contains a key for an SLI which has not been declared in the binary flags, there will be an error message emitted in the Eligibility Exporter log and the metric for the SLI in question will not be emitted."}},
                                                                       :type "object"},
 :CancelOperationRequest {:id "CancelOperationRequest",
                          :description "The request message for Operations.CancelOperation.",
                          :properties {},
                          :type "object"},
 :GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSchedule {:properties {:endTime {:format "google-datetime",
                                                                                             :type "string",
                                                                                             :description "The scheduled end time for the maintenance."},
                                                                                   :startTime {:format "google-datetime",
                                                                                               :type "string",
                                                                                               :description "The scheduled start time for the maintenance."},
                                                                                   :scheduleDeadlineTime {:type "string",
                                                                                                          :description "schedule_deadline_time is the time deadline any schedule start time cannot go beyond, including reschedule. It's normally the initial schedule start time plus maintenance window length (1 day or 1 week). Maintenance cannot be scheduled to start beyond this deadline.",
                                                                                                          :format "google-datetime"},
                                                                                   :rolloutManagementPolicy {:type "string",
                                                                                                             :description "The rollout management policy this maintenance schedule is associated with. When doing reschedule update request, the reschedule should be against this given policy."},
                                                                                   :canReschedule {:type "boolean",
                                                                                                   :description "This field is deprecated, and will be always set to true since reschedule can happen multiple times now. This field should not be removed until all service producers remove this for their customers."}},
                                                                      :id "GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSchedule",
                                                                      :type "object",
                                                                      :description "Maintenance schedule which is exposed to customer and potentially end user, indicating published upcoming future maintenance schedule"},
 :UpdatePolicy {:properties {:channel {:enum ["UPDATE_CHANNEL_UNSPECIFIED"
                                              "EARLIER"
                                              "LATER"],
                                       :enumDescriptions ["Unspecified channel."
                                                          "Early channel within a customer project."
                                                          "Later channel within a customer project."],
                                       :description "Optional. Relative scheduling channel applied to resource.",
                                       :type "string"},
                             :window {:$ref "MaintenanceWindow",
                                      :description "Optional. Maintenance window that is applied to resources covered by this policy."},
                             :denyMaintenancePeriods {:items {:$ref "DenyMaintenancePeriod"},
                                                      :description "Deny Maintenance Period that is applied to resource to indicate when maintenance is forbidden. User can specify zero or more non-overlapping deny periods. Maximum number of deny_maintenance_periods expected is one.",
                                                      :type "array"}},
                :description "Maintenance policy applicable to instance updates.",
                :id "UpdatePolicy",
                :type "object"},
 :Empty {:description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
         :type "object",
         :properties {},
         :id "Empty"},
 :WeeklyCycle {:id "WeeklyCycle",
               :type "object",
               :description "Time window specified for weekly operations.",
               :properties {:schedule {:type "array",
                                       :items {:$ref "Schedule"},
                                       :description "User can specify multiple windows in a week. Minimum of 1 window."}}},
 :MaintenancePolicy {:properties {:description {:description "Optional. Description of what this policy is for. Create/Update methods return INVALID_ARGUMENT if the length is greater than 512.",
                                                :type "string"},
                                  :createTime {:type "string",
                                               :description "Output only. The time when the resource was created.",
                                               :format "google-datetime"},
                                  :name {:type "string",
                                         :description "Required. MaintenancePolicy name using the form: `projects/{project_id}/locations/{location_id}/maintenancePolicies/{maintenance_policy_id}` where {project_id} refers to a GCP consumer project ID, {location_id} refers to a GCP region/zone, {maintenance_policy_id} must be 1-63 characters long and match the regular expression `[a-z0-9]([-a-z0-9]*[a-z0-9])?`."},
                                  :labels {:type "object",
                                           :additionalProperties {:type "string"},
                                           :description "Optional. Resource labels to represent user provided metadata. Each label is a key-value pair, where both the key and the value are arbitrary strings provided by the user."},
                                  :updatePolicy {:$ref "UpdatePolicy",
                                                 :description "Maintenance policy applicable to instance update."},
                                  :state {:enumDescriptions ["Unspecified state."
                                                             "Resource is ready to be used."
                                                             "Resource is being deleted. It can no longer be attached to instances."],
                                          :enum ["STATE_UNSPECIFIED"
                                                 "READY"
                                                 "DELETING"],
                                          :type "string",
                                          :description "Optional. The state of the policy."},
                                  :updateTime {:type "string",
                                               :description "Output only. The time when the resource was updated.",
                                               :format "google-datetime"}},
                     :type "object",
                     :description "Defines policies to service maintenance events.",
                     :id "MaintenancePolicy"},
 :GoogleCloudMemcacheV1LocationMetadata {:id "GoogleCloudMemcacheV1LocationMetadata",
                                         :description "Metadata for the given google.cloud.location.Location.",
                                         :properties {:availableZones {:readOnly true,
                                                                       :description "Output only. The set of available zones in the location. The map is keyed by the lowercase ID of each zone, as defined by GCE. These keys can be specified in the `zones` field when creating a Memcached instance.",
                                                                       :type "object",
                                                                       :additionalProperties {:$ref "GoogleCloudMemcacheV1ZoneMetadata"}}},
                                         :type "object"},
 :DenyMaintenancePeriod {:description "DenyMaintenancePeriod definition. Maintenance is forbidden within the deny period. The start_date must be less than the end_date.",
                         :id "DenyMaintenancePeriod",
                         :properties {:startDate {:description "Deny period start date. This can be: * A full date, with non-zero year, month and day values. * A month and day value, with a zero year. Allows recurring deny periods each year. Date matching this period will have to be the same or after the start.",
                                                  :$ref "Date"},
                                      :endDate {:$ref "Date",
                                                :description "Deny period end date. This can be: * A full date, with non-zero year, month and day values. * A month and day value, with a zero year. Allows recurring deny periods each year. Date matching this period will have to be before the end."},
                                      :time {:description "Time in UTC when the Blackout period starts on start_date and ends on end_date. This can be: * Full time. * All zeros for 00:00:00 UTC",
                                             :$ref "TimeOfDay"}},
                         :type "object"},
 :ListLocationsResponse {:id "ListLocationsResponse",
                         :description "The response message for Locations.ListLocations.",
                         :properties {:nextPageToken {:type "string",
                                                      :description "The standard List next-page token."},
                                      :locations {:items {:$ref "Location"},
                                                  :type "array",
                                                  :description "A list of locations that matches the specified filter in the request."}},
                         :type "object"},
 :GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSettings {:id "GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSettings",
                                                                      :description "Maintenance settings associated with instance. Allows service producers and end users to assign settings that controls maintenance on this instance.",
                                                                      :type "object",
                                                                      :properties {:exclude {:type "boolean",
                                                                                             :description "Optional. Exclude instance from maintenance. When true, rollout service will not attempt maintenance on the instance. Rollout service will include the instance in reported rollout progress as not attempted."},
                                                                                   :maintenancePolicies {:additionalProperties {:$ref "MaintenancePolicy"},
                                                                                                         :type "object",
                                                                                                         :description "Optional. The MaintenancePolicies that have been attached to the instance. The key must be of the type name of the oneof policy name defined in MaintenancePolicy, and the embedded policy must define the same policy type. For complete details of MaintenancePolicy, please refer to go/cloud-saas-mw-ug. If only the name is needed (like in the deprecated Instance.maintenance_policy_names field) then only populate MaintenancePolicy.name."},
                                                                                   :isRollback {:type "boolean",
                                                                                                :description "Optional. If the update call is triggered from rollback, set the value as true."}}},
 :GoogleCloudMemcacheV1ZoneMetadata {:id "GoogleCloudMemcacheV1ZoneMetadata",
                                     :type "object",
                                     :properties {}},
 :GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility {:type "object",
                                                                 :description "SloEligibility is a tuple containing eligibility value: true if an instance is eligible for SLO calculation or false if it should be excluded from all SLO-related calculations along with a user-defined reason.",
                                                                 :id "GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility",
                                                                 :properties {:reason {:type "string",
                                                                                       :description "User-defined reason for the current value of instance eligibility. Usually, this can be directly mapped to the internal state. An empty reason is allowed."},
                                                                              :eligible {:type "boolean",
                                                                                         :description "Whether an instance is eligible or ineligible."}}},
 :GoogleCloudSaasacceleratorManagementProvidersV1NodeSloMetadata {:properties {:perSliEligibility {:description "If present, this will override eligibility for the node coming from instance or exclusions for specified SLIs.",
                                                                                                   :$ref "GoogleCloudSaasacceleratorManagementProvidersV1PerSliSloEligibility"},
                                                                               :location {:description "The location of the node, if different from instance location.",
                                                                                          :type "string"},
                                                                               :nodeId {:description "The id of the node. This should be equal to SaasInstanceNode.node_id.",
                                                                                        :type "string"}},
                                                                  :description "Node information for custom per-node SLO implementations. SSA does not support per-node SLO, but producers can populate per-node information in SloMetadata for custom precomputations. SSA Eligibility Exporter will emit per-node metric based on this information.",
                                                                  :type "object",
                                                                  :id "GoogleCloudSaasacceleratorManagementProvidersV1NodeSloMetadata"},
 :Date {:properties {:year {:type "integer",
                            :description "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
                            :format "int32"},
                     :day {:description "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
                           :format "int32",
                           :type "integer"},
                     :month {:description "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
                             :format "int32",
                             :type "integer"}},
        :description "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values * A month and day value, with a zero year, such as an anniversary * A year on its own, with zero month and day values * A year and month value, with a zero day, such as a credit card expiration date Related types are google.type.TimeOfDay and `google.protobuf.Timestamp`.",
        :type "object",
        :id "Date"},
 :Instance {:description "A Memorystore for Memcached instance",
            :type "object",
            :properties {:labels {:additionalProperties {:type "string"},
                                  :type "object",
                                  :description "Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources"},
                         :nodeConfig {:$ref "NodeConfig",
                                      :description "Required. Configuration for Memcached nodes."},
                         :displayName {:type "string",
                                       :description "User provided name for the instance, which is only used for display purposes. Cannot be more than 80 characters."},
                         :name {:description "Required. Unique name of the resource in this scope including project and location using the form: `projects/{project_id}/locations/{location_id}/instances/{instance_id}` Note: Memcached instances are managed and addressed at the regional level so `location_id` here refers to a Google Cloud region; however, users may choose which zones Memcached nodes should be provisioned in within an instance. Refer to zones field for more details.",
                                :type "string"},
                         :createTime {:description "Output only. The time the instance was created.",
                                      :readOnly true,
                                      :type "string",
                                      :format "google-datetime"},
                         :state {:enumDescriptions ["State not set."
                                                    "Memcached instance is being created."
                                                    "Memcached instance has been created and ready to be used."
                                                    "Memcached instance is updating configuration such as maintenance policy and schedule."
                                                    "Memcached instance is being deleted."
                                                    "Memcached instance is going through maintenance, e.g. data plane rollout."],
                                 :type "string",
                                 :readOnly true,
                                 :description "Output only. The state of this Memcached instance.",
                                 :enum ["STATE_UNSPECIFIED"
                                        "CREATING"
                                        "READY"
                                        "UPDATING"
                                        "DELETING"
                                        "PERFORMING_MAINTENANCE"]},
                         :updateTime {:readOnly true,
                                      :description "Output only. The time the instance was updated.",
                                      :format "google-datetime",
                                      :type "string"},
                         :memcacheFullVersion {:description "Output only. The full version of memcached server running on this instance. System automatically determines the full memcached version for an instance based on the input MemcacheVersion. The full version format will be \"memcached-1.5.16\".",
                                               :type "string",
                                               :readOnly true},
                         :memcacheVersion {:enumDescriptions [""
                                                              "Memcached 1.5 version."],
                                           :type "string",
                                           :description "The major version of Memcached software. If not provided, latest supported version will be used. Currently the latest supported major version is `MEMCACHE_1_5`. The minor version will be automatically determined by our system based on the latest supported minor version.",
                                           :enum ["MEMCACHE_VERSION_UNSPECIFIED"
                                                  "MEMCACHE_1_5"]},
                         :zones {:description "Zones in which Memcached nodes should be provisioned. Memcached nodes will be equally distributed across these zones. If not provided, the service will by default create nodes in all zones in the region for the instance.",
                                 :items {:type "string"},
                                 :type "array"},
                         :memcacheNodes {:description "Output only. List of Memcached nodes. Refer to Node message for more details.",
                                         :readOnly true,
                                         :items {:$ref "Node"},
                                         :type "array"},
                         :discoveryEndpoint {:type "string",
                                             :description "Output only. Endpoint for the Discovery API.",
                                             :readOnly true},
                         :nodeCount {:format "int32",
                                     :description "Required. Number of nodes in the Memcached instance.",
                                     :type "integer"},
                         :parameters {:$ref "MemcacheParameters",
                                      :description "Optional: User defined parameters to apply to the memcached process on each node."},
                         :instanceMessages {:description "List of messages that describe the current state of the Memcached instance.",
                                            :items {:$ref "InstanceMessage"},
                                            :type "array"},
                         :authorizedNetwork {:type "string",
                                             :description "The full name of the Google Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to which the instance is connected. If left unspecified, the `default` network will be used."}},
            :id "Instance"},
 :GoogleCloudMemcacheV1OperationMetadata {:properties {:apiVersion {:readOnly true,
                                                                    :type "string",
                                                                    :description "Output only. API version used to start the operation."},
                                                       :statusDetail {:type "string",
                                                                      :readOnly true,
                                                                      :description "Output only. Human-readable status of the operation, if any."},
                                                       :createTime {:readOnly true,
                                                                    :type "string",
                                                                    :description "Output only. Time when the operation was created.",
                                                                    :format "google-datetime"},
                                                       :target {:readOnly true,
                                                                :type "string",
                                                                :description "Output only. Server-defined resource path for the target of the operation."},
                                                       :cancelRequested {:type "boolean",
                                                                         :readOnly true,
                                                                         :description "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."},
                                                       :verb {:description "Output only. Name of the verb executed by the operation.",
                                                              :type "string",
                                                              :readOnly true},
                                                       :endTime {:description "Output only. Time when the operation finished running.",
                                                                 :type "string",
                                                                 :readOnly true,
                                                                 :format "google-datetime"}},
                                          :id "GoogleCloudMemcacheV1OperationMetadata",
                                          :description "Represents the metadata of a long-running operation.",
                                          :type "object"},
 :InstanceMessage {:properties {:message {:type "string",
                                          :description "Message on memcached instance which will be exposed to users."},
                                :code {:type "string",
                                       :description "A code that correspond to one type of user-facing message.",
                                       :enum ["CODE_UNSPECIFIED"
                                              "ZONE_DISTRIBUTION_UNBALANCED"],
                                       :enumDescriptions ["Message Code not set."
                                                          "Memcached nodes are distributed unevenly."]}},
                   :type "object",
                   :id "InstanceMessage"},
 :MemcacheParameters {:id "MemcacheParameters",
                      :description "The unique ID associated with this set of parameters. Users can use this id to determine if the parameters associated with the instance differ from the parameters associated with the nodes. A discrepancy between parameter ids can inform users that they may need to take action to apply parameters on nodes.",
                      :properties {:id {:description "Output only.",
                                        :readOnly true,
                                        :type "string"},
                                   :params {:type "object",
                                            :additionalProperties {:type "string"},
                                            :description "User defined set of parameters to use in the memcached process."}},
                      :type "object"},
 :Node {:id "Node",
        :properties {:parameters {:$ref "MemcacheParameters",
                                  :description "User defined parameters currently applied to the node."},
                     :host {:type "string",
                            :readOnly true,
                            :description "Output only. Hostname or IP address of the Memcached node used by the clients to connect to the Memcached server on this node."},
                     :state {:enum ["STATE_UNSPECIFIED"
                                    "CREATING"
                                    "READY"
                                    "DELETING"
                                    "UPDATING"],
                             :enumDescriptions ["Node state is not set."
                                                "Node is being created."
                                                "Node has been created and ready to be used."
                                                "Node is being deleted."
                                                "Node is being updated."],
                             :description "Output only. Current state of the Memcached node.",
                             :type "string",
                             :readOnly true},
                     :port {:readOnly true,
                            :description "Output only. The port number of the Memcached server on this node.",
                            :type "integer",
                            :format "int32"},
                     :nodeId {:description "Output only. Identifier of the Memcached node. The node id does not include project or location like the Memcached instance name.",
                              :type "string",
                              :readOnly true},
                     :zone {:readOnly true,
                            :description "Output only. Location (GCP Zone) for the Memcached node.",
                            :type "string"}},
        :type "object"},
 :OperationMetadata {:type "object",
                     :properties {:verb {:readOnly true,
                                         :type "string",
                                         :description "Output only. Name of the verb executed by the operation."},
                                  :createTime {:readOnly true,
                                               :type "string",
                                               :format "google-datetime",
                                               :description "Output only. Time when the operation was created."},
                                  :endTime {:readOnly true,
                                            :format "google-datetime",
                                            :type "string",
                                            :description "Output only. Time when the operation finished running."},
                                  :cancelRequested {:type "boolean",
                                                    :description "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                                                    :readOnly true},
                                  :statusDetail {:type "string",
                                                 :readOnly true,
                                                 :description "Output only. Human-readable status of the operation, if any."},
                                  :target {:description "Output only. Server-defined resource path for the target of the operation.",
                                           :type "string",
                                           :readOnly true},
                                  :apiVersion {:type "string",
                                               :description "Output only. API version used to start the operation.",
                                               :readOnly true}},
                     :description "Represents the metadata of a long-running operation.",
                     :id "OperationMetadata"},
 :UpdateParametersRequest {:description "Request for UpdateParameters.",
                           :type "object",
                           :id "UpdateParametersRequest",
                           :properties {:updateMask {:format "google-fieldmask",
                                                     :type "string",
                                                     :description "Required. Mask of fields to update."},
                                        :parameters {:$ref "MemcacheParameters",
                                                     :description "The parameters to apply to the instance."}}},
 :LocationMetadata {:type "object",
                    :properties {:availableZones {:description "Output only. The set of available zones in the location. The map is keyed by the lowercase ID of each zone, as defined by GCE. These keys can be specified in the `zones` field when creating a Memcached instance.",
                                                  :additionalProperties {:$ref "ZoneMetadata"},
                                                  :type "object",
                                                  :readOnly true}},
                    :description "Metadata for the given google.cloud.location.Location.",
                    :id "LocationMetadata"},
 :GoogleCloudSaasacceleratorManagementProvidersV1ProvisionedResource {:properties {:resourceType {:type "string",
                                                                                                  :description "Type of the resource. This can be either a GCP resource or a custom one (e.g. another cloud provider's VM). For GCP compute resources use singular form of the names listed in GCP compute API documentation (https://cloud.google.com/compute/docs/reference/rest/v1/), prefixed with 'compute-', for example: 'compute-instance', 'compute-disk', 'compute-autoscaler'."},
                                                                                   :resourceUrl {:type "string",
                                                                                                 :description "URL identifying the resource, e.g. \"https://www.googleapis.com/compute/v1/projects/...)\"."}},
                                                                      :id "GoogleCloudSaasacceleratorManagementProvidersV1ProvisionedResource",
                                                                      :description "Describes provisioned dataplane resources.",
                                                                      :type "object"},
 :ListOperationsResponse {:properties {:nextPageToken {:description "The standard List next-page token.",
                                                       :type "string"},
                                       :operations {:type "array",
                                                    :items {:$ref "Operation"},
                                                    :description "A list of operations that matches the specified filter in the request."}},
                          :description "The response message for Operations.ListOperations.",
                          :type "object",
                          :id "ListOperationsResponse"},
 :DailyCycle {:description "Time window specified for daily operations.",
              :properties {:startTime {:description "Time within the day to start the operations.",
                                       :$ref "TimeOfDay"},
                           :duration {:format "google-duration",
                                      :description "Output only. Duration of the time window, set by service producer.",
                                      :type "string"}},
              :id "DailyCycle",
              :type "object"},
 :Location {:id "Location",
            :description "A resource that represents Google Cloud Platform location.",
            :properties {:labels {:additionalProperties {:type "string"},
                                  :description "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
                                  :type "object"},
                         :name {:description "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
                                :type "string"},
                         :displayName {:description "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
                                       :type "string"},
                         :metadata {:type "object",
                                    :description "Service-specific metadata. For example the available capacity at the given location.",
                                    :additionalProperties {:type "any",
                                                           :description "Properties of the object. Contains field @type with type URL."}},
                         :locationId {:type "string",
                                      :description "The canonical id for this location. For example: `\"us-east1\"`."}},
            :type "object"},
 :GoogleCloudSaasacceleratorManagementProvidersV1Instance {:id "GoogleCloudSaasacceleratorManagementProvidersV1Instance",
                                                           :properties {:sloMetadata {:description "Output only. SLO metadata for instance classification in the Standardized dataplane SLO platform. See go/cloud-ssa-standard-slo for feature description.",
                                                                                      :readOnly true,
                                                                                      :$ref "GoogleCloudSaasacceleratorManagementProvidersV1SloMetadata"},
                                                                        :labels {:type "object",
                                                                                 :additionalProperties {:type "string"},
                                                                                 :description "Optional. Resource labels to represent user provided metadata. Each label is a key-value pair, where both the key and the value are arbitrary strings provided by the user."},
                                                                        :name {:type "string",
                                                                               :description "Unique name of the resource. It uses the form: `projects/{project_id|project_number}/locations/{location_id}/instances/{instance_id}` Note: Either project_id or project_number can be used, but keep it consistent with other APIs (e.g. RescheduleUpdate)"},
                                                                        :createTime {:format "google-datetime",
                                                                                     :description "Output only. Timestamp when the resource was created.",
                                                                                     :type "string",
                                                                                     :readOnly true},
                                                                        :maintenancePolicyNames {:description "Deprecated. The MaintenancePolicies that have been attached to the instance. The key must be of the type name of the oneof policy name defined in MaintenancePolicy, and the referenced policy must define the same policy type. For complete details of MaintenancePolicy, please refer to go/cloud-saas-mw-ug.",
                                                                                                 :additionalProperties {:type "string"},
                                                                                                 :type "object"},
                                                                        :state {:type "string",
                                                                                :description "Output only. Current lifecycle state of the resource (e.g. if it's being created or ready to use).",
                                                                                :readOnly true,
                                                                                :enumDescriptions ["Unspecified state."
                                                                                                   "Instance is being created."
                                                                                                   "Instance has been created and is ready to use."
                                                                                                   "Instance is being updated."
                                                                                                   "Instance is unheathy and under repair."
                                                                                                   "Instance is being deleted."
                                                                                                   "Instance encountered an error and is in indeterministic state."],
                                                                                :enum ["STATE_UNSPECIFIED"
                                                                                       "CREATING"
                                                                                       "READY"
                                                                                       "UPDATING"
                                                                                       "REPAIRING"
                                                                                       "DELETING"
                                                                                       "ERROR"]},
                                                                        :updateTime {:type "string",
                                                                                     :description "Output only. Timestamp when the resource was last modified.",
                                                                                     :format "google-datetime",
                                                                                     :readOnly true},
                                                                        :slmInstanceTemplate {:description "Link to the SLM instance template. Only populated when updating SLM instances via SSA's Actuation service adaptor. Service producers with custom control plane (e.g. Cloud SQL) doesn't need to populate this field. Instead they should use software_versions.",
                                                                                              :type "string"},
                                                                        :softwareVersions {:description "Software versions that are used to deploy this instance. This can be mutated by rollout services.",
                                                                                           :additionalProperties {:type "string"},
                                                                                           :type "object"},
                                                                        :maintenanceSchedules {:description "The MaintenanceSchedule contains the scheduling information of published maintenance schedule with same key as software_versions.",
                                                                                               :additionalProperties {:$ref "GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSchedule"},
                                                                                               :type "object"},
                                                                        :producerMetadata {:description "Output only. Custom string attributes used primarily to expose producer-specific information in monitoring dashboards. See go/get-instance-metadata.",
                                                                                           :additionalProperties {:type "string"},
                                                                                           :readOnly true,
                                                                                           :type "object"},
                                                                        :provisionedResources {:items {:$ref "GoogleCloudSaasacceleratorManagementProvidersV1ProvisionedResource"},
                                                                                               :description "Output only. The list of data plane resources provisioned for this instance, e.g. compute VMs. See go/get-instance-metadata.",
                                                                                               :type "array",
                                                                                               :readOnly true},
                                                                        :maintenanceSettings {:description "Optional. The MaintenanceSettings associated with instance.",
                                                                                              :$ref "GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSettings"},
                                                                        :consumerDefinedName {:description "consumer_defined_name is the name that is set by the consumer. On the other hand Name field represents system-assigned id of an instance so consumers are not necessarily aware of it. consumer_defined_name is used for notification/UI purposes for consumer to recognize their instances.",
                                                                                              :type "string"},
                                                                        :tenantProjectId {:readOnly true,
                                                                                          :description "Output only. ID of the associated GCP tenant project. See go/get-instance-metadata.",
                                                                                          :type "string"}},
                                                           :type "object"},
 :NodeConfig {:description "Configuration for a Memcached Node.",
              :properties {:cpuCount {:type "integer",
                                      :format "int32",
                                      :description "Required. Number of cpus per Memcached node."},
                           :memorySizeMb {:format "int32",
                                          :type "integer",
                                          :description "Required. Memory size in MiB for each Memcached node."}},
              :type "object",
              :id "NodeConfig"},
 :ListInstancesResponse {:properties {:unreachable {:items {:type "string"},
                                                    :type "array",
                                                    :description "Locations that could not be reached."},
                                      :instances {:type "array",
                                                  :items {:$ref "Instance"},
                                                  :description "A list of Memcached instances in the project in the specified location, or across all locations. If the `location_id` in the parent field of the request is \"-\", all regions available to the project are queried, and the results aggregated."},
                                      :nextPageToken {:type "string",
                                                      :description "Token to retrieve the next page of results, or empty if there are no more results in the list."}},
                         :description "Response for ListInstances.",
                         :id "ListInstancesResponse",
                         :type "object"},
 :TimeOfDay {:properties {:seconds {:type "integer",
                                    :format "int32",
                                    :description "Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds."},
                          :nanos {:format "int32",
                                  :type "integer",
                                  :description "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999."},
                          :hours {:description "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
                                  :type "integer",
                                  :format "int32"},
                          :minutes {:type "integer",
                                    :description "Minutes of hour of day. Must be from 0 to 59.",
                                    :format "int32"}},
             :type "object",
             :id "TimeOfDay",
             :description "Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`."},
 :Status {:id "Status",
          :description "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
          :properties {:details {:items {:additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                                :type "any"},
                                         :type "object"},
                                 :description "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                                 :type "array"},
                       :code {:format "int32",
                              :description "The status code, which should be an enum value of google.rpc.Code.",
                              :type "integer"},
                       :message {:type "string",
                                 :description "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."}},
          :type "object"}}
