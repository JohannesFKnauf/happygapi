{:GoogleFirebaseAppcheckV1betaPublicJwkSet {:description "The currently active set of public keys that can be used to verify App Check tokens. This object is a JWK set as specified by [section 5 of RFC 7517](https://tools.ietf.org/html/rfc7517#section-5). For security, the response **must not** be cached for longer than one day.",
                                            :id "GoogleFirebaseAppcheckV1betaPublicJwkSet",
                                            :type "object",
                                            :properties {:keys {:type "array",
                                                                :description "The set of public keys. See [section 5.1 of RFC 7517](https://tools.ietf.org/html/rfc7517#section-5).",
                                                                :items {:$ref "GoogleFirebaseAppcheckV1betaPublicJwk"}}}},
 :GoogleFirebaseAppcheckV1betaService {:properties {:name {:description "Required. The relative resource name of the service configuration object, in the format: ``` projects/{project_number}/services/{service_id} ``` Note that the `service_id` element must be a supported service ID. Currently, the following service IDs are supported: * `firebasestorage.googleapis.com` (Cloud Storage for Firebase) * `firebasedatabase.googleapis.com` (Firebase Realtime Database)",
                                                           :type "string"},
                                                    :enforcementMode {:type "string",
                                                                      :enumDescriptions ["Firebase App Check is not enforced for the service, nor are App Check metrics collected. Though the service is not protected by App Check in this mode, other applicable protections, such as user authorization, are still enforced. An unconfigured service is in this mode by default."
                                                                                         "Firebase App Check is not enforced for the service. App Check metrics are collected to help you decide when to turn on enforcement for the service. Though the service is not protected by App Check in this mode, other applicable protections, such as user authorization, are still enforced."
                                                                                         "Firebase App Check is enforced for the service. The service will reject any request that attempts to access your project's resources if it does not have valid App Check token attached, with some exceptions depending on the service; for example, some services will still allow requests bearing the developer's privileged service account credentials without an App Check token. App Check metrics continue to be collected to help you detect issues with your App Check integration and monitor the composition of your callers. While the service is protected by App Check, other applicable protections, such as user authorization, continue to be enforced at the same time. Use caution when choosing to enforce App Check on a Firebase service. If your users have not updated to an App Check capable version of your app, their apps will no longer be able to use your Firebase services that are enforcing App Check. App Check metrics can help you decide whether to enforce App Check on your Firebase services. If your app has not launched yet, you should enable enforcement immediately, since there are no outdated clients in use."],
                                                                      :enum ["OFF"
                                                                             "UNENFORCED"
                                                                             "ENFORCED"],
                                                                      :description "Required. The App Check enforcement mode for this service."}},
                                       :type "object",
                                       :description "The enforcement configuration for a Firebase service supported by App Check.",
                                       :id "GoogleFirebaseAppcheckV1betaService"},
 :GoogleFirebaseAppcheckV1betaExchangeDeviceCheckTokenRequest {:type "object",
                                                               :description "Request message for the ExchangeDeviceCheckToken method.",
                                                               :id "GoogleFirebaseAppcheckV1betaExchangeDeviceCheckTokenRequest",
                                                               :properties {:deviceToken {:description "The `device_token` as returned by Apple's client-side [DeviceCheck API](https://developer.apple.com/documentation/devicecheck/dcdevice). This is the Base64 encoded `Data` (Swift) or `NSData` (ObjC) object.",
                                                                                          :type "string"}}},
 :GoogleFirebaseAppcheckV1betaDebugToken {:id "GoogleFirebaseAppcheckV1betaDebugToken",
                                          :properties {:displayName {:description "Required. A human readable display name used to identify this debug token.",
                                                                     :type "string"},
                                                       :token {:type "string",
                                                               :description "Input only. Immutable. The secret token itself. Must be provided during creation, and must be a UUID4, case insensitive. This field is immutable once set, and cannot be provided during an UpdateDebugToken request. You can, however, delete this debug token using DeleteDebugToken to revoke it. For security reasons, this field will never be populated in any response."},
                                                       :name {:type "string",
                                                              :description "The relative resource name of the debug token, in the format: ``` projects/{project_number}/apps/{app_id}/debugTokens/{debug_token_id} ```"}},
                                          :type "object",
                                          :description "A *debug token* is a secret used during the development or integration testing of an app. It essentially allows the development or integration testing to bypass app attestation while still allowing App Check to enforce protection on supported production Firebase services."},
 :GoogleFirebaseAppcheckV1betaPublicJwk {:type "object",
                                         :description "A JWK as specified by [section 4 of RFC 7517](https://tools.ietf.org/html/rfc7517#section-4) and [section 6.3.1 of RFC 7518](https://tools.ietf.org/html/rfc7518#section-6.3.1).",
                                         :properties {:e {:description "See [section 6.3.1.2 of RFC 7518](https://tools.ietf.org/html/rfc7518#section-6.3.1.2).",
                                                          :type "string"},
                                                      :alg {:description "See [section 4.4 of RFC 7517](https://tools.ietf.org/html/rfc7517#section-4.4).",
                                                            :type "string"},
                                                      :use {:type "string",
                                                            :description "See [section 4.2 of RFC 7517](https://tools.ietf.org/html/rfc7517#section-4.2)."},
                                                      :n {:type "string",
                                                          :description "See [section 6.3.1.1 of RFC 7518](https://tools.ietf.org/html/rfc7518#section-6.3.1.1)."},
                                                      :kty {:type "string",
                                                            :description "See [section 4.1 of RFC 7517](https://tools.ietf.org/html/rfc7517#section-4.1)."},
                                                      :kid {:type "string",
                                                            :description "See [section 4.5 of RFC 7517](https://tools.ietf.org/html/rfc7517#section-4.5)."}},
                                         :id "GoogleFirebaseAppcheckV1betaPublicJwk"},
 :GoogleFirebaseAppcheckV1betaDeviceCheckConfig {:description "An app's DeviceCheck configuration object. This configuration is used by ExchangeDeviceCheckToken to validate device tokens issued to apps by DeviceCheck.",
                                                 :type "object",
                                                 :properties {:keyId {:type "string",
                                                                      :description "Required. The key identifier of a private key enabled with DeviceCheck, created in your Apple Developer account."},
                                                              :name {:description "Required. The relative resource name of the DeviceCheck configuration object, in the format: ``` projects/{project_number}/apps/{app_id}/deviceCheckConfig ```",
                                                                     :type "string"},
                                                              :privateKey {:type "string",
                                                                           :description "Required. Input only. The contents of the private key (`.p8`) file associated with the key specified by `key_id`. For security reasons, this field will never be populated in any response."},
                                                              :privateKeySet {:type "boolean",
                                                                              :readOnly true,
                                                                              :description "Output only. Whether the `private_key` field was previously set. Since we will never return the `private_key` field, this field is the only way to find out whether it was previously set."}},
                                                 :id "GoogleFirebaseAppcheckV1betaDeviceCheckConfig"},
 :GoogleFirebaseAppcheckV1betaAttestationTokenResponse {:id "GoogleFirebaseAppcheckV1betaAttestationTokenResponse",
                                                        :type "object",
                                                        :description "Encapsulates an *App Check token*, which are used to access Firebase services protected by App Check.",
                                                        :properties {:attestationToken {:description "An App Check token. App Check tokens are signed [JWTs](https://tools.ietf.org/html/rfc7519) containing claims that identify the attested app and Firebase project. This token is used to access Firebase services protected by App Check.",
                                                                                        :type "string"},
                                                                     :ttl {:type "string",
                                                                           :description "The duration from the time this token is minted until its expiration. This field is intended to ease client-side token management, since the client may have clock skew, but is still able to accurately measure a duration.",
                                                                           :format "google-duration"}}},
 :GoogleFirebaseAppcheckV1betaBatchUpdateServicesResponse {:type "object",
                                                           :id "GoogleFirebaseAppcheckV1betaBatchUpdateServicesResponse",
                                                           :description "Response message for the BatchUpdateServices method.",
                                                           :properties {:services {:description "Service objects after the updates have been applied.",
                                                                                   :type "array",
                                                                                   :items {:$ref "GoogleFirebaseAppcheckV1betaService"}}}},
 :GoogleProtobufEmpty {:description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
                       :properties {},
                       :id "GoogleProtobufEmpty",
                       :type "object"},
 :GoogleFirebaseAppcheckV1betaUpdateServiceRequest {:id "GoogleFirebaseAppcheckV1betaUpdateServiceRequest",
                                                    :properties {:updateMask {:type "string",
                                                                              :description "Required. A comma-separated list of names of fields in the Service to update. Example: `enforcement_mode`.",
                                                                              :format "google-fieldmask"},
                                                                 :service {:description "Required. The Service to update. The Service's `name` field is used to identify the Service to be updated, in the format: ``` projects/{project_number}/services/{service_id} ``` Note that the `service_id` element must be a supported service ID. Currently, the following service IDs are supported: * `firebasestorage.googleapis.com` (Cloud Storage for Firebase) * `firebasedatabase.googleapis.com` (Firebase Realtime Database)",
                                                                           :$ref "GoogleFirebaseAppcheckV1betaService"}},
                                                    :type "object",
                                                    :description "Request message for the UpdateService method as well as an individual update message for the BatchUpdateServices method."},
 :GoogleFirebaseAppcheckV1betaBatchGetRecaptchaConfigsResponse {:description "Response message for the BatchGetRecaptchaConfigs method.",
                                                                :type "object",
                                                                :id "GoogleFirebaseAppcheckV1betaBatchGetRecaptchaConfigsResponse",
                                                                :properties {:configs {:type "array",
                                                                                       :items {:$ref "GoogleFirebaseAppcheckV1betaRecaptchaConfig"},
                                                                                       :description "RecaptchaConfigs retrieved."}}},
 :GoogleFirebaseAppcheckV1betaBatchUpdateServicesRequest {:description "Request message for the BatchUpdateServices method.",
                                                          :type "object",
                                                          :properties {:updateMask {:description "Optional. A comma-separated list of names of fields in the Services to update. Example: `display_name`. If this field is present, the `update_mask` field in the UpdateServiceRequest messages must all match this field, or the entire batch fails and no updates will be committed.",
                                                                                    :format "google-fieldmask",
                                                                                    :type "string"},
                                                                       :requests {:items {:$ref "GoogleFirebaseAppcheckV1betaUpdateServiceRequest"},
                                                                                  :type "array",
                                                                                  :description "Required. The request messages specifying the Services to update. A maximum of 100 objects can be updated in a batch."}},
                                                          :id "GoogleFirebaseAppcheckV1betaBatchUpdateServicesRequest"},
 :GoogleFirebaseAppcheckV1betaListDebugTokensResponse {:description "Response message for the ListDebugTokens method.",
                                                       :properties {:debugTokens {:items {:$ref "GoogleFirebaseAppcheckV1betaDebugToken"},
                                                                                  :description "The DebugTokens retrieved.",
                                                                                  :type "array"},
                                                                    :nextPageToken {:type "string",
                                                                                    :description "If the result list is too large to fit in a single response, then a token is returned. If the string is empty or omitted, then this response is the last page of results. This token can be used in a subsequent call to ListDebugTokens to find the next group of DebugTokens. Page tokens are short-lived and should not be persisted."}},
                                                       :type "object",
                                                       :id "GoogleFirebaseAppcheckV1betaListDebugTokensResponse"},
 :GoogleFirebaseAppcheckV1betaRecaptchaConfig {:properties {:name {:description "Required. The relative resource name of the reCAPTCHA v3 configuration object, in the format: ``` projects/{project_number}/apps/{app_id}/recaptchaConfig ```",
                                                                   :type "string"},
                                                            :siteSecret {:description "Required. Input only. The site secret used to identify your service for reCAPTCHA v3 verification. For security reasons, this field will never be populated in any response.",
                                                                         :type "string"},
                                                            :siteSecretSet {:description "Output only. Whether the `site_secret` field was previously set. Since we will never return the `site_secret` field, this field is the only way to find out whether it was previously set.",
                                                                            :type "boolean",
                                                                            :readOnly true}},
                                               :id "GoogleFirebaseAppcheckV1betaRecaptchaConfig",
                                               :description "An app's reCAPTCHA v3 configuration object. This configuration is used by ExchangeRecaptchaToken to validate reCAPTCHA tokens issued to apps by reCAPTCHA v3.",
                                               :type "object"},
 :GoogleFirebaseAppcheckV1betaListServicesResponse {:type "object",
                                                    :description "Response message for the ListServices method.",
                                                    :properties {:services {:type "array",
                                                                            :description "The Services retrieved.",
                                                                            :items {:$ref "GoogleFirebaseAppcheckV1betaService"}},
                                                                 :nextPageToken {:type "string",
                                                                                 :description "If the result list is too large to fit in a single response, then a token is returned. If the string is empty or omitted, then this response is the last page of results. This token can be used in a subsequent call to ListServices to find the next group of Services. Page tokens are short-lived and should not be persisted."}},
                                                    :id "GoogleFirebaseAppcheckV1betaListServicesResponse"},
 :GoogleFirebaseAppcheckV1betaExchangeRecaptchaTokenRequest {:type "object",
                                                             :properties {:recaptchaToken {:description "The reCAPTCHA token as returned by the [reCAPTCHA v3 JavaScript API](https://developers.google.com/recaptcha/docs/v3).",
                                                                                           :type "string"}},
                                                             :id "GoogleFirebaseAppcheckV1betaExchangeRecaptchaTokenRequest",
                                                             :description "Request message for the ExchangeRecaptchaToken method."},
 :GoogleFirebaseAppcheckV1betaExchangeDebugTokenRequest {:id "GoogleFirebaseAppcheckV1betaExchangeDebugTokenRequest",
                                                         :description "Request message for the ExchangeDebugToken method.",
                                                         :type "object",
                                                         :properties {:debugToken {:type "string",
                                                                                   :description "A debug token secret. This string must match a debug token secret previously created using CreateDebugToken."}}},
 :GoogleFirebaseAppcheckV1betaExchangeSafetyNetTokenRequest {:description "Request message for the ExchangeSafetyNetToken method.",
                                                             :type "object",
                                                             :properties {:safetyNetToken {:type "string",
                                                                                           :description "The [SafetyNet attestation response](https://developer.android.com/training/safetynet/attestation#request-attestation-step) issued to your app."}},
                                                             :id "GoogleFirebaseAppcheckV1betaExchangeSafetyNetTokenRequest"},
 :GoogleFirebaseAppcheckV1betaBatchGetDeviceCheckConfigsResponse {:properties {:configs {:description "DeviceCheckConfigs retrieved.",
                                                                                         :items {:$ref "GoogleFirebaseAppcheckV1betaDeviceCheckConfig"},
                                                                                         :type "array"}},
                                                                  :description "Response message for the BatchGetDeviceCheckConfigs method.",
                                                                  :type "object",
                                                                  :id "GoogleFirebaseAppcheckV1betaBatchGetDeviceCheckConfigsResponse"},
 :GoogleFirebaseAppcheckV1betaExchangeCustomTokenRequest {:properties {:customToken {:type "string",
                                                                                     :description "A custom token signed using your project's Admin SDK service account credentials."}},
                                                          :id "GoogleFirebaseAppcheckV1betaExchangeCustomTokenRequest",
                                                          :type "object",
                                                          :description "Request message for the ExchangeCustomToken method."}}
