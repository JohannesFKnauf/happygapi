{:ObjectAccessControls {:id "ObjectAccessControls",
                        :type "object",
                        :description "An access-control list.",
                        :properties {:items {:type "array",
                                             :description "The list of items.",
                                             :items {:$ref "ObjectAccessControl"}},
                                     :kind {:type "string",
                                            :description "The kind of item this is. For lists of object access control entries, this is always storage#objectAccessControls.",
                                            :default "storage#objectAccessControls"}}},
 :HmacKeyMetadata {:id "HmacKeyMetadata",
                   :type "object",
                   :description "JSON template to produce a JSON-style HMAC Key metadata resource.",
                   :properties {:timeCreated {:type "string",
                                              :description "The creation time of the HMAC key in RFC 3339 format.",
                                              :format "date-time"},
                                :updated {:type "string",
                                          :description "The last modification time of the HMAC key metadata in RFC 3339 format.",
                                          :format "date-time"},
                                :selfLink {:type "string",
                                           :description "The link to this resource."},
                                :accessId {:type "string",
                                           :description "The ID of the HMAC Key."},
                                :etag {:type "string",
                                       :description "HTTP 1.1 Entity tag for the HMAC key."},
                                :state {:type "string",
                                        :description "The state of the key. Can be one of ACTIVE, INACTIVE, or DELETED."},
                                :serviceAccountEmail {:type "string",
                                                      :description "The email address of the key's associated service account."},
                                :id {:type "string",
                                     :description "The ID of the HMAC key, including the Project ID and the Access ID."},
                                :kind {:type "string",
                                       :description "The kind of item this is. For HMAC Key metadata, this is always storage#hmacKeyMetadata.",
                                       :default "storage#hmacKeyMetadata"},
                                :projectId {:type "string",
                                            :description "Project ID owning the service account to which the key authenticates."}}},
 :RewriteResponse {:id "RewriteResponse",
                   :type "object",
                   :description "A rewrite response.",
                   :properties {:done {:type "boolean",
                                       :description "true if the copy is finished; otherwise, false if the copy is in progress. This property is always present in the response."},
                                :kind {:type "string",
                                       :description "The kind of item this is.",
                                       :default "storage#rewriteResponse"},
                                :objectSize {:type "string",
                                             :description "The total size of the object being copied in bytes. This property is always present in the response.",
                                             :format "int64"},
                                :resource {:$ref "Object",
                                           :description "A resource containing the metadata for the copied-to object. This property is present in the response only when copying completes."},
                                :rewriteToken {:type "string",
                                               :description "A token to use in subsequent requests to continue copying data. This token is present in the response only when there is more data to copy."},
                                :totalBytesRewritten {:type "string",
                                                      :description "The total bytes written so far, which can be used to provide a waiting user with a progress indicator. This property is always present in the response.",
                                                      :format "int64"}}},
 :Buckets {:id "Buckets",
           :type "object",
           :description "A list of buckets.",
           :properties {:items {:type "array",
                                :description "The list of items.",
                                :items {:$ref "Bucket"}},
                        :kind {:type "string",
                               :description "The kind of item this is. For lists of buckets, this is always storage#buckets.",
                               :default "storage#buckets"},
                        :nextPageToken {:type "string",
                                        :description "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results."}}},
 :Notification {:id "Notification",
                :type "object",
                :description "A subscription to receive Google PubSub notifications.",
                :properties {:payload_format {:type "string",
                                              :description "The desired content of the Payload.",
                                              :default "JSON_API_V1",
                                              :annotations {:required ["storage.notifications.insert"]}},
                             :selfLink {:type "string",
                                        :description "The canonical URL of this notification."},
                             :etag {:type "string",
                                    :description "HTTP 1.1 Entity tag for this subscription notification."},
                             :topic {:type "string",
                                     :description "The Cloud PubSub topic to which this subscription publishes. Formatted as: '//pubsub.googleapis.com/projects/{project-identifier}/topics/{my-topic}'",
                                     :annotations {:required ["storage.notifications.insert"]}},
                             :event_types {:type "array",
                                           :description "If present, only send notifications about listed event types. If empty, sent notifications for all event types.",
                                           :items {:type "string"}},
                             :id {:type "string",
                                  :description "The ID of the notification."},
                             :kind {:type "string",
                                    :description "The kind of item this is. For notifications, this is always storage#notification.",
                                    :default "storage#notification"},
                             :custom_attributes {:type "object",
                                                 :description "An optional list of additional attributes to attach to each Cloud PubSub message published for this notification subscription.",
                                                 :additionalProperties {:type "string"}},
                             :object_name_prefix {:type "string",
                                                  :description "If present, only apply this notification configuration to object names that begin with this prefix."}}},
 :Bucket {:id "Bucket",
          :type "object",
          :description "A bucket.",
          :properties {:cors {:type "array",
                              :description "The bucket's Cross-Origin Resource Sharing (CORS) configuration.",
                              :items {:type "object",
                                      :properties {:maxAgeSeconds {:type "integer",
                                                                   :description "The value, in seconds, to return in the  Access-Control-Max-Age header used in preflight responses.",
                                                                   :format "int32"},
                                                   :method {:type "array",
                                                            :description "The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: \"*\" is permitted in the list of methods, and means \"any method\".",
                                                            :items {:type "string"}},
                                                   :origin {:type "array",
                                                            :description "The list of Origins eligible to receive CORS response headers. Note: \"*\" is permitted in the list of origins, and means \"any Origin\".",
                                                            :items {:type "string"}},
                                                   :responseHeader {:type "array",
                                                                    :description "The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains.",
                                                                    :items {:type "string"}}}}},
                       :labels {:type "object",
                                :description "User-provided labels, in key/value pairs.",
                                :additionalProperties {:type "string",
                                                       :description "An individual label entry."}},
                       :storageClass {:type "string",
                                      :description "The bucket's default storage class, used whenever no storageClass is specified for a newly-created object. This defines how objects in the bucket are stored and determines the SLA and the cost of storage. Values include MULTI_REGIONAL, REGIONAL, STANDARD, NEARLINE, COLDLINE, ARCHIVE, and DURABLE_REDUCED_AVAILABILITY. If this value is not specified when the bucket is created, it will default to STANDARD. For more information, see storage classes."},
                       :timeCreated {:type "string",
                                     :description "The creation time of the bucket in RFC 3339 format.",
                                     :format "date-time"},
                       :updated {:type "string",
                                 :description "The modification time of the bucket in RFC 3339 format.",
                                 :format "date-time"},
                       :name {:type "string",
                              :description "The name of the bucket.",
                              :annotations {:required ["storage.buckets.insert"]}},
                       :billing {:type "object",
                                 :description "The bucket's billing configuration.",
                                 :properties {:requesterPays {:type "boolean",
                                                              :description "When set to true, Requester Pays is enabled for this bucket."}}},
                       :selfLink {:type "string",
                                  :description "The URI of this bucket."},
                       :etag {:type "string",
                              :description "HTTP 1.1 Entity tag for the bucket."},
                       :lifecycle {:type "object",
                                   :description "The bucket's lifecycle configuration. See lifecycle management for more information.",
                                   :properties {:rule {:type "array",
                                                       :description "A lifecycle management rule, which is made of an action to take and the condition(s) under which the action will be taken.",
                                                       :items {:type "object",
                                                               :properties {:action {:type "object",
                                                                                     :description "The action to take.",
                                                                                     :properties {:storageClass {:type "string",
                                                                                                                 :description "Target storage class. Required iff the type of the action is SetStorageClass."},
                                                                                                  :type {:type "string",
                                                                                                         :description "Type of the action. Currently, only Delete and SetStorageClass are supported."}}},
                                                                            :condition {:type "object",
                                                                                        :description "The condition(s) under which the action will be taken.",
                                                                                        :properties {:age {:type "integer",
                                                                                                           :description "Age of an object (in days). This condition is satisfied when an object reaches the specified age.",
                                                                                                           :format "int32"},
                                                                                                     :createdBefore {:type "string",
                                                                                                                     :description "A date in RFC 3339 format with only the date part (for instance, \"2013-01-15\"). This condition is satisfied when an object is created before midnight of the specified date in UTC.",
                                                                                                                     :format "date"},
                                                                                                     :isLive {:type "boolean",
                                                                                                              :description "Relevant only for versioned objects. If the value is true, this condition matches live objects; if the value is false, it matches archived objects."},
                                                                                                     :matchesPattern {:type "string",
                                                                                                                      :description "A regular expression that satisfies the RE2 syntax. This condition is satisfied when the name of the object matches the RE2 pattern. Note: This feature is currently in the \"Early Access\" launch stage and is only available to a whitelisted set of users; that means that this feature may be changed in backward-incompatible ways and that it is not guaranteed to be released."},
                                                                                                     :matchesStorageClass {:type "array",
                                                                                                                           :description "Objects having any of the storage classes specified by this condition will be matched. Values include MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE, STANDARD, and DURABLE_REDUCED_AVAILABILITY.",
                                                                                                                           :items {:type "string"}},
                                                                                                     :numNewerVersions {:type "integer",
                                                                                                                        :description "Relevant only for versioned objects. If the value is N, this condition is satisfied when there are at least N versions (including the live version) newer than this version of the object.",
                                                                                                                        :format "int32"}}}}}}}},
                       :logging {:type "object",
                                 :description "The bucket's logging configuration, which defines the destination bucket and optional name prefix for the current bucket's logs.",
                                 :properties {:logBucket {:type "string",
                                                          :description "The destination bucket where the current bucket's logs should be placed."},
                                              :logObjectPrefix {:type "string",
                                                                :description "A prefix for log object names."}}},
                       :projectNumber {:type "string",
                                       :description "The project number of the project the bucket belongs to.",
                                       :format "uint64"},
                       :encryption {:type "object",
                                    :description "Encryption configuration for a bucket.",
                                    :properties {:defaultKmsKeyName {:type "string",
                                                                     :description "A Cloud KMS key that will be used to encrypt objects inserted into this bucket, if no encryption method is specified."}}},
                       :defaultObjectAcl {:type "array",
                                          :description "Default access controls to apply to new objects when no ACL is provided.",
                                          :items {:$ref "ObjectAccessControl"}},
                       :id {:type "string",
                            :description "The ID of the bucket. For buckets, the id and name properties are the same."},
                       :kind {:type "string",
                              :description "The kind of item this is. For buckets, this is always storage#bucket.",
                              :default "storage#bucket"},
                       :retentionPolicy {:type "object",
                                         :description "The bucket's retention policy. The retention policy enforces a minimum retention time for all objects contained in the bucket, based on their creation time. Any attempt to overwrite or delete objects younger than the retention period will result in a PERMISSION_DENIED error. An unlocked retention policy can be modified or removed from the bucket via a storage.buckets.update operation. A locked retention policy cannot be removed or shortened in duration for the lifetime of the bucket. Attempting to remove or decrease period of a locked retention policy will result in a PERMISSION_DENIED error.",
                                         :properties {:effectiveTime {:type "string",
                                                                      :description "Server-determined value that indicates the time from which policy was enforced and effective. This value is in RFC 3339 format.",
                                                                      :format "date-time"},
                                                      :isLocked {:type "boolean",
                                                                 :description "Once locked, an object retention policy cannot be modified."},
                                                      :retentionPeriod {:type "string",
                                                                        :description "The duration in seconds that objects need to be retained. Retention duration must be greater than zero and less than 100 years. Note that enforcement of retention periods less than a day is not guaranteed. Such periods should only be used for testing purposes.",
                                                                        :format "int64"}}},
                       :website {:type "object",
                                 :description "The bucket's website configuration, controlling how the service behaves when accessing bucket contents as a web site. See the Static Website Examples for more information.",
                                 :properties {:mainPageSuffix {:type "string",
                                                               :description "If the requested object path is missing, the service will ensure the path has a trailing '/', append this suffix, and attempt to retrieve the resulting object. This allows the creation of index.html objects to represent directory pages."},
                                              :notFoundPage {:type "string",
                                                             :description "If the requested object path is missing, and any mainPageSuffix object is missing, if applicable, the service will return the named object from this bucket as the content for a 404 Not Found result."}}},
                       :acl {:type "array",
                             :description "Access controls on the bucket.",
                             :items {:$ref "BucketAccessControl"},
                             :annotations {:required ["storage.buckets.update"]}},
                       :locationType {:type "string",
                                      :description "The type of the bucket location."},
                       :iamConfiguration {:type "object",
                                          :description "The bucket's IAM configuration.",
                                          :properties {:bucketPolicyOnly {:type "object",
                                                                          :description "The bucket's uniform bucket-level access configuration. The feature was formerly known as Bucket Policy Only. For backward compatibility, this field will be populated with identical information as the uniformBucketLevelAccess field. We recommend using the uniformBucketLevelAccess field to enable and disable the feature.",
                                                                          :properties {:enabled {:type "boolean",
                                                                                                 :description "If set, access is controlled only by bucket-level or above IAM policies."},
                                                                                       :lockedTime {:type "string",
                                                                                                    :description "The deadline for changing iamConfiguration.bucketPolicyOnly.enabled from true to false in RFC 3339 format. iamConfiguration.bucketPolicyOnly.enabled may be changed from true to false until the locked time, after which the field is immutable.",
                                                                                                    :format "date-time"}}},
                                                       :uniformBucketLevelAccess {:type "object",
                                                                                  :description "The bucket's uniform bucket-level access configuration.",
                                                                                  :properties {:enabled {:type "boolean",
                                                                                                         :description "If set, access is controlled only by bucket-level or above IAM policies."},
                                                                                               :lockedTime {:type "string",
                                                                                                            :description "The deadline for changing iamConfiguration.uniformBucketLevelAccess.enabled from true to false in RFC 3339  format. iamConfiguration.uniformBucketLevelAccess.enabled may be changed from true to false until the locked time, after which the field is immutable.",
                                                                                                            :format "date-time"}}}}},
                       :defaultEventBasedHold {:type "boolean",
                                               :description "The default value for event-based hold on newly created objects in this bucket. Event-based hold is a way to retain objects indefinitely until an event occurs, signified by the hold's release. After being released, such objects will be subject to bucket-level retention (if any). One sample use case of this flag is for banks to hold loan documents for at least 3 years after loan is paid in full. Here, bucket-level retention is 3 years and the event is loan being paid in full. In this example, these objects will be held intact for any number of years until the event has occurred (event-based hold on the object is released) and then 3 more years after that. That means retention duration of the objects begins from the moment event-based hold transitioned from true to false. Objects under event-based hold cannot be deleted, overwritten or archived until the hold is removed."},
                       :versioning {:type "object",
                                    :description "The bucket's versioning configuration.",
                                    :properties {:enabled {:type "boolean",
                                                           :description "While set to true, versioning is fully enabled for this bucket."}}},
                       :location {:type "string",
                                  :description "The location of the bucket. Object data for objects in the bucket resides in physical storage within this region. Defaults to US. See the developer's guide for the authoritative list."},
                       :zone_affinity {:type "array",
                                       :description "The zone or zones from which the bucket is intended to use zonal quota. Requests for data from outside the specified affinities are still allowed but won’t be able to use zonal quota. The zone or zones need to be within the bucket location otherwise the requests will fail with a 400 Bad Request response.",
                                       :items {:type "string"}},
                       :owner {:type "object",
                               :description "The owner of the bucket. This is always the project team's owner group.",
                               :properties {:entity {:type "string",
                                                     :description "The entity, in the form project-owner-projectId."},
                                            :entityId {:type "string",
                                                       :description "The ID for the entity."}}},
                       :metageneration {:type "string",
                                        :description "The metadata generation of this bucket.",
                                        :format "int64"}}},
 :ServiceAccount {:id "ServiceAccount",
                  :type "object",
                  :description "A subscription to receive Google PubSub notifications.",
                  :properties {:email_address {:type "string",
                                               :description "The ID of the notification."},
                               :kind {:type "string",
                                      :description "The kind of item this is. For notifications, this is always storage#notification.",
                                      :default "storage#serviceAccount"}}},
 :Channel {:id "Channel",
           :type "object",
           :description "An notification channel used to watch for resource changes.",
           :properties {:address {:type "string",
                                  :description "The address where notifications are delivered for this channel."},
                        :resourceUri {:type "string",
                                      :description "A version-specific identifier for the watched resource."},
                        :payload {:type "boolean",
                                  :description "A Boolean value to indicate whether payload is wanted. Optional."},
                        :expiration {:type "string",
                                     :description "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.",
                                     :format "int64"},
                        :params {:type "object",
                                 :description "Additional parameters controlling delivery channel behavior. Optional.",
                                 :additionalProperties {:type "string",
                                                        :description "Declares a new parameter by name."}},
                        :type {:type "string",
                               :description "The type of delivery mechanism used for this channel."},
                        :resourceId {:type "string",
                                     :description "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions."},
                        :token {:type "string",
                                :description "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional."},
                        :id {:type "string",
                             :description "A UUID or similar unique string that identifies this channel."},
                        :kind {:type "string",
                               :description "Identifies this as a notification channel used to watch for changes to a resource, which is \"api#channel\".",
                               :default "api#channel"}}},
 :BucketAccessControl {:id "BucketAccessControl",
                       :type "object",
                       :description "An access-control entry.",
                       :properties {:role {:type "string",
                                           :description "The access permission for the entity.",
                                           :annotations {:required ["storage.bucketAccessControls.insert"]}},
                                    :email {:type "string",
                                            :description "The email address associated with the entity, if any."},
                                    :projectTeam {:type "object",
                                                  :description "The project team associated with the entity, if any.",
                                                  :properties {:projectNumber {:type "string",
                                                                               :description "The project number."},
                                                               :team {:type "string",
                                                                      :description "The team."}}},
                                    :selfLink {:type "string",
                                               :description "The link to this access-control entry."},
                                    :etag {:type "string",
                                           :description "HTTP 1.1 Entity tag for the access-control entry."},
                                    :id {:type "string",
                                         :description "The ID of the access-control entry."},
                                    :kind {:type "string",
                                           :description "The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl.",
                                           :default "storage#bucketAccessControl"},
                                    :domain {:type "string",
                                             :description "The domain associated with the entity, if any."},
                                    :entity {:type "string",
                                             :description "The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- domain-domain \n- project-team-projectId \n- allUsers \n- allAuthenticatedUsers Examples: \n- The user liz@example.com would be user-liz@example.com. \n- The group example@googlegroups.com would be group-example@googlegroups.com. \n- To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com.",
                                             :annotations {:required ["storage.bucketAccessControls.insert"]}},
                                    :entityId {:type "string",
                                               :description "The ID for the entity, if any."},
                                    :bucket {:type "string",
                                             :description "The name of the bucket."}}},
 :Objects {:id "Objects",
           :type "object",
           :description "A list of objects.",
           :properties {:items {:type "array",
                                :description "The list of items.",
                                :items {:$ref "Object"}},
                        :kind {:type "string",
                               :description "The kind of item this is. For lists of objects, this is always storage#objects.",
                               :default "storage#objects"},
                        :nextPageToken {:type "string",
                                        :description "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results."},
                        :prefixes {:type "array",
                                   :description "The list of prefixes of objects matching-but-not-listed up to and including the requested delimiter.",
                                   :items {:type "string"}}}},
 :ObjectAccessControl {:id "ObjectAccessControl",
                       :type "object",
                       :description "An access-control entry.",
                       :properties {:role {:type "string",
                                           :description "The access permission for the entity.",
                                           :annotations {:required ["storage.defaultObjectAccessControls.insert"
                                                                    "storage.objectAccessControls.insert"]}},
                                    :email {:type "string",
                                            :description "The email address associated with the entity, if any."},
                                    :generation {:type "string",
                                                 :description "The content generation of the object, if applied to an object.",
                                                 :format "int64"},
                                    :projectTeam {:type "object",
                                                  :description "The project team associated with the entity, if any.",
                                                  :properties {:projectNumber {:type "string",
                                                                               :description "The project number."},
                                                               :team {:type "string",
                                                                      :description "The team."}}},
                                    :selfLink {:type "string",
                                               :description "The link to this access-control entry."},
                                    :etag {:type "string",
                                           :description "HTTP 1.1 Entity tag for the access-control entry."},
                                    :id {:type "string",
                                         :description "The ID of the access-control entry."},
                                    :kind {:type "string",
                                           :description "The kind of item this is. For object access control entries, this is always storage#objectAccessControl.",
                                           :default "storage#objectAccessControl"},
                                    :domain {:type "string",
                                             :description "The domain associated with the entity, if any."},
                                    :entity {:type "string",
                                             :description "The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- domain-domain \n- project-team-projectId \n- allUsers \n- allAuthenticatedUsers Examples: \n- The user liz@example.com would be user-liz@example.com. \n- The group example@googlegroups.com would be group-example@googlegroups.com. \n- To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com.",
                                             :annotations {:required ["storage.defaultObjectAccessControls.insert"
                                                                      "storage.objectAccessControls.insert"]}},
                                    :entityId {:type "string",
                                               :description "The ID for the entity, if any."},
                                    :object {:type "string",
                                             :description "The name of the object, if applied to an object."},
                                    :bucket {:type "string",
                                             :description "The name of the bucket."}}},
 :HmacKeysMetadata {:id "HmacKeysMetadata",
                    :type "object",
                    :description "A list of hmacKeys.",
                    :properties {:items {:type "array",
                                         :description "The list of items.",
                                         :items {:$ref "HmacKeyMetadata"}},
                                 :kind {:type "string",
                                        :description "The kind of item this is. For lists of hmacKeys, this is always storage#hmacKeysMetadata.",
                                        :default "storage#hmacKeysMetadata"},
                                 :nextPageToken {:type "string",
                                                 :description "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results."}}},
 :TestIamPermissionsResponse {:id "TestIamPermissionsResponse",
                              :type "object",
                              :description "A storage.(buckets|objects).testIamPermissions response.",
                              :properties {:kind {:type "string",
                                                  :description "The kind of item this is.",
                                                  :default "storage#testIamPermissionsResponse"},
                                           :permissions {:type "array",
                                                         :description "The permissions held by the caller. Permissions are always of the format storage.resource.capability, where resource is one of buckets or objects. The supported permissions are as follows:  \n- storage.buckets.delete — Delete bucket.  \n- storage.buckets.get — Read bucket metadata.  \n- storage.buckets.getIamPolicy — Read bucket IAM policy.  \n- storage.buckets.create — Create bucket.  \n- storage.buckets.list — List buckets.  \n- storage.buckets.setIamPolicy — Update bucket IAM policy.  \n- storage.buckets.update — Update bucket metadata.  \n- storage.objects.delete — Delete object.  \n- storage.objects.get — Read object data and metadata.  \n- storage.objects.getIamPolicy — Read object IAM policy.  \n- storage.objects.create — Create object.  \n- storage.objects.list — List objects.  \n- storage.objects.setIamPolicy — Update object IAM policy.  \n- storage.objects.update — Update object metadata.",
                                                         :items {:type "string"}}}},
 :Expr {:id "Expr",
        :type "object",
        :description "Represents an expression text. Example: title: \"User account presence\" description: \"Determines whether the request has a user account\" expression: \"size(request.user) > 0\"",
        :properties {:description {:type "string",
                                   :description "An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."},
                     :expression {:type "string",
                                  :description "Textual representation of an expression in Common Expression Language syntax. The application context of the containing message determines which well-known feature set of CEL is supported."},
                     :location {:type "string",
                                :description "An optional string indicating the location of the expression for error reporting, e.g. a file name and a position in the file."},
                     :title {:type "string",
                             :description "An optional title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."}}},
 :BucketAccessControls {:id "BucketAccessControls",
                        :type "object",
                        :description "An access-control list.",
                        :properties {:items {:type "array",
                                             :description "The list of items.",
                                             :items {:$ref "BucketAccessControl"}},
                                     :kind {:type "string",
                                            :description "The kind of item this is. For lists of bucket access control entries, this is always storage#bucketAccessControls.",
                                            :default "storage#bucketAccessControls"}}},
 :Notifications {:id "Notifications",
                 :type "object",
                 :description "A list of notification subscriptions.",
                 :properties {:items {:type "array",
                                      :description "The list of items.",
                                      :items {:$ref "Notification"}},
                              :kind {:type "string",
                                     :description "The kind of item this is. For lists of notifications, this is always storage#notifications.",
                                     :default "storage#notifications"}}},
 :Object {:id "Object",
          :type "object",
          :description "An object.",
          :properties {:contentDisposition {:type "string",
                                            :description "Content-Disposition of the object data."},
                       :storageClass {:type "string",
                                      :description "Storage class of the object."},
                       :contentEncoding {:type "string",
                                         :description "Content-Encoding of the object data."},
                       :generation {:type "string",
                                    :description "The content generation of this object. Used for object versioning.",
                                    :format "int64"},
                       :timeCreated {:type "string",
                                     :description "The creation time of the object in RFC 3339 format.",
                                     :format "date-time"},
                       :temporaryHold {:type "boolean",
                                       :description "Whether an object is under temporary hold. While this flag is set to true, the object is protected against deletion and overwrites. A common use case of this flag is regulatory investigations where objects need to be retained while the investigation is ongoing. Note that unlike event-based hold, temporary hold does not impact retention expiration time of an object."},
                       :eventBasedHold {:type "boolean",
                                        :description "Whether an object is under event-based hold. Event-based hold is a way to retain objects until an event occurs, which is signified by the hold's release (i.e. this value is set to false). After being released (set to false), such objects will be subject to bucket-level retention (if any). One sample use case of this flag is for banks to hold loan documents for at least 3 years after loan is paid in full. Here, bucket-level retention is 3 years and the event is the loan being paid in full. In this example, these objects will be held intact for any number of years until the event has occurred (event-based hold on the object is released) and then 3 more years after that. That means retention duration of the objects begins from the moment event-based hold transitioned from true to false."},
                       :updated {:type "string",
                                 :description "The modification time of the object metadata in RFC 3339 format.",
                                 :format "date-time"},
                       :name {:type "string",
                              :description "The name of the object. Required if not specified by URL parameter."},
                       :retentionExpirationTime {:type "string",
                                                 :description "A server-determined value that specifies the earliest time that the object's retention period expires. This value is in RFC 3339 format. Note 1: This field is not provided for objects with an active event-based hold, since retention expiration is unknown until the hold is removed. Note 2: This value can be provided even when temporary hold is set (so that the user can reason about policy without having to first unset the temporary hold).",
                                                 :format "date-time"},
                       :selfLink {:type "string",
                                  :description "The link to this object."},
                       :contentLanguage {:type "string",
                                         :description "Content-Language of the object data."},
                       :etag {:type "string",
                              :description "HTTP 1.1 Entity tag for the object."},
                       :size {:type "string",
                              :description "Content-Length of the data in bytes.",
                              :format "uint64"},
                       :md5Hash {:type "string",
                                 :description "MD5 hash of the data; encoded using base64. For more information about using the MD5 hash, see Hashes and ETags: Best Practices."},
                       :cacheControl {:type "string",
                                      :description "Cache-Control directive for the object data. If omitted, and the object is accessible to all anonymous users, the default will be public, max-age=3600."},
                       :timeStorageClassUpdated {:type "string",
                                                 :description "The time at which the object's storage class was last changed. When the object is initially created, it will be set to timeCreated.",
                                                 :format "date-time"},
                       :timeDeleted {:type "string",
                                     :description "The deletion time of the object in RFC 3339 format. Will be returned if and only if this version of the object has been deleted.",
                                     :format "date-time"},
                       :id {:type "string",
                            :description "The ID of the object, including the bucket name, object name, and generation number."},
                       :kind {:type "string",
                              :description "The kind of item this is. For objects, this is always storage#object.",
                              :default "storage#object"},
                       :mediaLink {:type "string",
                                   :description "Media download link."},
                       :kmsKeyName {:type "string",
                                    :description "Cloud KMS Key used to encrypt this object, if the object is encrypted by such a key."},
                       :componentCount {:type "integer",
                                        :description "Number of underlying components that make up this object. Components are accumulated by compose operations.",
                                        :format "int32"},
                       :acl {:type "array",
                             :description "Access controls on the object.",
                             :items {:$ref "ObjectAccessControl"},
                             :annotations {:required ["storage.objects.update"]}},
                       :customerEncryption {:type "object",
                                            :description "Metadata of customer-supplied encryption key, if the object is encrypted by such a key.",
                                            :properties {:encryptionAlgorithm {:type "string",
                                                                               :description "The encryption algorithm."},
                                                         :keySha256 {:type "string",
                                                                     :description "SHA256 hash value of the encryption key."}}},
                       :contentType {:type "string",
                                     :description "Content-Type of the object data. If an object is stored without a Content-Type, it is served as application/octet-stream."},
                       :metadata {:type "object",
                                  :description "User-provided metadata, in key/value pairs.",
                                  :additionalProperties {:type "string",
                                                         :description "An individual metadata entry."}},
                       :crc32c {:type "string",
                                :description "CRC32c checksum, as described in RFC 4960, Appendix B; encoded using base64 in big-endian byte order. For more information about using the CRC32c checksum, see Hashes and ETags: Best Practices."},
                       :owner {:type "object",
                               :description "The owner of the object. This will always be the uploader of the object.",
                               :properties {:entity {:type "string",
                                                     :description "The entity, in the form user-userId."},
                                            :entityId {:type "string",
                                                       :description "The ID for the entity."}}},
                       :bucket {:type "string",
                                :description "The name of the bucket containing this object."},
                       :metageneration {:type "string",
                                        :description "The version of the metadata for this object at this generation. Used for preconditions and for detecting changes in metadata. A metageneration number is only meaningful in the context of a particular generation of a particular object.",
                                        :format "int64"}}},
 :HmacKey {:id "HmacKey",
           :type "object",
           :description "JSON template to produce a JSON-style HMAC Key resource for Create responses.",
           :properties {:kind {:type "string",
                               :description "The kind of item this is. For HMAC keys, this is always storage#hmacKey.",
                               :default "storage#hmacKey"},
                        :metadata {:$ref "HmacKeyMetadata",
                                   :description "Key metadata."},
                        :secret {:type "string",
                                 :description "HMAC secret key material."}}},
 :Policy {:id "Policy",
          :type "object",
          :description "A bucket/object IAM policy.",
          :properties {:bindings {:type "array",
                                  :description "An association between a role, which comes with a set of permissions, and members who may assume that role.",
                                  :items {:type "object",
                                          :properties {:condition {:$ref "Expr",
                                                                   :description "The condition that is associated with this binding. NOTE: an unsatisfied condition will not allow user access via current binding. Different bindings, including their conditions, are examined independently."},
                                                       :members {:type "array",
                                                                 :description "A collection of identifiers for members who may assume the provided role. Recognized identifiers are as follows:  \n- allUsers — A special identifier that represents anyone on the internet; with or without a Google account.  \n- allAuthenticatedUsers — A special identifier that represents anyone who is authenticated with a Google account or a service account.  \n- user:emailid — An email address that represents a specific account. For example, user:alice@gmail.com or user:joe@example.com.  \n- serviceAccount:emailid — An email address that represents a service account. For example,  serviceAccount:my-other-app@appspot.gserviceaccount.com .  \n- group:emailid — An email address that represents a Google group. For example, group:admins@example.com.  \n- domain:domain — A Google Apps domain name that represents all the users of that domain. For example, domain:google.com or domain:example.com.  \n- projectOwner:projectid — Owners of the given project. For example, projectOwner:my-example-project  \n- projectEditor:projectid — Editors of the given project. For example, projectEditor:my-example-project  \n- projectViewer:projectid — Viewers of the given project. For example, projectViewer:my-example-project",
                                                                 :items {:type "string"},
                                                                 :annotations {:required ["storage.buckets.setIamPolicy"
                                                                                          "storage.objects.setIamPolicy"]}},
                                                       :role {:type "string",
                                                              :description "The role to which members belong. Two types of roles are supported: new IAM roles, which grant permissions that do not map directly to those provided by ACLs, and legacy IAM roles, which do map directly to ACL permissions. All roles are of the format roles/storage.specificRole.\nThe new IAM roles are:  \n- roles/storage.admin — Full control of Google Cloud Storage resources.  \n- roles/storage.objectViewer — Read-Only access to Google Cloud Storage objects.  \n- roles/storage.objectCreator — Access to create objects in Google Cloud Storage.  \n- roles/storage.objectAdmin — Full control of Google Cloud Storage objects.   The legacy IAM roles are:  \n- roles/storage.legacyObjectReader — Read-only access to objects without listing. Equivalent to an ACL entry on an object with the READER role.  \n- roles/storage.legacyObjectOwner — Read/write access to existing objects without listing. Equivalent to an ACL entry on an object with the OWNER role.  \n- roles/storage.legacyBucketReader — Read access to buckets with object listing. Equivalent to an ACL entry on a bucket with the READER role.  \n- roles/storage.legacyBucketWriter — Read access to buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the WRITER role.  \n- roles/storage.legacyBucketOwner — Read and write access to existing buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the OWNER role.",
                                                              :annotations {:required ["storage.buckets.setIamPolicy"
                                                                                       "storage.objects.setIamPolicy"]}}}},
                                  :annotations {:required ["storage.buckets.setIamPolicy"
                                                           "storage.objects.setIamPolicy"]}},
                       :etag {:type "string",
                              :description "HTTP 1.1  Entity tag for the policy.",
                              :format "byte"},
                       :kind {:type "string",
                              :description "The kind of item this is. For policies, this is always storage#policy. This field is ignored on input.",
                              :default "storage#policy"},
                       :resourceId {:type "string",
                                    :description "The ID of the resource to which this policy belongs. Will be of the form projects/_/buckets/bucket for buckets, and projects/_/buckets/bucket/objects/object for objects. A specific generation may be specified by appending #generationNumber to the end of the object name, e.g. projects/_/buckets/my-bucket/objects/data.txt#17. The current generation can be denoted with #0. This field is ignored on input."},
                       :version {:type "integer",
                                 :description "The IAM policy format version.",
                                 :format "int32"}}},
 :ComposeRequest {:id "ComposeRequest",
                  :type "object",
                  :description "A Compose request.",
                  :properties {:destination {:$ref "Object",
                                             :description "Properties of the resulting object."},
                               :kind {:type "string",
                                      :description "The kind of item this is.",
                                      :default "storage#composeRequest"},
                               :sourceObjects {:type "array",
                                               :description "The list of source objects that will be concatenated into a single object.",
                                               :items {:type "object",
                                                       :properties {:generation {:type "string",
                                                                                 :description "The generation of this object to use as the source.",
                                                                                 :format "int64"},
                                                                    :name {:type "string",
                                                                           :description "The source object's name. All source objects must reside in the same bucket.",
                                                                           :annotations {:required ["storage.objects.compose"]}},
                                                                    :objectPreconditions {:type "object",
                                                                                          :description "Conditions that must be met for this operation to execute.",
                                                                                          :properties {:ifGenerationMatch {:type "string",
                                                                                                                           :description "Only perform the composition if the generation of the source object that would be used matches this value. If this value and a generation are both specified, they must be the same value or the call will fail.",
                                                                                                                           :format "int64"}}}}},
                                               :annotations {:required ["storage.objects.compose"]}}}}}
