{:Service {:properties {:endpointUri {:description "Output only. The URI of the endpoint used to access the metastore service.",
                                      :readOnly true,
                                      :type "string"},
                        :labels {:additionalProperties {:type "string"},
                                 :description "User-defined labels for the metastore service.",
                                 :type "object"},
                        :tier {:enumDescriptions ["The tier is not set."
                                                  "The developer tier provides limited scalability and no fault tolerance. Good for low-cost proof-of-concept."
                                                  "The enterprise tier provides multi-zone high availability, and sufficient scalability for enterprise-level Dataproc Metastore workloads."],
                               :enum ["TIER_UNSPECIFIED"
                                      "DEVELOPER"
                                      "ENTERPRISE"],
                               :description "The tier of the service.",
                               :type "string"},
                        :metadataManagementActivity {:$ref "MetadataManagementActivity",
                                                     :description "Output only. The metadata management activities of the metastore service.",
                                                     :readOnly true},
                        :uid {:type "string",
                              :description "Output only. The globally unique resource identifier of the metastore service.",
                              :readOnly true},
                        :name {:description "Immutable. The relative resource name of the metastore service, of the form:projects/{project_number}/locations/{location_id}/services/{service_id}.",
                               :type "string"},
                        :createTime {:type "string",
                                     :format "google-datetime",
                                     :description "Output only. The time when the metastore service was created.",
                                     :readOnly true},
                        :hiveMetastoreConfig {:description "Configuration information specific to running Hive metastore software as the metastore service.",
                                              :$ref "HiveMetastoreConfig"},
                        :state {:description "Output only. The current state of the metastore service.",
                                :enum ["STATE_UNSPECIFIED"
                                       "CREATING"
                                       "ACTIVE"
                                       "SUSPENDING"
                                       "SUSPENDED"
                                       "UPDATING"
                                       "DELETING"
                                       "ERROR"],
                                :type "string",
                                :enumDescriptions ["The state of the metastore service is unknown."
                                                   "The metastore service is in the process of being created."
                                                   "The metastore service is running and ready to serve queries."
                                                   "The metastore service is entering suspension. Its query-serving availability may cease unexpectedly."
                                                   "The metastore service is suspended and unable to serve queries."
                                                   "The metastore service is being updated. It remains usable but cannot accept additional update requests or be deleted at this time."
                                                   "The metastore service is undergoing deletion. It cannot be used."
                                                   "The metastore service has encountered an error and cannot be used. The metastore service should be deleted."],
                                :readOnly true},
                        :port {:description "The TCP port at which the metastore service is reached. Default: 9083.",
                               :type "integer",
                               :format "int32"},
                        :releaseChannel {:description "Immutable. The release channel of the service. If unspecified, defaults to STABLE.",
                                         :enumDescriptions ["Release channel is not specified."
                                                            "The CANARY release channel contains the newest features, which may be unstable and subject to unresolved issues with no known workarounds. Services using the CANARY release channel are not subject to any SLAs."
                                                            "The STABLE release channel contains features that are considered stable and have been validated for production use."],
                                         :enum ["RELEASE_CHANNEL_UNSPECIFIED"
                                                "CANARY"
                                                "STABLE"],
                                         :type "string"},
                        :updateTime {:readOnly true,
                                     :type "string",
                                     :format "google-datetime",
                                     :description "Output only. The time when the metastore service was last updated."},
                        :artifactGcsUri {:type "string",
                                         :readOnly true,
                                         :description "Output only. A Cloud Storage URI (starting with gs://) that specifies where artifacts related to the metastore service are stored."},
                        :maintenanceWindow {:description "The one hour maintenance window of the metastore service. This specifies when the service can be restarted for maintenance purposes in UTC time. Maintenance window is not needed for services with the SPANNER database type.",
                                            :$ref "MaintenanceWindow"},
                        :network {:description "Immutable. The relative resource name of the VPC network on which the instance can be accessed. It is specified in the following form:projects/{project_number}/global/networks/{network_id}.",
                                  :type "string"},
                        :metadataIntegration {:description "The setting that defines how metastore metadata should be integrated with external services and systems.",
                                              :$ref "MetadataIntegration"},
                        :encryptionConfig {:$ref "EncryptionConfig",
                                           :description "Immutable. Information used to configure the Dataproc Metastore service to encrypt customer data at rest. Cannot be updated."},
                        :stateMessage {:description "Output only. Additional information about the current state of the metastore service, if available.",
                                       :readOnly true,
                                       :type "string"}},
           :type "object",
           :id "Service",
           :description "A managed metastore service that serves metadata queries."},
 :MaintenanceWindow {:type "object",
                     :id "MaintenanceWindow",
                     :properties {:hourOfDay {:format "int32",
                                              :description "The hour of day (0-23) when the window starts.",
                                              :type "integer"},
                                  :dayOfWeek {:enumDescriptions ["The day of the week is unspecified."
                                                                 "Monday"
                                                                 "Tuesday"
                                                                 "Wednesday"
                                                                 "Thursday"
                                                                 "Friday"
                                                                 "Saturday"
                                                                 "Sunday"],
                                              :enum ["DAY_OF_WEEK_UNSPECIFIED"
                                                     "MONDAY"
                                                     "TUESDAY"
                                                     "WEDNESDAY"
                                                     "THURSDAY"
                                                     "FRIDAY"
                                                     "SATURDAY"
                                                     "SUNDAY"],
                                              :type "string",
                                              :description "The day of week, when the window starts."}},
                     :description "Maintenance window. This specifies when Dataproc Metastore may perform system maintenance operation to the service."},
 :MetadataIntegration {:description "Specifies how metastore metadata should be integrated with external services.",
                       :id "MetadataIntegration",
                       :type "object",
                       :properties {:dataplexConfig {:$ref "DataplexConfig",
                                                     :description "The integration config for the Dataplex service."},
                                    :dataCatalogConfig {:description "The integration config for the Data Catalog service.",
                                                        :$ref "DataCatalogConfig"}}},
 :RestoreServiceRequest {:description "Request message for DataprocMetastore.Restore.",
                         :id "RestoreServiceRequest",
                         :type "object",
                         :properties {:requestId {:type "string",
                                                  :description "Optional. A request ID. Specify a unique request ID to allow the server to ignore the request if it has completed. The server will ignore subsequent requests that provide a duplicate request ID for at least 60 minutes after the first request.For example, if an initial request times out, followed by another request with the same request ID, the server ignores the second request to prevent the creation of duplicate commitments.The request ID must be a valid UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier#Format). A zero UUID (00000000-0000-0000-0000-000000000000) is not supported."},
                                      :backup {:type "string",
                                               :description "Required. The relative resource name of the metastore service backup to restore from, in the following form:projects/{project_id}/locations/{location_id}/services/{service_id}/backups/{backup_id}."},
                                      :restoreType {:type "string",
                                                    :enumDescriptions ["The restore type is unknown."
                                                                       "The service's metadata and configuration are restored."
                                                                       "Only the service's metadata is restored."],
                                                    :description "Optional. The type of restore. If unspecified, defaults to METADATA_ONLY.",
                                                    :enum ["RESTORE_TYPE_UNSPECIFIED"
                                                           "FULL"
                                                           "METADATA_ONLY"]}}},
 :HiveMetastoreVersion {:type "object",
                        :description "A specification of a supported version of the Hive Metastore software.",
                        :properties {:version {:description "The semantic version of the Hive Metastore software.",
                                               :type "string"},
                                     :isDefault {:description "Whether version will be chosen by the server if a metastore service is created with a HiveMetastoreConfig that omits the version.",
                                                 :type "boolean"}},
                        :id "HiveMetastoreVersion"},
 :HiveMetastoreConfig {:properties {:configOverrides {:additionalProperties {:type "string"},
                                                      :description "A mapping of Hive metastore configuration key-value pairs to apply to the Hive metastore (configured in hive-site.xml). The mappings override system defaults (some keys cannot be overridden).",
                                                      :type "object"},
                                    :endpointProtocol {:enumDescriptions ["The protocol is not set."
                                                                          "Use the legacy Apache Thrift protocol for the metastore service endpoint."
                                                                          "Use the modernized gRPC protocol for the metastore service endpoint."],
                                                       :enum ["ENDPOINT_PROTOCOL_UNSPECIFIED"
                                                              "THRIFT"
                                                              "GRPC"],
                                                       :type "string",
                                                       :description "The protocol to use for the metastore service endpoint. If unspecified, defaults to THRIFT."},
                                    :kerberosConfig {:description "Information used to configure the Hive metastore service as a service principal in a Kerberos realm. To disable Kerberos, use the UpdateService method and specify this field's path (hive_metastore_config.kerberos_config) in the request's update_mask while omitting this field from the request's service.",
                                                     :$ref "KerberosConfig"},
                                    :version {:description "Immutable. The Hive metastore schema version.",
                                              :type "string"}},
                       :id "HiveMetastoreConfig",
                       :type "object",
                       :description "Specifies configuration information specific to running Hive metastore software as the metastore service."},
 :Operation {:type "object",
             :properties {:metadata {:description "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                                     :type "object",
                                     :additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                            :type "any"}},
                          :name {:type "string",
                                 :description "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the name should be a resource name ending with operations/{unique_id}."},
                          :error {:$ref "Status",
                                  :description "The error result of the operation in case of failure or cancellation."},
                          :done {:type "boolean",
                                 :description "If the value is false, it means the operation is still in progress. If true, the operation is completed, and either error or response is available."},
                          :response {:description "The normal response of the operation in case of success. If the original method returns no data on success, such as Delete, the response is google.protobuf.Empty. If the original method is standard Get/Create/Update, the response should be the resource. For other methods, the response should have the type XxxResponse, where Xxx is the original method name. For example, if the original method name is TakeSnapshot(), the inferred response type is TakeSnapshotResponse.",
                                     :additionalProperties {:type "any",
                                                            :description "Properties of the object. Contains field @type with type URL."},
                                     :type "object"}},
             :description "This resource represents a long-running operation that is the result of a network API call.",
             :id "Operation"},
 :SetIamPolicyRequest {:properties {:policy {:$ref "Policy",
                                             :description "REQUIRED: The complete policy to be applied to the resource. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them."},
                                    :updateMask {:description "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used:paths: \"bindings, etag\"",
                                                 :format "google-fieldmask",
                                                 :type "string"}},
                       :id "SetIamPolicyRequest",
                       :type "object",
                       :description "Request message for SetIamPolicy method."},
 :AuditConfig {:id "AuditConfig",
               :description "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs.If there are AuditConfigs for both allServices and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted.Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.",
               :type "object",
               :properties {:auditLogConfigs {:description "The configuration for logging of each type of permission.",
                                              :items {:$ref "AuditLogConfig"},
                                              :type "array"},
                            :service {:type "string",
                                      :description "Specifies a service that will be enabled for audit logging. For example, storage.googleapis.com, cloudsql.googleapis.com. allServices is a special value that covers all services."}}},
 :EncryptionConfig {:id "EncryptionConfig",
                    :properties {:kmsKey {:description "The fully qualified customer provided Cloud KMS key name to use for customer data encryption, in the following form:projects/{project_number}/locations/{location_id}/keyRings/{key_ring_id}/cryptoKeys/{crypto_key_id}.",
                                          :type "string"}},
                    :type "object",
                    :description "Encryption settings for the service."},
 :AuditLogConfig {:description "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
                  :type "object",
                  :id "AuditLogConfig",
                  :properties {:logType {:description "The log type that this config enables.",
                                         :type "string",
                                         :enum ["LOG_TYPE_UNSPECIFIED"
                                                "ADMIN_READ"
                                                "DATA_WRITE"
                                                "DATA_READ"],
                                         :enumDescriptions ["Default case. Should never be this."
                                                            "Admin reads. Example: CloudIAM getIamPolicy"
                                                            "Data writes. Example: CloudSQL Users create"
                                                            "Data reads. Example: CloudSQL Users list"]},
                               :exemptedMembers {:items {:type "string"},
                                                 :description "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
                                                 :type "array"}}},
 :DataCatalogConfig {:properties {:enabled {:type "boolean",
                                            :description "Defines whether the metastore metadata should be synced to Data Catalog. The default value is to disable syncing metastore metadata to Data Catalog."}},
                     :description "Specifies how metastore metadata should be integrated with the Data Catalog service.",
                     :id "DataCatalogConfig",
                     :type "object"},
 :Backup {:type "object",
          :properties {:endTime {:readOnly true,
                                 :description "Output only. The time when the backup finished creating.",
                                 :type "string",
                                 :format "google-datetime"},
                       :serviceRevision {:description "Output only. The revision of the service at the time of backup.",
                                         :$ref "Service",
                                         :readOnly true},
                       :restoringServices {:readOnly true,
                                           :description "Output only. Services that are restoring from the backup.",
                                           :items {:type "string"},
                                           :type "array"},
                       :description {:description "The description of the backup.",
                                     :type "string"},
                       :state {:type "string",
                               :description "Output only. The current state of the backup.",
                               :readOnly true,
                               :enumDescriptions ["The state of the backup is unknown."
                                                  "The backup is being created."
                                                  "The backup is being deleted."
                                                  "The backup is active and ready to use."
                                                  "The backup failed."
                                                  "The backup is being restored."],
                               :enum ["STATE_UNSPECIFIED"
                                      "CREATING"
                                      "DELETING"
                                      "ACTIVE"
                                      "FAILED"
                                      "RESTORING"]},
                       :name {:type "string",
                              :description "Immutable. The relative resource name of the backup, in the following form:projects/{project_number}/locations/{location_id}/services/{service_id}/backups/{backup_id}"},
                       :createTime {:description "Output only. The time when the backup was started.",
                                    :readOnly true,
                                    :type "string",
                                    :format "google-datetime"}},
          :description "The details of a backup resource.",
          :id "Backup"},
 :MetadataImport {:description "A metastore resource that imports metadata.",
                  :type "object",
                  :id "MetadataImport",
                  :properties {:name {:description "Immutable. The relative resource name of the metadata import, of the form:projects/{project_number}/locations/{location_id}/services/{service_id}/metadataImports/{metadata_import_id}.",
                                      :type "string"},
                               :endTime {:format "google-datetime",
                                         :description "Output only. The time when the metadata import finished.",
                                         :readOnly true,
                                         :type "string"},
                               :updateTime {:readOnly true,
                                            :type "string",
                                            :description "Output only. The time when the metadata import was last updated.",
                                            :format "google-datetime"},
                               :createTime {:format "google-datetime",
                                            :description "Output only. The time when the metadata import was started.",
                                            :readOnly true,
                                            :type "string"},
                               :databaseDump {:description "Immutable. A database dump from a pre-existing metastore's database.",
                                              :$ref "DatabaseDump"},
                               :description {:type "string",
                                             :description "The description of the metadata import."},
                               :state {:type "string",
                                       :enum ["STATE_UNSPECIFIED"
                                              "RUNNING"
                                              "SUCCEEDED"
                                              "UPDATING"
                                              "FAILED"],
                                       :description "Output only. The current state of the metadata import.",
                                       :readOnly true,
                                       :enumDescriptions ["The state of the metadata import is unknown."
                                                          "The metadata import is running."
                                                          "The metadata import completed successfully."
                                                          "The metadata import is being updated."
                                                          "The metadata import failed, and attempted metadata changes were rolled back."]}}},
 :ExportMetadataRequest {:id "ExportMetadataRequest",
                         :properties {:databaseDumpType {:enumDescriptions ["The type of the database dump is unknown."
                                                                            "Database dump is a MySQL dump file."
                                                                            "Database dump contains Avro files."],
                                                         :description "Optional. The type of the database dump. If unspecified, defaults to MYSQL.",
                                                         :type "string",
                                                         :enum ["TYPE_UNSPECIFIED"
                                                                "MYSQL"
                                                                "AVRO"]},
                                      :requestId {:description "Optional. A request ID. Specify a unique request ID to allow the server to ignore the request if it has completed. The server will ignore subsequent requests that provide a duplicate request ID for at least 60 minutes after the first request.For example, if an initial request times out, followed by another request with the same request ID, the server ignores the second request to prevent the creation of duplicate commitments.The request ID must be a valid UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier#Format). A zero UUID (00000000-0000-0000-0000-000000000000) is not supported.",
                                                  :type "string"},
                                      :destinationGcsFolder {:type "string",
                                                             :description "A Cloud Storage URI of a folder, in the format gs:///. A sub-folder containing exported files will be created below it."}},
                         :type "object",
                         :description "Request message for DataprocMetastore.ExportMetadata."},
 :KerberosConfig {:id "KerberosConfig",
                  :type "object",
                  :description "Configuration information for a Kerberos principal.",
                  :properties {:krb5ConfigGcsUri {:type "string",
                                                  :description "A Cloud Storage URI that specifies the path to a krb5.conf file. It is of the form gs://{bucket_name}/path/to/krb5.conf, although the file does not need to be named krb5.conf explicitly."},
                               :principal {:type "string",
                                           :description "A Kerberos principal that exists in the both the keytab the KDC to authenticate as. A typical principal is of the form primary/instance@REALM, but there is no exact format."},
                               :keytab {:description "A Kerberos keytab file that can be used to authenticate a service principal with a Kerberos Key Distribution Center (KDC).",
                                        :$ref "Secret"}}},
 :Binding {:id "Binding",
           :properties {:role {:type "string",
                               :description "Role that is assigned to members. For example, roles/viewer, roles/editor, or roles/owner."},
                        :condition {:$ref "Expr",
                                    :description "The condition that is associated with this binding.If the condition evaluates to true, then this binding applies to the current request.If the condition evaluates to false, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies)."},
                        :members {:items {:type "string"},
                                  :type "array",
                                  :description "Specifies the identities requesting access for a Cloud Platform resource. members can have the following values: allUsers: A special identifier that represents anyone who is on the internet; with or without a Google account. allAuthenticatedUsers: A special identifier that represents anyone who is authenticated with a Google account or a service account. user:{emailid}: An email address that represents a specific Google account. For example, alice@example.com . serviceAccount:{emailid}: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com. group:{emailid}: An email address that represents a Google group. For example, admins@example.com. deleted:user:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a user that has been recently deleted. For example, alice@example.com?uid=123456789012345678901. If the user is recovered, this value reverts to user:{emailid} and the recovered user retains the role in the binding. deleted:serviceAccount:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901. If the service account is undeleted, this value reverts to serviceAccount:{emailid} and the undeleted service account retains the role in the binding. deleted:group:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, admins@example.com?uid=123456789012345678901. If the group is recovered, this value reverts to group:{emailid} and the recovered group retains the role in the binding. domain:{domain}: The G Suite domain (primary) that represents all the users of that domain. For example, google.com or example.com."}},
           :type "object",
           :description "Associates members with a role."},
 :MetadataManagementActivity {:type "object",
                              :description "The metadata management activities of the metastore service.",
                              :id "MetadataManagementActivity",
                              :properties {:metadataExports {:type "array",
                                                             :description "Output only. The latest metadata exports of the metastore service.",
                                                             :items {:$ref "MetadataExport"},
                                                             :readOnly true},
                                           :restores {:readOnly true,
                                                      :type "array",
                                                      :items {:$ref "Restore"},
                                                      :description "Output only. The latest restores of the metastore service."}}},
 :DataplexConfig {:properties {:lakeResources {:description "A reference to the Lake resources that this metastore service is attached to. The key is the lake resource name. Example: projects/{project_number}/locations/{location_id}/lakes/{lake_id}.",
                                               :additionalProperties {:$ref "Lake"},
                                               :type "object"}},
                  :id "DataplexConfig",
                  :description "Specifies how metastore metadata should be integrated with the Dataplex service.",
                  :type "object"},
 :ListMetadataImportsResponse {:description "Response message for DataprocMetastore.ListMetadataImports.",
                               :properties {:metadataImports {:type "array",
                                                              :description "The imports in the specified service.",
                                                              :items {:$ref "MetadataImport"}},
                                            :nextPageToken {:description "A token that can be sent as page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                                                            :type "string"},
                                            :unreachable {:description "Locations that could not be reached.",
                                                          :type "array",
                                                          :items {:type "string"}}},
                               :id "ListMetadataImportsResponse",
                               :type "object"},
 :Secret {:description "A securely stored value.",
          :type "object",
          :properties {:cloudSecret {:description "The relative resource name of a Secret Manager secret version, in the following form:projects/{project_number}/secrets/{secret_id}/versions/{version_id}.",
                                     :type "string"}},
          :id "Secret"},
 :Empty {:description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for Empty is empty JSON object {}.",
         :properties {},
         :type "object",
         :id "Empty"},
 :ListLocationsResponse {:type "object",
                         :description "The response message for Locations.ListLocations.",
                         :properties {:nextPageToken {:description "The standard List next-page token.",
                                                      :type "string"},
                                      :locations {:items {:$ref "Location"},
                                                  :type "array",
                                                  :description "A list of locations that matches the specified filter in the request."}},
                         :id "ListLocationsResponse"},
 :TestIamPermissionsRequest {:properties {:permissions {:description "The set of permissions to check for the resource. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see IAM Overview (https://cloud.google.com/iam/docs/overview#permissions).",
                                                        :items {:type "string"},
                                                        :type "array"}},
                             :id "TestIamPermissionsRequest",
                             :type "object",
                             :description "Request message for TestIamPermissions method."},
 :Restore {:type "object",
           :id "Restore",
           :properties {:startTime {:readOnly true,
                                    :description "Output only. The time when the restore started.",
                                    :type "string",
                                    :format "google-datetime"},
                        :details {:description "Output only. The restore details containing the revision of the service to be restored to, in format of JSON.",
                                  :readOnly true,
                                  :type "string"},
                        :endTime {:readOnly true,
                                  :type "string",
                                  :format "google-datetime",
                                  :description "Output only. The time when the restore ended."},
                        :state {:type "string",
                                :enum ["STATE_UNSPECIFIED"
                                       "RUNNING"
                                       "SUCCEEDED"
                                       "FAILED"
                                       "CANCELLED"],
                                :description "Output only. The current state of the restore.",
                                :readOnly true,
                                :enumDescriptions ["The state of the metadata restore is unknown."
                                                   "The metadata restore is running."
                                                   "The metadata restore completed successfully."
                                                   "The metadata restore failed."
                                                   "The metadata restore is cancelled."]},
                        :backup {:description "Output only. The relative resource name of the metastore service backup to restore from, in the following form:projects/{project_id}/locations/{location_id}/services/{service_id}/backups/{backup_id}.",
                                 :readOnly true,
                                 :type "string"},
                        :type {:readOnly true,
                               :enum ["RESTORE_TYPE_UNSPECIFIED"
                                      "FULL"
                                      "METADATA_ONLY"],
                               :type "string",
                               :description "Output only. The type of restore.",
                               :enumDescriptions ["The restore type is unknown."
                                                  "The service's metadata and configuration are restored."
                                                  "Only the service's metadata is restored."]}},
           :description "The details of a metadata restore operation."},
 :Lake {:properties {:name {:description "The Lake resource name. Example: projects/{project_number}/locations/{location_id}/lakes/{lake_id}",
                            :type "string"}},
        :description "Represents a Lake resource",
        :id "Lake",
        :type "object"},
 :TestIamPermissionsResponse {:properties {:permissions {:items {:type "string"},
                                                         :type "array",
                                                         :description "A subset of TestPermissionsRequest.permissions that the caller is allowed."}},
                              :id "TestIamPermissionsResponse",
                              :type "object",
                              :description "Response message for TestIamPermissions method."},
 :MetadataExport {:properties {:databaseDumpType {:type "string",
                                                  :enum ["TYPE_UNSPECIFIED"
                                                         "MYSQL"
                                                         "AVRO"],
                                                  :readOnly true,
                                                  :enumDescriptions ["The type of the database dump is unknown."
                                                                     "Database dump is a MySQL dump file."
                                                                     "Database dump contains Avro files."],
                                                  :description "Output only. The type of the database dump."},
                               :endTime {:description "Output only. The time when the export ended.",
                                         :type "string",
                                         :format "google-datetime",
                                         :readOnly true},
                               :startTime {:description "Output only. The time when the export started.",
                                           :format "google-datetime",
                                           :type "string",
                                           :readOnly true},
                               :state {:description "Output only. The current state of the export.",
                                       :enumDescriptions ["The state of the metadata export is unknown."
                                                          "The metadata export is running."
                                                          "The metadata export completed successfully."
                                                          "The metadata export failed."
                                                          "The metadata export is cancelled."],
                                       :readOnly true,
                                       :type "string",
                                       :enum ["STATE_UNSPECIFIED"
                                              "RUNNING"
                                              "SUCCEEDED"
                                              "FAILED"
                                              "CANCELLED"]},
                               :destinationGcsUri {:type "string",
                                                   :description "Output only. A Cloud Storage URI of a folder that metadata are exported to, in the form of gs:////, where is automatically generated.",
                                                   :readOnly true}},
                  :id "MetadataExport",
                  :description "The details of a metadata export operation.",
                  :type "object"},
 :ListBackupsResponse {:description "Response message for DataprocMetastore.ListBackups.",
                       :id "ListBackupsResponse",
                       :properties {:nextPageToken {:description "A token that can be sent as page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                                                    :type "string"},
                                    :unreachable {:type "array",
                                                  :items {:type "string"},
                                                  :description "Locations that could not be reached."},
                                    :backups {:description "The backups of the specified service.",
                                              :items {:$ref "Backup"},
                                              :type "array"}},
                       :type "object"},
 :OperationMetadata {:type "object",
                     :id "OperationMetadata",
                     :description "Represents the metadata of a long-running operation.",
                     :properties {:statusMessage {:type "string",
                                                  :readOnly true,
                                                  :description "Output only. Human-readable status of the operation, if any."},
                                  :target {:readOnly true,
                                           :type "string",
                                           :description "Output only. Server-defined resource path for the target of the operation."},
                                  :verb {:type "string",
                                         :readOnly true,
                                         :description "Output only. Name of the verb executed by the operation."},
                                  :createTime {:format "google-datetime",
                                               :readOnly true,
                                               :description "Output only. The time the operation was created.",
                                               :type "string"},
                                  :apiVersion {:type "string",
                                               :description "Output only. API version used to start the operation.",
                                               :readOnly true},
                                  :endTime {:format "google-datetime",
                                            :description "Output only. The time the operation finished running.",
                                            :type "string",
                                            :readOnly true},
                                  :requestedCancellation {:type "boolean",
                                                          :readOnly true,
                                                          :description "Output only. Identifies whether the caller has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to Code.CANCELLED."}}},
 :Expr {:description "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec.Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
        :type "object",
        :properties {:description {:type "string",
                                   :description "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."},
                     :title {:description "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
                             :type "string"},
                     :expression {:description "Textual representation of an expression in Common Expression Language syntax.",
                                  :type "string"},
                     :location {:type "string",
                                :description "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."}},
        :id "Expr"},
 :LocationMetadata {:description "Metadata about the service in a location.",
                    :properties {:supportedHiveMetastoreVersions {:description "The versions of Hive Metastore that can be used when creating a new metastore service in this location. The server guarantees that exactly one HiveMetastoreVersion in the list will set is_default.",
                                                                  :type "array",
                                                                  :items {:$ref "HiveMetastoreVersion"}}},
                    :id "LocationMetadata",
                    :type "object"},
 :ListOperationsResponse {:properties {:nextPageToken {:type "string",
                                                       :description "The standard List next-page token."},
                                       :operations {:items {:$ref "Operation"},
                                                    :type "array",
                                                    :description "A list of operations that matches the specified filter in the request."}},
                          :description "The response message for Operations.ListOperations.",
                          :type "object",
                          :id "ListOperationsResponse"},
 :Location {:type "object",
            :id "Location",
            :properties {:labels {:additionalProperties {:type "string"},
                                  :type "object",
                                  :description "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"} "},
                         :displayName {:description "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
                                       :type "string"},
                         :locationId {:type "string",
                                      :description "The canonical id for this location. For example: \"us-east1\"."},
                         :name {:type "string",
                                :description "Resource name for the location, which may vary between implementations. For example: \"projects/example-project/locations/us-east1\""},
                         :metadata {:type "object",
                                    :additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                           :type "any"},
                                    :description "Service-specific metadata. For example the available capacity at the given location."}},
            :description "A resource that represents Google Cloud Platform location."},
 :ListServicesResponse {:id "ListServicesResponse",
                        :description "Response message for DataprocMetastore.ListServices.",
                        :properties {:nextPageToken {:type "string",
                                                     :description "A token that can be sent as page_token to retrieve the next page. If this field is omitted, there are no subsequent pages."},
                                     :unreachable {:items {:type "string"},
                                                   :type "array",
                                                   :description "Locations that could not be reached."},
                                     :services {:type "array",
                                                :items {:$ref "Service"},
                                                :description "The services in the specified location."}},
                        :type "object"},
 :Policy {:properties {:auditConfigs {:description "Specifies cloud audit logging configuration for this policy.",
                                      :items {:$ref "AuditConfig"},
                                      :type "array"},
                       :version {:description "Specifies the format of the policy.Valid values are 0, 1, and 3. Requests that specify an invalid value are rejected.Any operation that affects conditional role bindings must specify version 3. This requirement applies to the following operations: Getting a policy that includes a conditional role binding Adding a conditional role binding to a policy Changing a conditional role binding in a policy Removing any role binding, with or without a condition, from a policy that includes conditionsImportant: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy. If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost.If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).",
                                 :format "int32",
                                 :type "integer"},
                       :bindings {:type "array",
                                  :description "Associates a list of members to a role. Optionally, may specify a condition that determines how and when the bindings are applied. Each of the bindings must contain at least one member.",
                                  :items {:$ref "Binding"}},
                       :etag {:format "byte",
                              :type "string",
                              :description "etag is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the etag in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An etag is returned in the response to getIamPolicy, and systems are expected to put that etag in the request to setIamPolicy to ensure that their change will be applied to the same version of the policy.Important: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy. If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost."}},
          :type "object",
          :id "Policy",
          :description "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources.A Policy is a collection of bindings. A binding binds one or more members to a single role. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A role is a named list of permissions; each role can be an IAM predefined role or a user-created custom role.For some types of Google Cloud resources, a binding can also specify a condition, which is a logical expression that allows access to a resource only if the expression evaluates to true. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).JSON example: { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } YAML example: bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the IAM documentation (https://cloud.google.com/iam/docs/)."},
 :DatabaseDump {:type "object",
                :id "DatabaseDump",
                :description "A specification of the location of and metadata about a database dump from a relational database management system.",
                :properties {:databaseType {:type "string",
                                            :enumDescriptions ["The type of the source database is unknown."
                                                               "The type of the source database is MySQL."],
                                            :description "The type of the database.",
                                            :enum ["DATABASE_TYPE_UNSPECIFIED"
                                                   "MYSQL"]},
                             :gcsUri {:description "A Cloud Storage object or folder URI that specifies the source from which to import metadata. It must begin with gs://.",
                                      :type "string"},
                             :sourceDatabase {:type "string",
                                              :description "The name of the source database."},
                             :type {:enum ["TYPE_UNSPECIFIED"
                                           "MYSQL"
                                           "AVRO"],
                                    :enumDescriptions ["The type of the database dump is unknown."
                                                       "Database dump is a MySQL dump file."
                                                       "Database dump contains Avro files."],
                                    :type "string",
                                    :description "Optional. The type of the database dump. If unspecified, defaults to MYSQL."}}},
 :Status {:properties {:message {:type "string",
                                 :description "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."},
                       :details {:type "array",
                                 :description "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                                 :items {:additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                                :type "any"},
                                         :type "object"}},
                       :code {:type "integer",
                              :format "int32",
                              :description "The status code, which should be an enum value of google.rpc.Code."}},
          :description "The Status type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by gRPC (https://github.com/grpc). Each Status message contains three pieces of data: error code, error message, and error details.You can find out more about this error model and how to work with it in the API Design Guide (https://cloud.google.com/apis/design/errors).",
          :id "Status",
          :type "object"}}
