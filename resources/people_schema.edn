{:Url {:properties {:type {:description "The type of the URL. The type can be custom or one of these predefined values: * `home` * `work` * `blog` * `profile` * `homePage` * `ftp` * `reservations` * `appInstallPage`: website for a Currents application. * `other`",
                           :type "string"},
                    :value {:description "The URL.", :type "string"},
                    :formattedType {:readOnly true,
                                    :type "string",
                                    :description "Output only. The type of the URL translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale."},
                    :metadata {:description "Metadata about the URL.",
                               :$ref "FieldMetadata"}},
       :description "A person's associated URLs.",
       :id "Url",
       :type "object"},
 :Skill {:type "object",
         :description "A skill that the person has.",
         :properties {:value {:description "The skill; for example, `underwater basket weaving`.",
                              :type "string"},
                      :metadata {:$ref "FieldMetadata",
                                 :description "Metadata about the skill."}},
         :id "Skill"},
 :ExternalId {:type "object",
              :description "An identifier from an external entity related to the person.",
              :id "ExternalId",
              :properties {:type {:type "string",
                                  :description "The type of the external ID. The type can be custom or one of these predefined values: * `account` * `customer` * `loginId` * `network` * `organization`"},
                           :value {:type "string",
                                   :description "The value of the external ID."},
                           :formattedType {:description "Output only. The type of the event translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale.",
                                           :type "string",
                                           :readOnly true},
                           :metadata {:description "Metadata about the external ID.",
                                      :$ref "FieldMetadata"}}},
 :ListContactGroupsResponse {:description "The response to a list contact groups request.",
                             :properties {:nextPageToken {:description "The token that can be used to retrieve the next page of results.",
                                                          :type "string"},
                                          :totalItems {:type "integer",
                                                       :format "int32",
                                                       :description "The total number of items in the list without pagination."},
                                          :nextSyncToken {:type "string",
                                                          :description "The token that can be used to retrieve changes since the last request."},
                                          :contactGroups {:description "The list of contact groups. Members of the contact groups are not populated.",
                                                          :type "array",
                                                          :items {:$ref "ContactGroup"}}},
                             :id "ListContactGroupsResponse",
                             :type "object"},
 :ClientData {:id "ClientData",
              :description "Arbitrary client data that is populated by clients. Duplicate keys and values are allowed.",
              :properties {:value {:type "string",
                                   :description "The client specified value of the client data."},
                           :key {:description "The client specified key of the client data.",
                                 :type "string"},
                           :metadata {:$ref "FieldMetadata",
                                      :description "Metadata about the client data."}},
              :type "object"},
 :UpdateContactGroupRequest {:id "UpdateContactGroupRequest",
                             :properties {:contactGroup {:$ref "ContactGroup",
                                                         :description "Required. The contact group to update."}},
                             :description "A request to update an existing user contact group. All updated fields will be replaced.",
                             :type "object"},
 :ListDirectoryPeopleResponse {:description "The response to a request for the authenticated user's domain directory.",
                               :id "ListDirectoryPeopleResponse",
                               :properties {:nextPageToken {:type "string",
                                                            :description "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."},
                                            :nextSyncToken {:description "A token, which can be sent as `sync_token` to retrieve changes since the last request. Request must set `request_sync_token` to return the sync token.",
                                                            :type "string"},
                                            :people {:description "The list of people in the domain directory.",
                                                     :items {:$ref "Person"},
                                                     :type "array"}},
                               :type "object"},
 :UpdateContactPhotoResponse {:description "The response for updating a contact's photo.",
                              :id "UpdateContactPhotoResponse",
                              :properties {:person {:description "The updated person, if person_fields is set in the UpdateContactPhotoRequest; otherwise this will be unset.",
                                                    :$ref "Person"}},
                              :type "object"},
 :Tagline {:type "object",
           :properties {:value {:type "string",
                                :description "The tagline."},
                        :metadata {:description "Metadata about the tagline.",
                                   :$ref "FieldMetadata"}},
           :id "Tagline",
           :description "**DEPRECATED**: No data will be returned A brief one-line description of the person."},
 :Interest {:type "object",
            :id "Interest",
            :description "One of the person's interests.",
            :properties {:metadata {:$ref "FieldMetadata",
                                    :description "Metadata about the interest."},
                         :value {:description "The interest; for example, `stargazing`.",
                                 :type "string"}}},
 :EmailAddress {:id "EmailAddress",
                :properties {:formattedType {:type "string",
                                             :description "Output only. The type of the email address translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale.",
                                             :readOnly true},
                             :displayName {:type "string",
                                           :description "The display name of the email."},
                             :value {:description "The email address.",
                                     :type "string"},
                             :type {:description "The type of the email address. The type can be custom or one of these predefined values: * `home` * `work` * `other`",
                                    :type "string"},
                             :metadata {:description "Metadata about the email address.",
                                        :$ref "FieldMetadata"}},
                :type "object",
                :description "A person's email address."},
 :Residence {:type "object",
             :properties {:value {:type "string",
                                  :description "The address of the residence."},
                          :metadata {:$ref "FieldMetadata",
                                     :description "Metadata about the residence."},
                          :current {:description "True if the residence is the person's current residence; false if the residence is a past residence.",
                                    :type "boolean"}},
             :id "Residence",
             :description "**DEPRECATED**: Please use `person.locations` instead. A person's past or current residence."},
 :SipAddress {:type "object",
              :id "SipAddress",
              :description "A person's SIP address. Session Initial Protocol addresses are used for VoIP communications to make voice or video calls over the internet.",
              :properties {:formattedType {:description "Output only. The type of the SIP address translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale.",
                                           :type "string",
                                           :readOnly true},
                           :value {:description "The SIP address in the [RFC 3261 19.1](https://tools.ietf.org/html/rfc3261#section-19.1) SIP URI format.",
                                   :type "string"},
                           :metadata {:$ref "FieldMetadata",
                                      :description "Metadata about the SIP address."},
                           :type {:description "The type of the SIP address. The type can be custom or or one of these predefined values: * `home` * `work` * `mobile` * `other`",
                                  :type "string"}}},
 :DeleteContactPhotoResponse {:description "The response for deleteing a contact's photo.",
                              :id "DeleteContactPhotoResponse",
                              :type "object",
                              :properties {:person {:$ref "Person",
                                                    :description "The updated person, if person_fields is set in the DeleteContactPhotoRequest; otherwise this will be unset."}}},
 :CopyOtherContactToMyContactsGroupRequest {:description "A request to copy an \"Other contact\" to my contacts group.",
                                            :properties {:copyMask {:description "Required. A field mask to restrict which fields are copied into the new contact. Valid values are: * emailAddresses * names * phoneNumbers",
                                                                    :format "google-fieldmask",
                                                                    :type "string"},
                                                         :readMask {:format "google-fieldmask",
                                                                    :description "Optional. A field mask to restrict which fields on the person are returned. Multiple fields can be specified by separating them with commas. Defaults to the copy mask with metadata and membership fields if not set. Valid values are: * addresses * ageRanges * biographies * birthdays * calendarUrls * clientData * coverPhotos * emailAddresses * events * externalIds * genders * imClients * interests * locales * locations * memberships * metadata * miscKeywords * names * nicknames * occupations * organizations * phoneNumbers * photos * relations * sipAddresses * skills * urls * userDefined",
                                                                    :type "string"},
                                                         :sources {:description "Optional. A mask of what source types to return. Defaults to READ_SOURCE_TYPE_CONTACT and READ_SOURCE_TYPE_PROFILE if not set.",
                                                                   :items {:enumDescriptions ["Unspecified."
                                                                                              "Returns SourceType.ACCOUNT, SourceType.DOMAIN_PROFILE, and SourceType.PROFILE."
                                                                                              "Returns SourceType.CONTACT."
                                                                                              "Returns SourceType.DOMAIN_CONTACT."],
                                                                           :type "string",
                                                                           :enum ["READ_SOURCE_TYPE_UNSPECIFIED"
                                                                                  "READ_SOURCE_TYPE_PROFILE"
                                                                                  "READ_SOURCE_TYPE_CONTACT"
                                                                                  "READ_SOURCE_TYPE_DOMAIN_CONTACT"]},
                                                                   :type "array"}},
                                            :id "CopyOtherContactToMyContactsGroupRequest",
                                            :type "object"},
 :Event {:description "An event related to the person.",
         :type "object",
         :properties {:formattedType {:description "Output only. The type of the event translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale.",
                                      :readOnly true,
                                      :type "string"},
                      :type {:description "The type of the event. The type can be custom or one of these predefined values: * `anniversary` * `other`",
                             :type "string"},
                      :metadata {:description "Metadata about the event.",
                                 :$ref "FieldMetadata"},
                      :date {:$ref "Date",
                             :description "The date of the event."}},
         :id "Event"},
 :Occupation {:id "Occupation",
              :type "object",
              :properties {:value {:description "The occupation; for example, `carpenter`.",
                                   :type "string"},
                           :metadata {:description "Metadata about the occupation.",
                                      :$ref "FieldMetadata"}},
              :description "A person's occupation."},
 :ProfileMetadata {:type "object",
                   :properties {:userTypes {:readOnly true,
                                            :description "Output only. The user types.",
                                            :items {:enumDescriptions ["The user type is not known."
                                                                       "The user is a Google user."
                                                                       "The user is a Currents user."
                                                                       "The user is a G Suite user."],
                                                    :enum ["USER_TYPE_UNKNOWN"
                                                           "GOOGLE_USER"
                                                           "GPLUS_USER"
                                                           "GOOGLE_APPS_USER"],
                                                    :type "string"},
                                            :type "array"},
                                :objectType {:description "Output only. The profile object type.",
                                             :enumDescriptions ["Unspecified."
                                                                "Person."
                                                                "[Currents Page.](https://gsuite.google.com/products/currents/)"],
                                             :type "string",
                                             :enum ["OBJECT_TYPE_UNSPECIFIED"
                                                    "PERSON"
                                                    "PAGE"],
                                             :readOnly true}},
                   :description "The metadata about a profile.",
                   :id "ProfileMetadata"},
 :AgeRangeType {:properties {:ageRange {:enumDescriptions ["Unspecified."
                                                           "Younger than eighteen."
                                                           "Between eighteen and twenty."
                                                           "Twenty-one and older."],
                                        :type "string",
                                        :enum ["AGE_RANGE_UNSPECIFIED"
                                               "LESS_THAN_EIGHTEEN"
                                               "EIGHTEEN_TO_TWENTY"
                                               "TWENTY_ONE_OR_OLDER"],
                                        :description "The age range."},
                             :metadata {:description "Metadata about the age range.",
                                        :$ref "FieldMetadata"}},
                :type "object",
                :description "A person's age range.",
                :id "AgeRangeType"},
 :PersonMetadata {:id "PersonMetadata",
                  :properties {:linkedPeopleResourceNames {:description "Output only. Resource names of people linked to this resource.",
                                                           :readOnly true,
                                                           :type "array",
                                                           :items {:type "string"}},
                               :objectType {:readOnly true,
                                            :enum ["OBJECT_TYPE_UNSPECIFIED"
                                                   "PERSON"
                                                   "PAGE"],
                                            :type "string",
                                            :enumDescriptions ["Unspecified."
                                                               "Person."
                                                               "[Currents Page.](https://gsuite.google.com/products/currents/)"],
                                            :description "Output only. **DEPRECATED** (Please use `person.metadata.sources.profileMetadata.objectType` instead) The type of the person object."},
                               :deleted {:type "boolean",
                                         :readOnly true,
                                         :description "Output only. True if the person resource has been deleted. Populated only for [`connections.list`](/people/api/rest/v1/people.connections/list) requests that include a sync token."},
                               :previousResourceNames {:description "Output only. Any former resource names this person has had. Populated only for [`connections.list`](/people/api/rest/v1/people.connections/list) requests that include a sync token. The resource name may change when adding or removing fields that link a contact and profile such as a verified email, verified phone number, or profile URL.",
                                                       :items {:type "string"},
                                                       :readOnly true,
                                                       :type "array"},
                               :sources {:description "The sources of data for the person.",
                                         :type "array",
                                         :items {:$ref "Source"}}},
                  :description "The metadata about a person.",
                  :type "object"},
 :Address {:id "Address",
           :type "object",
           :properties {:formattedType {:readOnly true,
                                        :type "string",
                                        :description "Output only. The type of the address translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale."},
                        :poBox {:type "string",
                                :description "The P.O. box of the address."},
                        :city {:description "The city of the address.",
                               :type "string"},
                        :type {:description "The type of the address. The type can be custom or one of these predefined values: * `home` * `work` * `other`",
                               :type "string"},
                        :streetAddress {:description "The street address.",
                                        :type "string"},
                        :region {:type "string",
                                 :description "The region of the address; for example, the state or province."},
                        :formattedValue {:type "string",
                                         :description "The unstructured value of the address. If this is not set by the user it will be automatically constructed from structured values."},
                        :postalCode {:description "The postal code of the address.",
                                     :type "string"},
                        :extendedAddress {:type "string",
                                          :description "The extended address of the address; for example, the apartment number."},
                        :country {:type "string",
                                  :description "The country of the address."},
                        :metadata {:description "Metadata about the address.",
                                   :$ref "FieldMetadata"},
                        :countryCode {:description "The [ISO 3166-1 alpha-2](http://www.iso.org/iso/country_codes.htm) country code of the address.",
                                      :type "string"}},
           :description "A person's physical address. May be a P.O. box or street address. All fields are optional."},
 :ModifyContactGroupMembersRequest {:properties {:resourceNamesToAdd {:type "array",
                                                                      :description "Optional. The resource names of the contact people to add in the form of `people/{person_id}`.",
                                                                      :items {:type "string"}},
                                                 :resourceNamesToRemove {:type "array",
                                                                         :items {:type "string"},
                                                                         :description "Optional. The resource names of the contact people to remove in the form of `people/{person_id}`."}},
                                    :description "A request to modify an existing contact group's members. Contacts can be removed from any group but they can only be added to a user group or \"myContacts\" or \"starred\" system groups.",
                                    :id "ModifyContactGroupMembersRequest",
                                    :type "object"},
 :RelationshipInterest {:id "RelationshipInterest",
                        :properties {:formattedValue {:readOnly true,
                                                      :type "string",
                                                      :description "Output only. The value of the relationship interest translated and formatted in the viewer's account locale or the locale specified in the Accept-Language HTTP header."},
                                     :metadata {:description "Metadata about the relationship interest.",
                                                :$ref "FieldMetadata"},
                                     :value {:description "The kind of relationship the person is looking for. The value can be custom or one of these predefined values: * `friend` * `date` * `relationship` * `networking`",
                                             :type "string"}},
                        :description "**DEPRECATED**: No data will be returned A person's relationship interest .",
                        :type "object"},
 :Empty {:id "Empty",
         :properties {},
         :description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
         :type "object"},
 :Membership {:description "A person's membership in a group. Only contact group memberships can be modified.",
              :type "object",
              :properties {:metadata {:$ref "FieldMetadata",
                                      :description "Metadata about the membership."},
                           :contactGroupMembership {:$ref "ContactGroupMembership",
                                                    :description "The contact group membership."},
                           :domainMembership {:readOnly true,
                                              :description "Output only. The domain membership.",
                                              :$ref "DomainMembership"}},
              :id "Membership"},
 :ContactGroupResponse {:id "ContactGroupResponse",
                        :type "object",
                        :properties {:requestedResourceName {:description "The original requested resource name.",
                                                             :type "string"},
                                     :status {:description "The status of the response.",
                                              :$ref "Status"},
                                     :contactGroup {:description "The contact group.",
                                                    :$ref "ContactGroup"}},
                        :description "The response for a specific contact group."},
 :CoverPhoto {:type "object",
              :description "A person's cover photo. A large image shown on the person's profile page that represents who they are or what they care about.",
              :properties {:metadata {:$ref "FieldMetadata",
                                      :description "Metadata about the cover photo."},
                           :default {:description "True if the cover photo is the default cover photo; false if the cover photo is a user-provided cover photo.",
                                     :type "boolean"},
                           :url {:description "The URL of the cover photo.",
                                 :type "string"}},
              :id "CoverPhoto"},
 :Locale {:properties {:metadata {:$ref "FieldMetadata",
                                  :description "Metadata about the locale."},
                       :value {:description "The well-formed [IETF BCP 47](https://tools.ietf.org/html/bcp47) language tag representing the locale.",
                               :type "string"}},
          :description "A person's locale preference.",
          :type "object",
          :id "Locale"},
 :PhoneNumber {:id "PhoneNumber",
               :properties {:value {:description "The phone number.",
                                    :type "string"},
                            :metadata {:$ref "FieldMetadata",
                                       :description "Metadata about the phone number."},
                            :type {:description "The type of the phone number. The type can be custom or one of these predefined values: * `home` * `work` * `mobile` * `homeFax` * `workFax` * `otherFax` * `pager` * `workMobile` * `workPager` * `main` * `googleVoice` * `other`",
                                   :type "string"},
                            :formattedType {:type "string",
                                            :description "Output only. The type of the phone number translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale.",
                                            :readOnly true},
                            :canonicalForm {:readOnly true,
                                            :description "Output only. The canonicalized [ITU-T E.164](https://law.resource.org/pub/us/cfr/ibr/004/itu-t.E.164.1.2008.pdf) form of the phone number.",
                                            :type "string"}},
               :description "A person's phone number.",
               :type "object"},
 :Relation {:type "object",
            :properties {:formattedType {:type "string",
                                         :description "Output only. The type of the relation translated and formatted in the viewer's account locale or the locale specified in the Accept-Language HTTP header.",
                                         :readOnly true},
                         :person {:description "The name of the other person this relation refers to.",
                                  :type "string"},
                         :metadata {:description "Metadata about the relation.",
                                    :$ref "FieldMetadata"},
                         :type {:description "The person's relation to the other person. The type can be custom or one of these predefined values: * `spouse` * `child` * `mother` * `father` * `parent` * `brother` * `sister` * `friend` * `relative` * `domesticPartner` * `manager` * `assistant` * `referredBy` * `partner`",
                                :type "string"}},
            :id "Relation",
            :description "A person's relation to another person."},
 :SearchDirectoryPeopleResponse {:type "object",
                                 :properties {:nextPageToken {:type "string",
                                                              :description "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."},
                                              :totalSize {:type "integer",
                                                          :format "int32",
                                                          :description "The total number of items in the list without pagination."},
                                              :people {:type "array",
                                                       :description "The list of people in the domain directory that match the query.",
                                                       :items {:$ref "Person"}}},
                                 :id "SearchDirectoryPeopleResponse",
                                 :description "The response to a request for people in the authenticated user's domain directory that match the specified query."},
 :CreateContactGroupRequest {:description "A request to create a new contact group.",
                             :id "CreateContactGroupRequest",
                             :properties {:contactGroup {:$ref "ContactGroup",
                                                         :description "Required. The contact group to create."}},
                             :type "object"},
 :RelationshipStatus {:properties {:value {:type "string",
                                           :description "The relationship status. The value can be custom or one of these predefined values: * `single` * `inARelationship` * `engaged` * `married` * `itsComplicated` * `openRelationship` * `widowed` * `inDomesticPartnership` * `inCivilUnion`"},
                                   :metadata {:$ref "FieldMetadata",
                                              :description "Metadata about the relationship status."},
                                   :formattedValue {:readOnly true,
                                                    :type "string",
                                                    :description "Output only. The value of the relationship status translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale."}},
                      :description "**DEPRECATED**: No data will be returned A person's relationship status.",
                      :id "RelationshipStatus",
                      :type "object"},
 :UserDefined {:properties {:metadata {:$ref "FieldMetadata",
                                       :description "Metadata about the user defined data."},
                            :key {:type "string",
                                  :description "The end user specified key of the user defined data."},
                            :value {:description "The end user specified value of the user defined data.",
                                    :type "string"}},
               :id "UserDefined",
               :description "Arbitrary user data that is populated by the end users.",
               :type "object"},
 :ContactGroup {:description "A contact group.",
                :properties {:memberResourceNames {:type "array",
                                                   :description "Output only. The list of contact person resource names that are members of the contact group. The field is not populated for LIST requests and can only be updated through the [ModifyContactGroupMembers](/people/api/rest/v1/contactgroups/members/modify).",
                                                   :readOnly true,
                                                   :items {:type "string"}},
                             :name {:description "The contact group name set by the group owner or a system provided name for system groups.",
                                    :type "string"},
                             :memberCount {:description "Output only. The total number of contacts in the group irrespective of max members in specified in the request.",
                                           :format "int32",
                                           :type "integer",
                                           :readOnly true},
                             :formattedName {:type "string",
                                             :readOnly true,
                                             :description "Output only. The name translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale for system groups names. Group names set by the owner are the same as name."},
                             :resourceName {:description "The resource name for the contact group, assigned by the server. An ASCII string, in the form of `contactGroups/{contact_group_id}`.",
                                            :type "string"},
                             :groupType {:enum ["GROUP_TYPE_UNSPECIFIED"
                                                "USER_CONTACT_GROUP"
                                                "SYSTEM_CONTACT_GROUP"],
                                         :type "string",
                                         :description "Output only. The contact group type.",
                                         :enumDescriptions ["Unspecified."
                                                            "User defined contact group."
                                                            "System defined contact group."],
                                         :readOnly true},
                             :metadata {:readOnly true,
                                        :description "Output only. Metadata about the contact group.",
                                        :$ref "ContactGroupMetadata"},
                             :etag {:type "string",
                                    :description "The [HTTP entity tag](https://en.wikipedia.org/wiki/HTTP_ETag) of the resource. Used for web cache validation."}},
                :id "ContactGroup",
                :type "object"},
 :Date {:type "object",
        :properties {:year {:description "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
                            :format "int32",
                            :type "integer"},
                     :day {:description "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
                           :format "int32",
                           :type "integer"},
                     :month {:type "integer",
                             :description "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
                             :format "int32"}},
        :id "Date",
        :description "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values * A month and day value, with a zero year, such as an anniversary * A year on its own, with zero month and day values * A year and month value, with a zero day, such as a credit card expiration date Related types are google.type.TimeOfDay and `google.protobuf.Timestamp`."},
 :FieldMetadata {:properties {:primary {:type "boolean",
                                        :description "True if the field is the primary field; false if the field is a secondary field."},
                              :source {:$ref "Source",
                                       :description "The source of the field."},
                              :verified {:readOnly true,
                                         :type "boolean",
                                         :description "Output only. True if the field is verified; false if the field is unverified. A verified field is typically a name, email address, phone number, or website that has been confirmed to be owned by the person."}},
                 :type "object",
                 :description "Metadata about a field.",
                 :id "FieldMetadata"},
 :Photo {:properties {:metadata {:description "Metadata about the photo.",
                                 :$ref "FieldMetadata"},
                      :default {:type "boolean",
                                :description "True if the photo is a default photo; false if the photo is a user-provided photo."},
                      :url {:description "The URL of the photo. You can change the desired size by appending a query parameter `sz={size}` at the end of the url, where {size} is the size in pixels. Example: https://lh3.googleusercontent.com/-T_wVWLlmg7w/AAAAAAAAAAI/AAAAAAAABa8/00gzXvDBYqw/s100/photo.jpg?sz=50",
                            :type "string"}},
         :type "object",
         :description "A person's photo. A picture shown next to the person's name to help others recognize the person.",
         :id "Photo"},
 :GetPeopleResponse {:properties {:responses {:description "The response for each requested resource name.",
                                              :type "array",
                                              :items {:$ref "PersonResponse"}}},
                     :description "The response to a get request for a list of people by resource name.",
                     :id "GetPeopleResponse",
                     :type "object"},
 :PersonResponse {:type "object",
                  :properties {:person {:$ref "Person",
                                        :description "The person."},
                               :status {:$ref "Status",
                                        :description "The status of the response."},
                               :httpStatusCode {:format "int32",
                                                :type "integer",
                                                :description "**DEPRECATED** (Please use status instead) [HTTP 1.1 status code] (http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html)."},
                               :requestedResourceName {:description "The original requested resource name. May be different than the resource name on the returned person. The resource name can change when adding or removing fields that link a contact and profile such as a verified email, verified phone number, or a profile URL.",
                                                       :type "string"}},
                  :description "The response for a single person",
                  :id "PersonResponse"},
 :Name {:id "Name",
        :description "A person's name. If the name is a mononym, the family name is empty.",
        :type "object",
        :properties {:middleName {:type "string",
                                  :description "The middle name(s)."},
                     :phoneticHonorificPrefix {:description "The honorific prefixes spelled as they sound.",
                                               :type "string"},
                     :phoneticHonorificSuffix {:type "string",
                                               :description "The honorific suffixes spelled as they sound."},
                     :displayNameLastFirst {:readOnly true,
                                            :type "string",
                                            :description "Output only. The display name with the last name first formatted according to the locale specified by the viewer's account or the `Accept-Language` HTTP header."},
                     :displayName {:description "Output only. The display name formatted according to the locale specified by the viewer's account or the `Accept-Language` HTTP header.",
                                   :type "string",
                                   :readOnly true},
                     :phoneticGivenName {:description "The given name spelled as it sounds.",
                                         :type "string"},
                     :honorificPrefix {:description "The honorific prefixes, such as `Mrs.` or `Dr.`",
                                       :type "string"},
                     :phoneticFullName {:description "The full name spelled as it sounds.",
                                        :type "string"},
                     :phoneticFamilyName {:description "The family name spelled as it sounds.",
                                          :type "string"},
                     :familyName {:type "string",
                                  :description "The family name."},
                     :phoneticMiddleName {:description "The middle name(s) spelled as they sound.",
                                          :type "string"},
                     :unstructuredName {:description "The free form name value.",
                                        :type "string"},
                     :givenName {:type "string",
                                 :description "The given name."},
                     :honorificSuffix {:type "string",
                                       :description "The honorific suffixes, such as `Jr.`"},
                     :metadata {:description "Metadata about the name.",
                                :$ref "FieldMetadata"}}},
 :ListOtherContactsResponse {:properties {:otherContacts {:type "array",
                                                          :items {:$ref "Person"},
                                                          :description "The list of \"Other contacts\" returned as Person resources. \"Other contacts\" support a limited subset of fields. See ListOtherContactsRequest.request_mask for more detailed information."},
                                          :nextSyncToken {:description "A token, which can be sent as `sync_token` to retrieve changes since the last request. Request must set `request_sync_token` to return the sync token.",
                                                          :type "string"},
                                          :nextPageToken {:description "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                                                          :type "string"}},
                             :description "The response to a request for the authenticated user's \"Other contacts\".",
                             :type "object",
                             :id "ListOtherContactsResponse"},
 :ListConnectionsResponse {:properties {:nextSyncToken {:type "string",
                                                        :description "A token, which can be sent as `sync_token` to retrieve changes since the last request. Request must set `request_sync_token` to return the sync token. When the response is paginated, only the last page will contain `nextSyncToken`."},
                                        :connections {:items {:$ref "Person"},
                                                      :type "array",
                                                      :description "The list of people that the requestor is connected to."},
                                        :totalItems {:type "integer",
                                                     :format "int32",
                                                     :description "The total number of items in the list without pagination."},
                                        :nextPageToken {:type "string",
                                                        :description "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."},
                                        :totalPeople {:format "int32",
                                                      :description "**DEPRECATED** (Please use totalItems) The total number of people in the list without pagination.",
                                                      :type "integer"}},
                           :id "ListConnectionsResponse",
                           :description "The response to a request for the authenticated user's connections.",
                           :type "object"},
 :ModifyContactGroupMembersResponse {:properties {:canNotRemoveLastContactGroupResourceNames {:items {:type "string"},
                                                                                              :description "The contact people resource names that cannot be removed from their last contact group.",
                                                                                              :type "array"},
                                                  :notFoundResourceNames {:type "array",
                                                                          :description "The contact people resource names that were not found.",
                                                                          :items {:type "string"}}},
                                     :id "ModifyContactGroupMembersResponse",
                                     :description "The response to a modify contact group members request.",
                                     :type "object"},
 :BraggingRights {:id "BraggingRights",
                  :description "**DEPRECATED**: No data will be returned A person's bragging rights.",
                  :properties {:metadata {:description "Metadata about the bragging rights.",
                                          :$ref "FieldMetadata"},
                               :value {:type "string",
                                       :description "The bragging rights; for example, `climbed mount everest`."}},
                  :type "object"},
 :Person {:id "Person",
          :type "object",
          :description "Information about a person merged from various data sources such as the authenticated user's contacts and profile data. Most fields can have multiple items. The items in a field have no guaranteed order, but each non-empty field is guaranteed to have exactly one field with `metadata.primary` set to true.",
          :properties {:addresses {:type "array",
                                   :items {:$ref "Address"},
                                   :description "The person's street addresses."},
                       :urls {:description "The person's associated URLs.",
                              :type "array",
                              :items {:$ref "Url"}},
                       :relationshipStatuses {:readOnly true,
                                              :type "array",
                                              :items {:$ref "RelationshipStatus"},
                                              :description "Output only. **DEPRECATED**: No data will be returned The person's relationship statuses."},
                       :coverPhotos {:readOnly true,
                                     :items {:$ref "CoverPhoto"},
                                     :description "Output only. The person's cover photos.",
                                     :type "array"},
                       :birthdays {:items {:$ref "Birthday"},
                                   :description "The person's birthdays. This field is a singleton for contact sources.",
                                   :type "array"},
                       :relations {:items {:$ref "Relation"},
                                   :type "array",
                                   :description "The person's relations."},
                       :ageRange {:description "Output only. **DEPRECATED** (Please use `person.ageRanges` instead) The person's age range.",
                                  :readOnly true,
                                  :enum ["AGE_RANGE_UNSPECIFIED"
                                         "LESS_THAN_EIGHTEEN"
                                         "EIGHTEEN_TO_TWENTY"
                                         "TWENTY_ONE_OR_OLDER"],
                                  :enumDescriptions ["Unspecified."
                                                     "Younger than eighteen."
                                                     "Between eighteen and twenty."
                                                     "Twenty-one and older."],
                                  :type "string"},
                       :events {:description "The person's events.",
                                :items {:$ref "Event"},
                                :type "array"},
                       :phoneNumbers {:description "The person's phone numbers.",
                                      :type "array",
                                      :items {:$ref "PhoneNumber"}},
                       :etag {:description "The [HTTP entity tag](https://en.wikipedia.org/wiki/HTTP_ETag) of the resource. Used for web cache validation.",
                              :type "string"},
                       :fileAses {:type "array",
                                  :items {:$ref "FileAs"},
                                  :description "The person's file-ases."},
                       :biographies {:type "array",
                                     :items {:$ref "Biography"},
                                     :description "The person's biographies. This field is a singleton for contact sources."},
                       :emailAddresses {:type "array",
                                        :items {:$ref "EmailAddress"},
                                        :description "The person's email addresses."},
                       :miscKeywords {:description "The person's miscellaneous keywords.",
                                      :items {:$ref "MiscKeyword"},
                                      :type "array"},
                       :organizations {:description "The person's past or current organizations.",
                                       :items {:$ref "Organization"},
                                       :type "array"},
                       :sipAddresses {:type "array",
                                      :description "The person's SIP addresses.",
                                      :items {:$ref "SipAddress"}},
                       :braggingRights {:description "**DEPRECATED**: No data will be returned The person's bragging rights.",
                                        :type "array",
                                        :items {:$ref "BraggingRights"}},
                       :resourceName {:type "string",
                                      :description "The resource name for the person, assigned by the server. An ASCII string with a max length of 27 characters, in the form of `people/{person_id}`."},
                       :locations {:type "array",
                                   :description "The person's locations.",
                                   :items {:$ref "Location"}},
                       :externalIds {:items {:$ref "ExternalId"},
                                     :description "The person's external IDs.",
                                     :type "array"},
                       :relationshipInterests {:items {:$ref "RelationshipInterest"},
                                               :type "array",
                                               :description "Output only. **DEPRECATED**: No data will be returned The person's relationship interests.",
                                               :readOnly true},
                       :photos {:readOnly true,
                                :description "Output only. The person's photos.",
                                :items {:$ref "Photo"},
                                :type "array"},
                       :skills {:type "array",
                                :description "The person's skills.",
                                :items {:$ref "Skill"}},
                       :locales {:type "array",
                                 :description "The person's locale preferences.",
                                 :items {:$ref "Locale"}},
                       :ageRanges {:type "array",
                                   :description "Output only. The person's age ranges.",
                                   :items {:$ref "AgeRangeType"},
                                   :readOnly true},
                       :memberships {:items {:$ref "Membership"},
                                     :description "The person's group memberships.",
                                     :type "array"},
                       :clientData {:items {:$ref "ClientData"},
                                    :description "The person's client data.",
                                    :type "array"},
                       :interests {:type "array",
                                   :description "The person's interests.",
                                   :items {:$ref "Interest"}},
                       :nicknames {:description "The person's nicknames.",
                                   :type "array",
                                   :items {:$ref "Nickname"}},
                       :residences {:items {:$ref "Residence"},
                                    :type "array",
                                    :description "**DEPRECATED**: (Please use `person.locations` instead) The person's residences."},
                       :imClients {:description "The person's instant messaging clients.",
                                   :type "array",
                                   :items {:$ref "ImClient"}},
                       :genders {:type "array",
                                 :items {:$ref "Gender"},
                                 :description "The person's genders. This field is a singleton for contact sources."},
                       :calendarUrls {:description "The person's calendar URLs.",
                                      :type "array",
                                      :items {:$ref "CalendarUrl"}},
                       :taglines {:type "array",
                                  :items {:$ref "Tagline"},
                                  :readOnly true,
                                  :description "Output only. **DEPRECATED**: No data will be returned The person's taglines."},
                       :occupations {:items {:$ref "Occupation"},
                                     :type "array",
                                     :description "The person's occupations."},
                       :metadata {:description "Output only. Metadata about the person.",
                                  :$ref "PersonMetadata",
                                  :readOnly true},
                       :names {:description "The person's names. This field is a singleton for contact sources.",
                               :type "array",
                               :items {:$ref "Name"}},
                       :userDefined {:description "The person's user defined data.",
                                     :type "array",
                                     :items {:$ref "UserDefined"}}}},
 :DomainMembership {:id "DomainMembership",
                    :type "object",
                    :properties {:inViewerDomain {:type "boolean",
                                                  :description "True if the person is in the viewer's G Suite domain."}},
                    :description "A G Suite Domain membership."},
 :Source {:id "Source",
          :properties {:updateTime {:format "google-datetime",
                                    :readOnly true,
                                    :type "string",
                                    :description "Output only. **Only populated in `person.metadata.sources`.** Last update timestamp of this source."},
                       :type {:enum ["SOURCE_TYPE_UNSPECIFIED"
                                     "ACCOUNT"
                                     "PROFILE"
                                     "DOMAIN_PROFILE"
                                     "CONTACT"
                                     "OTHER_CONTACT"
                                     "DOMAIN_CONTACT"],
                              :type "string",
                              :enumDescriptions ["Unspecified."
                                                 "[Google Account](https://accounts.google.com)."
                                                 "[Google profile](https://profiles.google.com). You can view the profile at [https://profiles.google.com/](https://profiles.google.com/){id}, where {id} is the source id."
                                                 "[G Suite domain profile](https://support.google.com/a/answer/1628008)."
                                                 "[Google contact](https://contacts.google.com). You can view the contact at [https://contact.google.com/](https://contact.google.com/){id}, where {id} is the source id."
                                                 "[Google \"Other contact\"](https://contacts.google.com/other)."
                                                 "[G Suite domain shared contact](https://support.google.com/a/answer/9281635)."],
                              :description "The source type."},
                       :etag {:description "**Only populated in `person.metadata.sources`.** The [HTTP entity tag](https://en.wikipedia.org/wiki/HTTP_ETag) of the source. Used for web cache validation.",
                              :type "string"},
                       :id {:type "string",
                            :description "The unique identifier within the source type generated by the server."},
                       :profileMetadata {:description "Output only. **Only populated in `person.metadata.sources`.** Metadata about a source of type PROFILE.",
                                         :$ref "ProfileMetadata",
                                         :readOnly true}},
          :type "object",
          :description "The source of a field."},
 :BatchGetContactGroupsResponse {:id "BatchGetContactGroupsResponse",
                                 :description "The response to a batch get contact groups request.",
                                 :properties {:responses {:items {:$ref "ContactGroupResponse"},
                                                          :type "array",
                                                          :description "The list of responses for each requested contact group resource."}},
                                 :type "object"},
 :Gender {:properties {:addressMeAs {:type "string",
                                     :description "The type of pronouns that should be used to address the person. The value can be custom or one of these predefined values: * `male` * `female` * `other`"},
                       :value {:type "string",
                               :description "The gender for the person. The gender can be custom or one of these predefined values: * `male` * `female` * `unspecified`"},
                       :formattedValue {:type "string",
                                        :readOnly true,
                                        :description "Output only. The value of the gender translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale. Unspecified or custom value are not localized."},
                       :metadata {:$ref "FieldMetadata",
                                  :description "Metadata about the gender."}},
          :type "object",
          :id "Gender",
          :description "A person's gender."},
 :Location {:description "A person's location.",
            :id "Location",
            :properties {:floorSection {:description "The floor section in `floor_name`.",
                                        :type "string"},
                         :current {:description "Whether the location is the current location.",
                                   :type "boolean"},
                         :value {:type "string",
                                 :description "The free-form value of the location."},
                         :metadata {:$ref "FieldMetadata",
                                    :description "Metadata about the location."},
                         :buildingId {:description "The building identifier.",
                                      :type "string"},
                         :floor {:type "string",
                                 :description "The floor name or number."},
                         :type {:description "The type of the location. The type can be custom or one of these predefined values: * `desk` * `grewUp`",
                                :type "string"},
                         :deskCode {:description "The individual desk location.",
                                    :type "string"}},
            :type "object"},
 :Organization {:id "Organization",
                :description "A person's past or current organization. Overlapping date ranges are permitted.",
                :type "object",
                :properties {:department {:description "The person's department at the organization.",
                                          :type "string"},
                             :formattedType {:description "Output only. The type of the organization translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale.",
                                             :type "string",
                                             :readOnly true},
                             :symbol {:type "string",
                                      :description "The symbol associated with the organization; for example, a stock ticker symbol, abbreviation, or acronym."},
                             :name {:description "The name of the organization.",
                                    :type "string"},
                             :startDate {:description "The start date when the person joined the organization.",
                                         :$ref "Date"},
                             :type {:description "The type of the organization. The type can be custom or one of these predefined values: * `work` * `school`",
                                    :type "string"},
                             :phoneticName {:type "string",
                                            :description "The phonetic name of the organization."},
                             :title {:description "The person's job title at the organization.",
                                     :type "string"},
                             :endDate {:description "The end date when the person left the organization.",
                                       :$ref "Date"},
                             :jobDescription {:description "The person's job description at the organization.",
                                              :type "string"},
                             :current {:type "boolean",
                                       :description "True if the organization is the person's current organization; false if the organization is a past organization."},
                             :domain {:type "string",
                                      :description "The domain name associated with the organization; for example, `google.com`."},
                             :location {:type "string",
                                        :description "The location of the organization office the person works at."},
                             :metadata {:$ref "FieldMetadata",
                                        :description "Metadata about the organization."}}},
 :CalendarUrl {:description "A person's calendar URL.",
               :id "CalendarUrl",
               :properties {:url {:description "The calendar URL.",
                                  :type "string"},
                            :formattedType {:readOnly true,
                                            :type "string",
                                            :description "Output only. The type of the calendar URL translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale."},
                            :metadata {:$ref "FieldMetadata",
                                       :description "Metadata about the calendar URL."},
                            :type {:type "string",
                                   :description "The type of the calendar URL. The type can be custom or one of these predefined values: * `home` * `freeBusy` * `work`"}},
               :type "object"},
 :Biography {:properties {:metadata {:$ref "FieldMetadata",
                                     :description "Metadata about the biography."},
                          :contentType {:enum ["CONTENT_TYPE_UNSPECIFIED"
                                               "TEXT_PLAIN"
                                               "TEXT_HTML"],
                                        :type "string",
                                        :enumDescriptions ["Unspecified."
                                                           "Plain text."
                                                           "HTML text."],
                                        :description "The content type of the biography."},
                          :value {:description "The short biography.",
                                  :type "string"}},
             :type "object",
             :id "Biography",
             :description "A person's short biography."},
 :Nickname {:description "A person's nickname.",
            :id "Nickname",
            :type "object",
            :properties {:metadata {:$ref "FieldMetadata",
                                    :description "Metadata about the nickname."},
                         :type {:type "string",
                                :description "The type of the nickname.",
                                :enumDescriptions ["Generic nickname."
                                                   "Maiden name or birth family name. Used when the person's family name has changed as a result of marriage."
                                                   "Initials."
                                                   "Google+ profile nickname."
                                                   "A professional affiliation or other name; for example, `Dr. Smith.`"
                                                   "Alternate name person is known by."
                                                   "A shorter version of the person's name."],
                                :enum ["DEFAULT"
                                       "MAIDEN_NAME"
                                       "INITIALS"
                                       "GPLUS"
                                       "OTHER_NAME"
                                       "ALTERNATE_NAME"
                                       "SHORT_NAME"]},
                         :value {:description "The nickname.",
                                 :type "string"}}},
 :ImClient {:properties {:formattedType {:type "string",
                                         :readOnly true,
                                         :description "Output only. The type of the IM client translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale."},
                         :metadata {:description "Metadata about the IM client.",
                                    :$ref "FieldMetadata"},
                         :formattedProtocol {:description "Output only. The protocol of the IM client formatted in the viewer's account locale or the `Accept-Language` HTTP header locale.",
                                             :type "string",
                                             :readOnly true},
                         :protocol {:description "The protocol of the IM client. The protocol can be custom or one of these predefined values: * `aim` * `msn` * `yahoo` * `skype` * `qq` * `googleTalk` * `icq` * `jabber` * `netMeeting`",
                                    :type "string"},
                         :username {:type "string",
                                    :description "The user name used in the IM client."},
                         :type {:description "The type of the IM client. The type can be custom or one of these predefined values: * `home` * `work` * `other`",
                                :type "string"}},
            :id "ImClient",
            :description "A person's instant messaging client.",
            :type "object"},
 :FileAs {:properties {:value {:description "The file-as value",
                               :type "string"},
                       :metadata {:description "Metadata about the file-as.",
                                  :$ref "FieldMetadata"}},
          :description "The name that should be used to sort the person in a list.",
          :id "FileAs",
          :type "object"},
 :MiscKeyword {:properties {:type {:enumDescriptions ["Unspecified."
                                                      "Outlook field for billing information."
                                                      "Outlook field for directory server."
                                                      "Outlook field for keyword."
                                                      "Outlook field for mileage."
                                                      "Outlook field for priority."
                                                      "Outlook field for sensitivity."
                                                      "Outlook field for subject."
                                                      "Outlook field for user."
                                                      "Home."
                                                      "Work."
                                                      "Other."],
                                   :type "string",
                                   :description "The miscellaneous keyword type.",
                                   :enum ["TYPE_UNSPECIFIED"
                                          "OUTLOOK_BILLING_INFORMATION"
                                          "OUTLOOK_DIRECTORY_SERVER"
                                          "OUTLOOK_KEYWORD"
                                          "OUTLOOK_MILEAGE"
                                          "OUTLOOK_PRIORITY"
                                          "OUTLOOK_SENSITIVITY"
                                          "OUTLOOK_SUBJECT"
                                          "OUTLOOK_USER"
                                          "HOME"
                                          "WORK"
                                          "OTHER"]},
                            :metadata {:description "Metadata about the miscellaneous keyword.",
                                       :$ref "FieldMetadata"},
                            :formattedType {:description "Output only. The type of the miscellaneous keyword translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale.",
                                            :type "string",
                                            :readOnly true},
                            :value {:description "The value of the miscellaneous keyword.",
                                    :type "string"}},
               :id "MiscKeyword",
               :description "A person's miscellaneous keyword.",
               :type "object"},
 :ContactGroupMembership {:description "A Google contact group membership.",
                          :properties {:contactGroupId {:readOnly true,
                                                        :description "Output only. The contact group ID for the contact group membership.",
                                                        :type "string"},
                                       :contactGroupResourceName {:type "string",
                                                                  :description "The resource name for the contact group, assigned by the server. An ASCII string, in the form of `contactGroups/{contact_group_id}`. Only contact_group_resource_name can be used for modifying memberships. Any contact group membership can be removed, but only user group or \"myContacts\" or \"starred\" system groups memberships can be added. A contact must always have at least one contact group membership."}},
                          :id "ContactGroupMembership",
                          :type "object"},
 :ContactGroupMetadata {:id "ContactGroupMetadata",
                        :description "The metadata about a contact group.",
                        :type "object",
                        :properties {:updateTime {:type "string",
                                                  :readOnly true,
                                                  :description "Output only. The time the group was last updated.",
                                                  :format "google-datetime"},
                                     :deleted {:type "boolean",
                                               :readOnly true,
                                               :description "Output only. True if the contact group resource has been deleted. Populated only for [`ListContactGroups`](/people/api/rest/v1/contactgroups/list) requests that include a sync token."}}},
 :UpdateContactPhotoRequest {:description "A request to update an existing contact's photo. All requests must have a valid photo format: JPEG or PNG.",
                             :type "object",
                             :properties {:personFields {:format "google-fieldmask",
                                                         :type "string",
                                                         :description "Optional. A field mask to restrict which fields on the person are returned. Multiple fields can be specified by separating them with commas. Defaults to empty if not set, which will skip the post mutate get. Valid values are: * addresses * ageRanges * biographies * birthdays * calendarUrls * clientData * coverPhotos * emailAddresses * events * externalIds * genders * imClients * interests * locales * locations * memberships * metadata * miscKeywords * names * nicknames * occupations * organizations * phoneNumbers * photos * relations * sipAddresses * skills * urls * userDefined"},
                                          :sources {:items {:type "string",
                                                            :enumDescriptions ["Unspecified."
                                                                               "Returns SourceType.ACCOUNT, SourceType.DOMAIN_PROFILE, and SourceType.PROFILE."
                                                                               "Returns SourceType.CONTACT."
                                                                               "Returns SourceType.DOMAIN_CONTACT."],
                                                            :enum ["READ_SOURCE_TYPE_UNSPECIFIED"
                                                                   "READ_SOURCE_TYPE_PROFILE"
                                                                   "READ_SOURCE_TYPE_CONTACT"
                                                                   "READ_SOURCE_TYPE_DOMAIN_CONTACT"]},
                                                    :type "array",
                                                    :description "Optional. A mask of what source types to return. Defaults to READ_SOURCE_TYPE_CONTACT and READ_SOURCE_TYPE_PROFILE if not set."},
                                          :photoBytes {:description "Required. Raw photo bytes",
                                                       :type "string",
                                                       :format "byte"}},
                             :id "UpdateContactPhotoRequest"},
 :Birthday {:id "Birthday",
            :type "object",
            :description "A person's birthday. At least one of the `date` and `text` fields are specified. The `date` and `text` fields typically represent the same date, but are not guaranteed to.",
            :properties {:date {:$ref "Date",
                                :description "The date of the birthday."},
                         :text {:description "A free-form string representing the user's birthday.",
                                :type "string"},
                         :metadata {:description "Metadata about the birthday.",
                                    :$ref "FieldMetadata"}}},
 :Status {:description "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
          :id "Status",
          :type "object",
          :properties {:details {:description "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                                 :items {:additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                                :type "any"},
                                         :type "object"},
                                 :type "array"},
                       :code {:format "int32",
                              :type "integer",
                              :description "The status code, which should be an enum value of google.rpc.Code."},
                       :message {:type "string",
                                 :description "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."}}}}
