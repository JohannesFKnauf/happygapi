{:Group {:id "Group",
         :description "A group.",
         :type "object",
         :properties {:id {:description "The ID that YouTube uses to uniquely identify the group.",
                           :type "string"},
                      :snippet {:description "The `snippet` object contains basic information about the group, including\nits creation date and name.",
                                :$ref "GroupSnippet"},
                      :contentDetails {:description "The `contentDetails` object contains additional information about the\ngroup, such as the number and type of items that it contains.",
                                       :$ref "GroupContentDetails"},
                      :errors {:description "Apiary error details",
                               :$ref "Errors"},
                      :kind {:description "Identifies the API resource's type. The value will be `youtube#group`.",
                             :type "string"},
                      :etag {:description "The Etag of this resource.",
                             :type "string"}}},
 :ListGroupsResponse {:description "Response message for GroupsService.ListGroups.",
                      :type "object",
                      :properties {:kind {:description "Identifies the API resource's type. The value will be\n`youtube#groupListResponse`.",
                                          :type "string"},
                                   :items {:description "A list of groups that match the API request parameters. Each item in the\nlist represents a `group` resource.",
                                           :type "array",
                                           :items {:$ref "Group"}},
                                   :etag {:description "The Etag of this resource.",
                                          :type "string"},
                                   :nextPageToken {:description "The token that can be used as the value of the `pageToken` parameter to\nretrieve the next page in the result set.",
                                                   :type "string"},
                                   :errors {:description "Apiary error details",
                                            :$ref "Errors"}},
                      :id "ListGroupsResponse"},
 :Errors {:id "Errors",
          :description "Request Error information.\n\nThe presence of an error field signals that the operation\nhas failed.",
          :type "object",
          :properties {:error {:description "Specific error description and codes",
                               :type "array",
                               :items {:$ref "ErrorProto"}},
                       :code {:description "Global error code. Deprecated and ignored.\nSet custom error codes in ErrorProto.domain and ErrorProto.code\ninstead.",
                              :type "string",
                              :enumDescriptions [""
                                                 ""
                                                 ""
                                                 ""
                                                 ""
                                                 ""
                                                 ""
                                                 ""],
                              :enum ["BAD_REQUEST"
                                     "FORBIDDEN"
                                     "NOT_FOUND"
                                     "CONFLICT"
                                     "GONE"
                                     "PRECONDITION_FAILED"
                                     "INTERNAL_ERROR"
                                     "SERVICE_UNAVAILABLE"]},
                       :requestId {:description "Request identifier generated by the service, which can be\nused to identify the error in the logs",
                                   :type "string"}}},
 :ListGroupItemsResponse {:description "Response message for GroupsService.ListGroupItems.",
                          :type "object",
                          :properties {:kind {:description "Identifies the API resource's type. The value will be\n`youtube#groupItemListResponse`.",
                                              :type "string"},
                                       :items {:description "A list of groups that match the API request parameters. Each item in the\nlist represents a `groupItem` resource.",
                                               :type "array",
                                               :items {:$ref "GroupItem"}},
                                       :etag {:description "The Etag of this resource.",
                                              :type "string"},
                                       :errors {:description "Apiary error details",
                                                :$ref "Errors"}},
                          :id "ListGroupItemsResponse"},
 :QueryResponse {:properties {:rows {:description "The list contains all rows of the result table. Each item in the list is\nan array that contains comma-delimited data corresponding to a single row\nof data. The order of the comma-delimited data fields will match the\norder of the columns listed in the `columnHeaders` field.\n\nIf no data is available for the given query, the `rows` element will be\nomitted from the response.\n\nThe response for a query with the `day` dimension will not contain rows for\nthe most recent days.",
                                     :type "array",
                                     :items {:type "array",
                                             :items {:type "any"}}},
                              :errors {:$ref "Errors",
                                       :description "When set, indicates that the operation failed."},
                              :kind {:description "This value specifies the type of data included in the API response.\nFor the query method, the kind property value will be\n`youtubeAnalytics#resultTable`.",
                                     :type "string"},
                              :columnHeaders {:description "This value specifies information about the data returned in the `rows`\nfields. Each item in the `columnHeaders` list identifies a field returned\nin the `rows` value, which contains a list of comma-delimited data. The\n`columnHeaders` list will begin with the dimensions specified in the API\nrequest, which will be followed by the metrics specified in the API\nrequest. The order of both dimensions and metrics will match the ordering\nin the API request. For example, if the API request contains the parameters\n`dimensions=ageGroup,gender&metrics=viewerPercentage`, the API response\nwill return columns in this order: `ageGroup`, `gender`,\n`viewerPercentage`.",
                                              :type "array",
                                              :items {:$ref "ResultTableColumnHeader"}}},
                 :id "QueryResponse",
                 :description "Response message for TargetedQueriesService.Query.",
                 :type "object"},
 :EmptyResponse {:description "Empty response.",
                 :type "object",
                 :properties {:errors {:$ref "Errors",
                                       :description "Apiary error details"}},
                 :id "EmptyResponse"},
 :ErrorProto {:description "Describes one specific error.",
              :type "object",
              :properties {:externalErrorMessage {:description "A short explanation for the error, which can be shared outside Google.\n\nPlease set domain, code and arguments whenever possible instead of this\nerror message so that external APIs can build safe error messages\nthemselves.\n\nExternal messages built in a RoSy interface will most likely refer to\ninformation and concepts that are not available externally and should not\nbe exposed. It is safer if external APIs can understand the errors and\ndecide what the error message should look like.",
                                                  :type "string"},
                           :domain {:description "Error domain. RoSy services can define their own\ndomain and error codes. This should normally be\nthe name of an enum type, such as: gdata.CoreErrorDomain",
                                    :type "string"},
                           :location {:type "string",
                                      :description "Location of the error, as specified by the location type.\n\nIf location_type is PATH, this should be a path to a field that's\nrelative to the request, using FieldPath notation\n(net/proto2/util/public/field_path.h).\n\nExamples:\n  authenticated_user.gaia_id\n  resource.address[2].country"},
                           :debugInfo {:description "Debugging information, which should not be\nshared externally.",
                                       :type "string"},
                           :code {:description "Error code in the error domain. This should correspond to\na value of the enum type whose name is in domain. See\nthe core error domain in error_domain.proto.",
                                  :type "string"},
                           :locationType {:enumDescriptions ["location is an xpath-like path pointing\nto the request field that caused the error."
                                                             "other location type which can safely be shared\nexternally."
                                                             "Location is request paramater. This maps to the {@link PARAMETERS} in\n{@link MessageLocation}."],
                                          :enum ["PATH"
                                                 "OTHER"
                                                 "PARAMETER"],
                                          :type "string"},
                           :argument {:description "Error arguments, to be used when building user-friendly error messages\ngiven the error domain and code.  Different error codes require different\narguments.",
                                      :type "array",
                                      :items {:type "string"}}},
              :id "ErrorProto"},
 :GroupContentDetails {:description "A group's content details.",
                       :type "object",
                       :properties {:itemCount {:description "The number of items in the group.",
                                                :format "uint64",
                                                :type "string"},
                                    :itemType {:description "The type of resources that the group contains.\n\nValid values for this property are:\n * `youtube#channel`\n * `youtube#playlist`\n * `youtube#video`\n * `youtubePartner#asset`",
                                               :type "string"}},
                       :id "GroupContentDetails"},
 :GroupItem {:description "A group item.",
             :type "object",
             :properties {:resource {:$ref "GroupItemResource",
                                     :description "The `resource` object contains information that identifies the item being\nadded to the group."},
                          :id {:description "The ID that YouTube uses to uniquely identify the `channel`, `video`,\n`playlist`, or `asset` resource that is included in the group. Note that\nthis ID refers specifically to the inclusion of that resource in a\nparticular group and is different than the channel ID, video ID,\nplaylist ID, or asset ID that uniquely identifies the resource itself.\nThe `resource.id` property's value specifies the unique channel, video,\nplaylist, or asset ID.",
                               :type "string"},
                          :groupId {:type "string",
                                    :description "The ID that YouTube uses to uniquely identify the group that contains the\nitem."},
                          :errors {:description "Apiary error details",
                                   :$ref "Errors"},
                          :kind {:description "Identifies the API resource's type. The value will be `youtube#groupItem`.",
                                 :type "string"},
                          :etag {:description "The Etag of this resource.",
                                 :type "string"}},
             :id "GroupItem"},
 :ResultTableColumnHeader {:description "The description of a column of the result table.",
                           :type "object",
                           :properties {:dataType {:description "The type of the data in the column (`STRING`, `INTEGER`, `FLOAT`, etc.).",
                                                   :type "string"},
                                        :name {:description "The name of the dimension or metric.",
                                               :type "string"},
                                        :columnType {:description "The type of the column (`DIMENSION` or `METRIC`).",
                                                     :type "string"}},
                           :id "ResultTableColumnHeader"},
 :GroupItemResource {:id "GroupItemResource",
                     :type "object",
                     :properties {:id {:description "The channel, video, playlist, or asset ID that YouTube uses to uniquely\nidentify the item that is being added to the group.",
                                       :type "string"},
                                  :kind {:description "Identifies the type of resource being added to the group.\n\nValid values for this property are:\n * `youtube#channel`\n * `youtube#playlist`\n * `youtube#video`\n * `youtubePartner#asset`",
                                         :type "string"}}},
 :GroupSnippet {:description "A group snippet.",
                :type "object",
                :properties {:title {:description "The group name. The value must be a non-empty string.",
                                     :type "string"},
                             :publishedAt {:description "The date and time that the group was created. The value is specified in\nISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                                           :format "google-datetime",
                                           :type "string"}},
                :id "GroupSnippet"}}
